[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "coding", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ptzq", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 12, "report_reasons": null, "author": "nfrankel", "saved": false, "mod_reports": [], "name": "t3_65ptzq", "subreddit_name_prefixed": "r/coding", "approved_by": null, "over_18": false, "domain": "blog.frankel.ch", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2rb2y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/coding/comments/65ptzq/custom_collectors_in_java_8/", "num_reports": null, "locked": false, "stickied": false, "created": 1492387498.0, "url": "https://blog.frankel.ch/custom-collectors-java-8", "author_flair_text": null, "quarantine": false, "title": "Custom collectors in Java 8", "created_utc": 1492358698.0, "distinguished": null, "media": null, "upvote_ratio": 0.69, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2rb2y", "removal_reason": null, "link_id": "t3_65ptzq", "likes": null, "replies": "", "user_reports": [], "id": "dgd83s2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gooddreams", "parent_id": "t3_65ptzq", "subreddit_name_prefixed": "r/coding", "controversiality": 0, "body": "Here's [a custom collector that returns all elements that tie for being sorted first](https://github.com/davidleston/FirstRankCollector). It's similar to .max() but if you collect on [1, 1, 2] You'll get [1, 1] instead of just 1. I use this in a geospatial search where I want to find the closest result to a location and if there are multiple results tied for closest I want all of those results.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s &lt;a href=\"https://github.com/davidleston/FirstRankCollector\"&gt;a custom collector that returns all elements that tie for being sorted first&lt;/a&gt;. It&amp;#39;s similar to .max() but if you collect on [1, 1, 2] You&amp;#39;ll get [1, 1] instead of just 1. I use this in a geospatial search where I want to find the closest result to a location and if there are multiple results tied for closest I want all of those results.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "coding", "name": "t1_dgd83s2", "score_hidden": false, "stickied": false, "created": 1492440782.0, "created_utc": 1492411982.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]