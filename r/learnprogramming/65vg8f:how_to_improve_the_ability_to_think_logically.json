[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When programming, I often find myself doing things inefficiently and struggling to think about ways to improve my implementations. &lt;/p&gt;\n\n&lt;p&gt;How can I make myself better at this, just trying to do something and then quickly figuring out a good way to actually do it. What daily habit or practice could I incorporate to see patterns better, to figure things out more quickly and efficiently?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "When programming, I often find myself doing things inefficiently and struggling to think about ways to improve my implementations. \n\nHow can I make myself better at this, just trying to do something and then quickly figuring out a good way to actually do it. What daily habit or practice could I incorporate to see patterns better, to figure things out more quickly and efficiently?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65vg8f", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 20, "report_reasons": null, "author": "soviet_programmer", "saved": false, "mod_reports": [], "name": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65vg8f/how_to_improve_the_ability_to_think_logically/", "num_reports": null, "locked": false, "stickied": false, "created": 1492463473.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65vg8f/how_to_improve_the_ability_to_think_logically/", "author_flair_text": null, "quarantine": false, "title": "How to improve the ability to think logically?", "created_utc": 1492434673.0, "distinguished": null, "media": null, "upvote_ratio": 0.85, "num_comments": 8, "visited": false, "subreddit_type": "public", "ups": 20}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dgdq4qv", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "aeriaglorisss", "parent_id": "t1_dgdgkdi", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "... basically this.\n\nWhen you're feeling down on the coding, resort to the mathematics. When you're feeling down on the mathematics, go back to coding the algorithms. Play some chess or something. Just do it, there's no magic solution.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;... basically this.&lt;/p&gt;\n\n&lt;p&gt;When you&amp;#39;re feeling down on the coding, resort to the mathematics. When you&amp;#39;re feeling down on the mathematics, go back to coding the algorithms. Play some chess or something. Just do it, there&amp;#39;s no magic solution.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdq4qv", "score_hidden": false, "stickied": false, "created": 1492475940.0, "created_utc": 1492447140.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdgkdi", "gilded": 0, "archived": false, "score": 34, "report_reasons": null, "author": "ordnance1987", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Solve more problems", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solve more problems&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdgkdi", "score_hidden": false, "stickied": false, "created": 1492463679.0, "created_utc": 1492434879.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 34}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dge0n1w", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Chicken_Marsala", "parent_id": "t1_dgdsem7", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Thank you, saving for later", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you, saving for later&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dge0n1w", "score_hidden": false, "stickied": false, "created": 1492487699.0, "created_utc": 1492458899.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdsem7", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "JustThe-Q-Tip", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I picked up a book a couple years ago called [How to Prove It](https://www.amazon.com/How-Prove-Structured-Approach-2nd/dp/0521675995). \n\nIt has helped me develop a greater appreciation for logic and proofs. I wish I took this stuff more seriously when I started programming. A little bit of knowledge of boolean algebra can help tremendously.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I picked up a book a couple years ago called &lt;a href=\"https://www.amazon.com/How-Prove-Structured-Approach-2nd/dp/0521675995\"&gt;How to Prove It&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;It has helped me develop a greater appreciation for logic and proofs. I wish I took this stuff more seriously when I started programming. A little bit of knowledge of boolean algebra can help tremendously.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdsem7", "score_hidden": false, "stickied": false, "created": 1492478465.0, "created_utc": 1492449665.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dgdihx3", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "seands", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I've found I'm able to pierce deeper and deeper the more I break a problem down. Pseudocode, speech dictation, doodling all help.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve found I&amp;#39;m able to pierce deeper and deeper the more I break a problem down. Pseudocode, speech dictation, doodling all help.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdihx3", "score_hidden": false, "stickied": false, "created": 1492466682.0, "created_utc": 1492437882.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dgdoy1u", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Exodus111", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "My suggestion would be, make something that is really too hard for you to make. And just bang at it until you finally solve it. \n\nDealing with frustration\u200b, while forcing yourself to solve a difficult problem is really the best teacher you can have. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My suggestion would be, make something that is really too hard for you to make. And just bang at it until you finally solve it. &lt;/p&gt;\n\n&lt;p&gt;Dealing with frustration\u200b, while forcing yourself to solve a difficult problem is really the best teacher you can have. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdoy1u", "score_hidden": false, "stickied": false, "created": 1492474618.0, "created_utc": 1492445818.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dgdujvd", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "CodeTinkerer", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Once you find a more efficient implementation (after doing it inefficiently), do you recall the more efficient way the next time you encounter the problem?  Do you have an example of something you did inefficiently?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Once you find a more efficient implementation (after doing it inefficiently), do you recall the more efficient way the next time you encounter the problem?  Do you have an example of something you did inefficiently?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdujvd", "score_hidden": false, "stickied": false, "created": 1492480828.0, "created_utc": 1492452028.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65vg8f", "likes": null, "replies": "", "user_reports": [], "id": "dgdnzde", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "p1-o2", "parent_id": "t3_65vg8f", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Dig into the fundamentals behind what you are doing. Let's say that a specific part of your function needs to interact with a set of data. Look up all the different types of data sets. Linked lists, hash tables, dictionaries, binary trees, etc... Figure out which model is the best for the data you're using right then.\n\nThis is a step above googling, \"How do I store data in a list?\" It will help a lot in the long run to spend more time studying now.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dig into the fundamentals behind what you are doing. Let&amp;#39;s say that a specific part of your function needs to interact with a set of data. Look up all the different types of data sets. Linked lists, hash tables, dictionaries, binary trees, etc... Figure out which model is the best for the data you&amp;#39;re using right then.&lt;/p&gt;\n\n&lt;p&gt;This is a step above googling, &amp;quot;How do I store data in a list?&amp;quot; It will help a lot in the long run to spend more time studying now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdnzde", "score_hidden": false, "stickied": false, "created": 1492473522.0, "created_utc": 1492444722.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]