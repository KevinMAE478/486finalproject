[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;this might be too broad a question, but I&amp;#39;m wondering how you make sure that you&amp;#39;re spreading yourself too thin when learning technologies and languages.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently in a vocational training programme for software development, and I&amp;#39;m not sure if this is normal, but for the first term, we&amp;#39;ve learned: HTML, CSS, JS, PHP, SQL, now adding Java. &lt;/p&gt;\n\n&lt;p&gt;Then I&amp;#39;m in uni part time and apart from all the math courses, I actually have to use Pascal in an Imperative Programming course (it&amp;#39;s part of the curriculum, so no choice), as well as C# for a game I&amp;#39;m working on.&lt;/p&gt;\n\n&lt;p&gt;I feel like this is the WORST approach to learning coding. If you held a gun to my head, I doubt I could style a website properly using CSS without looking stuff up on the internet, and that&amp;#39;s with having sat my web design exams just three weeks ago. Whenever I learn something new in Javascript and I JUST feel like I&amp;#39;m progressing, I have to switch to something else. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve always preferred to have a deep understand over a broad understanding, but that seems impossible to achieve right now.&lt;/p&gt;\n\n&lt;p&gt;Is this just par for the course as a developer, or do you at some point actually get to focus a bit more?&lt;/p&gt;\n\n&lt;p&gt;And how do I keep straight all the differences in languages, when I barely know enough about one language before I move on to the next? Just putting in more hours is literally impossible right now, I spend at least 12 hours a day in front of the computer or studying maths. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi all,\n\nthis might be too broad a question, but I'm wondering how you make sure that you're spreading yourself too thin when learning technologies and languages.\n\nI'm currently in a vocational training programme for software development, and I'm not sure if this is normal, but for the first term, we've learned: HTML, CSS, JS, PHP, SQL, now adding Java. \n\nThen I'm in uni part time and apart from all the math courses, I actually have to use Pascal in an Imperative Programming course (it's part of the curriculum, so no choice), as well as C# for a game I'm working on.\n\nI feel like this is the WORST approach to learning coding. If you held a gun to my head, I doubt I could style a website properly using CSS without looking stuff up on the internet, and that's with having sat my web design exams just three weeks ago. Whenever I learn something new in Javascript and I JUST feel like I'm progressing, I have to switch to something else. \n\nI've always preferred to have a deep understand over a broad understanding, but that seems impossible to achieve right now.\n\nIs this just par for the course as a developer, or do you at some point actually get to focus a bit more?\n\nAnd how do I keep straight all the differences in languages, when I barely know enough about one language before I move on to the next? Just putting in more hours is literally impossible right now, I spend at least 12 hours a day in front of the computer or studying maths. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65u6pt", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 12, "report_reasons": null, "author": "jk-coding", "saved": false, "mod_reports": [], "name": "t3_65u6pt", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65u6pt/how_do_you_avoid_spreading_yourself_too_thin/", "num_reports": null, "locked": false, "stickied": false, "created": 1492442784.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65u6pt/how_do_you_avoid_spreading_yourself_too_thin/", "author_flair_text": null, "quarantine": false, "title": "How do you avoid spreading yourself too thin?", "created_utc": 1492413984.0, "distinguished": null, "media": null, "upvote_ratio": 0.84, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": "", "user_reports": [], "id": "dgd9fvq", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "jk-coding", "parent_id": "t1_dgd99dy", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "&gt; You could set up your own wiki for that too if you don't like the \"analog\" approach and want something digital.\n\nGood idea, especially on actual paper. Any break from staring at screens is a welcome one. \n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;You could set up your own wiki for that too if you don&amp;#39;t like the &amp;quot;analog&amp;quot; approach and want something digital.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Good idea, especially on actual paper. Any break from staring at screens is a welcome one. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgd9fvq", "score_hidden": false, "stickied": false, "created": 1492444294.0, "created_utc": 1492415494.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd99dy", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "ziptofaf", "parent_id": "t3_65u6pt", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "&gt; And how do I keep straight all the differences in languages, when I barely know enough about one language before I move on to the next? Just putting in more hours is literally impossible right now, I spend at least 12 hours a day in front of the computer or studying maths. \n\nStart documenting it. Get a notepad and write down what you have learnt about a given language, how does code doing identical thing looks like in a different one. You could set up your own wiki for that too if you don't like the \"analog\" approach and want something digital.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;And how do I keep straight all the differences in languages, when I barely know enough about one language before I move on to the next? Just putting in more hours is literally impossible right now, I spend at least 12 hours a day in front of the computer or studying maths. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Start documenting it. Get a notepad and write down what you have learnt about a given language, how does code doing identical thing looks like in a different one. You could set up your own wiki for that too if you don&amp;#39;t like the &amp;quot;analog&amp;quot; approach and want something digital.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgd99dy", "score_hidden": false, "stickied": false, "created": 1492443753.0, "created_utc": 1492414953.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": "", "user_reports": [], "id": "dgdjh4m", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "amasten", "parent_id": "t1_dgdiooy", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "You're more than welcome. Keep building amazing stuff ! ;)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re more than welcome. Keep building amazing stuff ! ;)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdjh4m", "score_hidden": false, "stickied": false, "created": 1492468034.0, "created_utc": 1492439234.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdiooy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jk-coding", "parent_id": "t1_dgdexyl", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Thank you, that has been quite uplifting to read. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you, that has been quite uplifting to read. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdiooy", "score_hidden": false, "stickied": false, "created": 1492466949.0, "created_utc": 1492438149.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdexyl", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "amasten", "parent_id": "t3_65u6pt", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Don't be afraid, it's okay to feel overwhelmed ! After all, it's only be a term since you got to know these languages. I've been coding for a long time now and even now, no matter the project, I always have the documentation for the technologies I'm about to use or some kind of reference because (especially in web) these techs do evolve.\n\nYou'll get to know them better eventually if you practice a lot. Actually a good exercice would be trying to use them on side projects, no matter how simple or silly they seem. That's how you'll learn. Practice makes you better. As for the specificities of each language, you'll soon find out that there are more similarities than differences. Get to know a few and when you'll encounter some errors do some digging and research to fix it and bam you now know some new about the given language.\n\nProgramming is about learning to learn but also learning to fail. Having to look up things is perfectly normal. By doing them over and over will you finally memorize them.\n\nTLDR; It's normal to feel overwhelmed it's barely been a term ! Practice by doing side projects no matter how simple, fail, and learn from your mistakes. Practice will make you better !", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t be afraid, it&amp;#39;s okay to feel overwhelmed ! After all, it&amp;#39;s only be a term since you got to know these languages. I&amp;#39;ve been coding for a long time now and even now, no matter the project, I always have the documentation for the technologies I&amp;#39;m about to use or some kind of reference because (especially in web) these techs do evolve.&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;ll get to know them better eventually if you practice a lot. Actually a good exercice would be trying to use them on side projects, no matter how simple or silly they seem. That&amp;#39;s how you&amp;#39;ll learn. Practice makes you better. As for the specificities of each language, you&amp;#39;ll soon find out that there are more similarities than differences. Get to know a few and when you&amp;#39;ll encounter some errors do some digging and research to fix it and bam you now know some new about the given language.&lt;/p&gt;\n\n&lt;p&gt;Programming is about learning to learn but also learning to fail. Having to look up things is perfectly normal. By doing them over and over will you finally memorize them.&lt;/p&gt;\n\n&lt;p&gt;TLDR; It&amp;#39;s normal to feel overwhelmed it&amp;#39;s barely been a term ! Practice by doing side projects no matter how simple, fail, and learn from your mistakes. Practice will make you better !&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdexyl", "score_hidden": false, "stickied": false, "created": 1492460696.0, "created_utc": 1492431896.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65u6pt", "likes": null, "replies": "", "user_reports": [], "id": "dgdpnm3", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "wavefunctionp", "parent_id": "t3_65u6pt", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I think you are going into this thinking you need to be able to memorize everything and recall it all at a moments notice.\n\nYou'll only be able to do that with the stuff you use often. It is completely normal to look up stuff that maybe you've even done before to refresh your memory.\n\nPay attention to the idiosyncracies. Like prefering === over == in javascript or not being able to declare a function outside of a class in C#. Remember whether you declare types like String s = '' vs s: string = '' in a given language is not really a big deal. The deal is can you read it and modify it...which it what you will be doing most of the time, because maintenance is a big part of development.\n\nYour real skill as developer is being able to learn quickly and understand the basic structure used to program. It is not memorization.\n\nThat said, you will need to know at least one language as a goto skill for interviews and such. I'd pick a widely used one that is easy and fast to work with like javascript or python, the 'scripting' languages with dynamic types tend to work best, but really any can do, just pick one and master it and it's standard library and tooling.\n\nBuild stuff. Build a lot of stuff.", "edited": 1492446955.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you are going into this thinking you need to be able to memorize everything and recall it all at a moments notice.&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;ll only be able to do that with the stuff you use often. It is completely normal to look up stuff that maybe you&amp;#39;ve even done before to refresh your memory.&lt;/p&gt;\n\n&lt;p&gt;Pay attention to the idiosyncracies. Like prefering === over == in javascript or not being able to declare a function outside of a class in C#. Remember whether you declare types like String s = &amp;#39;&amp;#39; vs s: string = &amp;#39;&amp;#39; in a given language is not really a big deal. The deal is can you read it and modify it...which it what you will be doing most of the time, because maintenance is a big part of development.&lt;/p&gt;\n\n&lt;p&gt;Your real skill as developer is being able to learn quickly and understand the basic structure used to program. It is not memorization.&lt;/p&gt;\n\n&lt;p&gt;That said, you will need to know at least one language as a goto skill for interviews and such. I&amp;#39;d pick a widely used one that is easy and fast to work with like javascript or python, the &amp;#39;scripting&amp;#39; languages with dynamic types tend to work best, but really any can do, just pick one and master it and it&amp;#39;s standard library and tooling.&lt;/p&gt;\n\n&lt;p&gt;Build stuff. Build a lot of stuff.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdpnm3", "score_hidden": false, "stickied": false, "created": 1492475411.0, "created_utc": 1492446611.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}]