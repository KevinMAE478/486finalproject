[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m having trouble getting rid of the newline after I use scanf. I&amp;#39;ve added a [^ /n] so that it can read input until the newline, but then what ends up happening is that it goes to my while loop.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The output I&amp;#39;m trying to get is:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Calendar Menu&lt;/p&gt;\n\n&lt;p&gt;0 0. Done&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Search for date&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Search for subject&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Your Choice &amp;gt;&amp;gt; (other print statements in another function)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The output I&amp;#39;m currently getting is:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Calendar Menu&lt;/p&gt;\n\n&lt;p&gt;0 0. Done&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Search for date&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Search for subject&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Your Choice &amp;gt;&amp;gt; &lt;/p&gt;\n\n&lt;p&gt;(other print statements in another function)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int getChoice()\n{\n  int userChoice;\n  printf(&amp;quot;Calendar Menu\\n&amp;quot;);\n  printf(&amp;quot;0. Done\\n&amp;quot;);\n  printf(&amp;quot;1. Search for date.\\n&amp;quot;);\n  printf(&amp;quot;2. Search for subject.\\n\\n&amp;quot;);\n  printf(&amp;quot;Your choice &amp;gt;&amp;gt; &amp;quot;);\n  scanf(&amp;quot;[^/n]%d&amp;quot;, &amp;amp;userChoice);\n\n  while (userChoice != 0 &amp;amp;&amp;amp; userChoice != 1 &amp;amp;&amp;amp; userChoice != 2) \n  {\n    printf(&amp;quot;Choice must be between 0 and 2.  Please try again.\\n\\n&amp;quot;);\n    printf(&amp;quot;Calendar Menu\\n&amp;quot;);\n    printf(&amp;quot;0. Done\\n&amp;quot;);\n    printf(&amp;quot;1. Search for date.\\n&amp;quot;);\n    printf(&amp;quot;2. Search for subject.\\n\\n&amp;quot;);\n    printf(&amp;quot;Your choice &amp;gt;&amp;gt; &amp;quot;);\n    scanf(&amp;quot;[^\\n]%d&amp;quot;, &amp;amp;userChoice);\n  } // Prompt userchoices until correct\n\n  return userChoice;\n} // getChoice\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm having trouble getting rid of the newline after I use scanf. I've added a [^ /n] so that it can read input until the newline, but then what ends up happening is that it goes to my while loop.\n \n**The output I'm trying to get is:**\n\nCalendar Menu\n\n0 0. Done\n\n1. Search for date\n\n2. Search for subject\n\nYour Choice &gt;&gt; (other print statements in another function)\n\n**The output I'm currently getting is:**\n\nCalendar Menu\n\n0 0. Done\n\n1. Search for date\n\n2. Search for subject\n\nYour Choice &gt;&gt; \n\n(other print statements in another function)\n\n    int getChoice()\n    {\n      int userChoice;\n      printf(\"Calendar Menu\\n\");\n      printf(\"0. Done\\n\");\n      printf(\"1. Search for date.\\n\");\n      printf(\"2. Search for subject.\\n\\n\");\n      printf(\"Your choice &gt;&gt; \");\n      scanf(\"[^/n]%d\", &amp;userChoice);\n    \n      while (userChoice != 0 &amp;&amp; userChoice != 1 &amp;&amp; userChoice != 2) \n      {\n        printf(\"Choice must be between 0 and 2.  Please try again.\\n\\n\");\n        printf(\"Calendar Menu\\n\");\n        printf(\"0. Done\\n\");\n        printf(\"1. Search for date.\\n\");\n        printf(\"2. Search for subject.\\n\\n\");\n        printf(\"Your choice &gt;&gt; \");\n        scanf(\"[^\\n]%d\", &amp;userChoice);\n      } // Prompt userchoices until correct\n    \n      return userChoice;\n    } // getChoice", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65w494", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 6, "report_reasons": null, "author": "Chrizappin", "saved": false, "mod_reports": [], "name": "t3_65w494", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65w494/c_get_rid_of_newline_in_scanf/", "num_reports": null, "locked": false, "stickied": false, "created": 1492470685.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65w494/c_get_rid_of_newline_in_scanf/", "author_flair_text": null, "quarantine": false, "title": "[C] Get rid of newline in scanf", "created_utc": 1492441885.0, "distinguished": null, "media": null, "upvote_ratio": 0.76, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65w494", "likes": null, "replies": "", "user_reports": [], "id": "dgdoc85", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Updatebjarni", "parent_id": "t3_65w494", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "First of all, `[^/n]` means \"every character except `/` and `n`\". `/` is a slash, and not the same character as the character literal escape character, which is backslash, `\\`.\n\nSecond, if you read every non-newline character and then an integer, with `%d`, then the program will read and discard the first line of input the user types, since you read and discard the line *before* you read the number.\n\nNow, you don't really need to discard the remainder of the line if you're just reading numbers anyway, since the newlines in the buffer won't interfere with that. You can just happily use `%d` and let it discard the newlines implicitly.\n\nBut if you *do* need to make your input line-oriented, so that you really always read exactly one line, parse it, optionally report an error if there is extra input on the line, and then discard the rest of the line, then I would recommend that you do it straight-forwardly: read in the whole line (with `fgets()` or `getline()`, for example), then parse it with `sscanf()` or some other function(s).\n\nAs an additional comment, your code contains the whole menu printing and input reading twice, for no good reason. This is extra work for you, extra work for whomever needs to read your code, and bound to lead to a bug sooner or later. Remove the copy that is outside of the loop and change the loop around to a do-while, and put the error message inside an if instead. And check the return value of `scanf()`.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First of all, &lt;code&gt;[^/n]&lt;/code&gt; means &amp;quot;every character except &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt;&amp;quot;. &lt;code&gt;/&lt;/code&gt; is a slash, and not the same character as the character literal escape character, which is backslash, &lt;code&gt;\\&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Second, if you read every non-newline character and then an integer, with &lt;code&gt;%d&lt;/code&gt;, then the program will read and discard the first line of input the user types, since you read and discard the line &lt;em&gt;before&lt;/em&gt; you read the number.&lt;/p&gt;\n\n&lt;p&gt;Now, you don&amp;#39;t really need to discard the remainder of the line if you&amp;#39;re just reading numbers anyway, since the newlines in the buffer won&amp;#39;t interfere with that. You can just happily use &lt;code&gt;%d&lt;/code&gt; and let it discard the newlines implicitly.&lt;/p&gt;\n\n&lt;p&gt;But if you &lt;em&gt;do&lt;/em&gt; need to make your input line-oriented, so that you really always read exactly one line, parse it, optionally report an error if there is extra input on the line, and then discard the rest of the line, then I would recommend that you do it straight-forwardly: read in the whole line (with &lt;code&gt;fgets()&lt;/code&gt; or &lt;code&gt;getline()&lt;/code&gt;, for example), then parse it with &lt;code&gt;sscanf()&lt;/code&gt; or some other function(s).&lt;/p&gt;\n\n&lt;p&gt;As an additional comment, your code contains the whole menu printing and input reading twice, for no good reason. This is extra work for you, extra work for whomever needs to read your code, and bound to lead to a bug sooner or later. Remove the copy that is outside of the loop and change the loop around to a do-while, and put the error message inside an if instead. And check the return value of &lt;code&gt;scanf()&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgdoc85", "score_hidden": false, "stickied": false, "created": 1492473932.0, "created_utc": 1492445132.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}]