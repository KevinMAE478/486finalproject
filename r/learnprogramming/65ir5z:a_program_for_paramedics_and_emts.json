[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;m a paramedic at an ambulance service. I have an idea for a program that would help assist me and my colleagues with a particular aspect of our job.  I just want some input on how hard of an endeavor you guys think this will be for me. It doesn&amp;#39;t seem like this will be that hard to do because the program seems fairly simple to me. &lt;/p&gt;\n\n&lt;p&gt;I have very little experience with programming. I&amp;#39;ve played with HTML and python some just for doing little things here and there. I don&amp;#39;t actually fully understand any programming language. I&amp;#39;m fairly computer savvy and I&amp;#39;m a quick learner. I&amp;#39;ll learn whatever it takes to do this. &lt;/p&gt;\n\n&lt;p&gt;In my line of work, we have to document EVERYTHING, and it&amp;#39;s very important that what we call the &amp;quot;narrative&amp;quot; includes all pertinent information on a given ambulance call. Such as the appearance of the patient, where there injuries are located, what kinds of medical history they have and so forth. &lt;/p&gt;\n\n&lt;p&gt;The program I&amp;#39;m thinking about writing will be to assist with writing the narrative and help to include all the possible information that it needs on a given ambulance call. &lt;/p&gt;\n\n&lt;p&gt;I want to make it to where you select what we call the &amp;quot;chief complaint&amp;quot; from a drop down list. Then the program asks you questions related to that chief complaint. You then answer the questions in a box below the questions in complete sentences. It asks you questions that you answer and you end up answering ALL possible related questions to that &amp;quot;chief complaint.&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;At the end, it compiles and formats all of your answers into a nice paragraph that you can then copy and paste into the narrative portion of whatever  program that our EMS service is required to use. Most ambiance services  use programs that do this to a degree but it does it in a very overly complicated way that produces a garbage narrative. The programs we use has  an option to generate a barrier from the drop downs and other selections you have to make, but most services don&amp;#39;t allow you to use it because it&amp;#39;s so bad at doing it.&lt;/p&gt;\n\n&lt;p&gt;My idea makes the process simple and elegant in a way that would solve all the problems that the programs we use now create with narrative generation.&lt;/p&gt;\n\n&lt;p&gt;The purpose of this is so me and other paramedics/EMTs don&amp;#39;t miss putting certain information in our report that it should have. For instance, on traumatic calls, you should include if the patient is taking blood thinning medications. Sometimes people forget to state in their narrative If the patient takes those medications or not so this program would ask on a trauma call, &amp;quot;Does the patient take blood thinning medications?&amp;quot;where you would type &amp;quot;The patient takes blood thinning medications &amp;quot;&lt;/p&gt;\n\n&lt;p&gt;It would be even better if the program was adaptive and would refine better questions to ask based on the answers that you input. &lt;/p&gt;\n\n&lt;p&gt;How hard do you guys think this will this be for me to make? What programming language should I use/learn to do this? I want it to be fairly universal so it could work on many platforms. I don&amp;#39;t care if it&amp;#39;s actually going to be hard. I&amp;#39;ll learn whatever it is I need to learn. What do you guys think of this idea?   &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So I'm a paramedic at an ambulance service. I have an idea for a program that would help assist me and my colleagues with a particular aspect of our job.  I just want some input on how hard of an endeavor you guys think this will be for me. It doesn't seem like this will be that hard to do because the program seems fairly simple to me. \n\nI have very little experience with programming. I've played with HTML and python some just for doing little things here and there. I don't actually fully understand any programming language. I'm fairly computer savvy and I'm a quick learner. I'll learn whatever it takes to do this. \n\nIn my line of work, we have to document EVERYTHING, and it's very important that what we call the \"narrative\" includes all pertinent information on a given ambulance call. Such as the appearance of the patient, where there injuries are located, what kinds of medical history they have and so forth. \n\nThe program I'm thinking about writing will be to assist with writing the narrative and help to include all the possible information that it needs on a given ambulance call. \n\nI want to make it to where you select what we call the \"chief complaint\" from a drop down list. Then the program asks you questions related to that chief complaint. You then answer the questions in a box below the questions in complete sentences. It asks you questions that you answer and you end up answering ALL possible related questions to that \"chief complaint.\" \n\nAt the end, it compiles and formats all of your answers into a nice paragraph that you can then copy and paste into the narrative portion of whatever  program that our EMS service is required to use. Most ambiance services  use programs that do this to a degree but it does it in a very overly complicated way that produces a garbage narrative. The programs we use has  an option to generate a barrier from the drop downs and other selections you have to make, but most services don't allow you to use it because it's so bad at doing it.\n\nMy idea makes the process simple and elegant in a way that would solve all the problems that the programs we use now create with narrative generation.\n\nThe purpose of this is so me and other paramedics/EMTs don't miss putting certain information in our report that it should have. For instance, on traumatic calls, you should include if the patient is taking blood thinning medications. Sometimes people forget to state in their narrative If the patient takes those medications or not so this program would ask on a trauma call, \"Does the patient take blood thinning medications?\"where you would type \"The patient takes blood thinning medications \"\n\nIt would be even better if the program was adaptive and would refine better questions to ask based on the answers that you input. \n\nHow hard do you guys think this will this be for me to make? What programming language should I use/learn to do this? I want it to be fairly universal so it could work on many platforms. I don't care if it's actually going to be hard. I'll learn whatever it is I need to learn. What do you guys think of this idea?   ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ir5z", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 17, "report_reasons": null, "author": "Gamedic89", "saved": false, "mod_reports": [], "name": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65ir5z/a_program_for_paramedics_and_emts/", "num_reports": null, "locked": false, "stickied": false, "created": 1492286661.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65ir5z/a_program_for_paramedics_and_emts/", "author_flair_text": null, "quarantine": false, "title": "A program for Paramedics and EMTs", "created_utc": 1492257861.0, "distinguished": null, "media": null, "upvote_ratio": 0.91, "num_comments": 17, "visited": false, "subreddit_type": "public", "ups": 17}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgatq81", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "shearing_is_caring", "parent_id": "t1_dgasn0w", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Oh. [I see.](https://dzone.com/articles/oracle-gets-java-running-ios)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh. &lt;a href=\"https://dzone.com/articles/oracle-gets-java-running-ios\"&gt;I see.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgatq81", "score_hidden": false, "stickied": false, "created": 1492301975.0, "created_utc": 1492273175.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgasn0w", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheManInTheShack", "parent_id": "t1_dgasiyw", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "iOS has never supported Java and never will.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;iOS has never supported Java and never will.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgasn0w", "score_hidden": false, "stickied": false, "created": 1492300463.0, "created_utc": 1492271663.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgasiyw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "shearing_is_caring", "parent_id": "t1_dgamrwt", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Really? Is this some recent development? I thought it was always platform independent, and a quick google search tells me otherwise. Have I missed something?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Really? Is this some recent development? I thought it was always platform independent, and a quick google search tells me otherwise. Have I missed something?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgasiyw", "score_hidden": false, "stickied": false, "created": 1492300306.0, "created_utc": 1492271506.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgamrwt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheManInTheShack", "parent_id": "t1_dgam7m7", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Don't use Java if you plan to support iOS. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t use Java if you plan to support iOS. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgamrwt", "score_hidden": false, "stickied": false, "created": 1492291161.0, "created_utc": 1492262361.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgam7m7", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Tarnthelos", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Sounds like it could be moderately difficult for someone with not a ton of experience in programing, especially the part where it refines the questions it asks based on input.\n\nAs for languages, C# with Windows Forms would probably be the easiest to make this in, but if your concerned about cross platform use then your best bet is probably Java with the Swing framework.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like it could be moderately difficult for someone with not a ton of experience in programing, especially the part where it refines the questions it asks based on input.&lt;/p&gt;\n\n&lt;p&gt;As for languages, C# with Windows Forms would probably be the easiest to make this in, but if your concerned about cross platform use then your best bet is probably Java with the Swing framework.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgam7m7", "score_hidden": false, "stickied": false, "created": 1492290016.0, "created_utc": 1492261216.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgaum5y", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "lessthan3code", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "This sounds like a cool project.  \nI think shooting for the simplest minimal version of this that works would be a good idea.  \nA purely command line application sounds like it won't meet your requirements, but it might be worth doing a quick version anyways just to learn from.  \nFor the actual project I would suggest writing a simple local webapp form as a first iteration of this. Then if you want to at that point port it to https://electron.atom.io/, http://phonegap.com/ or something else after you have the basic mvp working.  \nI like recommending that people learn node.js (+https://expressjs.com/) as JavaScript is everywhere and you can do almost everything with it and its not too hard to learn.\nIf you would rather stick to python you could use Django but that will have different implications down the line when/ if you want to port it over to an application.  \nYou could shoot for a structure with a page that gets the chief complaint and additional issues (dropdown + checkboxes).  \nHave the backend use these answers to generate a list of tags.\nThen dynamically construct all the questions related to these tags onto a new page / form.  \nEventually you could do fancy stuff like hiding / showing / adding questions based on the answers to other questions.  \nThis tag based approach should help accommodate the complexity of ems problems (e.g. medical issue lead to trauma etc...).\nGetting something working with just a few questions / options before making them all would be a good move.\nIf you design the questions / tag structure with generic reusable  handlers it should be easy to later add the questions to a database and have a page that can add questions with tags and if the question has a limited number of answers have the answers add or remove tags which would make building out all the medical questions easier.  \nGood luck!", "edited": 1492275110.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like a cool project.&lt;br/&gt;\nI think shooting for the simplest minimal version of this that works would be a good idea.&lt;br/&gt;\nA purely command line application sounds like it won&amp;#39;t meet your requirements, but it might be worth doing a quick version anyways just to learn from.&lt;br/&gt;\nFor the actual project I would suggest writing a simple local webapp form as a first iteration of this. Then if you want to at that point port it to &lt;a href=\"https://electron.atom.io/\"&gt;https://electron.atom.io/&lt;/a&gt;, &lt;a href=\"http://phonegap.com/\"&gt;http://phonegap.com/&lt;/a&gt; or something else after you have the basic mvp working.&lt;br/&gt;\nI like recommending that people learn node.js (+&lt;a href=\"https://expressjs.com/\"&gt;https://expressjs.com/&lt;/a&gt;) as JavaScript is everywhere and you can do almost everything with it and its not too hard to learn.\nIf you would rather stick to python you could use Django but that will have different implications down the line when/ if you want to port it over to an application.&lt;br/&gt;\nYou could shoot for a structure with a page that gets the chief complaint and additional issues (dropdown + checkboxes).&lt;br/&gt;\nHave the backend use these answers to generate a list of tags.\nThen dynamically construct all the questions related to these tags onto a new page / form.&lt;br/&gt;\nEventually you could do fancy stuff like hiding / showing / adding questions based on the answers to other questions.&lt;br/&gt;\nThis tag based approach should help accommodate the complexity of ems problems (e.g. medical issue lead to trauma etc...).\nGetting something working with just a few questions / options before making them all would be a good move.\nIf you design the questions / tag structure with generic reusable  handlers it should be easy to later add the questions to a database and have a page that can add questions with tags and if the question has a limited number of answers have the answers add or remove tags which would make building out all the medical questions easier.&lt;br/&gt;\nGood luck!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaum5y", "score_hidden": false, "stickied": false, "created": 1492303231.0, "created_utc": 1492274431.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgamrgq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheManInTheShack", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Check out Xojo at http://www.xojo.com. The value to you would be that it's cross-platform so you could make versions of your app for Mac, Windows, Linux, the web and iOS without having to write it a bunch of times. They don't have Android yet but that's in the works. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check out Xojo at &lt;a href=\"http://www.xojo.com\"&gt;http://www.xojo.com&lt;/a&gt;. The value to you would be that it&amp;#39;s cross-platform so you could make versions of your app for Mac, Windows, Linux, the web and iOS without having to write it a bunch of times. They don&amp;#39;t have Android yet but that&amp;#39;s in the works. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgamrgq", "score_hidden": false, "stickied": false, "created": 1492291137.0, "created_utc": 1492262337.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgaofpt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MR2Rick", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "If this is aimed at the desktop, you could use Qt. Qt has Python bindings and also has QML which allows you to use a JavaScript like scripting language. [Here](http://doc.qt.io/qt-5/qtwidgets-richtext-textedit-example.html) is a tutorial to build a simple text editor. I can't find it now, but I remember seeing a Qt example that did something similar to what you are trying to do by letting the user insert stored phrases. \n\nSQLite could be a good way to store/retrieve the phrases.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If this is aimed at the desktop, you could use Qt. Qt has Python bindings and also has QML which allows you to use a JavaScript like scripting language. &lt;a href=\"http://doc.qt.io/qt-5/qtwidgets-richtext-textedit-example.html\"&gt;Here&lt;/a&gt; is a tutorial to build a simple text editor. I can&amp;#39;t find it now, but I remember seeing a Qt example that did something similar to what you are trying to do by letting the user insert stored phrases. &lt;/p&gt;\n\n&lt;p&gt;SQLite could be a good way to store/retrieve the phrases.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaofpt", "score_hidden": false, "stickied": false, "created": 1492294171.0, "created_utc": 1492265371.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgavao3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Rybear44", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "My father is a volunteer EMT. I guarantee you that a program such as the one you are describing would be used daily by him and his fellow volunteers. I think implementing it as some kind of web app would be the best way to go. That way its immediately accessible by everyone and there would be no need for software installation on all of the miscellaneous PCs that people use to complete these reports. I have no experience with the actual web pages that they are required to use when entering run data, but from personal accounts from my father, they are quite terrible. He's claimed to have lost a great deal of work due to site crashes, or other errors. So really, any kind of app that eliminates the need to work right out of the report entry page, and can save data locally (At least until the report is finished) would be of great value. Granted, any text editor could accomplish this, but you are seeking to create a more intuitive way of entering data, so obviously this is insufficient.   ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My father is a volunteer EMT. I guarantee you that a program such as the one you are describing would be used daily by him and his fellow volunteers. I think implementing it as some kind of web app would be the best way to go. That way its immediately accessible by everyone and there would be no need for software installation on all of the miscellaneous PCs that people use to complete these reports. I have no experience with the actual web pages that they are required to use when entering run data, but from personal accounts from my father, they are quite terrible. He&amp;#39;s claimed to have lost a great deal of work due to site crashes, or other errors. So really, any kind of app that eliminates the need to work right out of the report entry page, and can save data locally (At least until the report is finished) would be of great value. Granted, any text editor could accomplish this, but you are seeking to create a more intuitive way of entering data, so obviously this is insufficient.   &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgavao3", "score_hidden": false, "stickied": false, "created": 1492304183.0, "created_utc": 1492275383.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgax75r", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PizzaEMS", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "what epcr do you use? if you use emscharts, just do it on your mobile. OR do what I do and us a pen and paper.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;what epcr do you use? if you use emscharts, just do it on your mobile. OR do what I do and us a pen and paper.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgax75r", "score_hidden": false, "stickied": false, "created": 1492306768.0, "created_utc": 1492277968.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgax8vh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PizzaEMS", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "you would have to make it compatible with all epcr systems unless you  wanna type everything over again.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;you would have to make it compatible with all epcr systems unless you  wanna type everything over again.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgax8vh", "score_hidden": false, "stickied": false, "created": 1492306835.0, "created_utc": 1492278035.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgb5smb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hoffination", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I'd recommend checking out Google Forms. You can enter your responses on a custom form that's easy to setup and you can download the responses into a csv that you could post-process to get the paragraphs that you're looking for.\n\nI don't think you'll need to write the front-end for your tool unless you really want to for experience. You'll also be able to learn a little bit about processing real data from making the back end.", "edited": 1492289842.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d recommend checking out Google Forms. You can enter your responses on a custom form that&amp;#39;s easy to setup and you can download the responses into a csv that you could post-process to get the paragraphs that you&amp;#39;re looking for.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t think you&amp;#39;ll need to write the front-end for your tool unless you really want to for experience. You&amp;#39;ll also be able to learn a little bit about processing real data from making the back end.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb5smb", "score_hidden": false, "stickied": false, "created": 1492318417.0, "created_utc": 1492289617.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgbdw2p", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "wncpython", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Great app idea. I'm a physician with a some programming experience (Python, JS, React) and another huge hurdle is HIPAA. It can be rather difficult to keep PHI safe end to end.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great app idea. I&amp;#39;m a physician with a some programming experience (Python, JS, React) and another huge hurdle is HIPAA. It can be rather difficult to keep PHI safe end to end.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgbdw2p", "score_hidden": false, "stickied": false, "created": 1492329851.0, "created_utc": 1492301051.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgbtlv2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "SpoobyPls", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I think what you want to do is a pretty attainable goal for you. Of course it might take a while if you have to learn the language + any associated frameworks/libraries. \n\nMy recommendation, as others have noted, is consider a web application. That way you can access the data from virtually any machine, be it a phone or a computer. And in this way you also don't have to worry about things like OS-specific applications which at this point might overly-complicate things for you. \n\nAnother advantage to a web application is the database aspect. Usually a web application is running on a server, and if this server had a database server then you can more easily access this data from anywhere. Whereas a desktop application, you either have a local database that only that computer has access to that specific data or you place the database on a web server. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think what you want to do is a pretty attainable goal for you. Of course it might take a while if you have to learn the language + any associated frameworks/libraries. &lt;/p&gt;\n\n&lt;p&gt;My recommendation, as others have noted, is consider a web application. That way you can access the data from virtually any machine, be it a phone or a computer. And in this way you also don&amp;#39;t have to worry about things like OS-specific applications which at this point might overly-complicate things for you. &lt;/p&gt;\n\n&lt;p&gt;Another advantage to a web application is the database aspect. Usually a web application is running on a server, and if this server had a database server then you can more easily access this data from anywhere. Whereas a desktop application, you either have a local database that only that computer has access to that specific data or you place the database on a web server. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgbtlv2", "score_hidden": false, "stickied": false, "created": 1492356917.0, "created_utc": 1492328117.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65ir5z", "likes": null, "replies": "", "user_reports": [], "id": "dgasw5g", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "shearing_is_caring", "parent_id": "t1_dgap87x", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "OK that's good. To actually answer your question, I would say you can solve this in almost any language. You need a UI, some sort of output, and possibly a way to configure the questions and save answers. Pretty much everything does that.\nTo narrow it down, ask more questions. Is it a desktop app, or is the target platform mobile/tablet? Is it single user, or will multiple users save to the same db? How will you get data out of it? Copy/paste, email or print? Or other?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK that&amp;#39;s good. To actually answer your question, I would say you can solve this in almost any language. You need a UI, some sort of output, and possibly a way to configure the questions and save answers. Pretty much everything does that.\nTo narrow it down, ask more questions. Is it a desktop app, or is the target platform mobile/tablet? Is it single user, or will multiple users save to the same db? How will you get data out of it? Copy/paste, email or print? Or other?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgasw5g", "score_hidden": false, "stickied": false, "created": 1492300821.0, "created_utc": 1492272021.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgap87x", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Gamedic89", "parent_id": "t1_dgamok9", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Not in the case of narrative generation. All this  takes place after a call is completed. No one could die as a result of this program. The worst case scenario would be a paramedic not answering a question and their documentation being sub par or scrutiny  from their own spelling and grammar errors. \nIt wouldn't ask any demographic related questions  so there wouldn't be any risk of HIPPA violation. The programs that we have to use that the narrative would be copied and pasted into handle all of that. The programs that we use now have a narrative generation function but it's absolutely horrendous what it generates to the point it's almost just random words and nonsense. We have to manually write the narrative because narrative generation is so bad. If that's \"accepted\", I don't see how it could be an issue. \n\nThe worst case scenario is if a medic makes a mistake on a call, such as killing someone and they have to go to court, their documentation that they wrote after the call is competed is used by the court to have an account of the events. All blame falls on them personally, not the \"PCR\" programs. If that was an issue then, the programs used would have so many legal and litigation issues now. \n\nFor instance as an example, if a news reporter gets in trouble for lying writing a false news article, can Microsoft word that they used to write it be held accountable? \n\nI've been on the ambulance for 8 years and I've seen some horrible documentation that people write. This program could help people write better documentation so it's not garbage all the time. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not in the case of narrative generation. All this  takes place after a call is completed. No one could die as a result of this program. The worst case scenario would be a paramedic not answering a question and their documentation being sub par or scrutiny  from their own spelling and grammar errors. \nIt wouldn&amp;#39;t ask any demographic related questions  so there wouldn&amp;#39;t be any risk of HIPPA violation. The programs that we have to use that the narrative would be copied and pasted into handle all of that. The programs that we use now have a narrative generation function but it&amp;#39;s absolutely horrendous what it generates to the point it&amp;#39;s almost just random words and nonsense. We have to manually write the narrative because narrative generation is so bad. If that&amp;#39;s &amp;quot;accepted&amp;quot;, I don&amp;#39;t see how it could be an issue. &lt;/p&gt;\n\n&lt;p&gt;The worst case scenario is if a medic makes a mistake on a call, such as killing someone and they have to go to court, their documentation that they wrote after the call is competed is used by the court to have an account of the events. All blame falls on them personally, not the &amp;quot;PCR&amp;quot; programs. If that was an issue then, the programs used would have so many legal and litigation issues now. &lt;/p&gt;\n\n&lt;p&gt;For instance as an example, if a news reporter gets in trouble for lying writing a false news article, can Microsoft word that they used to write it be held accountable? &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been on the ambulance for 8 years and I&amp;#39;ve seen some horrible documentation that people write. This program could help people write better documentation so it&amp;#39;s not garbage all the time. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgap87x", "score_hidden": false, "stickied": false, "created": 1492295481.0, "created_utc": 1492266681.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgamok9", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "shearing_is_caring", "parent_id": "t3_65ir5z", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I want to side-step from your original question. Consider just for a moment, what are the consequences if the software makes a mistake, or if somebody misinterprets one of the input fields and puts the wrong data in. What is the absolutely worst case scenario? Could someone die? If so, it would be your fault. And if it can happen, it will eventually.\nI don't want to dissuade you from embarking on this, but for medical applications you have to be really careful. I just wanted to say that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I want to side-step from your original question. Consider just for a moment, what are the consequences if the software makes a mistake, or if somebody misinterprets one of the input fields and puts the wrong data in. What is the absolutely worst case scenario? Could someone die? If so, it would be your fault. And if it can happen, it will eventually.\nI don&amp;#39;t want to dissuade you from embarking on this, but for medical applications you have to be really careful. I just wanted to say that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgamok9", "score_hidden": false, "stickied": false, "created": 1492290979.0, "created_utc": 1492262179.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}]