[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I make my living as a Web Developer using PHP/Javascript but In my free time I write C++ when I can for games etc.&lt;/p&gt;\n\n&lt;p&gt;I was wondering if there is a language like python but that is also strongly typed/stricter?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I make my living as a Web Developer using PHP/Javascript but In my free time I write C++ when I can for games etc.\n\nI was wondering if there is a language like python but that is also strongly typed/stricter?\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "654pmk", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 16, "report_reasons": null, "author": "BruceBroadSide", "saved": false, "mod_reports": [], "name": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/654pmk/is_there_a_language_that_is_a_mix_of_a_strongly/", "num_reports": null, "locked": false, "stickied": false, "created": 1492109114.0, "url": "https://www.reddit.com/r/learnprogramming/comments/654pmk/is_there_a_language_that_is_a_mix_of_a_strongly/", "author_flair_text": null, "quarantine": false, "title": "Is there a language that is a mix of a strongly typed language like Java/C++ matched with the simplicity of something like Python?", "created_utc": 1492080314.0, "distinguished": null, "media": null, "upvote_ratio": 0.87, "num_comments": 20, "visited": false, "subreddit_type": "public", "ups": 16}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7mw5d", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Splike_", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I think F# is something that fits your exact request. It's very elegant and uses indentation like python and also It's strongly typed and is both functional and object oriented.\n\nPersonally it's my favorite language. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think F# is something that fits your exact request. It&amp;#39;s very elegant and uses indentation like python and also It&amp;#39;s strongly typed and is both functional and object oriented.&lt;/p&gt;\n\n&lt;p&gt;Personally it&amp;#39;s my favorite language. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7mw5d", "score_hidden": false, "stickied": false, "created": 1492123322.0, "created_utc": 1492094522.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7eefd", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "olzd", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "[Nim](https://nim-lang.org/) perhaps, although it's quite young.\n\nOCaml, a very pragmatic, mostly functional, language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://nim-lang.org/\"&gt;Nim&lt;/a&gt; perhaps, although it&amp;#39;s quite young.&lt;/p&gt;\n\n&lt;p&gt;OCaml, a very pragmatic, mostly functional, language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7eefd", "score_hidden": false, "stickied": false, "created": 1492109851.0, "created_utc": 1492081051.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7gzoz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BruceBroadSide", "parent_id": "t1_dg7ewa5", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Thanks for the suggestion.\n&gt; It runs on the JVM just like Java, and you can even intermix Java and Groovy together as needed.\n\nThis part could be interesting.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the suggestion.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;It runs on the JVM just like Java, and you can even intermix Java and Groovy together as needed.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This part could be interesting.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7gzoz", "score_hidden": false, "stickied": false, "created": 1492115332.0, "created_utc": 1492086532.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7ewa5", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Eyes_and_teeth", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "You could try Groovy. It runs on the JVM just like Java, and you can even intermix Java and Groovy together as needed. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could try Groovy. It runs on the JVM just like Java, and you can even intermix Java and Groovy together as needed. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7ewa5", "score_hidden": false, "stickied": false, "created": 1492111089.0, "created_utc": 1492082289.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7ga75", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Zerocchi", "parent_id": "t1_dg7fxk5", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Thanks for this link. Been experimenting with Crystal since days ago. Feel at home if you know Ruby, and looks promising.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for this link. Been experimenting with Crystal since days ago. Feel at home if you know Ruby, and looks promising.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7ga75", "score_hidden": false, "stickied": false, "created": 1492114066.0, "created_utc": 1492085266.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7gyq3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BruceBroadSide", "parent_id": "t1_dg7fxk5", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Thanks for the suggestion, I haven't heard of this one. It looks very much like ruby.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the suggestion, I haven&amp;#39;t heard of this one. It looks very much like ruby.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7gyq3", "score_hidden": false, "stickied": false, "created": 1492115287.0, "created_utc": 1492086487.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7fxk5", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "commandlineluser", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "[Crystal](https://crystal-lang.org/) is pretty interesting.\n\nhttps://getgood.at/crystal/in-a-day", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://crystal-lang.org/\"&gt;Crystal&lt;/a&gt; is pretty interesting.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://getgood.at/crystal/in-a-day\"&gt;https://getgood.at/crystal/in-a-day&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7fxk5", "score_hidden": false, "stickied": false, "created": 1492113376.0, "created_utc": 1492084576.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7h1wi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BruceBroadSide", "parent_id": "t1_dg7gsgd", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I just had a look - there tagline is \"100% interoperable with Java\u2122\" It could be fun to play with over the Easter holiday :)\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just had a look - there tagline is &amp;quot;100% interoperable with Java\u2122&amp;quot; It could be fun to play with over the Easter holiday :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7h1wi", "score_hidden": false, "stickied": false, "created": 1492115437.0, "created_utc": 1492086637.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7gsgd", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "HolaSoyCara", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I've recently gotten into [Kotlin](http://kotlinlang.org). Like the already mentioned Groovy, it's based on the JVM and features interoperability with Java.    \nIt differs from Groovy in that Kotlin is statically typed while Groovy is not.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve recently gotten into &lt;a href=\"http://kotlinlang.org\"&gt;Kotlin&lt;/a&gt;. Like the already mentioned Groovy, it&amp;#39;s based on the JVM and features interoperability with Java.&lt;br/&gt;\nIt differs from Groovy in that Kotlin is statically typed while Groovy is not.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7gsgd", "score_hidden": false, "stickied": false, "created": 1492114989.0, "created_utc": 1492086189.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg85kkw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gyuan", "parent_id": "t1_dg7k3gn", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Vouching for Go, imo it's exactly what you are looking for! &gt;:3", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Vouching for Go, imo it&amp;#39;s exactly what you are looking for! &amp;gt;:3&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg85kkw", "score_hidden": false, "stickied": false, "created": 1492143430.0, "created_utc": 1492114630.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7k3gn", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Regyn", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I myself really like Go. But it depends on what you want to do with it (games might be tricky). [Tour](https://tour.golang.org/welcome/1).\n  ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I myself really like Go. But it depends on what you want to do with it (games might be tricky). &lt;a href=\"https://tour.golang.org/welcome/1\"&gt;Tour&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7k3gn", "score_hidden": false, "stickied": false, "created": 1492119904.0, "created_utc": 1492091104.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7jd74", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "planedoctor", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Scala, if you avoid the crazier features.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scala, if you avoid the crazier features.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7jd74", "score_hidden": false, "stickied": false, "created": 1492118934.0, "created_utc": 1492090134.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7tyqd", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "R-110", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Typescript\n\nIt's a superset of JavaScript with strong typing. Type safe features (strong types) are completely optional thanks to the \"Any\" type which behaves like a standard JavaScript var. \n\nThe Any type allows you to use or ignore these features as you please. Typescript also introduces many of the new JavaScript features that are not yet supported by browsers which includes the JavaScript class and module implementations, and new methods for interacting with arrays (map, filter, etc).", "edited": 1492158033.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s a superset of JavaScript with strong typing. Type safe features (strong types) are completely optional thanks to the &amp;quot;Any&amp;quot; type which behaves like a standard JavaScript var. &lt;/p&gt;\n\n&lt;p&gt;The Any type allows you to use or ignore these features as you please. Typescript also introduces many of the new JavaScript features that are not yet supported by browsers which includes the JavaScript class and module implementations, and new methods for interacting with arrays (map, filter, etc).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7tyqd", "score_hidden": false, "stickied": false, "created": 1492130962.0, "created_utc": 1492102162.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg80bke", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "anamorphism", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "probably need to be more descriptive with what you're looking for and clean up your nomenclature a bit.\n\npython is strongly-typed. it's just also dynamically typed. https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language\n\ni guess you want a statically typed language?\n\nc# comes to mind as it's basically more convenient java. you can use `var` for variable declarations where the type is inferred from usage.\n\n    var table = GetTable();\n\n`table` will be of the type that the `GetTable` function returns, which can be handy if the return type is something like `IReadOnlyDictionary&lt;Guid, IReadOnlyDictionary&lt;Guid, IReadOnlyDictionary&lt;Guid, string&gt;&gt;&gt;`.\n\nproperties are also much cleaner to write in c# than in java.\n\n    public string Name { get; set; }\n\nversus\n\n    private string name;\n\n    public string getName() {\n        return name;\n    }\n\n    public void setName(string newName) {\n        name= newName;\n    }\n\nlots of other convenience stuff. but yeah, hard to tell you what to look for when you haven't really listed any requirements.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;probably need to be more descriptive with what you&amp;#39;re looking for and clean up your nomenclature a bit.&lt;/p&gt;\n\n&lt;p&gt;python is strongly-typed. it&amp;#39;s just also dynamically typed. &lt;a href=\"https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language\"&gt;https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;i guess you want a statically typed language?&lt;/p&gt;\n\n&lt;p&gt;c# comes to mind as it&amp;#39;s basically more convenient java. you can use &lt;code&gt;var&lt;/code&gt; for variable declarations where the type is inferred from usage.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var table = GetTable();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;table&lt;/code&gt; will be of the type that the &lt;code&gt;GetTable&lt;/code&gt; function returns, which can be handy if the return type is something like &lt;code&gt;IReadOnlyDictionary&amp;lt;Guid, IReadOnlyDictionary&amp;lt;Guid, IReadOnlyDictionary&amp;lt;Guid, string&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;properties are also much cleaner to write in c# than in java.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public string Name { get; set; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;versus&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private string name;\n\npublic string getName() {\n    return name;\n}\n\npublic void setName(string newName) {\n    name= newName;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;lots of other convenience stuff. but yeah, hard to tell you what to look for when you haven&amp;#39;t really listed any requirements.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg80bke", "score_hidden": false, "stickied": false, "created": 1492137713.0, "created_utc": 1492108913.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7ydlg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ApoMechanesTheos", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Try some D! http://dlang.org/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try some D! &lt;a href=\"http://dlang.org/\"&gt;http://dlang.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7ydlg", "score_hidden": false, "stickied": false, "created": 1492135643.0, "created_utc": 1492106843.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7yje7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nerd4code", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Maybe [Pike](https://pike.lysator.liu.se/)?  \u201cSimplicity\u201d is kinda vague.\n\n(And I wouldn\u2019t consider Python to be all that simple TBH, having used it.  It\u2019s easy enough to write a snippet of code if you don\u2019t need to exercise the environment at all, and it\u2019s easy to tie together existing Python components if they work perfectly, but that\u2019s it.  It\u2019s got ~twice as much syntax as it needs and all sorts of special rules that change from version to version, v2.x is not terribly compatible with 3.x, most of the documentation you\u2019d expect for a language and ecosystem is handwavy or nonexistent, it\u2019s thoroughly useless if you need multithreading, and have fun mixing continuation-based and non-continuation-based code.  Designed by people who dislike language designers for no compelling reason, and as a result they ended up making all sorts of mistakes an actual language designer would know to avoid.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe &lt;a href=\"https://pike.lysator.liu.se/\"&gt;Pike&lt;/a&gt;?  \u201cSimplicity\u201d is kinda vague.&lt;/p&gt;\n\n&lt;p&gt;(And I wouldn\u2019t consider Python to be all that simple TBH, having used it.  It\u2019s easy enough to write a snippet of code if you don\u2019t need to exercise the environment at all, and it\u2019s easy to tie together existing Python components if they work perfectly, but that\u2019s it.  It\u2019s got ~twice as much syntax as it needs and all sorts of special rules that change from version to version, v2.x is not terribly compatible with 3.x, most of the documentation you\u2019d expect for a language and ecosystem is handwavy or nonexistent, it\u2019s thoroughly useless if you need multithreading, and have fun mixing continuation-based and non-continuation-based code.  Designed by people who dislike language designers for no compelling reason, and as a result they ended up making all sorts of mistakes an actual language designer would know to avoid.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7yje7", "score_hidden": false, "stickied": false, "created": 1492135816.0, "created_utc": 1492107016.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg856q3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "inu-no-policemen", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Dart is quite nice. It's terse, has straightforward semantics, and it also offers good tooling. The type inference does quite a lot for you. You need very few type annotations to make your application fully typed.\n\nIt runs in browsers, can be used on the server side, and you can also use it for Android/iOS apps.\n\nPerformance is also pretty good. It's one of the fastest scripting languages.\n\nIt uses C-like syntax, though. But that can be also seen as a plus since you're already familiar with that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dart is quite nice. It&amp;#39;s terse, has straightforward semantics, and it also offers good tooling. The type inference does quite a lot for you. You need very few type annotations to make your application fully typed.&lt;/p&gt;\n\n&lt;p&gt;It runs in browsers, can be used on the server side, and you can also use it for Android/iOS apps.&lt;/p&gt;\n\n&lt;p&gt;Performance is also pretty good. It&amp;#39;s one of the fastest scripting languages.&lt;/p&gt;\n\n&lt;p&gt;It uses C-like syntax, though. But that can be also seen as a plus since you&amp;#39;re already familiar with that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg856q3", "score_hidden": false, "stickied": false, "created": 1492143003.0, "created_utc": 1492114203.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg8199s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "420HailSeitan", "parent_id": "t1_dg7mqxw", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "OP Wants something strongly typed..\n\nJavascript is basically the exact opposite\n\nIf anything, suggest Typescript instead", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OP Wants something strongly typed..&lt;/p&gt;\n\n&lt;p&gt;Javascript is basically the exact opposite&lt;/p&gt;\n\n&lt;p&gt;If anything, suggest Typescript instead&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg8199s", "score_hidden": false, "stickied": false, "created": 1492138717.0, "created_utc": 1492109917.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7mqxw", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "ihern8611", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Try Javascript, it is little less strong typed than Java and every computer has a compiler / runtime for it - browser", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try Javascript, it is little less strong typed than Java and every computer has a compiler / runtime for it - browser&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7mqxw", "score_hidden": false, "stickied": false, "created": 1492123156.0, "created_utc": 1492094356.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_654pmk", "likes": null, "replies": "", "user_reports": [], "id": "dg7syr5", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "pipocaQuemada", "parent_id": "t3_654pmk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "What part of \"the simplicity of Python\" do you like?  A lack of having to write types everywhere, or duck typing?\n\nThere's a lot of statically typed languages with a feature called \"type inference\", which basically means that you don't have to explicitly write down most of your types because the compiler is smart enough to figure that out for you.  Haskell, Ocaml, Rust, Scala, and a number of other languages all have some level of support for type inference.\n\nIf you like duck typing in particular, then there's a few statically typed languages with [structurally typed object systems](https://en.wikipedia.org/wiki/Structural_type_system).  The big difference between structural type systems and duck typing is that code like\n\n    def(isDuck, obj):\n      if isDuck:\n        obj.quack()\n      else:\n        obj.bark()\n\nIf you have a structurally subtyped language, obj needs to have both `.quack()` and `.bark()`, because at type-checking time you don't know what the value of `isDuck`is.  If you have duck typing, iff `isDuck` is true then it needs `.quack()` and otherwise it needs `.bark()`.  But that ends up being a fairly small issue as long as you have something like an Either type defined in your libraries somewhere.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What part of &amp;quot;the simplicity of Python&amp;quot; do you like?  A lack of having to write types everywhere, or duck typing?&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s a lot of statically typed languages with a feature called &amp;quot;type inference&amp;quot;, which basically means that you don&amp;#39;t have to explicitly write down most of your types because the compiler is smart enough to figure that out for you.  Haskell, Ocaml, Rust, Scala, and a number of other languages all have some level of support for type inference.&lt;/p&gt;\n\n&lt;p&gt;If you like duck typing in particular, then there&amp;#39;s a few statically typed languages with &lt;a href=\"https://en.wikipedia.org/wiki/Structural_type_system\"&gt;structurally typed object systems&lt;/a&gt;.  The big difference between structural type systems and duck typing is that code like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def(isDuck, obj):\n  if isDuck:\n    obj.quack()\n  else:\n    obj.bark()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you have a structurally subtyped language, obj needs to have both &lt;code&gt;.quack()&lt;/code&gt; and &lt;code&gt;.bark()&lt;/code&gt;, because at type-checking time you don&amp;#39;t know what the value of &lt;code&gt;isDuck&lt;/code&gt;is.  If you have duck typing, iff &lt;code&gt;isDuck&lt;/code&gt; is true then it needs &lt;code&gt;.quack()&lt;/code&gt; and otherwise it needs &lt;code&gt;.bark()&lt;/code&gt;.  But that ends up being a fairly small issue as long as you have something like an Either type defined in your libraries somewhere.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dg7syr5", "score_hidden": false, "stickied": false, "created": 1492129883.0, "created_utc": 1492101083.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}]