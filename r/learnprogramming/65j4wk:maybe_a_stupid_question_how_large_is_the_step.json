[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I hope this isn&amp;#39;t a stupid question, but i sometimes seem overwhelmed by the prospect of creating something with a gui ON TOP OF all the code. Are there GUI toolkits available that developers use?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I hope this isn't a stupid question, but i sometimes seem overwhelmed by the prospect of creating something with a gui ON TOP OF all the code. Are there GUI toolkits available that developers use?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65j4wk", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 26, "report_reasons": null, "author": "ZakHack", "saved": false, "mod_reports": [], "name": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65j4wk/maybe_a_stupid_question_how_large_is_the_step/", "num_reports": null, "locked": false, "stickied": false, "created": 1492292710.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65j4wk/maybe_a_stupid_question_how_large_is_the_step/", "author_flair_text": null, "quarantine": false, "title": "(Maybe a stupid question) How large is the step from creating a console application to something with a GUI", "created_utc": 1492263910.0, "distinguished": null, "media": null, "upvote_ratio": 0.83, "num_comments": 11, "visited": false, "subreddit_type": "public", "ups": 26}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgay84z", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "rochford77", "parent_id": "t1_dgawqof", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Oh! Well great then! You will be far ahead in college. They will re-teach all of that in your first semester of college courses. If you stay on top of your work, you will never fall behind. CS is sort of like math. All the concepts build on each other, and if you fall behind, you are in trouble. \n\nWith that said, take it easy. When you get a passion for something, it's easy to go way to hard, burn yourself out, and lose interest. Take it slowly and pay tons of attention to detail. Don't blast through topics because you are excited. Pay close attention and perfect everything. Make sure you 100% understand before moving on. You will be a much better professional programmer in 5 years if you take careful attention to detail. \n\nHave fun, programming is a blast :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh! Well great then! You will be far ahead in college. They will re-teach all of that in your first semester of college courses. If you stay on top of your work, you will never fall behind. CS is sort of like math. All the concepts build on each other, and if you fall behind, you are in trouble. &lt;/p&gt;\n\n&lt;p&gt;With that said, take it easy. When you get a passion for something, it&amp;#39;s easy to go way to hard, burn yourself out, and lose interest. Take it slowly and pay tons of attention to detail. Don&amp;#39;t blast through topics because you are excited. Pay close attention and perfect everything. Make sure you 100% understand before moving on. You will be a much better professional programmer in 5 years if you take careful attention to detail. &lt;/p&gt;\n\n&lt;p&gt;Have fun, programming is a blast :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgay84z", "score_hidden": false, "stickied": false, "created": 1492308160.0, "created_utc": 1492279360.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgawqof", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ZakHack", "parent_id": "t1_dgaw5ic", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Well. I'm only in Grade 11 (16 years old) and my Grade 11 Comp Sci Class went over some basic C#. I just took it as an elective, but i seem to have discovered a passion. I am currently not taking any CS courses (i had it last semester), but im trying to teach myself python in the meantime. I am also looking to go to college for comp. sci.  But basically i got really freaked out thinking basically that i can make something simple using the console, but how can i turn it into some piece of software i would use every day with a GUI and everything", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well. I&amp;#39;m only in Grade 11 (16 years old) and my Grade 11 Comp Sci Class went over some basic C#. I just took it as an elective, but i seem to have discovered a passion. I am currently not taking any CS courses (i had it last semester), but im trying to teach myself python in the meantime. I am also looking to go to college for comp. sci.  But basically i got really freaked out thinking basically that i can make something simple using the console, but how can i turn it into some piece of software i would use every day with a GUI and everything&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgawqof", "score_hidden": false, "stickied": false, "created": 1492306147.0, "created_utc": 1492277347.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaw5ic", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rochford77", "parent_id": "t1_dgati1n", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Yeah. Not being taught frameworks in school leads to some serious imposter syndrome. \"I'm getting good grades, but am going to embarrass myself at my first internship/job.\" No, you won't. You are good. \n\n~~The only~~ one thing that is tricky with frameworks is they are often an invisible hand. When trying to figure out how code works we tend to \"follow the data\". Like, user clicks here, which triggers this action, which calls this function, which makes an Ajax call here, that hits the back-end there, where a database hit, blah, blah blah. Well, when tracing code with a framework, sometimes you hit a dead end and then *some magic* happens and some how some way a different piece of code is called. Often times this *magic* was setup  a by a Dev in a config or settings file, that's in some random place so it does not make sense to you, or perhaps it's a built in function of the Framework. This can be frustrating  because you can't develop a full mental model of the code. You are missing bits and pieces and can make incorrect assumptions. This is the true learning curve. Onxe you understand what the Framework is doing it becomes easier.\n\nHang in there. If you know some basic python, HTML and JS, look into some Django tutorials on YouTube. Web dev is a somewhat easy next step in programming. It's useful in the job market, and MVC's like Django/rails give you a 'high level' understanding of most \"full stack\" technologies. You will have a brief understanding of Databases, front end, back end, project setup, the whole 9 yards. From there you can either continue with web dev, or focus on a lower level something that specifically interests you (like database design or whatever).\n\nThat's what I did, it worked out pretty well for me :) \n\nGood luck, hang in there.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah. Not being taught frameworks in school leads to some serious imposter syndrome. &amp;quot;I&amp;#39;m getting good grades, but am going to embarrass myself at my first internship/job.&amp;quot; No, you won&amp;#39;t. You are good. &lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;The only&lt;/del&gt; one thing that is tricky with frameworks is they are often an invisible hand. When trying to figure out how code works we tend to &amp;quot;follow the data&amp;quot;. Like, user clicks here, which triggers this action, which calls this function, which makes an Ajax call here, that hits the back-end there, where a database hit, blah, blah blah. Well, when tracing code with a framework, sometimes you hit a dead end and then &lt;em&gt;some magic&lt;/em&gt; happens and some how some way a different piece of code is called. Often times this &lt;em&gt;magic&lt;/em&gt; was setup  a by a Dev in a config or settings file, that&amp;#39;s in some random place so it does not make sense to you, or perhaps it&amp;#39;s a built in function of the Framework. This can be frustrating  because you can&amp;#39;t develop a full mental model of the code. You are missing bits and pieces and can make incorrect assumptions. This is the true learning curve. Onxe you understand what the Framework is doing it becomes easier.&lt;/p&gt;\n\n&lt;p&gt;Hang in there. If you know some basic python, HTML and JS, look into some Django tutorials on YouTube. Web dev is a somewhat easy next step in programming. It&amp;#39;s useful in the job market, and MVC&amp;#39;s like Django/rails give you a &amp;#39;high level&amp;#39; understanding of most &amp;quot;full stack&amp;quot; technologies. You will have a brief understanding of Databases, front end, back end, project setup, the whole 9 yards. From there you can either continue with web dev, or focus on a lower level something that specifically interests you (like database design or whatever).&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s what I did, it worked out pretty well for me :) &lt;/p&gt;\n\n&lt;p&gt;Good luck, hang in there.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaw5ic", "score_hidden": false, "stickied": false, "created": 1492305350.0, "created_utc": 1492276550.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgb08dl", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "curglaff", "parent_id": "t1_dgati1n", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Mine too. That is reason #1 dumbass 19 year old me changed his major from computer Science 15 years ago. I looked at what I was learning, and at my degree plan, and I said \"If this is what programming is, then I don't want to do it, and I certainly don't want to take all these math classes to never get to create GUIs.\"  (Incidentally, if I had a time machine I'd kick 19 year old me's ass for changing his major.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mine too. That is reason #1 dumbass 19 year old me changed his major from computer Science 15 years ago. I looked at what I was learning, and at my degree plan, and I said &amp;quot;If this is what programming is, then I don&amp;#39;t want to do it, and I certainly don&amp;#39;t want to take all these math classes to never get to create GUIs.&amp;quot;  (Incidentally, if I had a time machine I&amp;#39;d kick 19 year old me&amp;#39;s ass for changing his major.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb08dl", "score_hidden": false, "stickied": false, "created": 1492310918.0, "created_utc": 1492282118.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgati1n", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "ZakHack", "parent_id": "t1_dgasgm2", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "&gt; Ah, I had this same fear. \"Oh, cool, I can make this crappy, text/console based bank-account app or tic tac toe game....How the hell does that help me in the real world?!?!\"\n\nThis is literally as if you read my mind. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Ah, I had this same fear. &amp;quot;Oh, cool, I can make this crappy, text/console based bank-account app or tic tac toe game....How the hell does that help me in the real world?!?!&amp;quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is literally as if you read my mind. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgati1n", "score_hidden": false, "stickied": false, "created": 1492301650.0, "created_utc": 1492272850.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgasgm2", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "rochford77", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Ah, I had this same fear. \"Oh, cool, I can make this crappy, text/console based bank-account app or tic tac toe game....How the hell does that help me in the real world?!?!\"\n\nThe answer is usually either frameworks, or you don't need a GUI for what you are doing. I would say that most work today is either Web Based, Mobile Apps, game development, or databases.\n\nWeb Based things are going to, most likely, use and MVC/MVT frameworks like Rails(Ruby), Spring(Java), ASP(c#),  or Django(python) to name a few. In this case, you code most heavy logic in Python, and pass the results it back and forth\u200b using JavaScript to your front end HTML template. The HTML/CSS/JS front end is the GUI, and is pretty easy.\n\nIn the case of mobile development, you are also going to have a framework. Android is a good example. Android is the OS, but also the Framework. You can code up the logic in Java and there are specific built in functions to make GUI elements on the front end. You can populate a \"spinner\" object with an array and get a cool scroll wheel in the front end. Android Studio uses XML, or a simple drag and drop interface to manipulate where objects in the GUI are placed.\n\nIn the case of game development, you have an engine that allows you to drag and drop your front end GUI. Unity(C#/JS) and Unreal(C++) are popular engines. In Unity, you can write a c# script that says \"public gameobject ball1 = new ball\" then on the front end drag and drop a ball asset into the world, click on it, and label it as ball1. Now you can go back to the script and use built in functions for key presses and movement  to make a controller for the ball. Easy peesy.\n\nFor database/dba work, fuck the front end it's someone else's problem.\n\nSo, frameworks.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, I had this same fear. &amp;quot;Oh, cool, I can make this crappy, text/console based bank-account app or tic tac toe game....How the hell does that help me in the real world?!?!&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;The answer is usually either frameworks, or you don&amp;#39;t need a GUI for what you are doing. I would say that most work today is either Web Based, Mobile Apps, game development, or databases.&lt;/p&gt;\n\n&lt;p&gt;Web Based things are going to, most likely, use and MVC/MVT frameworks like Rails(Ruby), Spring(Java), ASP(c#),  or Django(python) to name a few. In this case, you code most heavy logic in Python, and pass the results it back and forth\u200b using JavaScript to your front end HTML template. The HTML/CSS/JS front end is the GUI, and is pretty easy.&lt;/p&gt;\n\n&lt;p&gt;In the case of mobile development, you are also going to have a framework. Android is a good example. Android is the OS, but also the Framework. You can code up the logic in Java and there are specific built in functions to make GUI elements on the front end. You can populate a &amp;quot;spinner&amp;quot; object with an array and get a cool scroll wheel in the front end. Android Studio uses XML, or a simple drag and drop interface to manipulate where objects in the GUI are placed.&lt;/p&gt;\n\n&lt;p&gt;In the case of game development, you have an engine that allows you to drag and drop your front end GUI. Unity(C#/JS) and Unreal(C++) are popular engines. In Unity, you can write a c# script that says &amp;quot;public gameobject ball1 = new ball&amp;quot; then on the front end drag and drop a ball asset into the world, click on it, and label it as ball1. Now you can go back to the script and use built in functions for key presses and movement  to make a controller for the ball. Easy peesy.&lt;/p&gt;\n\n&lt;p&gt;For database/dba work, fuck the front end it&amp;#39;s someone else&amp;#39;s problem.&lt;/p&gt;\n\n&lt;p&gt;So, frameworks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgasgm2", "score_hidden": false, "stickied": false, "created": 1492300214.0, "created_utc": 1492271414.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgaqaol", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "neoKushan", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "It would help to know which language you're writing your code in. There's a huge difference between going from console to GUI if it's say C++ compared to C#. Some are easier than others. As others have posted, it also depends on your operating system - it's much harder to make a GUI for say a Raspberry Pi than a Windows machine.\n\nFrom your post history, it looks as though you've been learning C# so I'll go with that and assume you're doing it on Windows. It's relatively easy to create a simple \"GUI\" application in C# if you search for \"Windows Forms\" ([Here's a video that shows the basics](https://www.youtube.com/watch?v=ucRe9Esv1K4)) but keep in mind, this technology is ancient and you'll get very \"basic\" forms applications. Function over style and all that, but it's very easy to pick up - you can just drag and drop controls onto a form using the visual designer, then double click that control to get taken immediately to the \"Code behind\" that allows you to decide what that control actually does. There's actually a lot more to it than that, but if you want to alleviate any fears that the jump is too hard to make, that's not a bad place to start.\n\nOf course, the downside to that (Aside from the fact that Windows forms is awful), is that it's easy to write terrible applications using Windows forms. The successor to Windows Forms was WPF, which uses a very different way of building applications using a special markup called XAML. WPF is much more powerful than windows forms, but has a much steeper learning curve as a result - you need to learn patterns like MVC and MVVM to understand that when it comes to building GUI's, you want to separate your \"business logic\" from your UI (aka \"View\") and there are multiple techniques for doing that. The techniques you learn to do that can be applied to many different GUI scenarios, even in other languages - ASP.net MVC for example is named after the MVC pattern. Javascript frameworks like react follow similar principles, so yeah there is a lot to learn here but you can learn it one step at a time while still writing GUI applications.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would help to know which language you&amp;#39;re writing your code in. There&amp;#39;s a huge difference between going from console to GUI if it&amp;#39;s say C++ compared to C#. Some are easier than others. As others have posted, it also depends on your operating system - it&amp;#39;s much harder to make a GUI for say a Raspberry Pi than a Windows machine.&lt;/p&gt;\n\n&lt;p&gt;From your post history, it looks as though you&amp;#39;ve been learning C# so I&amp;#39;ll go with that and assume you&amp;#39;re doing it on Windows. It&amp;#39;s relatively easy to create a simple &amp;quot;GUI&amp;quot; application in C# if you search for &amp;quot;Windows Forms&amp;quot; (&lt;a href=\"https://www.youtube.com/watch?v=ucRe9Esv1K4\"&gt;Here&amp;#39;s a video that shows the basics&lt;/a&gt;) but keep in mind, this technology is ancient and you&amp;#39;ll get very &amp;quot;basic&amp;quot; forms applications. Function over style and all that, but it&amp;#39;s very easy to pick up - you can just drag and drop controls onto a form using the visual designer, then double click that control to get taken immediately to the &amp;quot;Code behind&amp;quot; that allows you to decide what that control actually does. There&amp;#39;s actually a lot more to it than that, but if you want to alleviate any fears that the jump is too hard to make, that&amp;#39;s not a bad place to start.&lt;/p&gt;\n\n&lt;p&gt;Of course, the downside to that (Aside from the fact that Windows forms is awful), is that it&amp;#39;s easy to write terrible applications using Windows forms. The successor to Windows Forms was WPF, which uses a very different way of building applications using a special markup called XAML. WPF is much more powerful than windows forms, but has a much steeper learning curve as a result - you need to learn patterns like MVC and MVVM to understand that when it comes to building GUI&amp;#39;s, you want to separate your &amp;quot;business logic&amp;quot; from your UI (aka &amp;quot;View&amp;quot;) and there are multiple techniques for doing that. The techniques you learn to do that can be applied to many different GUI scenarios, even in other languages - ASP.net MVC for example is named after the MVC pattern. Javascript frameworks like react follow similar principles, so yeah there is a lot to learn here but you can learn it one step at a time while still writing GUI applications.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaqaol", "score_hidden": false, "stickied": false, "created": 1492297121.0, "created_utc": 1492268321.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dganx1b", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "jussij", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "GUI frameworks are generally OS an language specific so without more details on those two points it is hard to say.\n\n&gt; Are there GUI toolkits available that developers use?\n\nYes. But they are OS and language specific.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;GUI frameworks are generally OS an language specific so without more details on those two points it is hard to say.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Are there GUI toolkits available that developers use?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes. But they are OS and language specific.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dganx1b", "score_hidden": false, "stickied": false, "created": 1492293278.0, "created_utc": 1492264478.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgao7h7", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mikejones1477", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "That largely depends on how you designed your app.  If all of the \"business logic\" is well encapsulated then it won't matter if you're calling the functions from CLI or GUI.  \n\nI would look at Bootstrap and AngularJS if your app can be adopted to a web UI.  Java and Python have A LOT of UI frameworks you can use for native apps (apps that run locally).  Big plus about Python and Java is that they run on any machine that has Java/Python installed...which now a days is all of them :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That largely depends on how you designed your app.  If all of the &amp;quot;business logic&amp;quot; is well encapsulated then it won&amp;#39;t matter if you&amp;#39;re calling the functions from CLI or GUI.  &lt;/p&gt;\n\n&lt;p&gt;I would look at Bootstrap and AngularJS if your app can be adopted to a web UI.  Java and Python have A LOT of UI frameworks you can use for native apps (apps that run locally).  Big plus about Python and Java is that they run on any machine that has Java/Python installed...which now a days is all of them :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgao7h7", "score_hidden": false, "stickied": false, "created": 1492293783.0, "created_utc": 1492264983.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgattif", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "CrafticEdits", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "JavaFX is pretty simple and you can use scene builder along with it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaFX is pretty simple and you can use scene builder along with it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgattif", "score_hidden": false, "stickied": false, "created": 1492302104.0, "created_utc": 1492273304.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65j4wk", "likes": null, "replies": "", "user_reports": [], "id": "dgbx28a", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "6sweet6leaf6", "parent_id": "t3_65j4wk", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Now how do you go from writing GUI applets to writing software in Java?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Now how do you go from writing GUI applets to writing software in Java?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgbx28a", "score_hidden": false, "stickied": false, "created": 1492368325.0, "created_utc": 1492339525.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]