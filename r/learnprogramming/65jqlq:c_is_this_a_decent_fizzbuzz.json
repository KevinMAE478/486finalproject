[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "learnprogramming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n    for(int i = 1; i &amp;lt;= 100; i++)\n    {\n        if(i % 3 == 0) printf(&amp;quot;Fizz&amp;quot;);\n        if(i % 5 == 0) printf(&amp;quot;Buzz&amp;quot;);\n        if(i % 3 != 0 &amp;amp;&amp;amp; i % 5 != 0) printf(&amp;quot;%d&amp;quot;, i);\n        printf(&amp;quot;\\n&amp;quot;);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m a little worried about my third if statement, it feels clunky. I thought about adding a boolean for it but I still feel this is more concise.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Here's my code\n\n    #include &lt;stdio.h&gt;\n    \n    int main()\n    {\n    \tfor(int i = 1; i &lt;= 100; i++)\n    \t{\n    \t\tif(i % 3 == 0) printf(\"Fizz\");\n    \t\tif(i % 5 == 0) printf(\"Buzz\");\n    \t\tif(i % 3 != 0 &amp;&amp; i % 5 != 0) printf(\"%d\", i);\n    \t\tprintf(\"\\n\");\n    \t}\n    \treturn 0;\n    }\n\nI'm a little worried about my third if statement, it feels clunky. I thought about adding a boolean for it but I still feel this is more concise.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65jqlq", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 7, "report_reasons": null, "author": "VirusZParadox", "saved": false, "mod_reports": [], "name": "t3_65jqlq", "subreddit_name_prefixed": "r/learnprogramming", "approved_by": null, "over_18": false, "domain": "self.learnprogramming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2r7yd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/learnprogramming/comments/65jqlq/c_is_this_a_decent_fizzbuzz/", "num_reports": null, "locked": false, "stickied": false, "created": 1492300200.0, "url": "https://www.reddit.com/r/learnprogramming/comments/65jqlq/c_is_this_a_decent_fizzbuzz/", "author_flair_text": null, "quarantine": false, "title": "[C] Is this a decent FizzBuzz?", "created_utc": 1492271400.0, "distinguished": null, "media": null, "upvote_ratio": 1.0, "num_comments": 25, "visited": false, "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": "", "user_reports": [], "id": "dgasoco", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "exoticmatter", "parent_id": "t3_65jqlq", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Consider using `else`.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Consider using &lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgasoco", "score_hidden": false, "stickied": false, "created": 1492300517.0, "created_utc": 1492271717.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": "", "user_reports": [], "id": "dgb8mah", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "lightcloud5", "parent_id": "t3_65jqlq", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "The code looks fine; fizzbuzz is meant to be super simple.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The code looks fine; fizzbuzz is meant to be super simple.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb8mah", "score_hidden": false, "stickied": false, "created": 1492322327.0, "created_utc": 1492293527.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": "", "user_reports": [], "id": "dgb1o9l", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "green_griffon", "parent_id": "t1_dgauvj9", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I've never seen the return value checked, it's always just called and the return value ignored. Good username!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve never seen the return value checked, it&amp;#39;s always just called and the return value ignored. Good username!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb1o9l", "score_hidden": false, "stickied": false, "created": 1492312824.0, "created_utc": 1492284024.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgauvj9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgauqh7", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Ah, I see what you're getting at. I'm not a C programmer, but I couldn't tell you what it returns.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, I see what you&amp;#39;re getting at. I&amp;#39;m not a C programmer, but I couldn&amp;#39;t tell you what it returns.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgauvj9", "score_hidden": false, "stickied": false, "created": 1492303599.0, "created_utc": 1492274799.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dgb5wsi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "planedoctor", "parent_id": "t1_dgb5pz1", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "&gt; I'm sorry, but /u/serg06's 2nd solution is not obvious\n\nIt is if you know C or many other languages that are similar to it.\n\n&gt; and knowing what the code is supposed to do shouldn't be a prerequisite for understanding it.\n\nIt's not, it just helps, and it's something all parties involved in writing and reviewing this code *do* know.  But again, if you know the basics of C, this isn't even that tricky.\n\nedit: You appear to have moved the goalposts and are now talking about the 2nd code example.  That's definitely less easy to read IMO.  I was talking about the first one, that uses &amp;&amp; and doesn't munge everything onto one line, and talking about the return value of printf.", "edited": 1492290572.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m sorry, but &lt;a href=\"/u/serg06\"&gt;/u/serg06&lt;/a&gt;&amp;#39;s 2nd solution is not obvious&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It is if you know C or many other languages that are similar to it.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;and knowing what the code is supposed to do shouldn&amp;#39;t be a prerequisite for understanding it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s not, it just helps, and it&amp;#39;s something all parties involved in writing and reviewing this code &lt;em&gt;do&lt;/em&gt; know.  But again, if you know the basics of C, this isn&amp;#39;t even that tricky.&lt;/p&gt;\n\n&lt;p&gt;edit: You appear to have moved the goalposts and are now talking about the 2nd code example.  That&amp;#39;s definitely less easy to read IMO.  I was talking about the first one, that uses &amp;amp;&amp;amp; and doesn&amp;#39;t munge everything onto one line, and talking about the return value of printf.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb5wsi", "score_hidden": false, "stickied": false, "created": 1492318576.0, "created_utc": 1492289776.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dgb5xaj", "gilded": 0, "archived": false, "score": -4, "report_reasons": null, "author": "serg06", "parent_id": "t1_dgb5pz1", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "    if(((i % 3 != 0) || !printf(\"Fizz\")) &amp;&amp; ((i % 5 != 0) || !printf(\"Buzz\"))) printf(\"%d\", i);\n\nHow is that not obvious? Anyone but a beginner can look at that and immediately tell what it does.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;if(((i % 3 != 0) || !printf(&amp;quot;Fizz&amp;quot;)) &amp;amp;&amp;amp; ((i % 5 != 0) || !printf(&amp;quot;Buzz&amp;quot;))) printf(&amp;quot;%d&amp;quot;, i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How is that not obvious? Anyone but a beginner can look at that and immediately tell what it does.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb5xaj", "score_hidden": false, "stickied": false, "created": 1492318595.0, "created_utc": 1492289795.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": -4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb5pz1", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgb4y72", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I'm sorry, but /u/serg06's 2nd solution is not obvious, and knowing what the code is supposed to do shouldn't be a prerequisite for understanding it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m sorry, but &lt;a href=\"/u/serg06\"&gt;/u/serg06&lt;/a&gt;&amp;#39;s 2nd solution is not obvious, and knowing what the code is supposed to do shouldn&amp;#39;t be a prerequisite for understanding it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb5pz1", "score_hidden": false, "stickied": false, "created": 1492318316.0, "created_utc": 1492289516.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb4y72", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "planedoctor", "parent_id": "t1_dgb4shb", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "It's obvious if you know that c functions frequently return data about their success.  It's also obvious if you just look at the code and what it's supposed to do.  How it would be designed today is a different issue.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s obvious if you know that c functions frequently return data about their success.  It&amp;#39;s also obvious if you just look at the code and what it&amp;#39;s supposed to do.  How it would be designed today is a different issue.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb4y72", "score_hidden": false, "stickied": false, "created": 1492317274.0, "created_utc": 1492288474.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb4shb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgb204o", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Perhaps not unknown, but certainly it's not an obvious return value. Looking at printf, there's nothing about what it does that would lead you to believe it returns anything. If C were designed now, it's likely that printf would return nothing, as it does in basically every other language in use today.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps not unknown, but certainly it&amp;#39;s not an obvious return value. Looking at printf, there&amp;#39;s nothing about what it does that would lead you to believe it returns anything. If C were designed now, it&amp;#39;s likely that printf would return nothing, as it does in basically every other language in use today.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb4shb", "score_hidden": false, "stickied": false, "created": 1492317060.0, "created_utc": 1492288260.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb204o", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "planedoctor", "parent_id": "t1_dgauqh7", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "That's not 'unknown'.  It's detailed in the spec and easily looked up, and it's fairly obvious what that's doing when you look at the context.  :|", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s not &amp;#39;unknown&amp;#39;.  It&amp;#39;s detailed in the spec and easily looked up, and it&amp;#39;s fairly obvious what that&amp;#39;s doing when you look at the context.  :|&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb204o", "score_hidden": false, "stickied": false, "created": 1492313265.0, "created_utc": 1492284465.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgauqh7", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "green_griffon", "parent_id": "t1_dgaungq", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "If you asked 100 C programmers, \"What does printf() return?\", how many would know the answer?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you asked 100 C programmers, &amp;quot;What does printf() return?&amp;quot;, how many would know the answer?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgauqh7", "score_hidden": false, "stickied": false, "created": 1492303399.0, "created_utc": 1492274599.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaungq", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgaugjm", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Unkown implementation detail of printf?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unkown implementation detail of printf?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaungq", "score_hidden": false, "stickied": false, "created": 1492303281.0, "created_utc": 1492274481.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaugjm", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "green_griffon", "parent_id": "t1_dgaubed", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Right. Don't say \"It's readable which is what really matter\" and then proceed to suggest code that depends on some unknown implementation detail of printf().\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Right. Don&amp;#39;t say &amp;quot;It&amp;#39;s readable which is what really matter&amp;quot; and then proceed to suggest code that depends on some unknown implementation detail of printf().&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaugjm", "score_hidden": false, "stickied": false, "created": 1492303003.0, "created_utc": 1492274203.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r7yd", "removal_reason": null, "link_id": "t3_65jqlq", "likes": null, "replies": "", "user_reports": [], "id": "dgbqa99", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "green_griffon", "parent_id": "t1_dgb55d7", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Interesting, that is very elegant for that problem. I suppose in other languages you could calculate i mod 3 being zero (or not) and i mod 5 being zero (or not), use that to fill an array of 2 booleans, and then use that to index into a hash to tell you what to print (for languages that let you index into a hash using an array). It would need to return some special value to indicate \"Print the original number\", which is a bit less clean.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting, that is very elegant for that problem. I suppose in other languages you could calculate i mod 3 being zero (or not) and i mod 5 being zero (or not), use that to fill an array of 2 booleans, and then use that to index into a hash to tell you what to print (for languages that let you index into a hash using an array). It would need to return some special value to indicate &amp;quot;Print the original number&amp;quot;, which is a bit less clean.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgbqa99", "score_hidden": false, "stickied": false, "created": 1492348962.0, "created_utc": 1492320162.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb55d7", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgb1sq3", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "[Pattern matching!](https://www.leighhalliday.com/fizzbuzz-in-elixir)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.leighhalliday.com/fizzbuzz-in-elixir\"&gt;Pattern matching!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb55d7", "score_hidden": false, "stickied": false, "created": 1492317549.0, "created_utc": 1492288749.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb1sq3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "green_griffon", "parent_id": "t1_dgauece", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "It's interesting, I've never seen a language (besides assembler) where you didn't have to do something unusually ugly to handle this \"if a, else if b, else if a again plus something else\" sort of logic.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s interesting, I&amp;#39;ve never seen a language (besides assembler) where you didn&amp;#39;t have to do something unusually ugly to handle this &amp;quot;if a, else if b, else if a again plus something else&amp;quot; sort of logic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgb1sq3", "score_hidden": false, "stickied": false, "created": 1492312988.0, "created_utc": 1492284188.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgauece", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "serg06", "parent_id": "t1_dgaubed", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "I agree. But as for your code I think it's too simple. You just know it'll trigger someone who comes along that code and they'll fix it in their own way.\n\nEdit: Too simple as in written by someone in intro-to-comp-sci. There are better and simpler ways to do it, like OP's.", "edited": 1492284869.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree. But as for your code I think it&amp;#39;s too simple. You just know it&amp;#39;ll trigger someone who comes along that code and they&amp;#39;ll fix it in their own way.&lt;/p&gt;\n\n&lt;p&gt;Edit: Too simple as in written by someone in intro-to-comp-sci. There are better and simpler ways to do it, like OP&amp;#39;s.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgauece", "score_hidden": false, "stickied": false, "created": 1492302914.0, "created_utc": 1492274114.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaubed", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "baegolas", "parent_id": "t1_dgat57o", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "&gt; or you could get even crazier:\n\nBUT DON'T. Like 80% of what makes code good is how easy it is to read. You could argue that the best fizzbuzz looks like\n\n    int main() {\n        for(int i = 1; i &lt;= 100; ++i) {\n            if (i % 3 == 0 &amp;&amp; i % 5 == 0) {\n                printf(\"FizzBuzz\\n\");\n            } else if (i % 3 == 0) {\n                printf(\"Fizz\\n\");\n            } else if (i % 5 == 0) {\n                printf(\"Buzz\\n\");\n            } else {\n                printf(\"%d\\n\", i);\n            }\n        }\n    }\n\nbecause there's no ambiguity to what it does. No need to think about the fact that `i` could possibly be divisible by 3 AND 5, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;or you could get even crazier:&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;BUT DON&amp;#39;T. Like 80% of what makes code good is how easy it is to read. You could argue that the best fizzbuzz looks like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int main() {\n    for(int i = 1; i &amp;lt;= 100; ++i) {\n        if (i % 3 == 0 &amp;amp;&amp;amp; i % 5 == 0) {\n            printf(&amp;quot;FizzBuzz\\n&amp;quot;);\n        } else if (i % 3 == 0) {\n            printf(&amp;quot;Fizz\\n&amp;quot;);\n        } else if (i % 5 == 0) {\n            printf(&amp;quot;Buzz\\n&amp;quot;);\n        } else {\n            printf(&amp;quot;%d\\n&amp;quot;, i);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;because there&amp;#39;s no ambiguity to what it does. No need to think about the fact that &lt;code&gt;i&lt;/code&gt; could possibly be divisible by 3 AND 5, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgaubed", "score_hidden": false, "stickied": false, "created": 1492302796.0, "created_utc": 1492273996.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}], "after": null, "before": null}}, "user_reports": [], "id": "dgat57o", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "serg06", "parent_id": "t3_65jqlq", "subreddit_name_prefixed": "r/learnprogramming", "controversiality": 0, "body": "Yeah that looks good. It's readable which is what really matters.\n\nIf you don't like that 3rd statement, you could do it like so\n\n\t#include &lt;stdio.h&gt;\n\n\tint main()\n\t{\n\t\tint fizz, buzz;\n\t    for(int i = 1; i &lt;= 100; i++)\n\t    {\n\t        fizz = (i % 3 == 0) &amp;&amp; printf(\"Fizz\");\n\t        buzz = (i % 5 == 0) &amp;&amp; printf(\"Buzz\");\n\t        if(!fizz &amp;&amp; !buzz) printf(\"%d\", i);\n\t        printf(\"\\n\");\n\t    }\n\t    return 0;\n\t}\n\nsince printf returns true when it's called, and stuff after &amp;&amp; is executed only if the stuff before it is true.\n\nor you could get even crazier:\n\n\t#include &lt;stdio.h&gt;\n\n\tint main()\n\t{\n\t    for(int i = 1; i &lt;= 100; i++)\n\t    {\n\t        if(((i % 3 != 0) || !printf(\"Fizz\")) &amp;&amp; ((i % 5 != 0) || !printf(\"Buzz\"))) printf(\"%d\", i);\n\t        printf(\"\\n\");\n\t    }\n\t    return 0;\n\t}", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah that looks good. It&amp;#39;s readable which is what really matters.&lt;/p&gt;\n\n&lt;p&gt;If you don&amp;#39;t like that 3rd statement, you could do it like so&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n    int fizz, buzz;\n    for(int i = 1; i &amp;lt;= 100; i++)\n    {\n        fizz = (i % 3 == 0) &amp;amp;&amp;amp; printf(&amp;quot;Fizz&amp;quot;);\n        buzz = (i % 5 == 0) &amp;amp;&amp;amp; printf(&amp;quot;Buzz&amp;quot;);\n        if(!fizz &amp;amp;&amp;amp; !buzz) printf(&amp;quot;%d&amp;quot;, i);\n        printf(&amp;quot;\\n&amp;quot;);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;since printf returns true when it&amp;#39;s called, and stuff after &amp;amp;&amp;amp; is executed only if the stuff before it is true.&lt;/p&gt;\n\n&lt;p&gt;or you could get even crazier:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n    for(int i = 1; i &amp;lt;= 100; i++)\n    {\n        if(((i % 3 != 0) || !printf(&amp;quot;Fizz&amp;quot;)) &amp;amp;&amp;amp; ((i % 5 != 0) || !printf(&amp;quot;Buzz&amp;quot;))) printf(&amp;quot;%d&amp;quot;, i);\n        printf(&amp;quot;\\n&amp;quot;);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "learnprogramming", "name": "t1_dgat57o", "score_hidden": false, "stickied": false, "created": 1492301160.0, "created_utc": 1492272360.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]