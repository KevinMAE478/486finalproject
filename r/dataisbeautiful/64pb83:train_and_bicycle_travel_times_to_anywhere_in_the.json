[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "dataisbeautiful", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "OC", "id": "64pb83", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 27, "report_reasons": null, "author": "Annom", "saved": false, "mod_reports": [], "name": "t3_64pb83", "subreddit_name_prefixed": "r/dataisbeautiful", "approved_by": null, "over_18": false, "domain": "nsmaps.romgens.com", "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2tk95", "edited": false, "link_flair_css_class": "oc", "author_flair_css_class": "ocmaker", "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/dataisbeautiful/comments/64pb83/train_and_bicycle_travel_times_to_anywhere_in_the/", "num_reports": null, "locked": false, "stickied": false, "created": 1491922772.0, "url": "http://nsmaps.romgens.com/", "author_flair_text": "OC: 2", "quarantine": false, "title": "Train and bicycle travel times to anywhere in the Netherlands [OC]", "created_utc": 1491893972.0, "distinguished": null, "media": null, "upvote_ratio": 0.82, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 27}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2tk95", "removal_reason": null, "link_id": "t3_64pb83", "likes": null, "replies": "", "user_reports": [], "id": "dg41nqu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "OC-Bot", "parent_id": "t3_64pb83", "subreddit_name_prefixed": "r/dataisbeautiful", "controversiality": 0, "body": "Thank you for your Original Content, OP! **I've added +1 to your user flair as gratitude,** if you didn't already have official subreddit flair. [Here's the list of OC contributions](https://www.reddit.com/r/dataisbeautiful/search?q=author%3AAnnom+title%3A[OC]&amp;sort=new&amp;restrict_sr=on) I detected.\n\n**For the readers:** the poster has provided you with information regarding *where or how they got the data* (Source) and *the tool used to generate the visual* (Tools) for this `[OC]` post. To ensure this information isn't buried, I have stickied this link below for your convenience:\n\nhttps://www.reddit.com/r/dataisbeautiful/comments/64pb83/train_and_bicycle_travel_times_to_anywhere_in_the/dg3zgul\n\nI hope this sticky assists you in having an informed discussion in this thread, or inspires you to remix this data. For more information, please [read this Wiki page](https://www.reddit.com/r/dataisbeautiful/wiki/flair#wiki_oc_flair).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you for your Original Content, OP! &lt;strong&gt;I&amp;#39;ve added +1 to your user flair as gratitude,&lt;/strong&gt; if you didn&amp;#39;t already have official subreddit flair. &lt;a href=\"https://www.reddit.com/r/dataisbeautiful/search?q=author%3AAnnom+title%3A%5BOC%5D&amp;amp;sort=new&amp;amp;restrict_sr=on\"&gt;Here&amp;#39;s the list of OC contributions&lt;/a&gt; I detected.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;For the readers:&lt;/strong&gt; the poster has provided you with information regarding &lt;em&gt;where or how they got the data&lt;/em&gt; (Source) and &lt;em&gt;the tool used to generate the visual&lt;/em&gt; (Tools) for this &lt;code&gt;[OC]&lt;/code&gt; post. To ensure this information isn&amp;#39;t buried, I have stickied this link below for your convenience:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/dataisbeautiful/comments/64pb83/train_and_bicycle_travel_times_to_anywhere_in_the/dg3zgul\"&gt;https://www.reddit.com/r/dataisbeautiful/comments/64pb83/train_and_bicycle_travel_times_to_anywhere_in_the/dg3zgul&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I hope this sticky assists you in having an informed discussion in this thread, or inspires you to remix this data. For more information, please &lt;a href=\"https://www.reddit.com/r/dataisbeautiful/wiki/flair#wiki_oc_flair\"&gt;read this Wiki page&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "dataisbeautiful", "name": "t1_dg41nqu", "score_hidden": true, "stickied": true, "created": 1491930053.0, "created_utc": 1491901253.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tk95", "removal_reason": null, "link_id": "t3_64pb83", "likes": null, "replies": "", "user_reports": [], "id": "dg3zgul", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Annom", "parent_id": "t3_64pb83", "subreddit_name_prefixed": "r/dataisbeautiful", "controversiality": 0, "body": "**Data Source**\n\nThe train travel time data is gather by using the Dutch Railways travel planner [API](http://www.ns.nl/en/travel-information/ns-api), using the python module [nsapi](https://github.com/aquatix/ns-api). This required about 160,000 travel advises; 400 stations to 400 stations.\n\nThe generated travel times and contours can be found here: https://github.com/bartromgens/nsmaps-data\n\n**Method and Tools**\n\nThe minimum travel time for a given location on the map is calculated by combining the train travel time to a station and bicycle (18 km/h) travel time from that station. Then taking the route that takes least time.\n\nA contour plot of the grid data (travel time to a coordinate) is created with [matplotlib](https://matplotlib.org/). The contours were converted to geojson using [geojsoncontour](https://github.com/bartromgens/geojsoncontour) and shown on an interactive [OpenLayers](https://openlayers.org/) map using [geojson-vt](https://github.com/mapbox/geojson-vt) to improve performance by tiling the geojson contours. \n\nA [spatial KDTree](https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.spatial.KDTree.html) was used to find the N nearest train stations to use for finding the minimum travel time. I used the 40 nearest stations, out of 400. \n\n**Source code**\n\nhttps://github.com/bartromgens/nsmaps (MIT license)\n\n", "edited": 1491914507.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Data Source&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The train travel time data is gather by using the Dutch Railways travel planner &lt;a href=\"http://www.ns.nl/en/travel-information/ns-api\"&gt;API&lt;/a&gt;, using the python module &lt;a href=\"https://github.com/aquatix/ns-api\"&gt;nsapi&lt;/a&gt;. This required about 160,000 travel advises; 400 stations to 400 stations.&lt;/p&gt;\n\n&lt;p&gt;The generated travel times and contours can be found here: &lt;a href=\"https://github.com/bartromgens/nsmaps-data\"&gt;https://github.com/bartromgens/nsmaps-data&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Method and Tools&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The minimum travel time for a given location on the map is calculated by combining the train travel time to a station and bicycle (18 km/h) travel time from that station. Then taking the route that takes least time.&lt;/p&gt;\n\n&lt;p&gt;A contour plot of the grid data (travel time to a coordinate) is created with &lt;a href=\"https://matplotlib.org/\"&gt;matplotlib&lt;/a&gt;. The contours were converted to geojson using &lt;a href=\"https://github.com/bartromgens/geojsoncontour\"&gt;geojsoncontour&lt;/a&gt; and shown on an interactive &lt;a href=\"https://openlayers.org/\"&gt;OpenLayers&lt;/a&gt; map using &lt;a href=\"https://github.com/mapbox/geojson-vt\"&gt;geojson-vt&lt;/a&gt; to improve performance by tiling the geojson contours. &lt;/p&gt;\n\n&lt;p&gt;A &lt;a href=\"https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.spatial.KDTree.html\"&gt;spatial KDTree&lt;/a&gt; was used to find the N nearest train stations to use for finding the minimum travel time. I used the 40 nearest stations, out of 400. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Source code&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bartromgens/nsmaps\"&gt;https://github.com/bartromgens/nsmaps&lt;/a&gt; (MIT license)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "dataisbeautiful", "name": "t1_dg3zgul", "score_hidden": false, "stickied": false, "created": 1491923566.0, "created_utc": 1491894766.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tk95", "removal_reason": null, "link_id": "t3_64pb83", "likes": null, "replies": "", "user_reports": [], "id": "dg579jb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "UniqueMumbles", "parent_id": "t3_64pb83", "subreddit_name_prefixed": "r/dataisbeautiful", "controversiality": 0, "body": "Still wrapping my head around it.  Interesting, a bit confusing.  Thank you for making me engage the brainbox tonight.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Still wrapping my head around it.  Interesting, a bit confusing.  Thank you for making me engage the brainbox tonight.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "dataisbeautiful", "name": "t1_dg579jb", "score_hidden": false, "stickied": false, "created": 1491986440.0, "created_utc": 1491957640.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]