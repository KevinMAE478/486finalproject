[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "cscareerquestions", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Always use hash tables, they work like magic. And they never ask about hash collisions but if they do then just stick a linked list in&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Always use quicksort, it has quick in the name I mean c&amp;#39;mon&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Always use Dijkstra&amp;#39;s because all other path-finding algorithms are considered harmful&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Always use Python for whiteboarding because it&amp;#39;s pretty much psuedocode anyway&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Always ask questions to your interviewer, because that&amp;#39;s what a good engineer does! But be careful of what questions you ask because if they think they&amp;#39;re sponfeeding you you&amp;#39;re gonna get bumped&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If they ask about red-black trees, you&amp;#39;ve either stumbled into an actual computer science graduate level exam or a stereotype of what Big 4 corps allegedly ask&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Use queues for BFS. Use stacks for DFS. One is FIFO other is LIFO. No joke here but fun fact the algorithm to &lt;a href=\"https://www.quora.com/What-is-the-algorithmic-approach-to-invert-a-given-binary-tree/answer/Kalvin-Lam\"&gt;invert a binary tree&lt;/a&gt; is very similar to BFS, congrats Max Howell creator of Homebrew I just helped you pass your Google interview&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Edit: Feel free to submit your own pearls of programming&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "1. Always use hash tables, they work like magic. And they never ask about hash collisions but if they do then just stick a linked list in\n\n2. Always use quicksort, it has quick in the name I mean c'mon\n\n3. Always use Dijkstra's because all other path-finding algorithms are considered harmful\n\n4. Always use Python for whiteboarding because it's pretty much psuedocode anyway\n\n5. Always ask questions to your interviewer, because that's what a good engineer does! But be careful of what questions you ask because if they think they're sponfeeding you you're gonna get bumped\n\n6. If they ask about red-black trees, you've either stumbled into an actual computer science graduate level exam or a stereotype of what Big 4 corps allegedly ask\n\n7. Use queues for BFS. Use stacks for DFS. One is FIFO other is LIFO. No joke here but fun fact the algorithm to [invert a binary tree](https://www.quora.com/What-is-the-algorithmic-approach-to-invert-a-given-binary-tree/answer/Kalvin-Lam) is very similar to BFS, congrats Max Howell creator of Homebrew I just helped you pass your Google interview\n\nEdit: Feel free to submit your own pearls of programming", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6500rd", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 22, "report_reasons": null, "author": "IAmDumbQuestionAsker", "saved": false, "mod_reports": [], "name": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "approved_by": null, "over_18": false, "domain": "self.cscareerquestions", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2sdpm", "edited": 1492198046.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/cscareerquestions/comments/6500rd/what_to_remember_for_algorithmsdata_structures/", "num_reports": null, "locked": false, "stickied": false, "created": 1492050606.0, "url": "https://www.reddit.com/r/cscareerquestions/comments/6500rd/what_to_remember_for_algorithmsdata_structures/", "author_flair_text": null, "quarantine": false, "title": "What to remember for algorithms/data structures questions (humor)", "created_utc": 1492021806.0, "distinguished": null, "media": null, "upvote_ratio": 0.96, "num_comments": 16, "visited": false, "subreddit_type": "public", "ups": 22}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg6fhkh", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "poop_stuck", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "The answer is always either a hash map or DP. If its DP you're fucked.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The answer is always either a hash map or DP. If its DP you&amp;#39;re fucked.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6fhkh", "score_hidden": false, "stickied": false, "created": 1492054993.0, "created_utc": 1492026193.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg6gduw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kimmy314", "parent_id": "t1_dg6fxvs", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "I see both answers! lol definitely going to stick with try.. so much less confusing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I see both answers! lol definitely going to stick with try.. so much less confusing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6gduw", "score_hidden": false, "stickied": false, "created": 1492055902.0, "created_utc": 1492027102.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6fxvs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "IAmDumbQuestionAsker", "parent_id": "t1_dg6fqg4", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "https://www.quora.com/Tries-How-do-you-pronounce-trie", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.quora.com/Tries-How-do-you-pronounce-trie\"&gt;https://www.quora.com/Tries-How-do-you-pronounce-trie&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6fxvs", "score_hidden": false, "stickied": false, "created": 1492055453.0, "created_utc": 1492026653.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6fqg4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kimmy314", "parent_id": "t1_dg6cmpi", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "Wait, what? Tries are pronounced \"trees\"? I thought they were pronounced like try - tries...?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wait, what? Tries are pronounced &amp;quot;trees&amp;quot;? I thought they were pronounced like try - tries...?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6fqg4", "score_hidden": false, "stickied": false, "created": 1492055243.0, "created_utc": 1492026443.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6cmpi", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "IAmDumbQuestionAsker", "parent_id": "t1_dg6cd25", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "B-trees: wtf how are they a different thing from binary trees\n\nTries: wtf how are they not pronounced differently from trees", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;B-trees: wtf how are they a different thing from binary trees&lt;/p&gt;\n\n&lt;p&gt;Tries: wtf how are they not pronounced differently from trees&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6cmpi", "score_hidden": false, "stickied": false, "created": 1492052040.0, "created_utc": 1492023240.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6cd25", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "terrany", "parent_id": "t1_dg6c4ev", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "bring more than 1 ~~kleenex~~ bottle of lube", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;bring more than 1 &lt;del&gt;kleenex&lt;/del&gt; bottle of lube&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6cd25", "score_hidden": false, "stickied": false, "created": 1492051758.0, "created_utc": 1492022958.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg6cvf1", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "fudgyvmp", "parent_id": "t1_dg6c4ev", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "none, I remember what b trees are vaguely, but If I tried to use my words without a white board to draw one, it would not be pretty, so my advice on them would be google them. \n\nAs for the indexing, I have no advice, the question I was actually given was 'wouldn't searching a database of billions of records for a specific key take forever?' to which I responded, 'I only started learning about MySQL and databases a week ago, I'm surprised I know what an ER diagram and schema are, and what ER even stands for. I'd hope there's ways to optimize and speed up searching in MySQL, but I don't know how yet, maybe in five minutes with a google search I'd know some ways to optimize searching'\n\nfive minutes and a google search revealed you can mark different columns of a table for indexing and that MySQL will store the indexes using b-trees. ", "edited": 1492023806.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;none, I remember what b trees are vaguely, but If I tried to use my words without a white board to draw one, it would not be pretty, so my advice on them would be google them. &lt;/p&gt;\n\n&lt;p&gt;As for the indexing, I have no advice, the question I was actually given was &amp;#39;wouldn&amp;#39;t searching a database of billions of records for a specific key take forever?&amp;#39; to which I responded, &amp;#39;I only started learning about MySQL and databases a week ago, I&amp;#39;m surprised I know what an ER diagram and schema are, and what ER even stands for. I&amp;#39;d hope there&amp;#39;s ways to optimize and speed up searching in MySQL, but I don&amp;#39;t know how yet, maybe in five minutes with a google search I&amp;#39;d know some ways to optimize searching&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;five minutes and a google search revealed you can mark different columns of a table for indexing and that MySQL will store the indexes using b-trees. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6cvf1", "score_hidden": false, "stickied": false, "created": 1492052290.0, "created_utc": 1492023490.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg7s8ho", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kesnick", "parent_id": "t1_dg6c4ev", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "I find B-Trees to be a fascinating data structure given how the sorting and re-balancing works--it all seems very natural and organic.  They are related to binary trees in that they're a generalization of the concept.  However, where binary trees focus on a single node with a single value, with only two pointers for each node, B-Trees can have (and often do have) more than two pointers.  The complexity comes in because the general rules of binary search trees must still be followed (one side's values have to be greater than the other side's), but there are additional rules because of the additional pointers.  Instead of having a single node with a pointer to the \"left\" and \"right\" of the node, a position in the B-Tree has multiple nodes with pointers inbetween each node.  In order to maintain the binary tree general rule, this list of nodes must be split occasionally, with some of the nodes being promoted upwards, and some staying, depending on the state of the tree when a node is inserted or removed.\n\nSo, why go through all this trouble of writing overly complex insert/removal algorithms? Processing efficiency!  B-Trees take a long time to grow downwards, depending on the size of the node list you define (this is sometimes referred to as a block size).  The larger the block size, the longer it will take for the tree to grow downward, which should result in faster search times.  When properly coded, insertion, removal, and searching all perform in O(log n) time.  That's why the data structure is a popular choice for databases or files systems.  Unfortunately, there's a trade off in space at O(n), which makes sense given that \"blocks of nodes\" are key to a B-Tree.\n\nThat said, I don't know if I'd ask someone to write a B-Tree in an interview or even part of one.  Programmer interviews nowadays involve multiple short interviews with different groups of people.  Each group is typically given 30 minutes on average to ask their questions.  A \"make a B-Tree\" question could easily take up that entire 30 minutes (probably more given interviews are typically stressful experiences).  There are shorter questions I could ask that give me a better picture of a candidate.", "edited": 1492100582.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I find B-Trees to be a fascinating data structure given how the sorting and re-balancing works--it all seems very natural and organic.  They are related to binary trees in that they&amp;#39;re a generalization of the concept.  However, where binary trees focus on a single node with a single value, with only two pointers for each node, B-Trees can have (and often do have) more than two pointers.  The complexity comes in because the general rules of binary search trees must still be followed (one side&amp;#39;s values have to be greater than the other side&amp;#39;s), but there are additional rules because of the additional pointers.  Instead of having a single node with a pointer to the &amp;quot;left&amp;quot; and &amp;quot;right&amp;quot; of the node, a position in the B-Tree has multiple nodes with pointers inbetween each node.  In order to maintain the binary tree general rule, this list of nodes must be split occasionally, with some of the nodes being promoted upwards, and some staying, depending on the state of the tree when a node is inserted or removed.&lt;/p&gt;\n\n&lt;p&gt;So, why go through all this trouble of writing overly complex insert/removal algorithms? Processing efficiency!  B-Trees take a long time to grow downwards, depending on the size of the node list you define (this is sometimes referred to as a block size).  The larger the block size, the longer it will take for the tree to grow downward, which should result in faster search times.  When properly coded, insertion, removal, and searching all perform in O(log n) time.  That&amp;#39;s why the data structure is a popular choice for databases or files systems.  Unfortunately, there&amp;#39;s a trade off in space at O(n), which makes sense given that &amp;quot;blocks of nodes&amp;quot; are key to a B-Tree.&lt;/p&gt;\n\n&lt;p&gt;That said, I don&amp;#39;t know if I&amp;#39;d ask someone to write a B-Tree in an interview or even part of one.  Programmer interviews nowadays involve multiple short interviews with different groups of people.  Each group is typically given 30 minutes on average to ask their questions.  A &amp;quot;make a B-Tree&amp;quot; question could easily take up that entire 30 minutes (probably more given interviews are typically stressful experiences).  There are shorter questions I could ask that give me a better picture of a candidate.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg7s8ho", "score_hidden": false, "stickied": false, "created": 1492129112.0, "created_utc": 1492100312.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6c4ev", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "IAmDumbQuestionAsker", "parent_id": "t1_dg6c158", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "And what advice would you give about them?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And what advice would you give about them?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6c4ev", "score_hidden": false, "stickied": false, "created": 1492051511.0, "created_utc": 1492022711.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6c158", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "fudgyvmp", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "hey now I was asked about b trees and indexing", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hey now I was asked about b trees and indexing&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg6c158", "score_hidden": false, "stickied": false, "created": 1492051419.0, "created_utc": 1492022619.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg7f8or", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Aenclave", "parent_id": "t1_dg78sd7", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "if you choose your median correctly (which can be done in linear time), you can get O(nlogn) worst case time", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;if you choose your median correctly (which can be done in linear time), you can get O(nlogn) worst case time&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg7f8or", "score_hidden": false, "stickied": false, "created": 1492111892.0, "created_utc": 1492083092.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg78sd7", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "bronwynnn", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "&gt; always use quicksort  \n   \nBut O(n^2) worst case time :'( merge sort FTW   \n &gt; Use queues for BFS. Use stacks for DFS   \n   \nIf you always forget which one uses stacks and which ones use queues, remember BFS using a queue because \"barbecue\"", "edited": 1492100248.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;always use quicksort  &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;But O(n&lt;sup&gt;2)&lt;/sup&gt; worst case time :&amp;#39;( merge sort FTW   &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Use queues for BFS. Use stacks for DFS   &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you always forget which one uses stacks and which ones use queues, remember BFS using a queue because &amp;quot;barbecue&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg78sd7", "score_hidden": false, "stickied": false, "created": 1492093659.0, "created_utc": 1492064859.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg7frdx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "110011001100", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "For complexity calculations,the c really does not matter ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For complexity calculations,the c really does not matter &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg7frdx", "score_hidden": false, "stickied": false, "created": 1492113023.0, "created_utc": 1492084223.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg9m78n", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "IAmDumbQuestionAsker", "parent_id": "t1_dg7iuur", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "Feel free to suggest your own!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Feel free to suggest your own!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg9m78n", "score_hidden": false, "stickied": false, "created": 1492226819.0, "created_utc": 1492198019.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7iuur", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ThomasJCarcetti", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "The funnier these are the more I'm likely to remember them. I was able to get a job without knowing a lick about algorithms and passing by with my cursory knowledge of Java \"collections\" (what we call \"data structures\" in the Java world) but these hilarious references will help drill it into my head. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The funnier these are the more I&amp;#39;m likely to remember them. I was able to get a job without knowing a lick about algorithms and passing by with my cursory knowledge of Java &amp;quot;collections&amp;quot; (what we call &amp;quot;data structures&amp;quot; in the Java world) but these hilarious references will help drill it into my head. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg7iuur", "score_hidden": false, "stickied": false, "created": 1492118229.0, "created_utc": 1492089429.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sdpm", "removal_reason": null, "link_id": "t3_6500rd", "likes": null, "replies": "", "user_reports": [], "id": "dg8npvq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Aazadan", "parent_id": "t3_6500rd", "subreddit_name_prefixed": "r/cscareerquestions", "controversiality": 0, "body": "Always use bogosort and assume the optimal O(N) sort time.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Always use bogosort and assume the optimal O(N) sort time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "cscareerquestions", "name": "t1_dg8npvq", "score_hidden": false, "stickied": false, "created": 1492167236.0, "created_utc": 1492138436.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]