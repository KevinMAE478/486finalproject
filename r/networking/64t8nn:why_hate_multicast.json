[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "networking", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;ve been a network engineer for 9 years now. However, multicast for me has been restrictive in where it&amp;#39;s used. OSPF, Cisco CUCM and recently some NSX requirements.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve always gone along with the belief that multicast = satan, but recently, I like to back my opinions up with fact and so the time has come to ask, &amp;quot;Reddit, why do I hate multicast?&amp;quot;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So I've been a network engineer for 9 years now. However, multicast for me has been restrictive in where it's used. OSPF, Cisco CUCM and recently some NSX requirements.\n\nI've always gone along with the belief that multicast = satan, but recently, I like to back my opinions up with fact and so the time has come to ask, \"Reddit, why do I hate multicast?\"", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64t8nn", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 7, "report_reasons": null, "author": "thewhitedragon", "saved": false, "mod_reports": [], "name": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "approved_by": null, "over_18": false, "domain": "self.networking", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qkaf", "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/networking/comments/64t8nn/why_hate_multicast/", "num_reports": null, "locked": false, "stickied": false, "created": 1491968920.0, "url": "https://www.reddit.com/r/networking/comments/64t8nn/why_hate_multicast/", "author_flair_text": "CCNA", "quarantine": false, "title": "Why hate multicast?", "created_utc": 1491940120.0, "distinguished": null, "media": null, "upvote_ratio": 0.64, "num_comments": 24, "visited": false, "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg4utup", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg4uhvv", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&lt;fist bump&gt;", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;lt;fist bump&amp;gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg4utup", "score_hidden": false, "stickied": false, "created": 1491970776.0, "created_utc": 1491941976.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4uhvv", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "thewhitedragon", "parent_id": "t1_dg4u3x4", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "I can only give you one upvote. I wish I could give more :-) \n\nThank you.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can only give you one upvote. I wish I could give more :-) &lt;/p&gt;\n\n&lt;p&gt;Thank you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg4uhvv", "score_hidden": false, "stickied": false, "created": 1491970408.0, "created_utc": 1491941608.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg4ul42", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "notsostubby", "parent_id": "t1_dg4u3x4", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Yeah I have to strongly agree with #4.  For me and most of my colleagues, we live in a unicast world. Even on the networks I work on that have multicast, interaction is generally limited to getting it set up initially and then months if not years pass before I have to touch it again, by which time my multicast skills (which were never great to begin with) have atrophied. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah I have to strongly agree with #4.  For me and most of my colleagues, we live in a unicast world. Even on the networks I work on that have multicast, interaction is generally limited to getting it set up initially and then months if not years pass before I have to touch it again, by which time my multicast skills (which were never great to begin with) have atrophied. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg4ul42", "score_hidden": false, "stickied": false, "created": 1491970507.0, "created_utc": 1491941707.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg4ymdy", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Skylis", "parent_id": "t1_dg4u3x4", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Yep, hugely 3 and 4.\n\nI can count on 1 hand the number of people I've worked with who have ever done anything with multicast other than cut and paste what someone else made in docs. Even deep QoS skills are much more common.\n\nI've only ever done it a few times myself non trivially, and wouldn't really know what I was doing had it not been for a stint with both some TV people, and some high frequency traders.\n\nIt's pretty simple in the sense that QoS or large scale BGP is simple, but its totally alien compared to everything else, so if you've never done a large deployment with someone who's familiar there's a lot of learning curve.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, hugely 3 and 4.&lt;/p&gt;\n\n&lt;p&gt;I can count on 1 hand the number of people I&amp;#39;ve worked with who have ever done anything with multicast other than cut and paste what someone else made in docs. Even deep QoS skills are much more common.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve only ever done it a few times myself non trivially, and wouldn&amp;#39;t really know what I was doing had it not been for a stint with both some TV people, and some high frequency traders.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s pretty simple in the sense that QoS or large scale BGP is simple, but its totally alien compared to everything else, so if you&amp;#39;ve never done a large deployment with someone who&amp;#39;s familiar there&amp;#39;s a lot of learning curve.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg4ymdy", "score_hidden": false, "stickied": false, "created": 1491975166.0, "created_utc": 1491946366.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg500gi", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "cdnpaul", "parent_id": "t1_dg4u3x4", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Every time I had to troubleshoot a Multicast issue, 9 times out of 10 it's the application.  \nThe other 10% is because the IGP is messed up and not building the IGMP tables properly.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Every time I had to troubleshoot a Multicast issue, 9 times out of 10 it&amp;#39;s the application.&lt;br/&gt;\nThe other 10% is because the IGP is messed up and not building the IGMP tables properly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg500gi", "score_hidden": false, "stickied": false, "created": 1491976861.0, "created_utc": 1491948061.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg5ua97", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg5s6ok", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; It seems to me you're making this up.\n\nGFY. Maybe somebody else will explain why multicast enables client devices to burn and churn precious TCAM.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;It seems to me you&amp;#39;re making this up.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;GFY. Maybe somebody else will explain why multicast enables client devices to burn and churn precious TCAM.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5ua97", "score_hidden": false, "stickied": false, "created": 1492031819.0, "created_utc": 1492003019.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5s6ok", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "theusz_hamtaahk", "parent_id": "t1_dg5pw8r", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "**1.** I still don't get it. It seems to me you're making this up.\n\n&gt; The primary issue here (and the reason we'll never see multicast on the internet with TCAM-based transit devices) is that the network operator winds up empowering subscribers to influence data plane state.\n\nThere's no Mbone for other reasons - mostly because there is no widespread application for it (such as WWW for the Internet). This is already history (at least by definition of /r/history and /r/AskHistorians - i.e., happened more than 20 years ago). BTW, routers had no TCAM back then.\n\nHowever, many SPs provide mVPN services. They are not so popular as Internet, IP VPN and VPLS services, but they exist. If you think about potential impact of customers' traffic on SP network, L2 VPN can be even more dangerous and unpredictable than mVPN, however, there is market demand for it, therefore, there is supply. Of course, SPs apply all sorts of security measures, rate-limiting etc to protect their networks.\n\n**2.** Okay, I can't argue on this due to lack of experience with these fancy apps. I've worked only with the networking part.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; I still don&amp;#39;t get it. It seems to me you&amp;#39;re making this up.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The primary issue here (and the reason we&amp;#39;ll never see multicast on the internet with TCAM-based transit devices) is that the network operator winds up empowering subscribers to influence data plane state.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;There&amp;#39;s no Mbone for other reasons - mostly because there is no widespread application for it (such as WWW for the Internet). This is already history (at least by definition of &lt;a href=\"/r/history\"&gt;/r/history&lt;/a&gt; and &lt;a href=\"/r/AskHistorians\"&gt;/r/AskHistorians&lt;/a&gt; - i.e., happened more than 20 years ago). BTW, routers had no TCAM back then.&lt;/p&gt;\n\n&lt;p&gt;However, many SPs provide mVPN services. They are not so popular as Internet, IP VPN and VPLS services, but they exist. If you think about potential impact of customers&amp;#39; traffic on SP network, L2 VPN can be even more dangerous and unpredictable than mVPN, however, there is market demand for it, therefore, there is supply. Of course, SPs apply all sorts of security measures, rate-limiting etc to protect their networks.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Okay, I can&amp;#39;t argue on this due to lack of experience with these fancy apps. I&amp;#39;ve worked only with the networking part.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5s6ok", "score_hidden": false, "stickied": false, "created": 1492028383.0, "created_utc": 1491999583.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pw8r", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg5mhki", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; punting some packets to control plane\n\nFor #1 I'm not particularly worried about control plane. The primary issue here (and the reason we'll never see multicast on the internet with TCAM-based transit devices) is that the network operator winds up empowering *subscribers* to influence data plane state.\n\nOn #2, I don't dispute that some use cases obviously lend themselves to multicast. My issue here is with lazy development practices. If every application node is a multicast source (many-to-many rather than one-to-many), then we're probably talking about one of those.\n\nTibco for example encourages developers to make dangerous choices by handing off responsibility for service discovery and data distribution to their daemon. They don't mention the risks here: Dumping everything on \"the bus\", causes every node in your network (warehouse automation equipment, maybe?) has to have network and CPU throughput to parse all data (even from other applications) in aggregate.\n\nTaking concepts that work well on a CAN bus, extending it to thousands of nodes at high data rates, over a wide area leads to problems.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;punting some packets to control plane&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;For #1 I&amp;#39;m not particularly worried about control plane. The primary issue here (and the reason we&amp;#39;ll never see multicast on the internet with TCAM-based transit devices) is that the network operator winds up empowering &lt;em&gt;subscribers&lt;/em&gt; to influence data plane state.&lt;/p&gt;\n\n&lt;p&gt;On #2, I don&amp;#39;t dispute that some use cases obviously lend themselves to multicast. My issue here is with lazy development practices. If every application node is a multicast source (many-to-many rather than one-to-many), then we&amp;#39;re probably talking about one of those.&lt;/p&gt;\n\n&lt;p&gt;Tibco for example encourages developers to make dangerous choices by handing off responsibility for service discovery and data distribution to their daemon. They don&amp;#39;t mention the risks here: Dumping everything on &amp;quot;the bus&amp;quot;, causes every node in your network (warehouse automation equipment, maybe?) has to have network and CPU throughput to parse all data (even from other applications) in aggregate.&lt;/p&gt;\n\n&lt;p&gt;Taking concepts that work well on a CAN bus, extending it to thousands of nodes at high data rates, over a wide area leads to problems.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5pw8r", "score_hidden": false, "stickied": false, "created": 1492023299.0, "created_utc": 1491994499.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5mhki", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "theusz_hamtaahk", "parent_id": "t1_dg4u3x4", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "**1.** This is true, but I think you overstate the problem. \n\nMost deployments don't reach that load where punting some packets to control plane becomes a real issue. And most current implementations are quire stable. \n\nIf your deployment is really huge in terms of both traffic and mroute entries, MPLS based NG-mVPN can resolve this problem as multicast state updates become transparent to the core.\n\n**2.** There are applications which work better over unicast, there are applications which work better over multicast. I cannot comment on mDNS, but probably you don't want 100k of IPTV STBs to simultaneously connect to your streaming server via HTTP. Proxies can help, but multicast will be much simpler and elegant solution. \n\n**3.** Yes, and it is used for a good reason! Besides IPTV and radio broadcasting, multicast is used by stock exchanges, communication systems in transport (airplanes, ships etc), multicast can serve as control plane for various protocols used in data centers (VXLAN, OTV, LISP). \n\nProperly designed multicast routing is simple and robust. Yes, there is no reliability that TCP provides, but on the other hand, it's easier to implement a backup stream which can be preferable for real-time applications.\n\n**4.** This is their problem. Fortunately, people who resist to learn are going to be replaced by scripts in the nearest future.\n\nMulticast routing (if not touching mVPN) is much simpler than unicast. PIM complexity is nowhere near OSPF or EIGRP. Just be more open-minded and you will realise how simple and powerful multicast is.\n\nAll hail multicast!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; This is true, but I think you overstate the problem. &lt;/p&gt;\n\n&lt;p&gt;Most deployments don&amp;#39;t reach that load where punting some packets to control plane becomes a real issue. And most current implementations are quire stable. &lt;/p&gt;\n\n&lt;p&gt;If your deployment is really huge in terms of both traffic and mroute entries, MPLS based NG-mVPN can resolve this problem as multicast state updates become transparent to the core.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; There are applications which work better over unicast, there are applications which work better over multicast. I cannot comment on mDNS, but probably you don&amp;#39;t want 100k of IPTV STBs to simultaneously connect to your streaming server via HTTP. Proxies can help, but multicast will be much simpler and elegant solution. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Yes, and it is used for a good reason! Besides IPTV and radio broadcasting, multicast is used by stock exchanges, communication systems in transport (airplanes, ships etc), multicast can serve as control plane for various protocols used in data centers (VXLAN, OTV, LISP). &lt;/p&gt;\n\n&lt;p&gt;Properly designed multicast routing is simple and robust. Yes, there is no reliability that TCP provides, but on the other hand, it&amp;#39;s easier to implement a backup stream which can be preferable for real-time applications.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; This is their problem. Fortunately, people who resist to learn are going to be replaced by scripts in the nearest future.&lt;/p&gt;\n\n&lt;p&gt;Multicast routing (if not touching mVPN) is much simpler than unicast. PIM complexity is nowhere near OSPF or EIGRP. Just be more open-minded and you will realise how simple and powerful multicast is.&lt;/p&gt;\n\n&lt;p&gt;All hail multicast!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5mhki", "score_hidden": false, "stickied": false, "created": 1492012852.0, "created_utc": 1491984052.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4u3x4", "gilded": 0, "archived": false, "score": 35, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "**1** Programming the forwarding plane of a transit device is a risky proposition:\n\n* It can be computationally expensive to calculate the rules for insertion into the TCAM (or even software-based CEF) that makes up the forwarding plane.\n* Inserting the calculated policies into a hardware based forwarding plane can be expensive and/or slow (ASIC write speed)\n* Inserting the calculated policies into a hardware based forwarding plane can be risky (errors).\n* Inserting the calculated policies into a hardware based forwarding plane can be risky (small changes to an ACL/route/classifier can have surprising consequences in overall table size).\n\nSo what?\n\nIGPs and BGP are comparatively stable. New information that updates the forwarding plane arrives relatively infrequently.\n\nMulticast puts data plane forwarding rules in the hands of subscribers. A multicast-based television app will churn the data plane with each channel change (hypothetically - I understand this is not how retail digital television services work).\n\n**2** Multicast is frequently used by application developers as a crutch/shortcut. Think about mDNS: I don't need a directory! I'll just shout and scream, make service discovery the transport's problem! Depending on the application, this can scale really large and really ugly.\n\n**3** Multicast is frequently used by really scary high-stakes applications.\n\n**4** Network administrators don't know it very well. That's probably the biggest reason. It's hard to think about routing upside-down, as it were.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt; Programming the forwarding plane of a transit device is a risky proposition:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It can be computationally expensive to calculate the rules for insertion into the TCAM (or even software-based CEF) that makes up the forwarding plane.&lt;/li&gt;\n&lt;li&gt;Inserting the calculated policies into a hardware based forwarding plane can be expensive and/or slow (ASIC write speed)&lt;/li&gt;\n&lt;li&gt;Inserting the calculated policies into a hardware based forwarding plane can be risky (errors).&lt;/li&gt;\n&lt;li&gt;Inserting the calculated policies into a hardware based forwarding plane can be risky (small changes to an ACL/route/classifier can have surprising consequences in overall table size).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So what?&lt;/p&gt;\n\n&lt;p&gt;IGPs and BGP are comparatively stable. New information that updates the forwarding plane arrives relatively infrequently.&lt;/p&gt;\n\n&lt;p&gt;Multicast puts data plane forwarding rules in the hands of subscribers. A multicast-based television app will churn the data plane with each channel change (hypothetically - I understand this is not how retail digital television services work).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt; Multicast is frequently used by application developers as a crutch/shortcut. Think about mDNS: I don&amp;#39;t need a directory! I&amp;#39;ll just shout and scream, make service discovery the transport&amp;#39;s problem! Depending on the application, this can scale really large and really ugly.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt; Multicast is frequently used by really scary high-stakes applications.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt; Network administrators don&amp;#39;t know it very well. That&amp;#39;s probably the biggest reason. It&amp;#39;s hard to think about routing upside-down, as it were.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg4u3x4", "score_hidden": false, "stickied": false, "created": 1491969973.0, "created_utc": 1491941173.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 35}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg70sx1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "millijuna", "parent_id": "t1_dg608we", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "I don't know if it was actually 5 to 10 seconds, it might have just been 1 or 2, but still enough time staring at a black screen to hurt the viewing experience. Especially compared to how quickly the digital cable systems can swap channels.\n\nYeah, the viewing experience is pretty much instantaneous. I wonder if the unicast server runs a much higher iframe rate (say even every 3rd frame or something) then waiting for the multicast stream to start successfully decoding, then sync the two streams and drop the unicast. The cutover from the unicast to multicast was seamless as well.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know if it was actually 5 to 10 seconds, it might have just been 1 or 2, but still enough time staring at a black screen to hurt the viewing experience. Especially compared to how quickly the digital cable systems can swap channels.&lt;/p&gt;\n\n&lt;p&gt;Yeah, the viewing experience is pretty much instantaneous. I wonder if the unicast server runs a much higher iframe rate (say even every 3rd frame or something) then waiting for the multicast stream to start successfully decoding, then sync the two streams and drop the unicast. The cutover from the unicast to multicast was seamless as well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg70sx1", "score_hidden": false, "stickied": false, "created": 1492080263.0, "created_utc": 1492051463.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg608we", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg5z1ti", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; I can only report what I saw the system doing\n\nEven better! Thank you for elaborating.\n\n5-10 seconds of silence before the multicast data arrives feels like a really long time. Interesting.\n\nIs the user experience instant when changing channels with this scheme? If so, the unicast stream must be solving the iframe problem too.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I can only report what I saw the system doing&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Even better! Thank you for elaborating.&lt;/p&gt;\n\n&lt;p&gt;5-10 seconds of silence before the multicast data arrives feels like a really long time. Interesting.&lt;/p&gt;\n\n&lt;p&gt;Is the user experience instant when changing channels with this scheme? If so, the unicast stream must be solving the iframe problem too.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg608we", "score_hidden": false, "stickied": false, "created": 1492039165.0, "created_utc": 1492010365.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5z1ti", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "millijuna", "parent_id": "t1_dg5q2vk", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; That's really interesting. Can you elaborate?\n\nI can only report what I saw the system doing when I setup my own linux router and an IGMP proxy, I don't know the official technical details.\n\nFrom my observations it was exactly as I described. I would change a channel on the STB, and it would immediately start hauling down a udp unicast stream, and also fire off an IGMP request. After a few seconds (sometimes 5 or 10), the multicast packets would start arriving. After a second or 2, the unicast stream would stop, and the system would stick on the multicast stream. I presume the multicast stream is slightly ahead of the unicast stream, and it just buffers the difference.\n\nIf I broke the IGMP routing/proxying, I could change channels and get about 30 seconds of TV before it would cut out.\n\nWhen they first deployed, they were running pure multicast, and one of the complaints was that it took a second or two to change channels.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;That&amp;#39;s really interesting. Can you elaborate?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I can only report what I saw the system doing when I setup my own linux router and an IGMP proxy, I don&amp;#39;t know the official technical details.&lt;/p&gt;\n\n&lt;p&gt;From my observations it was exactly as I described. I would change a channel on the STB, and it would immediately start hauling down a udp unicast stream, and also fire off an IGMP request. After a few seconds (sometimes 5 or 10), the multicast packets would start arriving. After a second or 2, the unicast stream would stop, and the system would stick on the multicast stream. I presume the multicast stream is slightly ahead of the unicast stream, and it just buffers the difference.&lt;/p&gt;\n\n&lt;p&gt;If I broke the IGMP routing/proxying, I could change channels and get about 30 seconds of TV before it would cut out.&lt;/p&gt;\n\n&lt;p&gt;When they first deployed, they were running pure multicast, and one of the complaints was that it took a second or two to change channels.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5z1ti", "score_hidden": false, "stickied": false, "created": 1492037822.0, "created_utc": 1492009022.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5q2vk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg5hiny", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; The box brings up a unicast stream initially\n\nThat's really interesting. Can you elaborate?\n\nIt seems to me that worst-case scenario for first packet latency in an SSM situation would be only slightly worse. Rather than hitting data plane only in intermediate transit routers, the PIM join would have to flow through the PIM process on each transit router.\n\nStill, what are we talking about here? I'd expect the PIM operation to be &lt; 1ms worse per hop than unicast would be.\n\nThe iframe interval (few seconds?) is an eternity by comparison.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;The box brings up a unicast stream initially&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s really interesting. Can you elaborate?&lt;/p&gt;\n\n&lt;p&gt;It seems to me that worst-case scenario for first packet latency in an SSM situation would be only slightly worse. Rather than hitting data plane only in intermediate transit routers, the PIM join would have to flow through the PIM process on each transit router.&lt;/p&gt;\n\n&lt;p&gt;Still, what are we talking about here? I&amp;#39;d expect the PIM operation to be &amp;lt; 1ms worse per hop than unicast would be.&lt;/p&gt;\n\n&lt;p&gt;The iframe interval (few seconds?) is an eternity by comparison.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5q2vk", "score_hidden": false, "stickied": false, "created": 1492023800.0, "created_utc": 1491995000.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5hiny", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "millijuna", "parent_id": "t1_dg59che", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "&gt; Definitely #4. All major financial institutions run multicast for market data. And they tend to hire network engineers who are very knowledgeable about multicast.\n&gt; \n\nSo do broadcast networks. Our local IPTV provider uses multicast to deliver their content to the STBs. The box brings up a unicast stream initially (to make channel changes instant), as well as fires off the appropriate IGMP queries. Once the multicast stream of the broadcast starts hitting the box, it swaps over to the multicast stream, and drops the unicast.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Definitely #4. All major financial institutions run multicast for market data. And they tend to hire network engineers who are very knowledgeable about multicast.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So do broadcast networks. Our local IPTV provider uses multicast to deliver their content to the STBs. The box brings up a unicast stream initially (to make channel changes instant), as well as fires off the appropriate IGMP queries. Once the multicast stream of the broadcast starts hitting the box, it swaps over to the multicast stream, and drops the unicast.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5hiny", "score_hidden": false, "stickied": false, "created": 1492001208.0, "created_utc": 1491972408.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg59che", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "fookineh", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Definitely #4. All major financial institutions run multicast for market data. And they tend to hire network engineers who are very knowledgeable about multicast.\n\nFor everyone else, the use cases are limited and the talent is scarce.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Definitely #4. All major financial institutions run multicast for market data. And they tend to hire network engineers who are very knowledgeable about multicast.&lt;/p&gt;\n\n&lt;p&gt;For everyone else, the use cases are limited and the talent is scarce.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg59che", "score_hidden": false, "stickied": false, "created": 1491989125.0, "created_utc": 1491960325.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg5wg3g", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kWV0XhdO", "parent_id": "t1_dg5uvza", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "There's a related issue: VXLAN necessarily kills interest-based multicast suppression (IGMP snooping). If you're multicasting inside a VXLAN, those frames will be delivered to every participating hypervisor regardless of whether there are interested applications running there.\n\nYou could do some complicated application/vlan/vni mapping, but it'll never scale to general use.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s a related issue: VXLAN necessarily kills interest-based multicast suppression (IGMP snooping). If you&amp;#39;re multicasting inside a VXLAN, those frames will be delivered to every participating hypervisor regardless of whether there are interested applications running there.&lt;/p&gt;\n\n&lt;p&gt;You could do some complicated application/vlan/vni mapping, but it&amp;#39;ll never scale to general use.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5wg3g", "score_hidden": false, "stickied": false, "created": 1492034754.0, "created_utc": 1492005954.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5uvza", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "microseconds", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "There's nothing inherently bad about multicast. Financial markets use it every single day for distribution of market data. Without multicast, securities markets would not function as you know it.\n\nThat said, in my mind, it's more about how multicast is *actually used* that's the problem.\n\nHere's my example to back that last statement up - the multicast\nbased VXLAN control plane. It's a terrible idea for anything at scale.  Why do I say this? Imagine you're building a data center that requires integration of bare metal with virtual workloads within the same VNI's.  So, you've got a VTEP on all of your hypervisors, and VTEPs on some or potentially all of your ToRs for this VNI. Each of these devices now much join a multicast group to facilitate MAC learning within the VNI. Host1 learned a new MAC from a new VM in VNI 101? Send a message to a multicast group, and *hope* everyone in the group heard the message (congestion, sunspots, whatever reason) and processed it.  This is why I refer to the multicast-based VXLAN control plane as \"Spray &amp; Pray VXLAN\".\n\nSo, maybe it's fine to configure a few dozen hosts &amp; ToRs for a handful of VNIs. What about when it's hundreds, or even thousands of hosts &amp; ToRs, and hundreds or thousands of VNIs? You have to map those VNIs to multicast groups and make sure the mappings are consistent across the data center. What are the odds that there will be some screw ups in that, and they'll be awfully hard to find &amp; diagnose? Pretty high, I'd say.  This is why EVPN is being embraced as a control plane mechanism for VXLAN.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s nothing inherently bad about multicast. Financial markets use it every single day for distribution of market data. Without multicast, securities markets would not function as you know it.&lt;/p&gt;\n\n&lt;p&gt;That said, in my mind, it&amp;#39;s more about how multicast is &lt;em&gt;actually used&lt;/em&gt; that&amp;#39;s the problem.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s my example to back that last statement up - the multicast\nbased VXLAN control plane. It&amp;#39;s a terrible idea for anything at scale.  Why do I say this? Imagine you&amp;#39;re building a data center that requires integration of bare metal with virtual workloads within the same VNI&amp;#39;s.  So, you&amp;#39;ve got a VTEP on all of your hypervisors, and VTEPs on some or potentially all of your ToRs for this VNI. Each of these devices now much join a multicast group to facilitate MAC learning within the VNI. Host1 learned a new MAC from a new VM in VNI 101? Send a message to a multicast group, and &lt;em&gt;hope&lt;/em&gt; everyone in the group heard the message (congestion, sunspots, whatever reason) and processed it.  This is why I refer to the multicast-based VXLAN control plane as &amp;quot;Spray &amp;amp; Pray VXLAN&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;So, maybe it&amp;#39;s fine to configure a few dozen hosts &amp;amp; ToRs for a handful of VNIs. What about when it&amp;#39;s hundreds, or even thousands of hosts &amp;amp; ToRs, and hundreds or thousands of VNIs? You have to map those VNIs to multicast groups and make sure the mappings are consistent across the data center. What are the odds that there will be some screw ups in that, and they&amp;#39;ll be awfully hard to find &amp;amp; diagnose? Pretty high, I&amp;#39;d say.  This is why EVPN is being embraced as a control plane mechanism for VXLAN.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5uvza", "score_hidden": false, "stickied": false, "created": 1492032688.0, "created_utc": 1492003888.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg5xat5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Bluecobra", "parent_id": "t1_dg53uap", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Is that some kind of new bootcamp by Global Knowledge? :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is that some kind of new bootcamp by Global Knowledge? :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5xat5", "score_hidden": false, "stickied": false, "created": 1492035800.0, "created_utc": 1492007000.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53uap", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "dark_15", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "High Frequency Training lives and dies by Multicast feeds. I believe /u/kWV0XhdO has hit all the other reasons I would add.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;High Frequency Training lives and dies by Multicast feeds. I believe &lt;a href=\"/u/kWV0XhdO\"&gt;/u/kWV0XhdO&lt;/a&gt; has hit all the other reasons I would add.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg53uap", "score_hidden": false, "stickied": false, "created": 1491981852.0, "created_utc": 1491953052.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg7596j", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "3DPhreak", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "Multicast is just one tool in the toolbox. It has its purpose for specific applications. I've designed and deployed it for things like town hall broadcasts and music on hold. It works great. Its just another technology you need to fully understand prior to deployment. Its scary to a lot of people because most everything else we do utilizes unicast as its foundation. It's not something you can just jump into. You truly need to spend time with it in a lab and a good book. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Multicast is just one tool in the toolbox. It has its purpose for specific applications. I&amp;#39;ve designed and deployed it for things like town hall broadcasts and music on hold. It works great. Its just another technology you need to fully understand prior to deployment. Its scary to a lot of people because most everything else we do utilizes unicast as its foundation. It&amp;#39;s not something you can just jump into. You truly need to spend time with it in a lab and a good book. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg7596j", "score_hidden": false, "stickied": false, "created": 1492086676.0, "created_utc": 1492057876.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg50f2s", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cdnpaul", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "It's a touchy topic on here, but if you have strong requirements for Multicast you should look at Avaya Networking* gear.\n\nTheir VSP and ERS switches support 802.1AQ Shortest-Path-Bridging(SPB).  The beauty with SPB is that it natively routes Multicast traffic without the need for PIM, OSPF to build IMGP tables, no need to config RPs, Bootstrap routers, IMGP ranges.   \n\n\n*soon to be Extreme Networks.   ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a touchy topic on here, but if you have strong requirements for Multicast you should look at Avaya Networking* gear.&lt;/p&gt;\n\n&lt;p&gt;Their VSP and ERS switches support 802.1AQ Shortest-Path-Bridging(SPB).  The beauty with SPB is that it natively routes Multicast traffic without the need for PIM, OSPF to build IMGP tables, no need to config RPs, Bootstrap routers, IMGP ranges.   &lt;/p&gt;\n\n&lt;p&gt;*soon to be Extreme Networks.   &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg50f2s", "score_hidden": false, "stickied": false, "created": 1491977369.0, "created_utc": 1491948569.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg5gyy7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tolegittoshit2", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "i need to understand multicast/pim/igmp alot better for my jobs camera network that spans across multiple networks/sites.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i need to understand multicast/pim/igmp alot better for my jobs camera network that spans across multiple networks/sites.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5gyy7", "score_hidden": false, "stickied": false, "created": 1492000223.0, "created_utc": 1491971423.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qkaf", "removal_reason": null, "link_id": "t3_64t8nn", "likes": null, "replies": "", "user_reports": [], "id": "dg5aan6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "s0nsh1ne_alVarEZ", "parent_id": "t3_64t8nn", "subreddit_name_prefixed": "r/networking", "controversiality": 0, "body": "There tend to be a lot of designs that can map well to unicast routing. Competent engineers can come up with lots of ways to hit varying requirement for performance, redundancy, simplicity of operation, etc.   This can yield different takes on where- and how- to L2 and L3, placement of LB/FW resources, means of security and segmentation, approaches to scalability and so forth.  Sure, some designs are definitely better than others but a wide variety of things can be thrown at the wall and have something stick.\n\nWith multicast, though?  Nope.  Lots and lots of perfectly valid ways of building networks start to fail in fantastic ways.  Perfectly acceptable (if sloppy) routing breaks RPF.  Certain availability mechanisms don't work with certain multicast protocols.  And what about failure modes?  How about mapping multicast on top of overlay X (..where X is IPSEC, MPLS, VXLAN or what have you)?  It just gets nastier.  \n\nAnd then ponder the issues that start to happen at scale.  Pursuing the least common denominator in terms of feature simplicity means lots of state being maintained on lots of boxes and sketchy failover.  Implementing fancier features means that issues of consistency and uniformity of capability breaks.  \n\nAnd when it breaks?  Enjoy those troubleshooting tools - because, again, it's going to be primitive when compared to their unicast counterparts.  This is both the cause of- and the effect of- the other pain-point, which is that rank-and-file engineers tend not to understand it very well.  \n\nOh - and don't even -think- about doing anything serious with it on wireless.  \n\nMulticast absolutely has its place and is absolutely crucial to some environments and businesses.  When it's properly designed and implemented on competent hardware and software is works fine.  It's also not terrible in smaller / simpler environments.  At the end of the day, though, it's always been something of an afterthought in overall design and, as such, seems to have a habit of going from simple and convenient to hateful and soul-sucking really quickly. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There tend to be a lot of designs that can map well to unicast routing. Competent engineers can come up with lots of ways to hit varying requirement for performance, redundancy, simplicity of operation, etc.   This can yield different takes on where- and how- to L2 and L3, placement of LB/FW resources, means of security and segmentation, approaches to scalability and so forth.  Sure, some designs are definitely better than others but a wide variety of things can be thrown at the wall and have something stick.&lt;/p&gt;\n\n&lt;p&gt;With multicast, though?  Nope.  Lots and lots of perfectly valid ways of building networks start to fail in fantastic ways.  Perfectly acceptable (if sloppy) routing breaks RPF.  Certain availability mechanisms don&amp;#39;t work with certain multicast protocols.  And what about failure modes?  How about mapping multicast on top of overlay X (..where X is IPSEC, MPLS, VXLAN or what have you)?  It just gets nastier.  &lt;/p&gt;\n\n&lt;p&gt;And then ponder the issues that start to happen at scale.  Pursuing the least common denominator in terms of feature simplicity means lots of state being maintained on lots of boxes and sketchy failover.  Implementing fancier features means that issues of consistency and uniformity of capability breaks.  &lt;/p&gt;\n\n&lt;p&gt;And when it breaks?  Enjoy those troubleshooting tools - because, again, it&amp;#39;s going to be primitive when compared to their unicast counterparts.  This is both the cause of- and the effect of- the other pain-point, which is that rank-and-file engineers tend not to understand it very well.  &lt;/p&gt;\n\n&lt;p&gt;Oh - and don&amp;#39;t even -think- about doing anything serious with it on wireless.  &lt;/p&gt;\n\n&lt;p&gt;Multicast absolutely has its place and is absolutely crucial to some environments and businesses.  When it&amp;#39;s properly designed and implemented on competent hardware and software is works fine.  It&amp;#39;s also not terrible in smaller / simpler environments.  At the end of the day, though, it&amp;#39;s always been something of an afterthought in overall design and, as such, seems to have a habit of going from simple and convenient to hateful and soul-sucking really quickly. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "networking", "name": "t1_dg5aan6", "score_hidden": false, "stickied": false, "created": 1491990363.0, "created_utc": 1491961563.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]