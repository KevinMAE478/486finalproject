[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know from general (non-game) development that there is a lot of benefit from doing certain things right from the start of a project, where they take a relatively small amount of effort as opposed to a huge effort in the future.&lt;/p&gt;\n\n&lt;p&gt;Internationalisation and building for all targets are two classic examples.  What else would you recommend from your experience with game development?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I know from general (non-game) development that there is a lot of benefit from doing certain things right from the start of a project, where they take a relatively small amount of effort as opposed to a huge effort in the future.\n\nInternationalisation and building for all targets are two classic examples.  What else would you recommend from your experience with game development?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64x8rt", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 37, "report_reasons": null, "author": "vampatori", "saved": false, "mod_reports": [], "name": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/64x8rt/what_things_are_beneficial_to_implement_right/", "num_reports": null, "locked": false, "stickied": false, "created": 1492020449.0, "url": "https://www.reddit.com/r/gamedev/comments/64x8rt/what_things_are_beneficial_to_implement_right/", "author_flair_text": null, "quarantine": false, "title": "What things are beneficial to implement right from the start of a project, to save headaches later in development?", "created_utc": 1491991649.0, "distinguished": null, "media": null, "upvote_ratio": 0.9, "num_comments": 60, "visited": false, "subreddit_type": "public", "ups": 37}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg5pjmf", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "DeadlyGoatGames", "parent_id": "t1_dg5p8ff", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "All great answers!  I'd even say just the process of having your game state in it's own struct/class from the beginning is even more important than the saving and loading part yet.  If you're lazy like me, that is.\n\nOn my last small game I did it that way and then added save/load much later (lazy again).  And I didn't have any challenges since everything from the game screens was using game state.  All I had to do was worry about when to save/load.  It was great.\n\nTo try to add to the conversation though, maybe a decent logger / exception handling method right away?  Also, implementing game state management with something like a finite state machine could save you a hassle if you haven't done that before.  Anything to help you iterate quickly is key.  If you're testing level 5, you want a way to jump straight to level 5 every time you start up the game.  Either by starting the state as level 5, or making a level select, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;All great answers!  I&amp;#39;d even say just the process of having your game state in it&amp;#39;s own struct/class from the beginning is even more important than the saving and loading part yet.  If you&amp;#39;re lazy like me, that is.&lt;/p&gt;\n\n&lt;p&gt;On my last small game I did it that way and then added save/load much later (lazy again).  And I didn&amp;#39;t have any challenges since everything from the game screens was using game state.  All I had to do was worry about when to save/load.  It was great.&lt;/p&gt;\n\n&lt;p&gt;To try to add to the conversation though, maybe a decent logger / exception handling method right away?  Also, implementing game state management with something like a finite state machine could save you a hassle if you haven&amp;#39;t done that before.  Anything to help you iterate quickly is key.  If you&amp;#39;re testing level 5, you want a way to jump straight to level 5 every time you start up the game.  Either by starting the state as level 5, or making a level select, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5pjmf", "score_hidden": false, "stickied": false, "created": 1492022334.0, "created_utc": 1491993534.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7wvvj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg5p8ff", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm having to leave out multiplayer as this is my first proper game (4X strategy) and I only have a limited window of opportunity to develop the game full-time.  It's one of those things that I would love to have, but realistically both the development and support is just too much to deal with.  If I ever do a sequel, I'll build it with multiplayer in-mind.\n\nSave/load state has been one of my first goals - mainly for use during development/testing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m having to leave out multiplayer as this is my first proper game (4X strategy) and I only have a limited window of opportunity to develop the game full-time.  It&amp;#39;s one of those things that I would love to have, but realistically both the development and support is just too much to deal with.  If I ever do a sequel, I&amp;#39;ll build it with multiplayer in-mind.&lt;/p&gt;\n\n&lt;p&gt;Save/load state has been one of my first goals - mainly for use during development/testing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7wvvj", "score_hidden": false, "stickied": false, "created": 1492134060.0, "created_utc": 1492105260.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7etjf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "bubuopapa", "parent_id": "t1_dg7dilp", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "But that doesnt change the fact that if a mechanic is not core, then it might be not perfect and so on, even if it core - game still might be terrible at that, like most ubisoft games and so on.\n\nSo, if multiplayer is not core mechanic, then it might be delayed and implemented only partialy, or like in NMS.\n\nI cant stand when people make shitty games and make shitty decisions about games, but that is life - game dev is business, business = tight schedule, tight schedule = cut features and bugs and so on. I doubt there was a single big game released during last 20 years were developers had enough time to implement everything they wanted the way they wanted, and even then the game might just break, like console games (witcher 3 on all consoles has many scenes where fps just drops below 1, literally slideshow...).\n\nAlso, best way to develop AA games is to try to make fully independent game parts (online, sound, graphics, physics and so on) and then join them, but that doesnt work for AAA games, where every bit of performance matters, so every part of the game is very dependent on other parts, so there are a,b,c,d,e,f,g,h,i,j,k,l,m parts of the game, and if you will start working on a, then the rest is delayed automatically. Of course, developers always try to make game development as much parallel process as they can, but at some point everything must be dealt with 1v1.", "edited": 1492082510.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But that doesnt change the fact that if a mechanic is not core, then it might be not perfect and so on, even if it core - game still might be terrible at that, like most ubisoft games and so on.&lt;/p&gt;\n\n&lt;p&gt;So, if multiplayer is not core mechanic, then it might be delayed and implemented only partialy, or like in NMS.&lt;/p&gt;\n\n&lt;p&gt;I cant stand when people make shitty games and make shitty decisions about games, but that is life - game dev is business, business = tight schedule, tight schedule = cut features and bugs and so on. I doubt there was a single big game released during last 20 years were developers had enough time to implement everything they wanted the way they wanted, and even then the game might just break, like console games (witcher 3 on all consoles has many scenes where fps just drops below 1, literally slideshow...).&lt;/p&gt;\n\n&lt;p&gt;Also, best way to develop AA games is to try to make fully independent game parts (online, sound, graphics, physics and so on) and then join them, but that doesnt work for AAA games, where every bit of performance matters, so every part of the game is very dependent on other parts, so there are a,b,c,d,e,f,g,h,i,j,k,l,m parts of the game, and if you will start working on a, then the rest is delayed automatically. Of course, developers always try to make game development as much parallel process as they can, but at some point everything must be dealt with 1v1.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7etjf", "score_hidden": false, "stickied": false, "created": 1492110905.0, "created_utc": 1492082105.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7dilp", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "PickledPokute", "parent_id": "t1_dg7d8cp", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "In dota2 or pure player vs player games It's of course obvious.\n\nGames where players compete directly against other players are clear. Games where players compete towards a goal (or non-goal) with other players present, there is a lot less emphasis on needing a multiplayer from the start.\n\nGood examples of latter are racing games (you can perfectly race against lap times, ghosts and AI), sandbox and co-op games. Many of these have the danger of postponing multiplayer far too long.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In dota2 or pure player vs player games It&amp;#39;s of course obvious.&lt;/p&gt;\n\n&lt;p&gt;Games where players compete directly against other players are clear. Games where players compete towards a goal (or non-goal) with other players present, there is a lot less emphasis on needing a multiplayer from the start.&lt;/p&gt;\n\n&lt;p&gt;Good examples of latter are racing games (you can perfectly race against lap times, ghosts and AI), sandbox and co-op games. Many of these have the danger of postponing multiplayer far too long.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7dilp", "score_hidden": false, "stickied": false, "created": 1492107323.0, "created_utc": 1492078523.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7d8cp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "bubuopapa", "parent_id": "t1_dg7cg7h", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Well, it all depends on what you want.\n\nIf you are making full multiplayer game like dota2, then yes, multiplayer is core mechanic and cannot be delayed, because thats the whole point of the game, you dont start developing game by implementing some particle effects. Every game must be developed by implementing core mechanics properly first.\n\nBut if your game is mostly offline like with a few online features, then there is no point in implementing online features first.\n\nEvery wrong implemented feature might break other stuff if it needs complete rewrite, you can see this kind of stuff in operating systems, where some bugs and bad behaviour just goes on for years without fixing.\n\nModularity, concurrency and coding conventions are not part of the game, but part of code structure/programming language. They are used as much as needed to get good performance and easy moding.\n\nIt all depends on what you want and what type of game you are making - wow, tetris, rally, cs.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, it all depends on what you want.&lt;/p&gt;\n\n&lt;p&gt;If you are making full multiplayer game like dota2, then yes, multiplayer is core mechanic and cannot be delayed, because thats the whole point of the game, you dont start developing game by implementing some particle effects. Every game must be developed by implementing core mechanics properly first.&lt;/p&gt;\n\n&lt;p&gt;But if your game is mostly offline like with a few online features, then there is no point in implementing online features first.&lt;/p&gt;\n\n&lt;p&gt;Every wrong implemented feature might break other stuff if it needs complete rewrite, you can see this kind of stuff in operating systems, where some bugs and bad behaviour just goes on for years without fixing.&lt;/p&gt;\n\n&lt;p&gt;Modularity, concurrency and coding conventions are not part of the game, but part of code structure/programming language. They are used as much as needed to get good performance and easy moding.&lt;/p&gt;\n\n&lt;p&gt;It all depends on what you want and what type of game you are making - wow, tetris, rally, cs.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7d8cp", "score_hidden": false, "stickied": false, "created": 1492106479.0, "created_utc": 1492077679.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7cg7h", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "PickledPokute", "parent_id": "t1_dg7bwhz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "That was the first comment to this thread. I felt like I should not respond with a novel so others would not be intimidated to post their comments. :-) An exhaustive list is also kind of a threadkiller.\n\nIt's good do have everything right from the beginning, but there definitely are aspects that are in no way required to get the game going. A map editor is a good example - you probably should have a couple of hardcoded maps to test if the game is any fun first. I18n and l10n are something that you can finish a game without, but if you want language support, you'll have to tackle it later and it becomes a slight inconvenience. Naming conventions are similar - not having them raises the risk having tricky to debug issues and lost work.\n\nOn the other hand, I believe a game dev SHOULD take into account network code right after the first proof-of-concept at the latest (after which the data structures would probably be rewritten anyway). This is especially true if there are multiple people working on the project. Adding multiplayer to an existing game is a long process with possibility of a lot of errors if the underlying game code is not taking it into account. The game logic might be completely broken for weeks or longer. This means either that the game engine and logic is frozen for multiple crucial months or that the multiplayer is developed on a different branch also for multiple months. Another possibility is to have two different game logic codes - one for single player and another for multiplayer, but this will still leave the multiplayer development as a second class citizen since all content and testing is done on single player game that just works. Both can end up being very demotivating.\n\nSame issue is raised with game state saves and loads, but usually the code can be merged more easily, more often and should not break existing gameplay (as in playing without saving and loading).\n\nScripting has similar issues that while scripting support is added, doing hardcoded content is going to result in duplicate written code. This too can be alleviated by doing incremental merges and have content creators gradually move into scripting.\n\nMultiplayer has the problem that you can't really do it gradually, at least the initial and most important parts: the core game logic.\n\nModularity, concurrency and coding conventions are a lot easier since they usually are not core gameplay elements. You can have spaghetti code below the hood, but if it works and the game can be completed with some sanity remaining then great. You can not have a multiplayer that crashes or doesn't provide an even playing field.", "edited": 1492075899.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That was the first comment to this thread. I felt like I should not respond with a novel so others would not be intimidated to post their comments. :-) An exhaustive list is also kind of a threadkiller.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s good do have everything right from the beginning, but there definitely are aspects that are in no way required to get the game going. A map editor is a good example - you probably should have a couple of hardcoded maps to test if the game is any fun first. I18n and l10n are something that you can finish a game without, but if you want language support, you&amp;#39;ll have to tackle it later and it becomes a slight inconvenience. Naming conventions are similar - not having them raises the risk having tricky to debug issues and lost work.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, I believe a game dev SHOULD take into account network code right after the first proof-of-concept at the latest (after which the data structures would probably be rewritten anyway). This is especially true if there are multiple people working on the project. Adding multiplayer to an existing game is a long process with possibility of a lot of errors if the underlying game code is not taking it into account. The game logic might be completely broken for weeks or longer. This means either that the game engine and logic is frozen for multiple crucial months or that the multiplayer is developed on a different branch also for multiple months. Another possibility is to have two different game logic codes - one for single player and another for multiplayer, but this will still leave the multiplayer development as a second class citizen since all content and testing is done on single player game that just works. Both can end up being very demotivating.&lt;/p&gt;\n\n&lt;p&gt;Same issue is raised with game state saves and loads, but usually the code can be merged more easily, more often and should not break existing gameplay (as in playing without saving and loading).&lt;/p&gt;\n\n&lt;p&gt;Scripting has similar issues that while scripting support is added, doing hardcoded content is going to result in duplicate written code. This too can be alleviated by doing incremental merges and have content creators gradually move into scripting.&lt;/p&gt;\n\n&lt;p&gt;Multiplayer has the problem that you can&amp;#39;t really do it gradually, at least the initial and most important parts: the core game logic.&lt;/p&gt;\n\n&lt;p&gt;Modularity, concurrency and coding conventions are a lot easier since they usually are not core gameplay elements. You can have spaghetti code below the hood, but if it works and the game can be completed with some sanity remaining then great. You can not have a multiplayer that crashes or doesn&amp;#39;t provide an even playing field.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7cg7h", "score_hidden": false, "stickied": false, "created": 1492104086.0, "created_utc": 1492075286.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7bwhz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "bubuopapa", "parent_id": "t1_dg5p8ff", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "So, basically do everything right from beginning, or as much as you can. Or just turn into big game dev company and do whatever you want.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So, basically do everything right from beginning, or as much as you can. Or just turn into big game dev company and do whatever you want.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7bwhz", "score_hidden": false, "stickied": false, "created": 1492102396.0, "created_utc": 1492073596.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5p8ff", "gilded": 0, "archived": false, "score": 37, "report_reasons": null, "author": "PickledPokute", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Multiplayer over the network.\n\nComplete game state save &amp; load.\n\nScripting system.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Multiplayer over the network.&lt;/p&gt;\n\n&lt;p&gt;Complete game state save &amp;amp; load.&lt;/p&gt;\n\n&lt;p&gt;Scripting system.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5p8ff", "score_hidden": false, "stickied": false, "created": 1492021417.0, "created_utc": 1491992617.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 37}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6cfpa", "gilded": 0, "archived": false, "score": 15, "report_reasons": null, "author": "Terazilla", "parent_id": "t1_dg65uki", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "And if you ever find yourself tagging a filename with _new or _final, my god man, stop yourself.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And if you ever find yourself tagging a filename with _new or _final, my god man, stop yourself.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6cfpa", "score_hidden": false, "stickied": false, "created": 1492051836.0, "created_utc": 1492023036.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 15}}], "after": null, "before": null}}, "user_reports": [], "id": "dg65uki", "gilded": 0, "archived": false, "score": 26, "report_reasons": null, "author": "Maxx0rz", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Pick an asset naming convention and fucking STICK WITH IT.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pick an asset naming convention and fucking STICK WITH IT.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg65uki", "score_hidden": false, "stickied": false, "created": 1492045149.0, "created_utc": 1492016349.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 26}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg5vxcz", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "xx00xx00xx", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "A flexible event system which can be used to easily fire a mixture of sound effects, particle effects, animations, flares, trails and shader effects.\n\nThe ability to call a blend of sounds and particles with one line of code is a huge time saver and really cuts down on code complexity.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A flexible event system which can be used to easily fire a mixture of sound effects, particle effects, animations, flares, trails and shader effects.&lt;/p&gt;\n\n&lt;p&gt;The ability to call a blend of sounds and particles with one line of code is a huge time saver and really cuts down on code complexity.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5vxcz", "score_hidden": false, "stickied": false, "created": 1492034085.0, "created_utc": 1492005285.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg87io2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mtosmtos2", "parent_id": "t1_dg7ulxr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Thanks. Have a good read! ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks. Have a good read! &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg87io2", "score_hidden": false, "stickied": false, "created": 1492145624.0, "created_utc": 1492116824.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7ulxr", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg5tkv4", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "You've got some great posts there.. good timing!  I'm looking through them now.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;ve got some great posts there.. good timing!  I&amp;#39;m looking through them now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7ulxr", "score_hidden": false, "stickied": false, "created": 1492131639.0, "created_utc": 1492102839.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5tkv4", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "mtosmtos2", "parent_id": "t1_dg5qffg", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "True that. At the beginning it might see as useless, but later on it will bite you. OP should see also some of my posts here about localization.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;True that. At the beginning it might see as useless, but later on it will bite you. OP should see also some of my posts here about localization.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5tkv4", "score_hidden": false, "stickied": false, "created": 1492030735.0, "created_utc": 1492001935.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7uj0y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg5qffg", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yeah, that's actually the first thing I started doing.  Within about a year of leaving University, in my first proper developer job, I created one of the early internet radio stations for another company.  The owner had some ties with Japan, and later asked for a Japanese version to be made.. a harsh lesson learnt!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, that&amp;#39;s actually the first thing I started doing.  Within about a year of leaving University, in my first proper developer job, I created one of the early internet radio stations for another company.  The owner had some ties with Japan, and later asked for a Japanese version to be made.. a harsh lesson learnt!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7uj0y", "score_hidden": false, "stickied": false, "created": 1492131552.0, "created_utc": 1492102752.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg8msoy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pdp10", "parent_id": "t1_dg5qffg", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Decide up front if you'll need Right-To-Left direction languages (Arabic, Hebrew).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Decide up front if you&amp;#39;ll need Right-To-Left direction languages (Arabic, Hebrew).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg8msoy", "score_hidden": false, "stickied": false, "created": 1492165901.0, "created_utc": 1492137101.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qffg", "gilded": 0, "archived": false, "score": 28, "report_reasons": null, "author": "MajesticTowerOfHats", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Make your text able to take localisation strings easily. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Make your text able to take localisation strings easily. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5qffg", "score_hidden": false, "stickied": false, "created": 1492024677.0, "created_utc": 1491995877.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 28}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6r1fr", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "other_other_self", "parent_id": "t1_dg6nksm", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Any time-critical, parallelizable task is a possible candidate.\n\nFor example, loading threads are nice, especially if you're streaming level data from disk during gameplay. They prevent the unnecessary hitching that you would otherwise have. Unity gets a lot of (fairly well-deserved) flak for not having thread-safe scene graph operations, meaning that you have to run Awake() and Start() in the main thread. This is why games like Firewatch, which try to use Unity to stream level data on the fly, have noticeable hitching.\n\nI bring up concurrency because I'm rewriting a single-threaded game server. It's currently on a t2.large on AWS, but it should fit comfortably inside a t2.medium when the rewrite is done. The price difference between those two server types isn't *huge*, but I feel a little uneasy about wasting cores. We can throw more computing power at the problem for now, but what if we get more traffic? It's better to have breathing room.\n\nI'm still learning about this topic, though. Maybe someone will chime in with more examples.", "edited": 1492074017.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any time-critical, parallelizable task is a possible candidate.&lt;/p&gt;\n\n&lt;p&gt;For example, loading threads are nice, especially if you&amp;#39;re streaming level data from disk during gameplay. They prevent the unnecessary hitching that you would otherwise have. Unity gets a lot of (fairly well-deserved) flak for not having thread-safe scene graph operations, meaning that you have to run Awake() and Start() in the main thread. This is why games like Firewatch, which try to use Unity to stream level data on the fly, have noticeable hitching.&lt;/p&gt;\n\n&lt;p&gt;I bring up concurrency because I&amp;#39;m rewriting a single-threaded game server. It&amp;#39;s currently on a t2.large on AWS, but it should fit comfortably inside a t2.medium when the rewrite is done. The price difference between those two server types isn&amp;#39;t &lt;em&gt;huge&lt;/em&gt;, but I feel a little uneasy about wasting cores. We can throw more computing power at the problem for now, but what if we get more traffic? It&amp;#39;s better to have breathing room.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m still learning about this topic, though. Maybe someone will chime in with more examples.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6r1fr", "score_hidden": false, "stickied": false, "created": 1492068241.0, "created_utc": 1492039441.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6nksm", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hagerty9009", "parent_id": "t1_dg60q6k", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "How can you tell you will need to support concurrency from an early point? I'm going to guess a lot of 3D graphics need it, but otherwise what are some warning signs?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How can you tell you will need to support concurrency from an early point? I&amp;#39;m going to guess a lot of 3D graphics need it, but otherwise what are some warning signs?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6nksm", "score_hidden": false, "stickied": false, "created": 1492063939.0, "created_utc": 1492035139.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg60q6k", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "other_other_self", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Concurrency. If you need multithread/multiprocess support, you need to think about it from the beginning, or you'll end up rewriting a ton of code.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Concurrency. If you need multithread/multiprocess support, you need to think about it from the beginning, or you&amp;#39;ll end up rewriting a ton of code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg60q6k", "score_hidden": false, "stickied": false, "created": 1492039690.0, "created_utc": 1492010890.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7uvjt", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg5pp2h", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yeah, SCM is \"a given\" these days surely?  I wouldn't develop anything without it.. even if you're solo doing a small project.  I'm going with BitBucket for the first time, they seem pretty good and have a free option for me to get started.\n\nI've settled on Unity for my engine, and am building for all platforms I want to target early and often.  I'm going to look at packaging an installer very soon too.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, SCM is &amp;quot;a given&amp;quot; these days surely?  I wouldn&amp;#39;t develop anything without it.. even if you&amp;#39;re solo doing a small project.  I&amp;#39;m going with BitBucket for the first time, they seem pretty good and have a free option for me to get started.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve settled on Unity for my engine, and am building for all platforms I want to target early and often.  I&amp;#39;m going to look at packaging an installer very soon too.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7uvjt", "score_hidden": false, "stickied": false, "created": 1492131920.0, "created_utc": 1492103120.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6meek", "gilded": 0, "archived": false, "score": -2, "report_reasons": null, "author": "jonpul", "parent_id": "t1_dg5pp2h", "subreddit_name_prefixed": "r/gamedev", "controversiality": 1, "body": "^^^^ Deserves about a million up votes ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt; Deserves about a million up votes &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6meek", "score_hidden": false, "stickied": false, "created": 1492062493.0, "created_utc": 1492033693.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pp2h", "gilded": 0, "archived": false, "score": 28, "report_reasons": null, "author": "joekinley", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Source Control Management and proper build tooling", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Source Control Management and proper build tooling&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5pp2h", "score_hidden": false, "stickied": false, "created": 1492022760.0, "created_utc": 1491993960.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 28}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6457i", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "muchcharles", "parent_id": "t1_dg60u26", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "If you are doing multiplayer it can also be useful to have an estimate of what the time was on the server when an event is recieved, and what it will be when the server receives events are you sending.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are doing multiplayer it can also be useful to have an estimate of what the time was on the server when an event is recieved, and what it will be when the server receives events are you sending.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6457i", "score_hidden": false, "stickied": false, "created": 1492043378.0, "created_utc": 1492014578.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7v1ha", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg60u26", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "That's a great tip.. I'm actually doing a turn-based game, but planing for having things like \"opponent animation speed\" and so forth as options right from the start will be very handy!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s a great tip.. I&amp;#39;m actually doing a turn-based game, but planing for having things like &amp;quot;opponent animation speed&amp;quot; and so forth as options right from the start will be very handy!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7v1ha", "score_hidden": false, "stickied": false, "created": 1492132095.0, "created_utc": 1492103295.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg60u26", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "patrickwonders", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Abstract out the idea of getting the current time.  And, further, distinguish between times that would be slowed down in instant-replays versus times that are objectively wall-clock time all of the time.\n\nIf you let different parts of your system fetch time themselves to measure elapsed times, you're in for a nightmare later.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Abstract out the idea of getting the current time.  And, further, distinguish between times that would be slowed down in instant-replays versus times that are objectively wall-clock time all of the time.&lt;/p&gt;\n\n&lt;p&gt;If you let different parts of your system fetch time themselves to measure elapsed times, you&amp;#39;re in for a nightmare later.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg60u26", "score_hidden": false, "stickied": false, "created": 1492039807.0, "created_utc": 1492011007.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg77gz6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mabdulra", "parent_id": "t1_dg770ds", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Sounds like you need to make the render system first, then in your battle system testbench you can include the render system as well.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like you need to make the render system first, then in your battle system testbench you can include the render system as well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg77gz6", "score_hidden": false, "stickied": false, "created": 1492090666.0, "created_utc": 1492061866.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg770ds", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "_Malta", "parent_id": "t1_dg6ilj8", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "What about communication between systems? What happens when the render system needs some value from the battle system? The render system can now no longer be run on it's own.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What about communication between systems? What happens when the render system needs some value from the battle system? The render system can now no longer be run on it&amp;#39;s own.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg770ds", "score_hidden": false, "stickied": false, "created": 1492089721.0, "created_utc": 1492060921.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6ilj8", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "mabdulra", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Break systems into components that can run independently of one another. For example, I'm making an RPG. My battle system runs completely independently of all other systems. This means I can test just the battle system by itself, without having to load everything else.\n\nFor systems that require input from other systems, make quick and dirty testbenches that can feed necessary fake input. Your goal is to test the functionality of the system by itself as independently as possible.\n\nLater you can then integrate and make sure the systems integrate properly. Being able to isolate each major system independently helped me with my games, at least.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Break systems into components that can run independently of one another. For example, I&amp;#39;m making an RPG. My battle system runs completely independently of all other systems. This means I can test just the battle system by itself, without having to load everything else.&lt;/p&gt;\n\n&lt;p&gt;For systems that require input from other systems, make quick and dirty testbenches that can feed necessary fake input. Your goal is to test the functionality of the system by itself as independently as possible.&lt;/p&gt;\n\n&lt;p&gt;Later you can then integrate and make sure the systems integrate properly. Being able to isolate each major system independently helped me with my games, at least.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6ilj8", "score_hidden": false, "stickied": false, "created": 1492058185.0, "created_utc": 1492029385.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7v8ae", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg7dgml", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "This is almost verbatim the to do list I started with.. working through them now!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is almost verbatim the to do list I started with.. working through them now!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7v8ae", "score_hidden": false, "stickied": false, "created": 1492132297.0, "created_utc": 1492103497.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7dgml", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": " - Pause system (do it now)\n - Controls for keyboard and controller (crazy right)\n - Debugger (lists fps, objects and so on)\n - Cheat console (makes it easier to test)\n - Resolution, window size, view port, camera system, full screen (all tied together)\n - Menu (just a simple menu that can easily be added to and then at the end make it feel different)\n - Menu Controls for keyboard, mouse and controller (seems like devs forget about the keyboard and controller part)\n - Save &amp; load systems for settings, save games and levels\n\nAt this point I have 8+ games so I have all this stuff memorized from having to do it for game jam after game jam. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;Pause system (do it now)&lt;/li&gt;\n&lt;li&gt;Controls for keyboard and controller (crazy right)&lt;/li&gt;\n&lt;li&gt;Debugger (lists fps, objects and so on)&lt;/li&gt;\n&lt;li&gt;Cheat console (makes it easier to test)&lt;/li&gt;\n&lt;li&gt;Resolution, window size, view port, camera system, full screen (all tied together)&lt;/li&gt;\n&lt;li&gt;Menu (just a simple menu that can easily be added to and then at the end make it feel different)&lt;/li&gt;\n&lt;li&gt;Menu Controls for keyboard, mouse and controller (seems like devs forget about the keyboard and controller part)&lt;/li&gt;\n&lt;li&gt;Save &amp;amp; load systems for settings, save games and levels&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;At this point I have 8+ games so I have all this stuff memorized from having to do it for game jam after game jam. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7dgml", "score_hidden": false, "stickied": false, "created": 1492107160.0, "created_utc": 1492078360.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6a93g", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Healthire", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Tools. Make your level editor *before* you painstakingly hand make half your levels with json and pngs, not after.", "edited": 1492021144.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tools. Make your level editor &lt;em&gt;before&lt;/em&gt; you painstakingly hand make half your levels with json and pngs, not after.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6a93g", "score_hidden": false, "stickied": false, "created": 1492049603.0, "created_utc": 1492020803.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7cj2f", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "PickledPokute", "parent_id": "t1_dg74qmi", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Very good and important point! Gameplay is king! Figure out what should be fun in you game and ~~implement~~ **fake** it! If it **feels** like it should, then rewrite with proper design.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very good and important point! Gameplay is king! Figure out what should be fun in you game and &lt;del&gt;implement&lt;/del&gt; &lt;strong&gt;fake&lt;/strong&gt; it! If it &lt;strong&gt;feels&lt;/strong&gt; like it should, then rewrite with proper design.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7cj2f", "score_hidden": false, "stickied": false, "created": 1492104331.0, "created_utc": 1492075531.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg74qmi", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "KelvinShadewing", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Make a playable prototype as fast as you can. Doesn't matter if it's just a ship that moves left and right when you hit the arrow keys. The longer your game isn't interactive in some way, the greater your chance of getting stuck in the planning phase.\n\nI should also mention, don't write the story before you've designed mechanics if you plan to make something other than an RPG. Story first can restrict what the player can do in ways that doesn't make sense to them. Come up with mechanics first, then see what kind of story you can write around them.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Make a playable prototype as fast as you can. Doesn&amp;#39;t matter if it&amp;#39;s just a ship that moves left and right when you hit the arrow keys. The longer your game isn&amp;#39;t interactive in some way, the greater your chance of getting stuck in the planning phase.&lt;/p&gt;\n\n&lt;p&gt;I should also mention, don&amp;#39;t write the story before you&amp;#39;ve designed mechanics if you plan to make something other than an RPG. Story first can restrict what the player can do in ways that doesn&amp;#39;t make sense to them. Come up with mechanics first, then see what kind of story you can write around them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg74qmi", "score_hidden": false, "stickied": false, "created": 1492085859.0, "created_utc": 1492057059.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6mli8", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "jonpul", "parent_id": "t1_dg6670p", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I've worked on large projects and on one person games. Even on my one-man projects appropriate docs are super important. \nWhy are things the way they are? What tradeoffs did you evaluate and why did you choose what you chose? What corners did you knowingly cut for the sake of expediency? What did you change as a result of play testing? \n\nThose are just a few things that I like to make notes concerning. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve worked on large projects and on one person games. Even on my one-man projects appropriate docs are super important. \nWhy are things the way they are? What tradeoffs did you evaluate and why did you choose what you chose? What corners did you knowingly cut for the sake of expediency? What did you change as a result of play testing? &lt;/p&gt;\n\n&lt;p&gt;Those are just a few things that I like to make notes concerning. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6mli8", "score_hidden": false, "stickied": false, "created": 1492062729.0, "created_utc": 1492033929.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6670p", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "mduffor", "parent_id": "t1_dg64ejh", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Documentation may be more helpful for larger teams, but even lone-wolf coders need to worry about Unit Testing, Coding and Naming Standards, and Directory structure.  I've been coding in the game and movie industries for 20+ years now, and over time I've learned how important these points are.  Otherwise your code devolved into an unsustainable mess and will have a hard time making it to a stable, shippable product.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Documentation may be more helpful for larger teams, but even lone-wolf coders need to worry about Unit Testing, Coding and Naming Standards, and Directory structure.  I&amp;#39;ve been coding in the game and movie industries for 20+ years now, and over time I&amp;#39;ve learned how important these points are.  Otherwise your code devolved into an unsustainable mess and will have a hard time making it to a stable, shippable product.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6670p", "score_hidden": false, "stickied": false, "created": 1492045501.0, "created_utc": 1492016701.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6bkig", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ncgreco1440", "parent_id": "t1_dg64ejh", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "There are best practices when and when not to write unit tests. If you are writing a unit test for everything and going super anal then you are going about it the wrong way. Good TDD evaluates the complexity of the code against the time needed to write tests for it, however because the practice is so subjective larger companies will just unit test everything causing massive inefficiencies. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are best practices when and when not to write unit tests. If you are writing a unit test for everything and going super anal then you are going about it the wrong way. Good TDD evaluates the complexity of the code against the time needed to write tests for it, however because the practice is so subjective larger companies will just unit test everything causing massive inefficiencies. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6bkig", "score_hidden": false, "stickied": false, "created": 1492050947.0, "created_utc": 1492022147.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg64ejh", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "dweezle1", "parent_id": "t1_dg5znrp", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Outside of large teams, most of that stuff is going to be ignored by game developers.  This isn't writing code to manage bank transactions, it's a video game.  A small scale game developer that spends time writing unit tests and documentation isn't going to get much done.  ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Outside of large teams, most of that stuff is going to be ignored by game developers.  This isn&amp;#39;t writing code to manage bank transactions, it&amp;#39;s a video game.  A small scale game developer that spends time writing unit tests and documentation isn&amp;#39;t going to get much done.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg64ejh", "score_hidden": false, "stickied": false, "created": 1492043650.0, "created_utc": 1492014850.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5znrp", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "mduffor", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Unit Testing:  If you don't get it in from the start, you'll never go back and add it.\n\nCoding Standards and Naming Conventions: Establish them from the start and stick with them.  Consistency is more important than any particular rule or style.\n\nDirectory Structure:  Figure out what you need and stick to it.  Separate your work-in-progress and concept art from your release assets.  Otherwise you'll get directories that fill up and moving files around later will likely break the code/systems that are looking for them.\n\nDocumentation practices:  Figure out how much documentation you want/need at the top of methods, and make it a practice from the start.  Like unit testing, if you don't do it from the start it is a serious pain to go back and do it later.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unit Testing:  If you don&amp;#39;t get it in from the start, you&amp;#39;ll never go back and add it.&lt;/p&gt;\n\n&lt;p&gt;Coding Standards and Naming Conventions: Establish them from the start and stick with them.  Consistency is more important than any particular rule or style.&lt;/p&gt;\n\n&lt;p&gt;Directory Structure:  Figure out what you need and stick to it.  Separate your work-in-progress and concept art from your release assets.  Otherwise you&amp;#39;ll get directories that fill up and moving files around later will likely break the code/systems that are looking for them.&lt;/p&gt;\n\n&lt;p&gt;Documentation practices:  Figure out how much documentation you want/need at the top of methods, and make it a practice from the start.  Like unit testing, if you don&amp;#39;t do it from the start it is a serious pain to go back and do it later.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5znrp", "score_hidden": false, "stickied": false, "created": 1492038513.0, "created_utc": 1492009713.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6bsl6", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ncgreco1440", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "The UI (menu system, not necessarily the HUD), build out the components and the scripts necessary to modify graphical, sound, screen, and control elements in the game. This logic is already abstract and can be reused in many games to come as boilerplate. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The UI (menu system, not necessarily the HUD), build out the components and the scripts necessary to modify graphical, sound, screen, and control elements in the game. This logic is already abstract and can be reused in many games to come as boilerplate. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6bsl6", "score_hidden": false, "stickied": false, "created": 1492051175.0, "created_utc": 1492022375.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg8na0y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pdp10", "parent_id": "t1_dg6hefj", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Skip right over OOP and go straight to Functional. ;)\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Skip right over OOP and go straight to Functional. ;)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg8na0y", "score_hidden": false, "stickied": false, "created": 1492166598.0, "created_utc": 1492137798.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6hefj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "CoronaLabs_Rob", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm pretty big on the DRY principle. Don't Repeat Yourself. So plan to be modular. I'm an old school procedural programmer so this OOP stuff is foreign to me, but I'm forcing myself to try and think more about the objects in my game rather than the work they need to do.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m pretty big on the DRY principle. Don&amp;#39;t Repeat Yourself. So plan to be modular. I&amp;#39;m an old school procedural programmer so this OOP stuff is foreign to me, but I&amp;#39;m forcing myself to try and think more about the objects in my game rather than the work they need to do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6hefj", "score_hidden": false, "stickied": false, "created": 1492056951.0, "created_utc": 1492028151.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6m7wn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "RenegadeMasquerade", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Best thing I added which took very little time was two functions draw_vec and draw_point, which I can drop anywhere to draw vectors and points in 3D. Unbelievably useful to visualise stuff that isn't apparent from a watch window. Simple but powerful debug tools save a lot of headaches!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Best thing I added which took very little time was two functions draw_vec and draw_point, which I can drop anywhere to draw vectors and points in 3D. Unbelievably useful to visualise stuff that isn&amp;#39;t apparent from a watch window. Simple but powerful debug tools save a lot of headaches!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6m7wn", "score_hidden": false, "stickied": false, "created": 1492062278.0, "created_utc": 1492033478.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7wgxa", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg6vwkw", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yep, I've started my save/load system right at the start of game initialization.. in fact when I start a new game, I'm just creating an minimal save, then the main game scene is loading that.\n\nIt's definitely one of those things that's easier to do right from the start, but I think it's going to prove to be an invaluable development tool too.. being able to save/restore states is so useful for testing/development.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, I&amp;#39;ve started my save/load system right at the start of game initialization.. in fact when I start a new game, I&amp;#39;m just creating an minimal save, then the main game scene is loading that.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s definitely one of those things that&amp;#39;s easier to do right from the start, but I think it&amp;#39;s going to prove to be an invaluable development tool too.. being able to save/restore states is so useful for testing/development.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7wgxa", "score_hidden": false, "stickied": false, "created": 1492133618.0, "created_utc": 1492104818.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg8m1s5", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "GravityAngel777", "parent_id": "t1_dg6vwkw", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I find this is incredibly easy to do when you completely separate your simulation from the rest of the engine (ex. rendering &amp; physics segment, Unity Engine, etc.)", "edited": 1492136721.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I find this is incredibly easy to do when you completely separate your simulation from the rest of the engine (ex. rendering &amp;amp; physics segment, Unity Engine, etc.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg8m1s5", "score_hidden": false, "stickied": false, "created": 1492164841.0, "created_utc": 1492136041.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6vwkw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "polisummer", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "A save system is easiest to make right from that start. A well-architectured one using serialized data, will only need to have values added to it and the game progresses. This can save weeks of backtracking and refactoring code to make sure all of the correct the data is passed correctly, and the save works in all of the places you need it to.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A save system is easiest to make right from that start. A well-architectured one using serialized data, will only need to have values added to it and the game progresses. This can save weeks of backtracking and refactoring code to make sure all of the correct the data is passed correctly, and the save works in all of the places you need it to.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6vwkw", "score_hidden": false, "stickied": false, "created": 1492074157.0, "created_utc": 1492045357.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7428g", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "taptapswitch", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Maybe i'm drifting a bit on this and having just finished my first gamedev journey it's pretty fresh on my brain. \n\n&amp;nbsp;\n\nLets say it takes 6 months to 1 year to make a game depending on how ambitious the project is. If no one knows about your game, no one plays your game. From day one get people interested in playing your game and engage them throughout the dev process. Learn about them, why they play that type of game and their expectations from that type of game and then go above their expectations. Then at the end of development you have customers and a product to deliver to them that they want and will deliver a great experience. \n\n&amp;nbsp;\n\nNow that I've made a game, for my second game, I want to make a game that sells. Which can be very different than just making a game...\n\n", "edited": 1492056230.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe i&amp;#39;m drifting a bit on this and having just finished my first gamedev journey it&amp;#39;s pretty fresh on my brain. &lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;Lets say it takes 6 months to 1 year to make a game depending on how ambitious the project is. If no one knows about your game, no one plays your game. From day one get people interested in playing your game and engage them throughout the dev process. Learn about them, why they play that type of game and their expectations from that type of game and then go above their expectations. Then at the end of development you have customers and a product to deliver to them that they want and will deliver a great experience. &lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;Now that I&amp;#39;ve made a game, for my second game, I want to make a game that sells. Which can be very different than just making a game...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7428g", "score_hidden": false, "stickied": false, "created": 1492084834.0, "created_utc": 1492056034.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg8mlmf", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "GravityAngel777", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "#Complete Separation of your Simulation from the Engine\n\nI find it is infinitely better to completely separate your simulation from the rest of the engine (ex. rendering &amp; physics segment, Unity Engine, etc.)\n\nMaking the simulation fully serializable &amp; very organized can make things as simple as calling something like World.Save(); &amp; it \"just works\" even when you do massive changes to what resides inside the world.\n\n    [Serializable]\n    class World { Region FrozenArea; Region LavaArea; }\n    class Region { Tiles[] myTiles }\n    etc.\n\n    World \n        Regions[]\n            Tiles[]\n                GameObjects[]\n                    Foliage[]\n                    HarvestableNodes[]\n                    Items[]\n\nLater add in a new type of gameobject or completely revamp your tile system, and you still only call\n\n    World.Save();\n    World.Load();\n\nAnd no need to ever mess with anything outside the simulation, when dealing with the simulation. (When using Unity, you never even need to load up the Unity Editor. Just open a few scripts in notepad. In theory.)\n\nNifty separation between the simulation &amp; the rest of the engine also means you can make transitioning to a different engine or platform a breeze. Even better if you handle your simulation in a scripting language like LUA that just \"plugs in\" to a game engine or framework. It's a breath of fresh air when your code is so compact &amp; organized that all you need to do is create code to render the simulation &amp; connect input to simulation actions, rather than taking an enormous amount of time gutting tons of code &amp; logic attached deeply in an engine.\n\nComplete serialization of the Simulation also means sending world data easily across the network &amp; syncing multiplayer states. It's not just great for a Save/Load system. When the game engine just takes this data &amp; reads it, you don't have to worry about the game engine hindering you at all. In Unity, I use the Unity Engine pretty much just to render my game &amp; handle input. The game itself is done entirely separate from Unity in C#. Just some int's &amp; strings make up the majority of the game simulation, which is itself extremely fast since it doesn't get bogged down by Unity. Even better for a multiplayer server if you don't use Unity's physics in the simulation, instead rolling your own or using very simple physics. **By doing this you don't even need Unity for the headless server.** You just use Unity for the client side.\n\nI do use Unity physics for the server, but if I wasn't so strapped for time I wouldn't. Not only does it have horrible performance for so many reasons, it means I am tied down to Unity. Fortunately my game doesn't require a headless server. (It's just Peer to Peer. One player is always the server.) Otherwise I'd, without question, roll my own physics layer as part of the separated simulation. I also use Unity to handle the database of what values I assign to items, such as the gold value of an item the player can sell. However this is just for ease of use. You could avoid using Unity for this &amp; have the simulation read from something as simple as a text file, JSON, or XML. It's entirely up to you because the simulation is so independent.\n\nChange your engine &amp; the only new work you have to do is on the engine side. Your simulation remains exactly as it was before in every way. It's really powerful way to handle games. Most Unity examples/tutorials/code I read, the users have everything strongly embedded within Unity itself. This makes some things like Multiplayer &amp; Save/Load a PITA.", "edited": 1492137369.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Complete Separation of your Simulation from the Engine&lt;/h1&gt;\n\n&lt;p&gt;I find it is infinitely better to completely separate your simulation from the rest of the engine (ex. rendering &amp;amp; physics segment, Unity Engine, etc.)&lt;/p&gt;\n\n&lt;p&gt;Making the simulation fully serializable &amp;amp; very organized can make things as simple as calling something like World.Save(); &amp;amp; it &amp;quot;just works&amp;quot; even when you do massive changes to what resides inside the world.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[Serializable]\nclass World { Region FrozenArea; Region LavaArea; }\nclass Region { Tiles[] myTiles }\netc.\n\nWorld \n    Regions[]\n        Tiles[]\n            GameObjects[]\n                Foliage[]\n                HarvestableNodes[]\n                Items[]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Later add in a new type of gameobject or completely revamp your tile system, and you still only call&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;World.Save();\nWorld.Load();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And no need to ever mess with anything outside the simulation, when dealing with the simulation. (When using Unity, you never even need to load up the Unity Editor. Just open a few scripts in notepad. In theory.)&lt;/p&gt;\n\n&lt;p&gt;Nifty separation between the simulation &amp;amp; the rest of the engine also means you can make transitioning to a different engine or platform a breeze. Even better if you handle your simulation in a scripting language like LUA that just &amp;quot;plugs in&amp;quot; to a game engine or framework. It&amp;#39;s a breath of fresh air when your code is so compact &amp;amp; organized that all you need to do is create code to render the simulation &amp;amp; connect input to simulation actions, rather than taking an enormous amount of time gutting tons of code &amp;amp; logic attached deeply in an engine.&lt;/p&gt;\n\n&lt;p&gt;Complete serialization of the Simulation also means sending world data easily across the network &amp;amp; syncing multiplayer states. It&amp;#39;s not just great for a Save/Load system. When the game engine just takes this data &amp;amp; reads it, you don&amp;#39;t have to worry about the game engine hindering you at all. In Unity, I use the Unity Engine pretty much just to render my game &amp;amp; handle input. The game itself is done entirely separate from Unity in C#. Just some int&amp;#39;s &amp;amp; strings make up the majority of the game simulation, which is itself extremely fast since it doesn&amp;#39;t get bogged down by Unity. Even better for a multiplayer server if you don&amp;#39;t use Unity&amp;#39;s physics in the simulation, instead rolling your own or using very simple physics. &lt;strong&gt;By doing this you don&amp;#39;t even need Unity for the headless server.&lt;/strong&gt; You just use Unity for the client side.&lt;/p&gt;\n\n&lt;p&gt;I do use Unity physics for the server, but if I wasn&amp;#39;t so strapped for time I wouldn&amp;#39;t. Not only does it have horrible performance for so many reasons, it means I am tied down to Unity. Fortunately my game doesn&amp;#39;t require a headless server. (It&amp;#39;s just Peer to Peer. One player is always the server.) Otherwise I&amp;#39;d, without question, roll my own physics layer as part of the separated simulation. I also use Unity to handle the database of what values I assign to items, such as the gold value of an item the player can sell. However this is just for ease of use. You could avoid using Unity for this &amp;amp; have the simulation read from something as simple as a text file, JSON, or XML. It&amp;#39;s entirely up to you because the simulation is so independent.&lt;/p&gt;\n\n&lt;p&gt;Change your engine &amp;amp; the only new work you have to do is on the engine side. Your simulation remains exactly as it was before in every way. It&amp;#39;s really powerful way to handle games. Most Unity examples/tutorials/code I read, the users have everything strongly embedded within Unity itself. This makes some things like Multiplayer &amp;amp; Save/Load a PITA.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg8mlmf", "score_hidden": false, "stickied": false, "created": 1492165612.0, "created_utc": 1492136812.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg8mmoa", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "pdp10", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; Internationalisation and building for all targets are two classic examples.\n\nI came to post these two. After automated continuous builds, automated tests. Game testing is more complicated than most other kinds of software, and has fewer tools than webapps.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Internationalisation and building for all targets are two classic examples.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I came to post these two. After automated continuous builds, automated tests. Game testing is more complicated than most other kinds of software, and has fewer tools than webapps.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg8mmoa", "score_hidden": false, "stickied": false, "created": 1492165655.0, "created_utc": 1492136855.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg6rl7l", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "other_other_self", "parent_id": "t1_dg6gynn", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yep. Just use the right tool for the job. A lot of times it's Unity or Unreal, but neither one is a panacea.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep. Just use the right tool for the job. A lot of times it&amp;#39;s Unity or Unreal, but neither one is a panacea.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6rl7l", "score_hidden": false, "stickied": false, "created": 1492068906.0, "created_utc": 1492040106.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6gynn", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "removeitplease", "parent_id": "t1_dg695tc", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Not everyone uses Unity or UE4, just choose a toolset that fits you.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not everyone uses Unity or UE4, just choose a toolset that fits you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6gynn", "score_hidden": false, "stickied": false, "created": 1492056496.0, "created_utc": 1492027696.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dg695tc", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "PompeyBlue", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Essential\n\n* Don't roll your own engine - go with UE4 or Unity from day one\n\n* Author your textures (and audio too if poss) far higher res and then downsize them for your platform\n\n* Abstract out controller input into events (Jump up / jump left, walk right) and don't read controller input directly \n\n* If doing platform specific code like #if ANDROID #elif iOS always put another #else #warning Undefined platform in\n\nIf you think you are going to do it then put in, right from the start:\n\n* Networked multiplayer\n\n* Split screen\n\n* Couch co-op\n\nRetro fitting later is horrific", "edited": 1492020191.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Essential&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Don&amp;#39;t roll your own engine - go with UE4 or Unity from day one&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Author your textures (and audio too if poss) far higher res and then downsize them for your platform&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Abstract out controller input into events (Jump up / jump left, walk right) and don&amp;#39;t read controller input directly &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If doing platform specific code like #if ANDROID #elif iOS always put another #else #warning Undefined platform in&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you think you are going to do it then put in, right from the start:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Networked multiplayer&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Split screen&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Couch co-op&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Retro fitting later is horrific&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg695tc", "score_hidden": false, "stickied": false, "created": 1492048483.0, "created_utc": 1492019683.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg5xula", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "vickerless", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Game managers for things such as managing the game state, level management, sound management, and camera management. \n\nTacking these things on after you have built a few different levels can be a pain. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Game managers for things such as managing the game state, level management, sound management, and camera management. &lt;/p&gt;\n\n&lt;p&gt;Tacking these things on after you have built a few different levels can be a pain. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5xula", "score_hidden": false, "stickied": false, "created": 1492036451.0, "created_utc": 1492007651.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg682gi", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "gelftheelf", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "If you're working on a team (friends, family, random people from the Internet):\n\n* If you're going to charge money for the game, be extremely clear who gets paid what and when.\n* How much work is everyone doing? (Are you splitting it evenly? Is everyone doing even amounts of work?)\n* Who \"owns\" the project. If your artist bails half way through, can they take all their art with them? Can that artist use that art on other projects?\n\n(there is a ton of stuff like this)\n\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re working on a team (friends, family, random people from the Internet):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If you&amp;#39;re going to charge money for the game, be extremely clear who gets paid what and when.&lt;/li&gt;\n&lt;li&gt;How much work is everyone doing? (Are you splitting it evenly? Is everyone doing even amounts of work?)&lt;/li&gt;\n&lt;li&gt;Who &amp;quot;owns&amp;quot; the project. If your artist bails half way through, can they take all their art with them? Can that artist use that art on other projects?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;(there is a ton of stuff like this)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg682gi", "score_hidden": false, "stickied": false, "created": 1492047383.0, "created_utc": 1492018583.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg5zehq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "braytendo", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "establish naming conventions that will always be unique. There's nothing worse than getting a ways into a project only to start doubling up on names or making it impossible to find specific assets because the names you used are too generic.\n\nAlso, establish the major elements of gameplay early on. Write it down somewhere. Having an understanding of what direction you're taking your game in from the start will make it much easier to find the finish line. \n\nIf you eventually realize that this style of gameplay doesn't work or feel good to play, that's fine, but then you can reassess those goals and head toward your new destination. Just try to have some sort of plan at all times.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;establish naming conventions that will always be unique. There&amp;#39;s nothing worse than getting a ways into a project only to start doubling up on names or making it impossible to find specific assets because the names you used are too generic.&lt;/p&gt;\n\n&lt;p&gt;Also, establish the major elements of gameplay early on. Write it down somewhere. Having an understanding of what direction you&amp;#39;re taking your game in from the start will make it much easier to find the finish line. &lt;/p&gt;\n\n&lt;p&gt;If you eventually realize that this style of gameplay doesn&amp;#39;t work or feel good to play, that&amp;#39;s fine, but then you can reassess those goals and head toward your new destination. Just try to have some sort of plan at all times.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5zehq", "score_hidden": false, "stickied": false, "created": 1492038224.0, "created_utc": 1492009424.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg7vxhw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dg6mqcv", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I've actually made a promise to myself to not get bogged down in modularity and re-use for this project unless I feel it's a genuine hindrance to the immediate future of the project.\n\nOne of the reasons I've never released something as Open Source is because I've got bogged down in that rather than just accepting it's not perfect and getting it out there.\n\nAs a developer at work you always have time and budget constraints, and you often have to push-on to get the job delivered and under budget.  That focuses the mind in many ways.. forces you to make a proper value assessment of such a change.\n\nThis is a solo project.. but I do have time constraints due to my circumstances - I have a window of opportunity to get this as far as possible, and so am using that to keep me focused.\n\nI'm planning ahead as best I can, but I'm not a game developer.. this is my first proper game project since I was a kid, and I'll inevitably see a lot better ways of doing things as the project progresses.  I'll assess each case individually, but \"elegance\" will not be a factor.  If I do ever make a sequel, I'll start again with the lessons I've learnt.\n\nI have made a few prototypes for various bits, and have learnt a lot from those already with regards to how to structure things (I'm using Unity, which does some things in kind of weird ways structurally).\n\nEver onward!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve actually made a promise to myself to not get bogged down in modularity and re-use for this project unless I feel it&amp;#39;s a genuine hindrance to the immediate future of the project.&lt;/p&gt;\n\n&lt;p&gt;One of the reasons I&amp;#39;ve never released something as Open Source is because I&amp;#39;ve got bogged down in that rather than just accepting it&amp;#39;s not perfect and getting it out there.&lt;/p&gt;\n\n&lt;p&gt;As a developer at work you always have time and budget constraints, and you often have to push-on to get the job delivered and under budget.  That focuses the mind in many ways.. forces you to make a proper value assessment of such a change.&lt;/p&gt;\n\n&lt;p&gt;This is a solo project.. but I do have time constraints due to my circumstances - I have a window of opportunity to get this as far as possible, and so am using that to keep me focused.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m planning ahead as best I can, but I&amp;#39;m not a game developer.. this is my first proper game project since I was a kid, and I&amp;#39;ll inevitably see a lot better ways of doing things as the project progresses.  I&amp;#39;ll assess each case individually, but &amp;quot;elegance&amp;quot; will not be a factor.  If I do ever make a sequel, I&amp;#39;ll start again with the lessons I&amp;#39;ve learnt.&lt;/p&gt;\n\n&lt;p&gt;I have made a few prototypes for various bits, and have learnt a lot from those already with regards to how to structure things (I&amp;#39;m using Unity, which does some things in kind of weird ways structurally).&lt;/p&gt;\n\n&lt;p&gt;Ever onward!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg7vxhw", "score_hidden": false, "stickied": false, "created": 1492133043.0, "created_utc": 1492104243.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64x8rt", "likes": null, "replies": "", "user_reports": [], "id": "dg71704", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "jonpul", "parent_id": "t1_dg6zh7b", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Like most important choices, it isn't black or white. The most important thing is that it be a decision and not just what ends up happening. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Like most important choices, it isn&amp;#39;t black or white. The most important thing is that it be a decision and not just what ends up happening. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg71704", "score_hidden": false, "stickied": false, "created": 1492080780.0, "created_utc": 1492051980.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6zh7b", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PainDore", "parent_id": "t1_dg6mqcv", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "It really all depends on what's the big plan after the current game is released. If you're gonna stick to a very specific genre or expect a sequel then ignoring re-usability for the sake of a possible earlier release might be a disservice to yourself. But in other cases, I wouldn't disagree with you. It's just something to consider when you're in the early stages. Also, it's definitely to be evaluated on feature basis.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It really all depends on what&amp;#39;s the big plan after the current game is released. If you&amp;#39;re gonna stick to a very specific genre or expect a sequel then ignoring re-usability for the sake of a possible earlier release might be a disservice to yourself. But in other cases, I wouldn&amp;#39;t disagree with you. It&amp;#39;s just something to consider when you&amp;#39;re in the early stages. Also, it&amp;#39;s definitely to be evaluated on feature basis.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6zh7b", "score_hidden": false, "stickied": false, "created": 1492078593.0, "created_utc": 1492049793.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6mqcv", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "jonpul", "parent_id": "t1_dg5x0fp", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Modularity is important but I think designing for reuse is overrated and often becomes an method of procrastinating finishing and shipping a game. \n\nI won't say I never reuse code and that I don't occasionally go back and refactor for reusability, but my priority is shipping good games on a reasonable schedule. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Modularity is important but I think designing for reuse is overrated and often becomes an method of procrastinating finishing and shipping a game. &lt;/p&gt;\n\n&lt;p&gt;I won&amp;#39;t say I never reuse code and that I don&amp;#39;t occasionally go back and refactor for reusability, but my priority is shipping good games on a reasonable schedule. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg6mqcv", "score_hidden": false, "stickied": false, "created": 1492062896.0, "created_utc": 1492034096.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5x0fp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PainDore", "parent_id": "t3_64x8rt", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Make your code modular and re-usable. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Make your code modular and re-usable. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5x0fp", "score_hidden": false, "stickied": false, "created": 1492035455.0, "created_utc": 1492006655.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]