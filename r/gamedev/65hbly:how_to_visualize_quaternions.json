[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, \nI dont understand what is a quaternion because i cannot vizualize what it is. \nCan someone try to explain it ? \nMath skill 3/10&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, \nI dont understand what is a quaternion because i cannot vizualize what it is. \nCan someone try to explain it ? \nMath skill 3/10", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65hbly", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 316, "report_reasons": null, "author": "bigsmall80", "saved": false, "mod_reports": [], "name": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/65hbly/how_to_visualize_quaternions/", "num_reports": null, "locked": false, "stickied": false, "created": 1492259192.0, "url": "https://www.reddit.com/r/gamedev/comments/65hbly/how_to_visualize_quaternions/", "author_flair_text": null, "quarantine": false, "title": "How to visualize quaternions ?", "created_utc": 1492230392.0, "distinguished": null, "media": null, "upvote_ratio": 0.95, "num_comments": 52, "visited": false, "subreddit_type": "public", "ups": 316}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgahrtx", "gilded": 0, "archived": false, "score": 22, "report_reasons": null, "author": "vampatori", "parent_id": "t1_dgaakaq", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Holy crap.. I now understand quarternions!  Truly a brilliant video, thank you for posting!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Holy crap.. I now understand quarternions!  Truly a brilliant video, thank you for posting!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgahrtx", "score_hidden": false, "stickied": false, "created": 1492277788.0, "created_utc": 1492248988.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 22}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgacm7q", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "bigsmall80", "parent_id": "t1_dgaakaq", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Very helpfull", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very helpfull&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgacm7q", "score_hidden": false, "stickied": false, "created": 1492263968.0, "created_utc": 1492235168.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgabfnv", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "triffid_hunter", "parent_id": "t1_dgaakaq", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Was going to post this exact video", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Was going to post this exact video&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgabfnv", "score_hidden": false, "stickied": false, "created": 1492261606.0, "created_utc": 1492232806.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgahtzb", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Gizmoi130", "parent_id": "t1_dgaakaq", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "+1 for my favourite quaternion explanation ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;+1 for my favourite quaternion explanation &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgahtzb", "score_hidden": false, "stickied": false, "created": 1492277986.0, "created_utc": 1492249186.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgb8ltf", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "notyetawizard", "parent_id": "t1_dgaakaq", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "This helps me so much :D", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This helps me so much :D&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb8ltf", "score_hidden": false, "stickied": false, "created": 1492322309.0, "created_utc": 1492293509.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaakaq", "gilded": 0, "archived": false, "score": 221, "report_reasons": null, "author": "MakesGamesForFun", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I like the mixing rotations/colors analogy used in this video\u200b: https://youtu.be/4mXL751ko0w", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like the mixing rotations/colors analogy used in this video\u200b: &lt;a href=\"https://youtu.be/4mXL751ko0w\"&gt;https://youtu.be/4mXL751ko0w&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaakaq", "score_hidden": false, "stickied": false, "created": 1492260045.0, "created_utc": 1492231245.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 221}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgan3fn", "gilded": 0, "archived": false, "score": 20, "report_reasons": null, "author": "adnanclyde", "parent_id": "t1_dgakg61", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Wow, thank you very much for sharing this!\n\nThis is a very good guide for someone who does modelling just rarely enough to forget essential shortcuts.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, thank you very much for sharing this!&lt;/p&gt;\n\n&lt;p&gt;This is a very good guide for someone who does modelling just rarely enough to forget essential shortcuts.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgan3fn", "score_hidden": false, "stickied": false, "created": 1492291770.0, "created_utc": 1492262970.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 20}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgcez76", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "other_other_self", "parent_id": "t1_dgbjdpz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm not a Blender user, so maybe I'm not giving this infographic a fair chance. To be honest, though, it seems easier to just read the manual than to try to decipher this. That said, I'm glad some people find it useful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not a Blender user, so maybe I&amp;#39;m not giving this infographic a fair chance. To be honest, though, it seems easier to just read the manual than to try to decipher this. That said, I&amp;#39;m glad some people find it useful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgcez76", "score_hidden": false, "stickied": false, "created": 1492398071.0, "created_utc": 1492369271.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbjdpz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "SaxPanther", "parent_id": "t1_dgakg61", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Are you being sarcastic? This is a great and straightforward infographic (the same one I used to learn Blender with)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you being sarcastic? This is a great and straightforward infographic (the same one I used to learn Blender with)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbjdpz", "score_hidden": false, "stickied": false, "created": 1492337792.0, "created_utc": 1492308992.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakg61", "gilded": 0, "archived": false, "score": 82, "report_reasons": null, "author": "other_other_self", "parent_id": "t1_dgaht2s", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "While you're at it, go ahead and [learn Blender!](http://giudansky.com/images/articoli/2016/11/blender-infographic-1280-SM.png)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;While you&amp;#39;re at it, go ahead and &lt;a href=\"http://giudansky.com/images/articoli/2016/11/blender-infographic-1280-SM.png\"&gt;learn Blender!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgakg61", "score_hidden": false, "stickied": false, "created": 1492285929.0, "created_utc": 1492257129.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 82}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgbgb3c", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "TitoOliveira", "parent_id": "t1_dgaht2s", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yeah! Quite good.  \nNow i understand the social paradigm imposed by the fabrication of soft lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc rutrum mattis purus, quis rhoncus mauris pellentesque a. Phasellus vel blandit turpis. Sed non massa vitae nisi ultrices gravida eu in eros. Aenean malesuada mollis tempus. Nam interdum vestibulum diam sed suscipit. Praesent nec tellus sagittis, porttitor urna et, rhoncus neque. Proin diam leo, rhoncus non lacinia a, pretium vel est. Etiam hendrerit ante nec mauris scelerisque efficitur. Integer cursus rhoncus sem, id efficitur quam.\u00a0", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah! Quite good.&lt;br/&gt;\nNow i understand the social paradigm imposed by the fabrication of soft lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc rutrum mattis purus, quis rhoncus mauris pellentesque a. Phasellus vel blandit turpis. Sed non massa vitae nisi ultrices gravida eu in eros. Aenean malesuada mollis tempus. Nam interdum vestibulum diam sed suscipit. Praesent nec tellus sagittis, porttitor urna et, rhoncus neque. Proin diam leo, rhoncus non lacinia a, pretium vel est. Etiam hendrerit ante nec mauris scelerisque efficitur. Integer cursus rhoncus sem, id efficitur quam.\u00a0&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbgb3c", "score_hidden": false, "stickied": false, "created": 1492333334.0, "created_utc": 1492304534.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgairee", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Jattenalle", "parent_id": "t1_dgaht2s", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Haha, nice!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha, nice!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgairee", "score_hidden": false, "stickied": false, "created": 1492280975.0, "created_utc": 1492252175.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaht2s", "gilded": 0, "archived": false, "score": 143, "report_reasons": null, "author": "oli414", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "It's actually really simple, take a look at [this image](https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Versor_action_on_Hurwitz_quaternions.svg/220px-Versor_action_on_Hurwitz_quaternions.svg.png)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s actually really simple, take a look at &lt;a href=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Versor_action_on_Hurwitz_quaternions.svg/220px-Versor_action_on_Hurwitz_quaternions.svg.png\"&gt;this image&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaht2s", "score_hidden": false, "stickied": false, "created": 1492277902.0, "created_utc": 1492249102.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 143}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgd3hbe", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "systembreaker", "parent_id": "t1_dgb4qic", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; Being able to just visualize quaternions is not going to make you understand them, sadly. To really understand them you need to go into the math. \n\nYou kiddin' me? There's a difference between practical knowledge for being able to use quaternions and deep mathematical understanding.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Being able to just visualize quaternions is not going to make you understand them, sadly. To really understand them you need to go into the math. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You kiddin&amp;#39; me? There&amp;#39;s a difference between practical knowledge for being able to use quaternions and deep mathematical understanding.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgd3hbe", "score_hidden": false, "stickied": false, "created": 1492431395.0, "created_utc": 1492402595.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb4qic", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "Meta_Riddley", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Being able to just visualize quaternions is not going to make you understand them, sadly. To really understand them you need to go into the math. Some of the prerequisites for understanding quaternions would be complex numbers and some vector calculus and linear algebra. Then you could start reading this http://web.mit.edu/2.998/www/QuaternionReport1.pdf. Which is a great text about quaternions, one of the better ones I've seen.\n\nThe good news is that you don't really need to understand them to use them. There seem to be very few people who understand them on a deeper level, but there are loads of people who use them all the time for various applications. \n\nA trick is to think of them through angle-axis. Let us say you have an unit axis V=(Vx,Vy,Vz) you want to rotate about with an angle theta. Then the quaternion (w,x,y,z) representing the same rotation is defined as \n\n    (w,x,y,z) = (cos(theta/2), Vx*sin(theta/2), Vy*sin(theta/2),Vz*sin(theta/2)).\n\nThe w is going to be equal to cos(theta/2) while the (x,y,z) is going to be (Vx,Vy,Vz) scaled by sin(theta/2). This means that x,y,z is going to point in the same direction as your rotation axis. To get the angle you can look at w and think of the cosine function. If w is 1 then the angle should be 0, if w is -1 then theta should be 360 degrees (since it's theta/2) and so forth.\n\nThere is something to keep in mind with this. Software packages handle quaternions differently. For instance blender does not let w be negative. Instead whenever w becomes negative it switches the sign of the rotation axis. Because a rotation with a negative angle around a 'positive axis' is the same as a rotation of the same positive angle around the 'negative axis'. In other words for a rotation\n\n    (-0.5, 0.5, 0.5, 0.5) is equivalent to (0.5, -0.5, -0.5, -0.5).\n\nThis only applies when interpreting w, with the (x,y,z) components you can just do it as explained above. Keep in mind you are not visualizing quaternions with this approach, but angle-axis instead and then representing it a quaternion which is easier.\n\nLet's do a few examples. \n\na) We want to represent a rotation of 50 degrees around the x-axis. Then our rotation axis is (1,0,0) and our angle is 50 degrees which is 0.873 in radians. Our quaternion is then\n\n    (cos(0.873/2), 1*sin(0.873/2), 0*sin(0.873/2), 0*sin(0.873/2)) = (0.9063, 0.4226, 0, 0)\n\nb) Let us represent a rotation of 231 degrees (4.032 in radians) around the axis (1/sqrt(3),1/sqrt(3),1/sqrt(3)) then the quaternion is\n\n    (cos(4.032/2), 1/sqrt(3)*sin(4.032/2), 1/sqrt(3)*sin(4.032/2), 1/sqrt(3)*sin(4.032/2)) = (-0.4305, 0.521, 0.5210, 0.5210)\n\nhowever in blender you would get (0.4305, -0.521, -0.5210, -0.5210). Notice that getting the angle to rotate with is theta = 2*acos(w)\n\nfor more info I made another post earlier about actually rotating stuff with quaternions: https://www.reddit.com/r/blender/comments/63yx26/is_it_possible_to_keyframe_only_on_a_specific_axis/dfy7gfm/\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Being able to just visualize quaternions is not going to make you understand them, sadly. To really understand them you need to go into the math. Some of the prerequisites for understanding quaternions would be complex numbers and some vector calculus and linear algebra. Then you could start reading this &lt;a href=\"http://web.mit.edu/2.998/www/QuaternionReport1.pdf\"&gt;http://web.mit.edu/2.998/www/QuaternionReport1.pdf&lt;/a&gt;. Which is a great text about quaternions, one of the better ones I&amp;#39;ve seen.&lt;/p&gt;\n\n&lt;p&gt;The good news is that you don&amp;#39;t really need to understand them to use them. There seem to be very few people who understand them on a deeper level, but there are loads of people who use them all the time for various applications. &lt;/p&gt;\n\n&lt;p&gt;A trick is to think of them through angle-axis. Let us say you have an unit axis V=(Vx,Vy,Vz) you want to rotate about with an angle theta. Then the quaternion (w,x,y,z) representing the same rotation is defined as &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(w,x,y,z) = (cos(theta/2), Vx*sin(theta/2), Vy*sin(theta/2),Vz*sin(theta/2)).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The w is going to be equal to cos(theta/2) while the (x,y,z) is going to be (Vx,Vy,Vz) scaled by sin(theta/2). This means that x,y,z is going to point in the same direction as your rotation axis. To get the angle you can look at w and think of the cosine function. If w is 1 then the angle should be 0, if w is -1 then theta should be 360 degrees (since it&amp;#39;s theta/2) and so forth.&lt;/p&gt;\n\n&lt;p&gt;There is something to keep in mind with this. Software packages handle quaternions differently. For instance blender does not let w be negative. Instead whenever w becomes negative it switches the sign of the rotation axis. Because a rotation with a negative angle around a &amp;#39;positive axis&amp;#39; is the same as a rotation of the same positive angle around the &amp;#39;negative axis&amp;#39;. In other words for a rotation&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(-0.5, 0.5, 0.5, 0.5) is equivalent to (0.5, -0.5, -0.5, -0.5).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This only applies when interpreting w, with the (x,y,z) components you can just do it as explained above. Keep in mind you are not visualizing quaternions with this approach, but angle-axis instead and then representing it a quaternion which is easier.&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s do a few examples. &lt;/p&gt;\n\n&lt;p&gt;a) We want to represent a rotation of 50 degrees around the x-axis. Then our rotation axis is (1,0,0) and our angle is 50 degrees which is 0.873 in radians. Our quaternion is then&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(cos(0.873/2), 1*sin(0.873/2), 0*sin(0.873/2), 0*sin(0.873/2)) = (0.9063, 0.4226, 0, 0)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;b) Let us represent a rotation of 231 degrees (4.032 in radians) around the axis (1/sqrt(3),1/sqrt(3),1/sqrt(3)) then the quaternion is&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(cos(4.032/2), 1/sqrt(3)*sin(4.032/2), 1/sqrt(3)*sin(4.032/2), 1/sqrt(3)*sin(4.032/2)) = (-0.4305, 0.521, 0.5210, 0.5210)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;however in blender you would get (0.4305, -0.521, -0.5210, -0.5210). Notice that getting the angle to rotate with is theta = 2*acos(w)&lt;/p&gt;\n\n&lt;p&gt;for more info I made another post earlier about actually rotating stuff with quaternions: &lt;a href=\"https://www.reddit.com/r/blender/comments/63yx26/is_it_possible_to_keyframe_only_on_a_specific_axis/dfy7gfm/\"&gt;https://www.reddit.com/r/blender/comments/63yx26/is_it_possible_to_keyframe_only_on_a_specific_axis/dfy7gfm/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb4qic", "score_hidden": false, "stickied": false, "created": 1492316986.0, "created_utc": 1492288186.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgatj94", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Harha", "parent_id": "t1_dgae40q", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yep, this site was great back when it was posted in here.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, this site was great back when it was posted in here.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatj94", "score_hidden": false, "stickied": false, "created": 1492301697.0, "created_utc": 1492272897.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgae40q", "gilded": 0, "archived": false, "score": 24, "report_reasons": null, "author": "InspectorRoar", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I remember this website helped many people when it was posted:\n[quaternions.online](http://quaternions.online/)\n\n(by /u/Ponzel, [full post](https://www.reddit.com/r/gamedev/comments/484l3e/i_always_had_trouble_using_quaternions_for_3d/) )", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I remember this website helped many people when it was posted:\n&lt;a href=\"http://quaternions.online/\"&gt;quaternions.online&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(by &lt;a href=\"/u/Ponzel\"&gt;/u/Ponzel&lt;/a&gt;, &lt;a href=\"https://www.reddit.com/r/gamedev/comments/484l3e/i_always_had_trouble_using_quaternions_for_3d/\"&gt;full post&lt;/a&gt; )&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgae40q", "score_hidden": false, "stickied": false, "created": 1492267326.0, "created_utc": 1492238526.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 24}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgaj4p8", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "Draghi", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Well. This is the one that I heard that kinda helps me. Though it's probably a little off base.\n\nImagine a gyroscope with 3 concentric rings. Each ring is 90 degrees to each other one (making for x, y, z). This is prone to gymbal lock as you can lose degrees of freedom when two rings interlock during a rotation.\n\nA quarernion is effectively a 4 dimensional rotation so you need to add an extra ring into the gyroscope that's 90 degrees to the rest of the rings. You can't visualize this extra ring in 3D of course as it exists on a 4D hypersphere. \n\nThis extra degree of freedom allows one to avoid gymbal lock by always keeping one ring 90 degrees to the rest of the rings, ensuring you never go below 3 degrees of freedom.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well. This is the one that I heard that kinda helps me. Though it&amp;#39;s probably a little off base.&lt;/p&gt;\n\n&lt;p&gt;Imagine a gyroscope with 3 concentric rings. Each ring is 90 degrees to each other one (making for x, y, z). This is prone to gymbal lock as you can lose degrees of freedom when two rings interlock during a rotation.&lt;/p&gt;\n\n&lt;p&gt;A quarernion is effectively a 4 dimensional rotation so you need to add an extra ring into the gyroscope that&amp;#39;s 90 degrees to the rest of the rings. You can&amp;#39;t visualize this extra ring in 3D of course as it exists on a 4D hypersphere. &lt;/p&gt;\n\n&lt;p&gt;This extra degree of freedom allows one to avoid gymbal lock by always keeping one ring 90 degrees to the rest of the rings, ensuring you never go below 3 degrees of freedom.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaj4p8", "score_hidden": false, "stickied": false, "created": 1492282140.0, "created_utc": 1492253340.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgakd62", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Nycterus", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I really enjoyed this interactive visualization https://acko.net/blog/animate-your-way-to-glory-pt2/#quaternions (it's the Blowing up the Death Start section)", "edited": 1492298373.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I really enjoyed this interactive visualization &lt;a href=\"https://acko.net/blog/animate-your-way-to-glory-pt2/#quaternions\"&gt;https://acko.net/blog/animate-your-way-to-glory-pt2/#quaternions&lt;/a&gt; (it&amp;#39;s the Blowing up the Death Start section)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgakd62", "score_hidden": false, "stickied": false, "created": 1492285718.0, "created_utc": 1492256918.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgaggl4", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "viktorstrate", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Check out this post [The first video that has intuitively explained quaternions to me.](https://www.reddit.com/r/gamedev/comments/4wnd54/the_first_video_that_has_intuitively_explained/) ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check out this post &lt;a href=\"https://www.reddit.com/r/gamedev/comments/4wnd54/the_first_video_that_has_intuitively_explained/\"&gt;The first video that has intuitively explained quaternions to me.&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaggl4", "score_hidden": false, "stickied": false, "created": 1492273640.0, "created_utc": 1492244840.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgan83z", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Nyefan", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "The way I managed to understand them was to write a naive lua library for handling them - it was incredibly enlightening. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The way I managed to understand them was to write a naive lua library for handling them - it was incredibly enlightening. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgan83z", "score_hidden": false, "stickied": false, "created": 1492292008.0, "created_utc": 1492263208.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgakj48", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "RedPanda_UA", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Once you're done with theory, I found this visualization tool to be useful: http://quaternions.online/. Play around get the feel of it\n\nEDIT: Damn, /u/InspectorRoar beat me to it :P ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Once you&amp;#39;re done with theory, I found this visualization tool to be useful: &lt;a href=\"http://quaternions.online/\"&gt;http://quaternions.online/&lt;/a&gt;. Play around get the feel of it&lt;/p&gt;\n\n&lt;p&gt;EDIT: Damn, &lt;a href=\"/u/InspectorRoar\"&gt;/u/InspectorRoar&lt;/a&gt; beat me to it :P &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgakj48", "score_hidden": false, "stickied": false, "created": 1492286141.0, "created_utc": 1492257341.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgamhyv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "dumbmok", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "https://www.amazon.com/Visualizing-Quaternions-Kaufmann-Interactive-Technology/dp/0120884003", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.amazon.com/Visualizing-Quaternions-Kaufmann-Interactive-Technology/dp/0120884003\"&gt;https://www.amazon.com/Visualizing-Quaternions-Kaufmann-Interactive-Technology/dp/0120884003&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgamhyv", "score_hidden": false, "stickied": false, "created": 1492290607.0, "created_utc": 1492261807.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgasvsg", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "valax", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I change the numbers until it looks right.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I change the numbers until it looks right.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgasvsg", "score_hidden": false, "stickied": false, "created": 1492300809.0, "created_utc": 1492272009.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgatkq7", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "a1studmuffin", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "For practical use, I think of them as a rotation around an arbitrary axis by a certain amount. But just beware the internal representation is not just an axis and angle despite being 4 floats. That said, you can easily convert them to and from an axis/angle pair.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For practical use, I think of them as a rotation around an arbitrary axis by a certain amount. But just beware the internal representation is not just an axis and angle despite being 4 floats. That said, you can easily convert them to and from an axis/angle pair.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatkq7", "score_hidden": false, "stickied": false, "created": 1492301757.0, "created_utc": 1492272957.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgau9vz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Zhang5", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'll be honest - I've never really been able to visualize them. But I've also yet to need to visualize them directly. I understand their purpose mathematically and use them in my code to handle rotations. I don't need to be able to see in my head how all that magic works, really. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll be honest - I&amp;#39;ve never really been able to visualize them. But I&amp;#39;ve also yet to need to visualize them directly. I understand their purpose mathematically and use them in my code to handle rotations. I don&amp;#39;t need to be able to see in my head how all that magic works, really. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgau9vz", "score_hidden": false, "stickied": false, "created": 1492302738.0, "created_utc": 1492273938.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgazz1n", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "gigadude", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I highly recommend [Geometric Algebra for Computer Science](https://www.elsevier.com/books/geometric-algebra-for-computer-science-revised-edition/dorst/978-0-12-374942-0).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I highly recommend &lt;a href=\"https://www.elsevier.com/books/geometric-algebra-for-computer-science-revised-edition/dorst/978-0-12-374942-0\"&gt;Geometric Algebra for Computer Science&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgazz1n", "score_hidden": false, "stickied": false, "created": 1492310564.0, "created_utc": 1492281764.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dganzbf", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "zeno490", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Imagine you are walking on a sphere (e.g. the earth). You can move forward/backwards and left/right. If you move far enough in one direction, you eventually come back where you started. This is a 3D sphere. The distance of the surface from the center is the radius, as such if you move up/down, you will never come back where you started unless you go back on your steps.\n\nNow a 4D is the same, except that you can now go up/down and eventually you come back where you started. It wraps around just like left/right, front/back do. The radius is some other metric that is no longer easily visualized.\n\nAll of this is largely useless to understand and work with quaternions. Unless you do fancy things, you can mostly think of them as being the same as 3x3 rotation matrices. Conceptually, they are easily represented as an axis/angle pair. The angle is the amount of rotation around the 3D axis. You will typically never create quaternions by hand with xyzw, instead you'll create them from some axis and angle and by combining them.\n\nThere are a few differences between 3x3 rotation matrices. The transpose/inverse of an orthonormal rotation matrix is the inverse rotation. For a quaternion, you can use the inverse as well or the conjugate. Since quaternions need to be normalized to represent a valid rotation, the conjugate is typically more efficient. There are also 2 quaternions to represent any rotation. This is because we represent a 3d concept as 4d. When you combine your quaternions, you'll typically want to make sure to use the closest representation to ensure the shortest path is used.\n\nIf all you do is gameplay/ai or simple math with them, just understanding how to compose them with multiplication, shortest path, and the fact that they can easily be converted to/from an axis/angle should be all you need. And make sure they are always normalized.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Imagine you are walking on a sphere (e.g. the earth). You can move forward/backwards and left/right. If you move far enough in one direction, you eventually come back where you started. This is a 3D sphere. The distance of the surface from the center is the radius, as such if you move up/down, you will never come back where you started unless you go back on your steps.&lt;/p&gt;\n\n&lt;p&gt;Now a 4D is the same, except that you can now go up/down and eventually you come back where you started. It wraps around just like left/right, front/back do. The radius is some other metric that is no longer easily visualized.&lt;/p&gt;\n\n&lt;p&gt;All of this is largely useless to understand and work with quaternions. Unless you do fancy things, you can mostly think of them as being the same as 3x3 rotation matrices. Conceptually, they are easily represented as an axis/angle pair. The angle is the amount of rotation around the 3D axis. You will typically never create quaternions by hand with xyzw, instead you&amp;#39;ll create them from some axis and angle and by combining them.&lt;/p&gt;\n\n&lt;p&gt;There are a few differences between 3x3 rotation matrices. The transpose/inverse of an orthonormal rotation matrix is the inverse rotation. For a quaternion, you can use the inverse as well or the conjugate. Since quaternions need to be normalized to represent a valid rotation, the conjugate is typically more efficient. There are also 2 quaternions to represent any rotation. This is because we represent a 3d concept as 4d. When you combine your quaternions, you&amp;#39;ll typically want to make sure to use the closest representation to ensure the shortest path is used.&lt;/p&gt;\n\n&lt;p&gt;If all you do is gameplay/ai or simple math with them, just understanding how to compose them with multiplication, shortest path, and the fact that they can easily be converted to/from an axis/angle should be all you need. And make sure they are always normalized.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dganzbf", "score_hidden": false, "stickied": false, "created": 1492293391.0, "created_utc": 1492264591.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgarrdk", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Learfz", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Use an \"axis-angle\" representation. You can describe any quaternion with two values: a major axis ([x,y,z]) and an angle to rotate around that axis (float representing rads or degrees.)\n\n[Like this.](http://www.opengl-tutorial.org/assets/images/tuto-17-rotation/quaternion.png) Imagine that, for example, you are defining a camera's rotation with your quat. The camera would be looking down the axis, with a \"roll\" angle of the given rotation.\n\nEdit: To be fair, this hardly scratches the surface of the actual math concepts; it may even be mildly misleading in that regard. But honestly, even if you're writing your own engine you can definitely get away with thinking about them like this, as long as you're willing to google the derivations and corresponding 3D outcomes of basic operations like multiplication, addition, converting between an axis-angle and \"raw\" format, converting to 4x4 transformation matrices, etc.    ", "edited": 1492300712.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Use an &amp;quot;axis-angle&amp;quot; representation. You can describe any quaternion with two values: a major axis ([x,y,z]) and an angle to rotate around that axis (float representing rads or degrees.)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.opengl-tutorial.org/assets/images/tuto-17-rotation/quaternion.png\"&gt;Like this.&lt;/a&gt; Imagine that, for example, you are defining a camera&amp;#39;s rotation with your quat. The camera would be looking down the axis, with a &amp;quot;roll&amp;quot; angle of the given rotation.&lt;/p&gt;\n\n&lt;p&gt;Edit: To be fair, this hardly scratches the surface of the actual math concepts; it may even be mildly misleading in that regard. But honestly, even if you&amp;#39;re writing your own engine you can definitely get away with thinking about them like this, as long as you&amp;#39;re willing to google the derivations and corresponding 3D outcomes of basic operations like multiplication, addition, converting between an axis-angle and &amp;quot;raw&amp;quot; format, converting to 4x4 transformation matrices, etc.    &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgarrdk", "score_hidden": false, "stickied": false, "created": 1492299222.0, "created_utc": 1492270422.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgb453r", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "s_ngularity", "parent_id": "t1_dgatfux", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "and they avoid gimbal lock", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;and they avoid gimbal lock&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb453r", "score_hidden": false, "stickied": false, "created": 1492316176.0, "created_utc": 1492287376.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgatfux", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "X7123M3-256", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Quaternions are difficult to visualize because they are four dimensional. I find it easiest to think of quaternions as a generalization of complex numbers, because complex numbers are two dimensional and easy to draw.\n\nThink about the set of rotation matrices in two dimensions. Each such rotation matrix has the form:\n\n    [cos(\u03b8) -sin(\u03b8)]\n    [sin(\u03b8)  cos(\u03b8)]\n\nfor some angle \u03b8. So, you could choose to represent a 2D rotation matrix by the complex number e^i\u03b8. This number will have magnitude 1, which means it lies on the unit circle in the complex plane, and \u03b8 is the angle it makes with the real axis. If you rotate a point through an angle \u03b8 and then through an angle \u03c9, then this is equivalent to a single rotation through \u03b8+\u03c9. Similiarly, if you multiply two complex numbers e^i\u03b8 and e^i\u03c9, you get e^i(\u03b8+\u03c9). This means that multiplication of complex numbers corresponds to the operation of composition of two rotations.\n\nYou do not generally represent rotations in 2D like this because it is pointless, since it is easier to represent such rotations by a single real number corresponding to the angle \u03b8. But I think it helps provide some intuition for why there might be a connection between quaternions and 3D rotations, because quaternions are a generalization of the complex numbers.\n\nWithin the set of quaternions there are *three* square roots of -1, named i,j,and k, and ijk=-1. An arbitrary quaternion can be written in the form a+bi+cj+dk for real a,b,c, and d. If c and d are zero, then you have a complex number. You can represent rotation matrices in three dimensions by quaternions, and then quaternion multiplication corresponds to the composition of rotations. However, unlike with complex numbers, the multiplication of quaternions is *not commutative* (this makes sense if you think about the fact that composition of rotations in 3D space isn't commutative either). Also, every 3D rotation has *two* possible representations as a quaternion.\n\nThe advantage of using quaternions over rotation matrices is that they use less memory and require fewer operations to multiply.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quaternions are difficult to visualize because they are four dimensional. I find it easiest to think of quaternions as a generalization of complex numbers, because complex numbers are two dimensional and easy to draw.&lt;/p&gt;\n\n&lt;p&gt;Think about the set of rotation matrices in two dimensions. Each such rotation matrix has the form:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[cos(\u03b8) -sin(\u03b8)]\n[sin(\u03b8)  cos(\u03b8)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;for some angle \u03b8. So, you could choose to represent a 2D rotation matrix by the complex number e&lt;sup&gt;i\u03b8.&lt;/sup&gt; This number will have magnitude 1, which means it lies on the unit circle in the complex plane, and \u03b8 is the angle it makes with the real axis. If you rotate a point through an angle \u03b8 and then through an angle \u03c9, then this is equivalent to a single rotation through \u03b8+\u03c9. Similiarly, if you multiply two complex numbers e&lt;sup&gt;i\u03b8&lt;/sup&gt; and e&lt;sup&gt;i\u03c9,&lt;/sup&gt; you get e&lt;sup&gt;i(\u03b8+\u03c9).&lt;/sup&gt; This means that multiplication of complex numbers corresponds to the operation of composition of two rotations.&lt;/p&gt;\n\n&lt;p&gt;You do not generally represent rotations in 2D like this because it is pointless, since it is easier to represent such rotations by a single real number corresponding to the angle \u03b8. But I think it helps provide some intuition for why there might be a connection between quaternions and 3D rotations, because quaternions are a generalization of the complex numbers.&lt;/p&gt;\n\n&lt;p&gt;Within the set of quaternions there are &lt;em&gt;three&lt;/em&gt; square roots of -1, named i,j,and k, and ijk=-1. An arbitrary quaternion can be written in the form a+bi+cj+dk for real a,b,c, and d. If c and d are zero, then you have a complex number. You can represent rotation matrices in three dimensions by quaternions, and then quaternion multiplication corresponds to the composition of rotations. However, unlike with complex numbers, the multiplication of quaternions is &lt;em&gt;not commutative&lt;/em&gt; (this makes sense if you think about the fact that composition of rotations in 3D space isn&amp;#39;t commutative either). Also, every 3D rotation has &lt;em&gt;two&lt;/em&gt; possible representations as a quaternion.&lt;/p&gt;\n\n&lt;p&gt;The advantage of using quaternions over rotation matrices is that they use less memory and require fewer operations to multiply.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatfux", "score_hidden": false, "stickied": false, "created": 1492301565.0, "created_utc": 1492272765.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgbdwq8", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cecilkorik", "parent_id": "t1_dgb6ntd", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I get where you're coming from, but my point of view is that there are plenty of people out there who just can't wrap their head around math no matter how much they try, and I think it'd be a shame to discourage them from game development because of that, because game development is also a beautiful thing.\n\nBut I agree with you, it's going to be much better if you can at least *try* to figure it out. And I apologise if my original comment suggested anything else.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I get where you&amp;#39;re coming from, but my point of view is that there are plenty of people out there who just can&amp;#39;t wrap their head around math no matter how much they try, and I think it&amp;#39;d be a shame to discourage them from game development because of that, because game development is also a beautiful thing.&lt;/p&gt;\n\n&lt;p&gt;But I agree with you, it&amp;#39;s going to be much better if you can at least &lt;em&gt;try&lt;/em&gt; to figure it out. And I apologise if my original comment suggested anything else.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbdwq8", "score_hidden": false, "stickied": false, "created": 1492329876.0, "created_utc": 1492301076.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgdgija", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "CodeCodeCodeDurrr", "parent_id": "t1_dgdfcof", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "In the previous comment, you had generalized it to 'things like \"imaginary numbers\"', which is what I was responding to. There's actually a lot of neat things you can do with imaginary numbers that can provide a unique perspectives and features for your games. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In the previous comment, you had generalized it to &amp;#39;things like &amp;quot;imaginary numbers&amp;quot;&amp;#39;, which is what I was responding to. There&amp;#39;s actually a lot of neat things you can do with imaginary numbers that can provide a unique perspectives and features for your games. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgdgija", "score_hidden": false, "stickied": false, "created": 1492463592.0, "created_utc": 1492434792.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdfcof", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AnvilofSpinning", "parent_id": "t1_dgdf5su", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "This is gamedev we are talking about, right? In the context of game development that's all you need.  \n\n&gt;It's fine if that's what you want to do\n\nThere is nothing more we can do with it for our gamedev math needs. It becomes a bit pretentious when you want to get more out of it within this context. \n\nIf you find Quaternions and their mathematical meaning beautiful, more power to you. But that can be said about anything but not very pragmatic in this case.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is gamedev we are talking about, right? In the context of game development that&amp;#39;s all you need.  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;It&amp;#39;s fine if that&amp;#39;s what you want to do&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;There is nothing more we can do with it for our gamedev math needs. It becomes a bit pretentious when you want to get more out of it within this context. &lt;/p&gt;\n\n&lt;p&gt;If you find Quaternions and their mathematical meaning beautiful, more power to you. But that can be said about anything but not very pragmatic in this case.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgdfcof", "score_hidden": false, "stickied": false, "created": 1492461498.0, "created_utc": 1492432698.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdf5su", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "CodeCodeCodeDurrr", "parent_id": "t1_dgdbs1x", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "And if all you want to do with imaginary numbers is rotation, that's fine, but there's an entire world of interesting, beautiful, and useful facts that you're ignoring for the sake of saving time. It's fine if that's what you want to do, but it doesn't stop me from being sad about it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And if all you want to do with imaginary numbers is rotation, that&amp;#39;s fine, but there&amp;#39;s an entire world of interesting, beautiful, and useful facts that you&amp;#39;re ignoring for the sake of saving time. It&amp;#39;s fine if that&amp;#39;s what you want to do, but it doesn&amp;#39;t stop me from being sad about it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgdf5su", "score_hidden": false, "stickied": false, "created": 1492461125.0, "created_utc": 1492432325.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdbs1x", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AnvilofSpinning", "parent_id": "t1_dgb6ntd", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "In this case I wouldn't think you need to know the underlying mathematical definition of a Quaternion. \n\nA library that provides Quaternions have all the necessary functions to define rotations. Understanding how to use them as a game developer is more important. Everything else is pretty useless. \n\nI've been looking in to Quaternions lately, watching a lot of videos and explanations. But there isn't really anything from a mathematical definition that would elevate my usage of these objects. Things like \"imaginary numbers\" don't exactly add more to the fact I just want to rotate something by theta.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In this case I wouldn&amp;#39;t think you need to know the underlying mathematical definition of a Quaternion. &lt;/p&gt;\n\n&lt;p&gt;A library that provides Quaternions have all the necessary functions to define rotations. Understanding how to use them as a game developer is more important. Everything else is pretty useless. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been looking in to Quaternions lately, watching a lot of videos and explanations. But there isn&amp;#39;t really anything from a mathematical definition that would elevate my usage of these objects. Things like &amp;quot;imaginary numbers&amp;quot; don&amp;#39;t exactly add more to the fact I just want to rotate something by theta.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgdbs1x", "score_hidden": false, "stickied": false, "created": 1492452260.0, "created_utc": 1492423460.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb6ntd", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "CodeCodeCodeDurrr", "parent_id": "t1_dgaxaou", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm really not a fan of the \"just treat it as a black box and focus on the result\" way of thinking. Firstly, because there will be answers to problems that are far easier to implement if you understand the structures fully, and secondly because math is a really beautiful thing and it'd be a shame to intentionally avoid it", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m really not a fan of the &amp;quot;just treat it as a black box and focus on the result&amp;quot; way of thinking. Firstly, because there will be answers to problems that are far easier to implement if you understand the structures fully, and secondly because math is a really beautiful thing and it&amp;#39;d be a shame to intentionally avoid it&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb6ntd", "score_hidden": false, "stickied": false, "created": 1492319632.0, "created_utc": 1492290832.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaxaou", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cecilkorik", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "You don't need to really understand them on a mathematical level unless you're writing your own (don't do that).\n\nAll you need to understand is that a quaternion is a mathematical way of representing \"3 dimensional turning\". You can treat it as a black-box and without ever knowing what goes on inside it will pretty much always do what you expect and do the right thing. \n\nJust like a vector is a mathematical way of representing \"3 dimensional direction or movement\", a quaternion is a mathematical way of representing \"3 dimensional turning\" so that you can easily change that vector to any direction you want in a totally safe and predictable way.\n\nTurning left? Plug it into a quaternion. Looking up? Plug it into a quaternion. Looking up WHILE turning left? Plug it into a quaternion. Looking up so far that you end up looking backwards and upside down? Quaternion's got you covered. Don't want your view to be upside down now that you've flipped your head upside down and backwards? Quaternion can help you fix that too. It's the magical mathematical look-anywhere tool.", "edited": 1492278380.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t need to really understand them on a mathematical level unless you&amp;#39;re writing your own (don&amp;#39;t do that).&lt;/p&gt;\n\n&lt;p&gt;All you need to understand is that a quaternion is a mathematical way of representing &amp;quot;3 dimensional turning&amp;quot;. You can treat it as a black-box and without ever knowing what goes on inside it will pretty much always do what you expect and do the right thing. &lt;/p&gt;\n\n&lt;p&gt;Just like a vector is a mathematical way of representing &amp;quot;3 dimensional direction or movement&amp;quot;, a quaternion is a mathematical way of representing &amp;quot;3 dimensional turning&amp;quot; so that you can easily change that vector to any direction you want in a totally safe and predictable way.&lt;/p&gt;\n\n&lt;p&gt;Turning left? Plug it into a quaternion. Looking up? Plug it into a quaternion. Looking up WHILE turning left? Plug it into a quaternion. Looking up so far that you end up looking backwards and upside down? Quaternion&amp;#39;s got you covered. Don&amp;#39;t want your view to be upside down now that you&amp;#39;ve flipped your head upside down and backwards? Quaternion can help you fix that too. It&amp;#39;s the magical mathematical look-anywhere tool.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaxaou", "score_hidden": false, "stickied": false, "created": 1492306905.0, "created_utc": 1492278105.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgb5cam", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hazyPixels", "parent_id": "t1_dgb1y5v", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I was just going to write something like this but saw your post first. It's how I think of them also and I make a lot of use of axis-angle constructor to do the trig for me.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was just going to write something like this but saw your post first. It&amp;#39;s how I think of them also and I make a lot of use of axis-angle constructor to do the trig for me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb5cam", "score_hidden": false, "stickied": false, "created": 1492317799.0, "created_utc": 1492288999.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb1y5v", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "deftware", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "\nIt's virtually just a form of angle-axis rotation that lends itself well to compounding rotations. The only difference between angle-axis representation (Angle + XYZ axis) is that the rotation angle is stored in a quat as the cosine of the rotation angle, and the XYZ axis is scaled by the sine of the rotation angle - to produce a 'unit quaternion', which is what quaternion rotation is concerned with. Similarly, indicating a 3D direction is done with a unit vector.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s virtually just a form of angle-axis rotation that lends itself well to compounding rotations. The only difference between angle-axis representation (Angle + XYZ axis) is that the rotation angle is stored in a quat as the cosine of the rotation angle, and the XYZ axis is scaled by the sine of the rotation angle - to produce a &amp;#39;unit quaternion&amp;#39;, which is what quaternion rotation is concerned with. Similarly, indicating a 3D direction is done with a unit vector.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb1y5v", "score_hidden": false, "stickied": false, "created": 1492313189.0, "created_utc": 1492284389.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgatbk0", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ReallyHadToFixThat", "parent_id": "t1_dgakqlz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Sure, the math is more complex. The question was how to visualise them. \n\nIf you really want to be fancy you can also store them as x,y,w. Since the vector is normalised you can calculate z. Trades memory footprint for processor time. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sure, the math is more complex. The question was how to visualise them. &lt;/p&gt;\n\n&lt;p&gt;If you really want to be fancy you can also store them as x,y,w. Since the vector is normalised you can calculate z. Trades memory footprint for processor time. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatbk0", "score_hidden": false, "stickied": false, "created": 1492301403.0, "created_utc": 1492272603.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakqlz", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "aqissiaq", "parent_id": "t1_dgahjh4", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "That's not quite right though. what you're describing is called \"axis-angle\". To get the quaternion (qx,qy,qz,qw) from a \"skewer\" (vx,vy,vz) and angle a:\n\nqx = vx * sin(a/2)\n\nqy = vy * sin(a/2)\n\nqz = vz * sin(a/2)\n\nqw = cos(a/2)\n\nI really like the \"rotation-mixing\" visual model linked elsewhere in the thread.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s not quite right though. what you&amp;#39;re describing is called &amp;quot;axis-angle&amp;quot;. To get the quaternion (qx,qy,qz,qw) from a &amp;quot;skewer&amp;quot; (vx,vy,vz) and angle a:&lt;/p&gt;\n\n&lt;p&gt;qx = vx * sin(a/2)&lt;/p&gt;\n\n&lt;p&gt;qy = vy * sin(a/2)&lt;/p&gt;\n\n&lt;p&gt;qz = vz * sin(a/2)&lt;/p&gt;\n\n&lt;p&gt;qw = cos(a/2)&lt;/p&gt;\n\n&lt;p&gt;I really like the &amp;quot;rotation-mixing&amp;quot; visual model linked elsewhere in the thread.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgakqlz", "score_hidden": false, "stickied": false, "created": 1492286664.0, "created_utc": 1492257864.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgahjh4", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "ReallyHadToFixThat", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 1, "body": "The way I always picture them is that if you have a cube to rotate with a quaternion you are given an axis (x,y,z) which is a skewer that stabs through the cube where ever you want. Then you have the w, which is how far you rotate around that skewer. \n\nSo, a rotation around any given axis as you would do with euler angles would be (1, 0, 0, rotation). That gives you a \"skewer\" along the x axis, then you spin your model around it. (,0,1,0,rot) would be a rotation around y, (0,0,1,rot) for z. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The way I always picture them is that if you have a cube to rotate with a quaternion you are given an axis (x,y,z) which is a skewer that stabs through the cube where ever you want. Then you have the w, which is how far you rotate around that skewer. &lt;/p&gt;\n\n&lt;p&gt;So, a rotation around any given axis as you would do with euler angles would be (1, 0, 0, rotation). That gives you a &amp;quot;skewer&amp;quot; along the x axis, then you spin your model around it. (,0,1,0,rot) would be a rotation around y, (0,0,1,rot) for z. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgahjh4", "score_hidden": false, "stickied": false, "created": 1492277046.0, "created_utc": 1492248246.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dganjg5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "caltheon", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Think of it like your object is your camera.  You attach a selfie-stick to the camera and then rotate the selfie stick to move the camera around.  That's basically a quaternarion.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of it like your object is your camera.  You attach a selfie-stick to the camera and then rotate the selfie stick to move the camera around.  That&amp;#39;s basically a quaternarion.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dganjg5", "score_hidden": false, "stickied": false, "created": 1492292595.0, "created_utc": 1492263795.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgapbj3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "JesseRMeyer", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "They are at least 4th dimensional objects, so our intuition will fail us.\n\nThey are mathematical objects that encode rotations. It turns out, rotations are sort of strange in 3 dimensions (there is not always enough room to spin through), but in 4 dimensions, there is more space to turn in that can simplify rotations.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They are at least 4th dimensional objects, so our intuition will fail us.&lt;/p&gt;\n\n&lt;p&gt;They are mathematical objects that encode rotations. It turns out, rotations are sort of strange in 3 dimensions (there is not always enough room to spin through), but in 4 dimensions, there is more space to turn in that can simplify rotations.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgapbj3", "score_hidden": false, "stickied": false, "created": 1492295626.0, "created_utc": 1492266826.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgb2t67", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ythl", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "You don't need to visualize them. Just think of them as the things you use to rotate things. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t need to visualize them. Just think of them as the things you use to rotate things. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb2t67", "score_hidden": false, "stickied": false, "created": 1492314348.0, "created_utc": 1492285548.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgb8l7l", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ludonarrator", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "A bit late, but I'll chime in nevertheless. \n\nThis is how I think of them: as *quotients* of vectors. \n\nLet there be a quantity `Q = A / B` where `A` and `B` are two (3D) vectors. Thus, \n\n`Q [times] B = A`\n\nTherefore, `B`, when multiplied by `Q` (at least some sort of product) yields `A`. Which implies that `B` is rotated and scaled to the orientation and magnitude of `A`. If `||A|| = ||B||`, `Q` is effectively rotating `B` to `A`'s orientation. One of the ways for `Q` to specify such a transformation (in 3D),  is for it to define a unit vector that serves as the **axis** of rotation, and a scalar that represents the *amount* of rotation about that axis. This is is called an **Angle Axis** Quaternion. \n\nYou literally poke a vector through the origin of the target vector, and specify the amount to rotate it by (in degrees/radians). The resultant quantity is a Quaternion, which, as you know, when multiplied by a vector will transform that vector to a desired target vector. This is also why it is really useful for interpolating rotation between frames. \n\n[Numberphile video](https://www.youtube.com/watch?v=3BR8tK-LuB0)   \n\nEdit: added the caveat that the `||B||` is unchanged in Axis Angle transformations.            ", "edited": 1492300004.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A bit late, but I&amp;#39;ll chime in nevertheless. &lt;/p&gt;\n\n&lt;p&gt;This is how I think of them: as &lt;em&gt;quotients&lt;/em&gt; of vectors. &lt;/p&gt;\n\n&lt;p&gt;Let there be a quantity &lt;code&gt;Q = A / B&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are two (3D) vectors. Thus, &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Q [times] B = A&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Therefore, &lt;code&gt;B&lt;/code&gt;, when multiplied by &lt;code&gt;Q&lt;/code&gt; (at least some sort of product) yields &lt;code&gt;A&lt;/code&gt;. Which implies that &lt;code&gt;B&lt;/code&gt; is rotated and scaled to the orientation and magnitude of &lt;code&gt;A&lt;/code&gt;. If &lt;code&gt;||A|| = ||B||&lt;/code&gt;, &lt;code&gt;Q&lt;/code&gt; is effectively rotating &lt;code&gt;B&lt;/code&gt; to &lt;code&gt;A&lt;/code&gt;&amp;#39;s orientation. One of the ways for &lt;code&gt;Q&lt;/code&gt; to specify such a transformation (in 3D),  is for it to define a unit vector that serves as the &lt;strong&gt;axis&lt;/strong&gt; of rotation, and a scalar that represents the &lt;em&gt;amount&lt;/em&gt; of rotation about that axis. This is is called an &lt;strong&gt;Angle Axis&lt;/strong&gt; Quaternion. &lt;/p&gt;\n\n&lt;p&gt;You literally poke a vector through the origin of the target vector, and specify the amount to rotate it by (in degrees/radians). The resultant quantity is a Quaternion, which, as you know, when multiplied by a vector will transform that vector to a desired target vector. This is also why it is really useful for interpolating rotation between frames. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=3BR8tK-LuB0\"&gt;Numberphile video&lt;/a&gt;   &lt;/p&gt;\n\n&lt;p&gt;Edit: added the caveat that the &lt;code&gt;||B||&lt;/code&gt; is unchanged in Axis Angle transformations.            &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb8l7l", "score_hidden": false, "stickied": false, "created": 1492322285.0, "created_utc": 1492293485.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgafp5q", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "cirmic", "parent_id": "t1_dgaex7i", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "True, that's what I meant with there being a bit more than that. Axis-angle is at least something I can visualize in my head and it's quite close representation.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;True, that&amp;#39;s what I meant with there being a bit more than that. Axis-angle is at least something I can visualize in my head and it&amp;#39;s quite close representation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgafp5q", "score_hidden": false, "stickied": false, "created": 1492271446.0, "created_utc": 1492242646.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgatuyh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "a1studmuffin", "parent_id": "t1_dgaex7i", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "True, but ignoring the internals, as long as you understand what the quaternion operations do, you can still think about them for rotational operations and storage as you would an axis/angle pair.  You just have to remember that they're not stored that way.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;True, but ignoring the internals, as long as you understand what the quaternion operations do, you can still think about them for rotational operations and storage as you would an axis/angle pair.  You just have to remember that they&amp;#39;re not stored that way.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatuyh", "score_hidden": false, "stickied": false, "created": 1492302162.0, "created_utc": 1492273362.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaex7i", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "iprobablydisagree", "parent_id": "t1_dgae8jo", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "They don't really work that way, I think. For normalized axis vector ax and an angle, the corresponding quaternion is\n\nqx = ax * sin(angle/2)\nqy = ay * sin(angle/2)\nqz = az * sin(angle/2)\nqw = cos(angle/2)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They don&amp;#39;t really work that way, I think. For normalized axis vector ax and an angle, the corresponding quaternion is&lt;/p&gt;\n\n&lt;p&gt;qx = ax * sin(angle/2)\nqy = ay * sin(angle/2)\nqz = az * sin(angle/2)\nqw = cos(angle/2)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaex7i", "score_hidden": false, "stickied": false, "created": 1492269366.0, "created_utc": 1492240566.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgae8jo", "gilded": 0, "archived": false, "score": -5, "report_reasons": null, "author": "cirmic", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 1, "body": "axis and angle\n\nThey are a bit more than that but I find it much easier to understand than the 4D hypersphere version.", "edited": 1492251173.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;axis and angle&lt;/p&gt;\n\n&lt;p&gt;They are a bit more than that but I find it much easier to understand than the 4D hypersphere version.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgae8jo", "score_hidden": false, "stickied": false, "created": 1492267633.0, "created_utc": 1492238833.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65hbly", "likes": null, "replies": "", "user_reports": [], "id": "dgas5mi", "gilded": 0, "archived": false, "score": -2, "report_reasons": null, "author": "skytomorrownow", "parent_id": "t3_65hbly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Quaternions are imaginary, silly.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quaternions are imaginary, silly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgas5mi", "score_hidden": false, "stickied": false, "created": 1492299783.0, "created_utc": 1492270983.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -2}}], "after": null, "before": null}}]