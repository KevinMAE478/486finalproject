[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been working on this personal project for a few months. Basically, part of the game is playing songs with arrows and steps just like in Stepmania or any DDR.\nI&amp;#39;m using Unity 5.5.2.\nAs of now, my game can correctly parse .sm files (only for dance-single), extracting metadata, difficulties and steps. Then I have setup a basic UI with my 4 &amp;quot;control&amp;quot; arrows (the arrow bar on the bottom of the screen) and a functioning &amp;quot;conductor&amp;quot; which gives me a global timer and fires an event called &amp;quot;Beat&amp;quot; for each beat.\nThe problem is, I am unable to tie these 2 parts together. Two solutions came to my mind, but they both have problems:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I could calculate the duration of a measure (song duration/number of measures) and the time of each step (that is, when it should be pressed) and then simply spawn them on screen according to these values. User precision would simply end up being &lt;em&gt;keydownTime - noteTime&lt;/em&gt;. Problem is, these calculations generate an error which would totally ruin the experience. I tried printing the time a measure is expected to start and the time it is actually spawned and they differ by roughly |0.1~0.5| seconds, which is way too much for a game based on timing.&lt;/li&gt;\n&lt;li&gt; I could completely avoid having times outside of my conductor and base everything on events it can fire, spawning a measure every 4 beats (on-screen position can be calculated based on the duration of a beat), but then how could I determine the player&amp;#39;s performance? Should I base it on the position of arrows? This wouldn&amp;#39;t be any more precise than the first solution...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Does anyone have any suggestion or general idea on how I should tackle this problem? This is really stressing me out and preventing my project from making any progress.\nThanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've been working on this personal project for a few months. Basically, part of the game is playing songs with arrows and steps just like in Stepmania or any DDR.\nI'm using Unity 5.5.2.\nAs of now, my game can correctly parse .sm files (only for dance-single), extracting metadata, difficulties and steps. Then I have setup a basic UI with my 4 \"control\" arrows (the arrow bar on the bottom of the screen) and a functioning \"conductor\" which gives me a global timer and fires an event called \"Beat\" for each beat.\nThe problem is, I am unable to tie these 2 parts together. Two solutions came to my mind, but they both have problems:\n\n* I could calculate the duration of a measure (song duration/number of measures) and the time of each step (that is, when it should be pressed) and then simply spawn them on screen according to these values. User precision would simply end up being *keydownTime - noteTime*. Problem is, these calculations generate an error which would totally ruin the experience. I tried printing the time a measure is expected to start and the time it is actually spawned and they differ by roughly |0.1~0.5| seconds, which is way too much for a game based on timing.\n*  I could completely avoid having times outside of my conductor and base everything on events it can fire, spawning a measure every 4 beats (on-screen position can be calculated based on the duration of a beat), but then how could I determine the player's performance? Should I base it on the position of arrows? This wouldn't be any more precise than the first solution...\n\nDoes anyone have any suggestion or general idea on how I should tackle this problem? This is really stressing me out and preventing my project from making any progress.\nThanks!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Question", "id": "65ow38", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 13, "report_reasons": null, "author": "davidevolta98", "saved": false, "mod_reports": [], "name": "t3_65ow38", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": "question", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/65ow38/cloning_stepmaniaddr_with_unity/", "num_reports": null, "locked": false, "stickied": false, "created": 1492374810.0, "url": "https://www.reddit.com/r/gamedev/comments/65ow38/cloning_stepmaniaddr_with_unity/", "author_flair_text": null, "quarantine": false, "title": "Cloning Stepmania/DDR with Unity", "created_utc": 1492346010.0, "distinguished": null, "media": null, "upvote_ratio": 0.79, "num_comments": 8, "visited": false, "subreddit_type": "public", "ups": 13}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": "", "user_reports": [], "id": "dgdcnlz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "davidevolta98", "parent_id": "t1_dgcn582", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yes, I could use screen position as a reference, but would it be precise enough?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, I could use screen position as a reference, but would it be precise enough?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgdcnlz", "score_hidden": false, "stickied": false, "created": 1492455051.0, "created_utc": 1492426251.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcn582", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "IIoWoII", "parent_id": "t1_dgckk23", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Why not get the distance between the place where the beat is and where it would be a 'perfect' hit? Then adjust for the speed.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why not get the distance between the place where the beat is and where it would be a &amp;#39;perfect&amp;#39; hit? Then adjust for the speed.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgcn582", "score_hidden": false, "stickied": false, "created": 1492408734.0, "created_utc": 1492379934.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgckk23", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "davidevolta98", "parent_id": "t1_dgc1qph", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I have an idea about how to spawn them, but the main problem is how do I get the delta between when the player presses a key and when it should have been pressed? I would need to know strumTime as mentioned [here](https://www.reddit.com/r/gamedev/comments/13y26t/how_do_rhythm_games_stay_in_sync_with_the_music)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have an idea about how to spawn them, but the main problem is how do I get the delta between when the player presses a key and when it should have been pressed? I would need to know strumTime as mentioned &lt;a href=\"https://www.reddit.com/r/gamedev/comments/13y26t/how_do_rhythm_games_stay_in_sync_with_the_music\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgckk23", "score_hidden": false, "stickied": false, "created": 1492405334.0, "created_utc": 1492376534.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc1qph", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "IIoWoII", "parent_id": "t3_65ow38", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I don't really understand the problem but would it be a problem to have spawn them all at the beginning of the song and just float them up with a constant speed? (although I know sometimes they have differering speeds) but then you can just do simple maths to calculate the distance they need to be. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t really understand the problem but would it be a problem to have spawn them all at the beginning of the song and just float them up with a constant speed? (although I know sometimes they have differering speeds) but then you can just do simple maths to calculate the distance they need to be. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgc1qph", "score_hidden": false, "stickied": false, "created": 1492379706.0, "created_utc": 1492350906.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": "", "user_reports": [], "id": "dgcklp8", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "davidevolta98", "parent_id": "t1_dgc1zgg", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm basing everything on AudioClip.dspTime, am I wrong?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m basing everything on AudioClip.dspTime, am I wrong?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgcklp8", "score_hidden": false, "stickied": false, "created": 1492405398.0, "created_utc": 1492376598.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc1zgg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Caratsi", "parent_id": "t3_65ow38", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Whatever you do, make sure you're using AudioSettings.dspTime for a rhythm game to get accurate timing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Whatever you do, make sure you&amp;#39;re using AudioSettings.dspTime for a rhythm game to get accurate timing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgc1zgg", "score_hidden": false, "stickied": false, "created": 1492380127.0, "created_utc": 1492351327.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65ow38", "likes": null, "replies": "", "user_reports": [], "id": "dgckh0m", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "davidevolta98", "parent_id": "t1_dgcd6ym", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Thank you, but I had already read them months ago. The first one helped me with the conductor and the second one focuses mainly on input/output device specific lags, but they both can't answer my question...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you, but I had already read them months ago. The first one helped me with the conductor and the second one focuses mainly on input/output device specific lags, but they both can&amp;#39;t answer my question...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgckh0m", "score_hidden": false, "stickied": false, "created": 1492405215.0, "created_utc": 1492376415.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcd6ym", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "fancifuldaffodil", "parent_id": "t3_65ow38", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I had a similar question myself a while ago, and ended up finding two real good reddit posts that got into just this which can be found [here](https://www.reddit.com/r/gamedev/comments/2fxvk4/heres_a_quick_and_dirty_guide_i_just_wrote_how_to/) and [here](https://www.reddit.com/r/gamedev/comments/13y26t/how_do_rhythm_games_stay_in_sync_with_the_music/)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I had a similar question myself a while ago, and ended up finding two real good reddit posts that got into just this which can be found &lt;a href=\"https://www.reddit.com/r/gamedev/comments/2fxvk4/heres_a_quick_and_dirty_guide_i_just_wrote_how_to/\"&gt;here&lt;/a&gt; and &lt;a href=\"https://www.reddit.com/r/gamedev/comments/13y26t/how_do_rhythm_games_stay_in_sync_with_the_music/\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgcd6ym", "score_hidden": false, "stickied": false, "created": 1492395664.0, "created_utc": 1492366864.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]