[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Greetings!  &lt;/p&gt;\n\n&lt;p&gt;I have a presentation I&amp;#39;m using to organize my thoughts:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.google.com/presentation/d/17XGUV4XnJ0amohoEh8vikZjAP_Enl2Q5IIiA0ybI7ec/edit?usp=drivesdk\"&gt;https://docs.google.com/presentation/d/17XGUV4XnJ0amohoEh8vikZjAP_Enl2Q5IIiA0ybI7ec/edit?usp=drivesdk&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m looking for criticism on the overall endeavor, if I&amp;#39;m missing a component, or if I&amp;#39;m missing any features that one might want in a game engine. Anyone should be able to comment on the presentation above.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m also trying to figure out what the best medium would be to communicate this. My ideas thus far:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;A video going over the entire presentation offering explanations and examples of everything. This is the simplest but also lacks actual API design.&lt;/li&gt;\n&lt;li&gt;A series of videos or articles, one for each component, that goes over everything in the slide and also offers  high level designs on the solutions one might choose per feature.&lt;/li&gt;\n&lt;li&gt;A combination of 1 and 2 so one offers a complete overview and the second allows more detail if the person is interested.&lt;/li&gt;\n&lt;li&gt;Doing #3 except with actual code being developed in a few different languages (Java, C++, C#, TypeScript) and something that shows off the code working.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Now as you can tell it really could escalate in how much work could be done. This is something I&amp;#39;ve been very passionate about for the past 11 years (have been refining my own GE for that long) so I&amp;#39;m up for the challenge. If I get enough support for #3 or #4 I&amp;#39;ll need to figure out how to convince my wife its worth the time, not sure how to do that yet.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m already actively working on the end result game engine so #3 or #4 is doable, I just need to determine if it will be worth my time.&lt;/p&gt;\n\n&lt;p&gt;Thanks for reading and any input you may have!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Greetings!  \n  \nI have a presentation I'm using to organize my thoughts:  \n  \nhttps://docs.google.com/presentation/d/17XGUV4XnJ0amohoEh8vikZjAP_Enl2Q5IIiA0ybI7ec/edit?usp=drivesdk  \n\nI'm looking for criticism on the overall endeavor, if I'm missing a component, or if I'm missing any features that one might want in a game engine. Anyone should be able to comment on the presentation above.\n\nI'm also trying to figure out what the best medium would be to communicate this. My ideas thus far:\n\n1. A video going over the entire presentation offering explanations and examples of everything. This is the simplest but also lacks actual API design.\n2. A series of videos or articles, one for each component, that goes over everything in the slide and also offers  high level designs on the solutions one might choose per feature.\n3. A combination of 1 and 2 so one offers a complete overview and the second allows more detail if the person is interested.\n4. Doing #3 except with actual code being developed in a few different languages (Java, C++, C#, TypeScript) and something that shows off the code working.\n\nNow as you can tell it really could escalate in how much work could be done. This is something I've been very passionate about for the past 11 years (have been refining my own GE for that long) so I'm up for the challenge. If I get enough support for #3 or #4 I'll need to figure out how to convince my wife its worth the time, not sure how to do that yet.\n\nI'm already actively working on the end result game engine so #3 or #4 is doable, I just need to determine if it will be worth my time.\n\nThanks for reading and any input you may have!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65itl3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 93, "report_reasons": null, "author": "ClickerMonkey", "saved": false, "mod_reports": [], "name": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/65itl3/working_on_how_to_plan_and_design_a_game_engine/", "num_reports": null, "locked": false, "stickied": false, "created": 1492287776.0, "url": "https://www.reddit.com/r/gamedev/comments/65itl3/working_on_how_to_plan_and_design_a_game_engine/", "author_flair_text": "GameProgBlog.com", "quarantine": false, "title": "Working on \"How to plan and design a game engine\" and I'm looking for feedback on content, organization, and the best medium", "created_utc": 1492258976.0, "distinguished": null, "media": null, "upvote_ratio": 0.91, "num_comments": 31, "visited": false, "subreddit_type": "public", "ups": 93}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgasw57", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgarxga", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Thanks for taking the time to look at it, users of game engines are exactly the type of people I'm interested in hearing from!\n\nCan you point out any of the sections that seem more theoretical than practical? I would love to know so if it makes sense I can add specifics to the slide so I know to address them.\n\nThanks for your time!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for taking the time to look at it, users of game engines are exactly the type of people I&amp;#39;m interested in hearing from!&lt;/p&gt;\n\n&lt;p&gt;Can you point out any of the sections that seem more theoretical than practical? I would love to know so if it makes sense I can add specifics to the slide so I know to address them.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your time!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgasw57", "score_hidden": false, "stickied": false, "created": 1492300821.0, "created_utc": 1492272021.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbrqy6", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Kinrany", "parent_id": "t1_dgat6rf", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Maybe you should split your presentation into two or three parts: components that are absolutely necessary, the ones that are more or less common and the ones that solve some niche problem. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe you should split your presentation into two or three parts: components that are absolutely necessary, the ones that are more or less common and the ones that solve some niche problem. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbrqy6", "score_hidden": false, "stickied": false, "created": 1492352117.0, "created_utc": 1492323317.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgat6rf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgarxga", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; However, flipping through the slides convinced me to never, ever consider attempting to build my own game engine.\n\nI did try to list every possible component to a game engine - part of building your own is selecting exactly what you want yours to do. No game engine has all of these components (that I've seen at least)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;However, flipping through the slides convinced me to never, ever consider attempting to build my own game engine.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I did try to list every possible component to a game engine - part of building your own is selecting exactly what you want yours to do. No game engine has all of these components (that I&amp;#39;ve seen at least)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgat6rf", "score_hidden": false, "stickied": false, "created": 1492301220.0, "created_utc": 1492272420.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgarxga", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "vtgorilla", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm just a pleb consumer of engine technology, so I can't comment too much on your content. However, flipping through the slides convinced me to never, ever consider attempting to build my own game engine.\n\nI think you just need to consider whether you want your content to be theoretical or practical. Your thoughts seem to point to you jumping back and forth across that line.\n\nBecause of the detail required to actually show examples, I think you have to break this up if you want to include the practical side. Your slideshow can work as a nice driver of a video, where you verbally elaborate where needed and show visual examples of the various components.\n\nThen, if you still have energy, you could add additional courses/videos going into detail on each component and show the down to metal coding one might use to actually implement.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m just a pleb consumer of engine technology, so I can&amp;#39;t comment too much on your content. However, flipping through the slides convinced me to never, ever consider attempting to build my own game engine.&lt;/p&gt;\n\n&lt;p&gt;I think you just need to consider whether you want your content to be theoretical or practical. Your thoughts seem to point to you jumping back and forth across that line.&lt;/p&gt;\n\n&lt;p&gt;Because of the detail required to actually show examples, I think you have to break this up if you want to include the practical side. Your slideshow can work as a nice driver of a video, where you verbally elaborate where needed and show visual examples of the various components.&lt;/p&gt;\n\n&lt;p&gt;Then, if you still have energy, you could add additional courses/videos going into detail on each component and show the down to metal coding one might use to actually implement.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgarxga", "score_hidden": false, "stickied": false, "created": 1492299463.0, "created_utc": 1492270663.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgatbzz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgat9sy", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Absolutely, I'll add that to Design &amp; Implementation Decisions", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Absolutely, I&amp;#39;ll add that to Design &amp;amp; Implementation Decisions&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatbzz", "score_hidden": false, "stickied": false, "created": 1492301420.0, "created_utc": 1492272620.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgat9sy", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "VincentDankGogh", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Probably advice on how/when to integrate third party libraries would be nice. Not everyone wants to build their own math library, for example, when a third party library could be much more efficient and save you lots of time perfecting your own. Looks good though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Probably advice on how/when to integrate third party libraries would be nice. Not everyone wants to build their own math library, for example, when a third party library could be much more efficient and save you lots of time perfecting your own. Looks good though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgat9sy", "score_hidden": false, "stickied": false, "created": 1492301336.0, "created_utc": 1492272536.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgaues1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgatjly", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; You can implement actual code if you like, but you could also just have pseudo-code to cover the overall specific logic without needing to get into language specific syntax and details. This saves you from having to cover language/environment setup and build systems as well.\n\nThats why I was thinking about using Typescript. Everyone has a browser with an excellent debugger - and Typescript has features found in the other languages (types, generics, etc). Typescript won't work for some of the components, but I think it could work. As long as I keep the TS projects well documented and setup I don't think it will be too much of a hassle for people interested in modifying the code (people can use the JS output without the hassle of setting up an environment).\n\n&gt; You may want to cover what \"base\" systems almost every game would need\n\nThat's something I can easily do now - I'll add an asterisk to \"base\" components.\n\n&gt; Easing is probably best just handled as part of the animation or path ....\n\nYeah you're right, I should add it to Path. There are non-animation components like networking that need to interpolate or the rendering component when you have more draw frames than update frames - so I broke it out. It does seem very small and minor but could be used in a few places. If someone wants to use the networking code I don't know if I want them to require the entire path or animation library. That's the logic behind it however - but most people aren't looking to create a game engine with components that can be used in any existing code base. Game engines are typically \"you must use all of me and no other game engine!\".\n\nThanks for your time, and thanks for any future time you spend later reading it.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;You can implement actual code if you like, but you could also just have pseudo-code to cover the overall specific logic without needing to get into language specific syntax and details. This saves you from having to cover language/environment setup and build systems as well.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Thats why I was thinking about using Typescript. Everyone has a browser with an excellent debugger - and Typescript has features found in the other languages (types, generics, etc). Typescript won&amp;#39;t work for some of the components, but I think it could work. As long as I keep the TS projects well documented and setup I don&amp;#39;t think it will be too much of a hassle for people interested in modifying the code (people can use the JS output without the hassle of setting up an environment).&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;You may want to cover what &amp;quot;base&amp;quot; systems almost every game would need&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s something I can easily do now - I&amp;#39;ll add an asterisk to &amp;quot;base&amp;quot; components.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Easing is probably best just handled as part of the animation or path ....&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yeah you&amp;#39;re right, I should add it to Path. There are non-animation components like networking that need to interpolate or the rendering component when you have more draw frames than update frames - so I broke it out. It does seem very small and minor but could be used in a few places. If someone wants to use the networking code I don&amp;#39;t know if I want them to require the entire path or animation library. That&amp;#39;s the logic behind it however - but most people aren&amp;#39;t looking to create a game engine with components that can be used in any existing code base. Game engines are typically &amp;quot;you must use all of me and no other game engine!&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your time, and thanks for any future time you spend later reading it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgaues1", "score_hidden": false, "stickied": false, "created": 1492302932.0, "created_utc": 1492274132.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgatjly", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mduffor", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'll look over the full thing later (looked through the first half or so), but I'd probably suggest number 4 above.  You have a lot of material there, and each section is easily its own video.  Not all of that material can be consumed in a single sitting.  \n\nYou can implement actual code if you like, but you could also just have pseudo-code to cover the overall specific logic without needing to get into language specific syntax and details.  This saves you from having to cover language/environment setup and build systems as well.  \n\nAs for content, at first glance it looks like you've done a pretty thorough job.  It is important to stress that not everything needs to be implemented for every type of game.  You may want to cover what \"base\" systems almost every game would need, and then cover the \"optional\" systems that different genres require.  Otherwise it will seem way too daunting to newcomers.\n\nNitPick: Easing is probably best just handled as part of the animation or path/curve system, especially if you are dealing with different cubic curve types. :-P\n\nGood Luck!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll look over the full thing later (looked through the first half or so), but I&amp;#39;d probably suggest number 4 above.  You have a lot of material there, and each section is easily its own video.  Not all of that material can be consumed in a single sitting.  &lt;/p&gt;\n\n&lt;p&gt;You can implement actual code if you like, but you could also just have pseudo-code to cover the overall specific logic without needing to get into language specific syntax and details.  This saves you from having to cover language/environment setup and build systems as well.  &lt;/p&gt;\n\n&lt;p&gt;As for content, at first glance it looks like you&amp;#39;ve done a pretty thorough job.  It is important to stress that not everything needs to be implemented for every type of game.  You may want to cover what &amp;quot;base&amp;quot; systems almost every game would need, and then cover the &amp;quot;optional&amp;quot; systems that different genres require.  Otherwise it will seem way too daunting to newcomers.&lt;/p&gt;\n\n&lt;p&gt;NitPick: Easing is probably best just handled as part of the animation or path/curve system, especially if you are dealing with different cubic curve types. :-P&lt;/p&gt;\n\n&lt;p&gt;Good Luck!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgatjly", "score_hidden": false, "stickied": false, "created": 1492301711.0, "created_utc": 1492272911.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbbxeb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbbqwm", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yup - added it to slide #6", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yup - added it to slide #6&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbbxeb", "score_hidden": false, "stickied": false, "created": 1492327124.0, "created_utc": 1492298324.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbbqwm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TerryPlaysGames", "parent_id": "t1_dgbbdjs", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Yeah, it's not just about libraries tho. For input, as an example, your actual implementation for Windows is very different to what it would be for Mac, Linux, PS4, etc. Same for other things like file system :-)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, it&amp;#39;s not just about libraries tho. For input, as an example, your actual implementation for Windows is very different to what it would be for Mac, Linux, PS4, etc. Same for other things like file system :-)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbbqwm", "score_hidden": false, "stickied": false, "created": 1492326860.0, "created_utc": 1492298060.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbbdjs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbb0dx", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Thank you! Yes, I should mention that explicitly (I do for the graphics component, but not the others). I design using facades all the time, I guess I forgot that someone would couple their engine to a specific library (yuck).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you! Yes, I should mention that explicitly (I do for the graphics component, but not the others). I design using facades all the time, I guess I forgot that someone would couple their engine to a specific library (yuck).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbbdjs", "score_hidden": false, "stickied": false, "created": 1492326326.0, "created_utc": 1492297526.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbb0dx", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "TerryPlaysGames", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "One thing I noticed that you have not highlighted is the portability of the Game Engine. When developing an engine it is important to think about abstraction of your \"Components\" very early. I would start by designing a few interface classes with the functionality you would expect the components to implement. I do like your presentation, it makes for an interesting read. Nice work so far. :-)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One thing I noticed that you have not highlighted is the portability of the Game Engine. When developing an engine it is important to think about abstraction of your &amp;quot;Components&amp;quot; very early. I would start by designing a few interface classes with the functionality you would expect the components to implement. I do like your presentation, it makes for an interesting read. Nice work so far. :-)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbb0dx", "score_hidden": false, "stickied": false, "created": 1492325788.0, "created_utc": 1492296988.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbnrnr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ikonic_games", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm writing my own very opinionated engine now as I work and I have to say that the slides alone are extremely helpful to me.  I think the way that you presented the information is actually the best.  A broad overview and then into the nitty gritty.  I'd stick with doing #3 and add minimal code examples where you think it is relevant.  Maybe going into more detail if there is specific interest.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m writing my own very opinionated engine now as I work and I have to say that the slides alone are extremely helpful to me.  I think the way that you presented the information is actually the best.  A broad overview and then into the nitty gritty.  I&amp;#39;d stick with doing #3 and add minimal code examples where you think it is relevant.  Maybe going into more detail if there is specific interest.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbnrnr", "score_hidden": false, "stickied": false, "created": 1492344468.0, "created_utc": 1492315668.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbc25d", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgb9z77", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Which talk? It looks like the Tiger engine is what they call the engine they're using in Destiny - and they have quite a few articles and videos on their work. I watched one on multithreading in Destiny which contributed to the \"multithreading\" and \"tasks\" components. In the presentation I mentioned the task component in the AI components (and others) as a way to manage computationally expensive logic.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which talk? It looks like the Tiger engine is what they call the engine they&amp;#39;re using in Destiny - and they have quite a few articles and videos on their work. I watched one on multithreading in Destiny which contributed to the &amp;quot;multithreading&amp;quot; and &amp;quot;tasks&amp;quot; components. In the presentation I mentioned the task component in the AI components (and others) as a way to manage computationally expensive logic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbc25d", "score_hidden": false, "stickied": false, "created": 1492327313.0, "created_utc": 1492298513.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb9z77", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TWERK_WIZARD", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'd watch Bungie's GDC talk on the Tiger engine if you haven't ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d watch Bungie&amp;#39;s GDC talk on the Tiger engine if you haven&amp;#39;t &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgb9z77", "score_hidden": false, "stickied": false, "created": 1492324260.0, "created_utc": 1492295460.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbwov5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "voodoosoft", "parent_id": "t1_dgbbodu", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Having a couple of finished projects is absolutely crucial for any kind of library - you never know if you solved all problems until finishing and do a retrospective, you wont't find out about pros and cons of the designs, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Having a couple of finished projects is absolutely crucial for any kind of library - you never know if you solved all problems until finishing and do a retrospective, you wont&amp;#39;t find out about pros and cons of the designs, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbwov5", "score_hidden": false, "stickied": false, "created": 1492367068.0, "created_utc": 1492338268.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbbodu", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbb06c", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "There a few games here and there - there are many versions of the library I've been putting together. Most games I've built with the engine I never finished - I'm not artistic so I typically solve all the interesting programming problems of a game then get bored. That's why I love engine development.  \n  \nSome random videos I have of games I worked one that uses my engine:  \n  \n(voxel game) https://www.youtube.com/watch?v=1SsM_5VAEDM  \n(another voxel game) https://www.youtube.com/watch?v=CmeRHANgPSY  \n(steering behavior example) https://www.youtube.com/watch?v=1E52lrlrCb0  \n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There a few games here and there - there are many versions of the library I&amp;#39;ve been putting together. Most games I&amp;#39;ve built with the engine I never finished - I&amp;#39;m not artistic so I typically solve all the interesting programming problems of a game then get bored. That&amp;#39;s why I love engine development.  &lt;/p&gt;\n\n&lt;p&gt;Some random videos I have of games I worked one that uses my engine:  &lt;/p&gt;\n\n&lt;p&gt;(voxel game) &lt;a href=\"https://www.youtube.com/watch?v=1SsM_5VAEDM\"&gt;https://www.youtube.com/watch?v=1SsM_5VAEDM&lt;/a&gt;&lt;br/&gt;\n(another voxel game) &lt;a href=\"https://www.youtube.com/watch?v=CmeRHANgPSY\"&gt;https://www.youtube.com/watch?v=CmeRHANgPSY&lt;/a&gt;&lt;br/&gt;\n(steering behavior example) &lt;a href=\"https://www.youtube.com/watch?v=1E52lrlrCb0\"&gt;https://www.youtube.com/watch?v=1E52lrlrCb0&lt;/a&gt;  &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbbodu", "score_hidden": false, "stickied": false, "created": 1492326758.0, "created_utc": 1492297958.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbb06c", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PhiloDoe", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Which games are using your engine?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which games are using your engine?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbb06c", "score_hidden": false, "stickied": false, "created": 1492325780.0, "created_utc": 1492296980.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbh9xm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbfeg3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; That's not possible though. You still have no control over when your memory is dumped.\n\nYou avoid Garbage Collection stops by avoiding excessive heap allocations during game play. There's actually a specific amount of memory depending on your FPS and the JVM version that if allocated during gameplay it will trigger a GC - as long as your per-frame allocation is below that number you never notice a GC (this is subjective but myself and other experienced java game developers have noticed this as well but haven't been able/don't care to actually solve exactly how much).\n\n&gt; Both C# and Java are also ridiculous memory hogs compared to languages like C++\n\nJava does use more memory, but memory is cheap now... you can do a lot with a gig or two. If your game is heavily using OOP then you could be using a ton of space. If you develop your game using data-oriented programming you really shouldn't be using that much more memory.\n\n&gt; http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;lang2=gpp\n\nThose are all pretty unrelated and unremarkable tests, they don't even warm up the JVM so it can optimize your byte code to perform even faster than an average C++ application could (there are examples of Java being faster than C++ out there, even ported games). \n\n&gt; The bigger problem is Java's graphics API's are all pretty dated\n\nLWJGL is a very impressive binding to a few different libraries (OpenGL, OpenAL, etc), I would look it up if I were you! A library like LibGDX on top of that makes Java a very attractive option. Write code once and deploy almost everywhere (minus consoles).\n\nI think the Java Game development environment is filled with programming newbs who have happened to learn Java (either because someone convinced them online or because most higher education schools focus on Java more) so they program games like they program normal java applications.\n\nI have several large 3d java games and I've never seen any performance problems running on my older laptops. I use to have problems when I first started with GC causing issues, you learn what not to do.\n\nThanks for your input, I do really like C# - I will have several components developed in C# because I still use it and I have friends that exclusively use C# as well for game development.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;That&amp;#39;s not possible though. You still have no control over when your memory is dumped.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You avoid Garbage Collection stops by avoiding excessive heap allocations during game play. There&amp;#39;s actually a specific amount of memory depending on your FPS and the JVM version that if allocated during gameplay it will trigger a GC - as long as your per-frame allocation is below that number you never notice a GC (this is subjective but myself and other experienced java game developers have noticed this as well but haven&amp;#39;t been able/don&amp;#39;t care to actually solve exactly how much).&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Both C# and Java are also ridiculous memory hogs compared to languages like C++&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Java does use more memory, but memory is cheap now... you can do a lot with a gig or two. If your game is heavily using OOP then you could be using a ton of space. If you develop your game using data-oriented programming you really shouldn&amp;#39;t be using that much more memory.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=\"http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;amp;lang2=gpp\"&gt;http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;amp;lang2=gpp&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Those are all pretty unrelated and unremarkable tests, they don&amp;#39;t even warm up the JVM so it can optimize your byte code to perform even faster than an average C++ application could (there are examples of Java being faster than C++ out there, even ported games). &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The bigger problem is Java&amp;#39;s graphics API&amp;#39;s are all pretty dated&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;LWJGL is a very impressive binding to a few different libraries (OpenGL, OpenAL, etc), I would look it up if I were you! A library like LibGDX on top of that makes Java a very attractive option. Write code once and deploy almost everywhere (minus consoles).&lt;/p&gt;\n\n&lt;p&gt;I think the Java Game development environment is filled with programming newbs who have happened to learn Java (either because someone convinced them online or because most higher education schools focus on Java more) so they program games like they program normal java applications.&lt;/p&gt;\n\n&lt;p&gt;I have several large 3d java games and I&amp;#39;ve never seen any performance problems running on my older laptops. I use to have problems when I first started with GC causing issues, you learn what not to do.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your input, I do really like C# - I will have several components developed in C# because I still use it and I have friends that exclusively use C# as well for game development.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbh9xm", "score_hidden": false, "stickied": false, "created": 1492334714.0, "created_utc": 1492305914.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbfeg3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Kinths", "parent_id": "t1_dgbd99x", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt;I can say if you treat memory in Java like you do in C++ \n\nThat's not possible though. You still have no control over when your memory is dumped. Allocation is only one half of that problem. Memory dumps in gameplay costs frames. Similar problem in C#. Both C# and Java are also ridiculous memory hogs compared to languages like C++, no matter how efficiently you write them. http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;lang2=gpp\n\nThe bigger problem is Java's graphics API's are all pretty dated (the last stable update to Java3D was 9 years ago) and there is little support on both ends for writing your own. I don't think I have ever played a Java game that performs well. Hell, Minecraft now has Microsoft behind it and it still runs like shit.\n\nThe only reason I even suggest C# is because C++ is daunting to a lot of people. I suggest C# over Java simply because people seem to have decided that C# as a good language for writing games (I have no idea why C# is considered good for it and Java isn't), so there are a lot more resources and libraries available that are tailored to game development.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I can say if you treat memory in Java like you do in C++ &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s not possible though. You still have no control over when your memory is dumped. Allocation is only one half of that problem. Memory dumps in gameplay costs frames. Similar problem in C#. Both C# and Java are also ridiculous memory hogs compared to languages like C++, no matter how efficiently you write them. &lt;a href=\"http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;amp;lang2=gpp\"&gt;http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=java&amp;amp;lang2=gpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The bigger problem is Java&amp;#39;s graphics API&amp;#39;s are all pretty dated (the last stable update to Java3D was 9 years ago) and there is little support on both ends for writing your own. I don&amp;#39;t think I have ever played a Java game that performs well. Hell, Minecraft now has Microsoft behind it and it still runs like shit.&lt;/p&gt;\n\n&lt;p&gt;The only reason I even suggest C# is because C++ is daunting to a lot of people. I suggest C# over Java simply because people seem to have decided that C# as a good language for writing games (I have no idea why C# is considered good for it and Java isn&amp;#39;t), so there are a lot more resources and libraries available that are tailored to game development.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbfeg3", "score_hidden": false, "stickied": false, "created": 1492332054.0, "created_utc": 1492303254.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbd99x", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbcfv9", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "&gt; For 4: I would suggest staying away from Java for a 3D engine\n\nI have personal experience with Java and 3d games - I can say if you treat memory in Java like you do in C++ you won't have any performance issues (pooling, sequential allocation of memory and subsequent iteration, minimize allocation during game play, etc)   \n  \n&gt; Overall I think you might be over-egging it.\n  \nI wanted to create a presentation that tries to touch on everything - there are some things I lightly touch on like rendering &amp; physics as you mentioned. These are huge topics and there are far better graphics and physics programmers out there than myself. I would touch on the concepts and how common structures might look (VertexBuffers, Shaders, Textures, etc) but would probably avoid implementing anything complicated (shadows, highly lighted scenes, etc).  \n  \n&gt; An easily extensible engine is a much better option\n  \nAgreed, everything should be as decoupled as possible. Ideally each component has no or few dependencies. This will allow people to use the engines code in their own games without having to switch to the game engine.  \n  \n&gt; Create a massive amount of work for yourself.\n  \nI plan on tackling the core required components first, and everything after that is icing on the cake. A few of the larger components that might be dropped would be (in order of most likely to be dropped to least):  \n\n- Tools\n- Physics\n- Scripting System\n- Game Patches &amp; DLC\n- Game Services\n- Localization\n- User Interface\n- Graphics Objects (the implementations not the interfaces)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;For 4: I would suggest staying away from Java for a 3D engine&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I have personal experience with Java and 3d games - I can say if you treat memory in Java like you do in C++ you won&amp;#39;t have any performance issues (pooling, sequential allocation of memory and subsequent iteration, minimize allocation during game play, etc)   &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Overall I think you might be over-egging it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I wanted to create a presentation that tries to touch on everything - there are some things I lightly touch on like rendering &amp;amp; physics as you mentioned. These are huge topics and there are far better graphics and physics programmers out there than myself. I would touch on the concepts and how common structures might look (VertexBuffers, Shaders, Textures, etc) but would probably avoid implementing anything complicated (shadows, highly lighted scenes, etc).  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;An easily extensible engine is a much better option&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Agreed, everything should be as decoupled as possible. Ideally each component has no or few dependencies. This will allow people to use the engines code in their own games without having to switch to the game engine.  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Create a massive amount of work for yourself.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I plan on tackling the core required components first, and everything after that is icing on the cake. A few of the larger components that might be dropped would be (in order of most likely to be dropped to least):  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Tools&lt;/li&gt;\n&lt;li&gt;Physics&lt;/li&gt;\n&lt;li&gt;Scripting System&lt;/li&gt;\n&lt;li&gt;Game Patches &amp;amp; DLC&lt;/li&gt;\n&lt;li&gt;Game Services&lt;/li&gt;\n&lt;li&gt;Localization&lt;/li&gt;\n&lt;li&gt;User Interface&lt;/li&gt;\n&lt;li&gt;Graphics Objects (the implementations not the interfaces)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbd99x", "score_hidden": false, "stickied": false, "created": 1492329001.0, "created_utc": 1492300201.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbcfv9", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Kinths", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "For 4: \nI would suggest staying away from Java for a 3D engine. It doesn't hold up well. Never used TypeScript so can't comment. C++ and C# are both great options though.\n\nOverall I think you might be over-egging it. Focus on bare minimum essentials first. Example, AI is not a core feature of an engine, it's a core feature of a game. Neither are user profiles or scripting (maybe a priority later on though). \n\nAn easily extensible engine is a much better option than one that tries to do everything. For example: Unity does a lot but is bolstered by how easy it is to extend it and share those extensions. \n\nTrying to do everything will create two problems as far as I can see:\n\n1. Create a massive amount of work for yourself.\n2. Scare away your audience. I like big in depth projects and that presentation is just daunting to look at. \n\nSome of the individual concepts themselves could take years. Efficient rendering and physics are like never ending rabbit holes.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For 4: \nI would suggest staying away from Java for a 3D engine. It doesn&amp;#39;t hold up well. Never used TypeScript so can&amp;#39;t comment. C++ and C# are both great options though.&lt;/p&gt;\n\n&lt;p&gt;Overall I think you might be over-egging it. Focus on bare minimum essentials first. Example, AI is not a core feature of an engine, it&amp;#39;s a core feature of a game. Neither are user profiles or scripting (maybe a priority later on though). &lt;/p&gt;\n\n&lt;p&gt;An easily extensible engine is a much better option than one that tries to do everything. For example: Unity does a lot but is bolstered by how easy it is to extend it and share those extensions. &lt;/p&gt;\n\n&lt;p&gt;Trying to do everything will create two problems as far as I can see:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Create a massive amount of work for yourself.&lt;/li&gt;\n&lt;li&gt;Scare away your audience. I like big in depth projects and that presentation is just daunting to look at. &lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Some of the individual concepts themselves could take years. Efficient rendering and physics are like never ending rabbit holes.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbcfv9", "score_hidden": false, "stickied": false, "created": 1492327864.0, "created_utc": 1492299064.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbnl5c", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheLightningPanda", "parent_id": "t1_dgbhitb", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Ah, then your platform is pretty perfect imo. If you're really trying to tag the new viewer, make a video that's easy to follow along, and then from there you can make further videos for those who really would like to learn/are experienced game developers.\n\nThanks again OP, you're doing good work:)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, then your platform is pretty perfect imo. If you&amp;#39;re really trying to tag the new viewer, make a video that&amp;#39;s easy to follow along, and then from there you can make further videos for those who really would like to learn/are experienced game developers.&lt;/p&gt;\n\n&lt;p&gt;Thanks again OP, you&amp;#39;re doing good work:)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbnl5c", "score_hidden": false, "stickied": false, "created": 1492344164.0, "created_utc": 1492315364.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbhitb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbdrjr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'm not directly presenting to anyone - this is just something I want people online to read/watch and hopefully learn something. I want it to interest anyone at first - but provide enough detail to keep experienced game developers interested.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not directly presenting to anyone - this is just something I want people online to read/watch and hopefully learn something. I want it to interest anyone at first - but provide enough detail to keep experienced game developers interested.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbhitb", "score_hidden": false, "stickied": false, "created": 1492335075.0, "created_utc": 1492306275.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbdrjr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheLightningPanda", "parent_id": "t1_dgbdq3f", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I problem at all. \n\nCan you specify who you're presenting to and the quantity of people?\nThat way a medium is easier to choose based on interactivity", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I problem at all. &lt;/p&gt;\n\n&lt;p&gt;Can you specify who you&amp;#39;re presenting to and the quantity of people?\nThat way a medium is easier to choose based on interactivity&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbdrjr", "score_hidden": false, "stickied": false, "created": 1492329686.0, "created_utc": 1492300886.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbdq3f", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbdn0n", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Thanks for the feedback!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the feedback!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbdq3f", "score_hidden": false, "stickied": false, "created": 1492329634.0, "created_utc": 1492300834.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbdn0n", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheLightningPanda", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "The entire thing is really sleek. Similar to the top comment, I'm quite inexperienced, so don't value my opinion too much. \n\nAs a point of interest, it can be difficult in a presentation like this to hold attention for very long, so maybe try different tones of the grey background?\n\nAnyways, good luck OP:)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The entire thing is really sleek. Similar to the top comment, I&amp;#39;m quite inexperienced, so don&amp;#39;t value my opinion too much. &lt;/p&gt;\n\n&lt;p&gt;As a point of interest, it can be difficult in a presentation like this to hold attention for very long, so maybe try different tones of the grey background?&lt;/p&gt;\n\n&lt;p&gt;Anyways, good luck OP:)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbdn0n", "score_hidden": false, "stickied": false, "created": 1492329519.0, "created_utc": 1492300719.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbytn2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbqiqx", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I completely agree! There were a few times where I scrapped everything - only copying over non-design code like math.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I completely agree! There were a few times where I scrapped everything - only copying over non-design code like math.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbytn2", "score_hidden": false, "stickied": false, "created": 1492373578.0, "created_utc": 1492344778.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbqiqx", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "deftware", "parent_id": "t1_dgbfj0t", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Personally, I have found that iteration is faster and cleaner than refactoring or hacking in changes that don't quite fit the original design/layout. Being that I am always learning I am also constantly discovering that there are better ways to go about certain things.\n\nAs a hobby this is fine, and I enjoy it. If I want to actually make a product of some kind then, yea, one would have to settle with something and see it through, even in the face of uncovering flaws and discovering limitations.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Personally, I have found that iteration is faster and cleaner than refactoring or hacking in changes that don&amp;#39;t quite fit the original design/layout. Being that I am always learning I am also constantly discovering that there are better ways to go about certain things.&lt;/p&gt;\n\n&lt;p&gt;As a hobby this is fine, and I enjoy it. If I want to actually make a product of some kind then, yea, one would have to settle with something and see it through, even in the face of uncovering flaws and discovering limitations.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbqiqx", "score_hidden": false, "stickied": false, "created": 1492349418.0, "created_utc": 1492320618.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_65itl3", "likes": null, "replies": "", "user_reports": [], "id": "dgbg34l", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ClickerMonkey", "parent_id": "t1_dgbfj0t", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "On and off. It started in VB.Net and used Managed DirectX. Then moved to C# and Managed DirectX. Stayed with C# and used XNA. I then made it in Java and it used JOGL. I started making a C++ version which used OpenGL. I went back to Java and started using LWJGL. I migrated parts of that library to C# to the last version of XNA to make some XBox games. I started creating a few components as separate libraries (steering behaviors, spatial databases, collision prediction, entity component systems). I also made a fairly sized animation library in javascript and used that for a few games (thats compromised of the easing, path, and animation components) A few years ago I was really heavily using the Java version in a few games. I've been redesigning it over and over again until I felt like I could achieve all the features I desired. I finally nailed many of those designs and I don't have any more design blocks in my way.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On and off. It started in VB.Net and used Managed DirectX. Then moved to C# and Managed DirectX. Stayed with C# and used XNA. I then made it in Java and it used JOGL. I started making a C++ version which used OpenGL. I went back to Java and started using LWJGL. I migrated parts of that library to C# to the last version of XNA to make some XBox games. I started creating a few components as separate libraries (steering behaviors, spatial databases, collision prediction, entity component systems). I also made a fairly sized animation library in javascript and used that for a few games (thats compromised of the easing, path, and animation components) A few years ago I was really heavily using the Java version in a few games. I&amp;#39;ve been redesigning it over and over again until I felt like I could achieve all the features I desired. I finally nailed many of those designs and I don&amp;#39;t have any more design blocks in my way.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbg34l", "score_hidden": false, "stickied": false, "created": 1492333013.0, "created_utc": 1492304213.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbfj0t", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "jankyshanky", "parent_id": "t3_65itl3", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "...you've been working on 1 engine for 11 years?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;...you&amp;#39;ve been working on 1 engine for 11 years?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dgbfj0t", "score_hidden": false, "stickied": false, "created": 1492332234.0, "created_utc": 1492303434.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}]