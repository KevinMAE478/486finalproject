[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m using League as an example, but this is a very common pattern in RTS and RPG games afaik.&lt;/p&gt;\n\n&lt;p&gt;So the idea is that there&amp;#39;s a predefined set of characters (called Champions in LoL), each with its own unique spells. There can be multiple same characters in the game, each with same set of spells, same base stats, but different level and different upgrade paths being chosen by players for their spells.&lt;/p&gt;\n\n&lt;p&gt;How would I go on about implementing something like this in a proper manner? How do AAA games like Warcraft, LoL, and DotA implement their character/spell systems?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using Python for my project, but I&amp;#39;m looking for a generic solution, and am not against explanations and examples in other languages (pls no LISP)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm using League as an example, but this is a very common pattern in RTS and RPG games afaik.\n\nSo the idea is that there's a predefined set of characters (called Champions in LoL), each with its own unique spells. There can be multiple same characters in the game, each with same set of spells, same base stats, but different level and different upgrade paths being chosen by players for their spells.\n\nHow would I go on about implementing something like this in a proper manner? How do AAA games like Warcraft, LoL, and DotA implement their character/spell systems?\n\nI'm using Python for my project, but I'm looking for a generic solution, and am not against explanations and examples in other languages (pls no LISP)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64w8uz", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 51, "report_reasons": null, "author": "markusmeskanen", "saved": false, "mod_reports": [], "name": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/64w8uz/what_design_patterns_to_use_for_characterspell/", "num_reports": null, "locked": false, "stickied": false, "created": 1492002845.0, "url": "https://www.reddit.com/r/gamedev/comments/64w8uz/what_design_patterns_to_use_for_characterspell/", "author_flair_text": null, "quarantine": false, "title": "What design pattern(s) to use for Character+Spell system like that in League of Legends?", "created_utc": 1491974045.0, "distinguished": null, "media": null, "upvote_ratio": 0.84, "num_comments": 14, "visited": false, "subreddit_type": "public", "ups": 51}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg5n3mj", "gilded": 0, "archived": false, "score": 15, "report_reasons": null, "author": "tokphobia", "parent_id": "t1_dg5l1qj", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "And an actual example:\n\n    \"test_ability\"\n    {\n            \"BaseClass\"             \"ability_datadriven\"\n            \"AbilityTextureName\"    \"lina_laguna_blade\"\n            \"MaxLevel\"                      \"1\"\n    \n            \"AbilityBehavior\"       \"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET\"\n            \"AbilityUnitTargetTeam\" \"DOTA_UNIT_TARGET_TEAM_ENEMY\"\n            \"AbilityUnitTargetType\" \"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC\"\n            \"AbilityUnitDamageType\" \"DAMAGE_TYPE_MAGICAL\"\n    \n            \u201cAbilityDamage\u201d         \"500\"\n    \n            \"OnSpellStart\"\n            {\n                    \"Damage\"\n                    {\n                            \"Target\"        \"TARGET\"\n                            \"Type\"          \"DAMAGE_TYPE_MAGICAL\"\n                            \"Damage\"        \"%AbilityDamage\"\n                    }\n            }\n    }\n\nSource: [Beginner's guide to Dota scripting](https://moddota.com/forums/discussion/135/beginners-guide-to-dota-scripting) on moddota.com, they explain this structure in detail over there.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And an actual example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;test_ability&amp;quot;\n{\n        &amp;quot;BaseClass&amp;quot;             &amp;quot;ability_datadriven&amp;quot;\n        &amp;quot;AbilityTextureName&amp;quot;    &amp;quot;lina_laguna_blade&amp;quot;\n        &amp;quot;MaxLevel&amp;quot;                      &amp;quot;1&amp;quot;\n\n        &amp;quot;AbilityBehavior&amp;quot;       &amp;quot;DOTA_ABILITY_BEHAVIOR_UNIT_TARGET&amp;quot;\n        &amp;quot;AbilityUnitTargetTeam&amp;quot; &amp;quot;DOTA_UNIT_TARGET_TEAM_ENEMY&amp;quot;\n        &amp;quot;AbilityUnitTargetType&amp;quot; &amp;quot;DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC&amp;quot;\n        &amp;quot;AbilityUnitDamageType&amp;quot; &amp;quot;DAMAGE_TYPE_MAGICAL&amp;quot;\n\n        \u201cAbilityDamage\u201d         &amp;quot;500&amp;quot;\n\n        &amp;quot;OnSpellStart&amp;quot;\n        {\n                &amp;quot;Damage&amp;quot;\n                {\n                        &amp;quot;Target&amp;quot;        &amp;quot;TARGET&amp;quot;\n                        &amp;quot;Type&amp;quot;          &amp;quot;DAMAGE_TYPE_MAGICAL&amp;quot;\n                        &amp;quot;Damage&amp;quot;        &amp;quot;%AbilityDamage&amp;quot;\n                }\n        }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Source: &lt;a href=\"https://moddota.com/forums/discussion/135/beginners-guide-to-dota-scripting\"&gt;Beginner&amp;#39;s guide to Dota scripting&lt;/a&gt; on moddota.com, they explain this structure in detail over there.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5n3mj", "score_hidden": false, "stickied": false, "created": 1492014727.0, "created_utc": 1491985927.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 15}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5l1qj", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "NovaX81", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "On mobile so I can't provide links. But the flat definition files for how dota loads its characters and abilities are openly available (for mods). Valve uses a key value structure that is very similar to json as the raw definitions, then just loads them in as instances. The spells have more complex compiled code driving them but often have lua scripts tied in. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On mobile so I can&amp;#39;t provide links. But the flat definition files for how dota loads its characters and abilities are openly available (for mods). Valve uses a key value structure that is very similar to json as the raw definitions, then just loads them in as instances. The spells have more complex compiled code driving them but often have lua scripts tied in. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5l1qj", "score_hidden": false, "stickied": false, "created": 1492008832.0, "created_utc": 1491980032.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg63i5l", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Zireael07", "parent_id": "t1_dg5zjp4", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Doesn't look to be specifically about Diablo, but still a nice read.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doesn&amp;#39;t look to be specifically about Diablo, but still a nice read.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg63i5l", "score_hidden": false, "stickied": false, "created": 1492042709.0, "created_utc": 1492013909.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5zjp4", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "alonsoontheweb", "parent_id": "t1_dg5nhrc", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Is this the one?\n\n[Randomly Generated Loot (Part I)](https://archive.fo/mJkX9)\n\n[Randomly Generated Loot (Part II)](http://archive.fo/Eoimg)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is this the one?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://archive.fo/mJkX9\"&gt;Randomly Generated Loot (Part I)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://archive.fo/Eoimg\"&gt;Randomly Generated Loot (Part II)&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5zjp4", "score_hidden": false, "stickied": false, "created": 1492038387.0, "created_utc": 1492009587.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5nhrc", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "triffid_hunter", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I read a wonderful article about the use of the \"Decorator\" design pattern in Diablo ages ago, but can't find it now :(", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I read a wonderful article about the use of the &amp;quot;Decorator&amp;quot; design pattern in Diablo ages ago, but can&amp;#39;t find it now :(&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5nhrc", "score_hidden": false, "stickied": false, "created": 1492015958.0, "created_utc": 1491987158.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg62kjo", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "crockid5", "parent_id": "t1_dg610vn", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I'll try and create a compilable version when I get home, Stat wise it's very close to the actual game, mechanics wise it needs a bit of work, haha.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll try and create a compilable version when I get home, Stat wise it&amp;#39;s very close to the actual game, mechanics wise it needs a bit of work, haha.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg62kjo", "score_hidden": false, "stickied": false, "created": 1492041705.0, "created_utc": 1492012905.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg610vn", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Djinn_in_Tonic", "parent_id": "t1_dg5pomf", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Do you happen to have a playable version somewhere? Really interested to see how closely it plays, as I've been debating a similar project myself to test out some personal champion designs.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you happen to have a playable version somewhere? Really interested to see how closely it plays, as I&amp;#39;ve been debating a similar project myself to test out some personal champion designs.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg610vn", "score_hidden": false, "stickied": false, "created": 1492040015.0, "created_utc": 1492011215.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pomf", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "crockid5", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I can give you an insight on how I handled champion scaling/ damage. I made my own 2D League of Legends clone, I had a base class called champion which had 2 sets of attributes, base stats and stat scaling.\n\nExample:\n\n    ChampionAshe\n    baseAttackDamage = 50;\n    attackDamageScaling = 2;\n    \n    getAttackDamage(){\n      return baseAttackDamage + (attackDamageScaling * level);\n    }    \n\nThen I would have another variable which would be called 'attackDamage' in this case, and the game would update this variable 5 times per second to the result of getAttackDamage().\n\nFor spells, the system is similar.\n    \n    ChampionAshe\n    spellWName = \"Volley\";\n    spellWCooldown = 15;\n    spellWManaCost = 50;\n    spellWCooldownScaling = -2; //Spell cooldown will be 5 seconds at level 5 (15 + (-2*5))\n    spellWManaScaling = 5; //Spell will cost 75 mana at level 5 (50 + (5*5))\n    \n    getWManaCost(){\n      return spellWManaCost + (spellWManaScaling * spellWLevel);\n    }\n\n    getWCooldown(){\n      return spellWCooldown + (spellWCooldownScaling * spellWLevel);\n    }", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can give you an insight on how I handled champion scaling/ damage. I made my own 2D League of Legends clone, I had a base class called champion which had 2 sets of attributes, base stats and stat scaling.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ChampionAshe\nbaseAttackDamage = 50;\nattackDamageScaling = 2;\n\ngetAttackDamage(){\n  return baseAttackDamage + (attackDamageScaling * level);\n}    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then I would have another variable which would be called &amp;#39;attackDamage&amp;#39; in this case, and the game would update this variable 5 times per second to the result of getAttackDamage().&lt;/p&gt;\n\n&lt;p&gt;For spells, the system is similar.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ChampionAshe\nspellWName = &amp;quot;Volley&amp;quot;;\nspellWCooldown = 15;\nspellWManaCost = 50;\nspellWCooldownScaling = -2; //Spell cooldown will be 5 seconds at level 5 (15 + (-2*5))\nspellWManaScaling = 5; //Spell will cost 75 mana at level 5 (50 + (5*5))\n\ngetWManaCost(){\n  return spellWManaCost + (spellWManaScaling * spellWLevel);\n}\n\ngetWCooldown(){\n  return spellWCooldown + (spellWCooldownScaling * spellWLevel);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5pomf", "score_hidden": false, "stickied": false, "created": 1492022725.0, "created_utc": 1491993925.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg5n25n", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ReallyHadToFixThat", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "OK, what you want to go for is a component based architecture. \n\nEach character has a list of components (abilities).\n\nEach of these abilities then has their own list of components. These components form the base class for specific components like mana cost, hp cost, damage dealt, heal done, animation and so on. \n\nThat way you can fit each of your heroes together like a jigsaw but with re-usable pieces. \n\nThen as /u/ZigguratOfUr says - you can use a text file of some kind to build this up at run time. I do like JSON, but XML is fine if you are more comfortable, you could even use an INI format or just brew up your own. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK, what you want to go for is a component based architecture. &lt;/p&gt;\n\n&lt;p&gt;Each character has a list of components (abilities).&lt;/p&gt;\n\n&lt;p&gt;Each of these abilities then has their own list of components. These components form the base class for specific components like mana cost, hp cost, damage dealt, heal done, animation and so on. &lt;/p&gt;\n\n&lt;p&gt;That way you can fit each of your heroes together like a jigsaw but with re-usable pieces. &lt;/p&gt;\n\n&lt;p&gt;Then as &lt;a href=\"/u/ZigguratOfUr\"&gt;/u/ZigguratOfUr&lt;/a&gt; says - you can use a text file of some kind to build this up at run time. I do like JSON, but XML is fine if you are more comfortable, you could even use an INI format or just brew up your own. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5n25n", "score_hidden": false, "stickied": false, "created": 1492014600.0, "created_utc": 1491985800.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg5jugn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ZigguratOfUr", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "I think in the case of LoL and similar games, characters should probably be specified with a simple (json?) config that specifies their relevant stats and growh. For instance:\n\n{ ClassName: Warrior\n   Name: Grizzlock the grizzled\n   mainStat: strength\n   baseStrength: 11\n   strengthPerLevel: 2\n...\n   Abilities: [...]\n}\n\nAbilities is probably the hard part, and I'd say that you can create bases like \"simple nuke\" and compose them \"simple nuke + stun\" for instance,  but you'll still have to do the work of actually programming those, so pick a limited set of effects to creatively combine.\n\nDota in WC3 actually does quite similar things to what I described, using the simple character editor, which could easily be editing json files or rows in a csv, for the champions and more sophisticated approaches for the abilities (from basing them off existing WC3 abilities with numbers tweaked to custom scripting).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think in the case of LoL and similar games, characters should probably be specified with a simple (json?) config that specifies their relevant stats and growh. For instance:&lt;/p&gt;\n\n&lt;p&gt;{ ClassName: Warrior\n   Name: Grizzlock the grizzled\n   mainStat: strength\n   baseStrength: 11\n   strengthPerLevel: 2\n...\n   Abilities: [...]\n}&lt;/p&gt;\n\n&lt;p&gt;Abilities is probably the hard part, and I&amp;#39;d say that you can create bases like &amp;quot;simple nuke&amp;quot; and compose them &amp;quot;simple nuke + stun&amp;quot; for instance,  but you&amp;#39;ll still have to do the work of actually programming those, so pick a limited set of effects to creatively combine.&lt;/p&gt;\n\n&lt;p&gt;Dota in WC3 actually does quite similar things to what I described, using the simple character editor, which could easily be editing json files or rows in a csv, for the champions and more sophisticated approaches for the abilities (from basing them off existing WC3 abilities with numbers tweaked to custom scripting).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5jugn", "score_hidden": false, "stickied": false, "created": 1492005879.0, "created_utc": 1491977079.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg5qrwg", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "TomLikesGuitar", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Containment is the obvious answer if just for readability.\n\nDon't worry about it too much, you won't see many complicated design patterns in the high level scripts for AAA games. Micro optimizing that stuff is a rookie mistake that will bite you in the long run", "edited": 1492186233.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Containment is the obvious answer if just for readability.&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t worry about it too much, you won&amp;#39;t see many complicated design patterns in the high level scripts for AAA games. Micro optimizing that stuff is a rookie mistake that will bite you in the long run&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5qrwg", "score_hidden": false, "stickied": false, "created": 1492025490.0, "created_utc": 1491996690.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64w8uz", "likes": null, "replies": "", "user_reports": [], "id": "dg603nz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "markusmeskanen", "parent_id": "t1_dg5ys37", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Nope, it was a joke... :p", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nope, it was a joke... :p&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg603nz", "score_hidden": false, "stickied": false, "created": 1492039005.0, "created_utc": 1492010205.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ys37", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "buttfurrow", "parent_id": "t3_64w8uz", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Just out of interest OP, have you ever been given LISP answers before the same or different questions? Got any examples?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just out of interest OP, have you ever been given LISP answers before the same or different questions? Got any examples?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5ys37", "score_hidden": false, "stickied": false, "created": 1492037516.0, "created_utc": 1492008716.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]