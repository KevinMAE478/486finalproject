[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "gamedev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m just wondering how games like Kerbal Space Program and No Man&amp;#39;s Sky accomplish this. Specifically what is happening under the hood that allows you to smoothly go from what seems to be a big empty sky box with a textured sphere (referring to a planet floating through space) inside of it to a big open landscape with detailed topography, points of interest, and foliage, etc... Now I know most of this is procedural and I&amp;#39;m not confused about that concept but my question is does that mean that textured floating sphere that I referred to earlier a 1:1 scale when you&amp;#39;re far away from it? It seems to me an object of that size would be wayyy too much for an engine to handle considering floating point numbers and whatnot. Is there some form of perspective trickery happening?&lt;/p&gt;\n\n&lt;p&gt;Also my biggest experience with a game engine is The Unreal Engine 4. I have heard talk that it is not possible to develop a smooth space to ground system in that engine. What mechanism does Unreal not posses that results in that being the case?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm just wondering how games like Kerbal Space Program and No Man's Sky accomplish this. Specifically what is happening under the hood that allows you to smoothly go from what seems to be a big empty sky box with a textured sphere (referring to a planet floating through space) inside of it to a big open landscape with detailed topography, points of interest, and foliage, etc... Now I know most of this is procedural and I'm not confused about that concept but my question is does that mean that textured floating sphere that I referred to earlier a 1:1 scale when you're far away from it? It seems to me an object of that size would be wayyy too much for an engine to handle considering floating point numbers and whatnot. Is there some form of perspective trickery happening?\n\nAlso my biggest experience with a game engine is The Unreal Engine 4. I have heard talk that it is not possible to develop a smooth space to ground system in that engine. What mechanism does Unreal not posses that results in that being the case?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Question", "id": "64q0fr", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 8, "report_reasons": null, "author": "guitarguy109", "saved": false, "mod_reports": [], "name": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "approved_by": null, "over_18": false, "domain": "self.gamedev", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qi0a", "edited": false, "link_flair_css_class": "question", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/gamedev/comments/64q0fr/how_is_spacetoground_done/", "num_reports": null, "locked": false, "stickied": false, "created": 1491935287.0, "url": "https://www.reddit.com/r/gamedev/comments/64q0fr/how_is_spacetoground_done/", "author_flair_text": null, "quarantine": false, "title": "How is \"space-to-ground\" done?", "created_utc": 1491906487.0, "distinguished": null, "media": null, "upvote_ratio": 0.76, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg4zs61", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "lbowes", "parent_id": "t1_dg444kn", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "That video was fantastic, really interesting stuff. Thanks for linking to it!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That video was fantastic, really interesting stuff. Thanks for linking to it!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg4zs61", "score_hidden": false, "stickied": false, "created": 1491976573.0, "created_utc": 1491947773.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg444kn", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "powback", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "The KSP devs did a talk about this. I'll see if I can dig it up.\n\nEdit:\n\nhttps://youtu.be/mXTxQko-JH0\n\nhttps://www.reddit.com/r/gamedev/comments/2p34zs/seamless_planet_landing_how_do_they_implement_it/", "edited": 1491908987.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The KSP devs did a talk about this. I&amp;#39;ll see if I can dig it up.&lt;/p&gt;\n\n&lt;p&gt;Edit:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://youtu.be/mXTxQko-JH0\"&gt;https://youtu.be/mXTxQko-JH0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/gamedev/comments/2p34zs/seamless_planet_landing_how_do_they_implement_it/\"&gt;https://www.reddit.com/r/gamedev/comments/2p34zs/seamless_planet_landing_how_do_they_implement_it/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg444kn", "score_hidden": false, "stickied": false, "created": 1491937403.0, "created_utc": 1491908603.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg4iuig", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "PoisonedAl", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "There isn't just one way of doing this.\n\nKSP moves its universe around the ship to keep the precision at 32 bit.\n\nElite: Dangerous has rather obvious loading zones and maps. Super cruise, frame shift drive and \"glide mode\" hiding loading screens.\n\nStar Citizen is going full crazy with 64 bit monster maps, with the whole solar system in one area, planets and all.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There isn&amp;#39;t just one way of doing this.&lt;/p&gt;\n\n&lt;p&gt;KSP moves its universe around the ship to keep the precision at 32 bit.&lt;/p&gt;\n\n&lt;p&gt;Elite: Dangerous has rather obvious loading zones and maps. Super cruise, frame shift drive and &amp;quot;glide mode&amp;quot; hiding loading screens.&lt;/p&gt;\n\n&lt;p&gt;Star Citizen is going full crazy with 64 bit monster maps, with the whole solar system in one area, planets and all.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg4iuig", "score_hidden": false, "stickied": false, "created": 1491957764.0, "created_utc": 1491928964.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg4629o", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "surpriseprofessional", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "[here's quill18 making a game like that.](https://youtu.be/U9-1Gr5CLgk)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://youtu.be/U9-1Gr5CLgk\"&gt;here&amp;#39;s quill18 making a game like that.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg4629o", "score_hidden": false, "stickied": false, "created": 1491941610.0, "created_utc": 1491912810.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg5v65u", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "avanak", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "The problem is floating point precision. When you work with huge scales, like a whole planet, but also want detaill, you bump into literally astronomically huge numbers that no game engine can handle. I have made something in Unity3D that deals with this problem by layering cameras. Each camera renders a different scale. Determined by that scale it moves at different speeds when the player is moving. When the camera moves too far from (0,0,0) the whole scene is translated so that everything is close to the origin again. No experience with unreal engine, but I guess you could do something similar.\n\nhttps://www.youtube.com/watch?v=5SMUckBTIfQ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The problem is floating point precision. When you work with huge scales, like a whole planet, but also want detaill, you bump into literally astronomically huge numbers that no game engine can handle. I have made something in Unity3D that deals with this problem by layering cameras. Each camera renders a different scale. Determined by that scale it moves at different speeds when the player is moving. When the camera moves too far from (0,0,0) the whole scene is translated so that everything is close to the origin again. No experience with unreal engine, but I guess you could do something similar.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=5SMUckBTIfQ\"&gt;https://www.youtube.com/watch?v=5SMUckBTIfQ&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg5v65u", "score_hidden": false, "stickied": false, "created": 1492033079.0, "created_utc": 1492004279.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg4k0yg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "timmytimtimshabadu", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Look into things like Octrees for procedural generation.  ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Look into things like Octrees for procedural generation.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg4k0yg", "score_hidden": false, "stickied": false, "created": 1491959036.0, "created_utc": 1491930236.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi0a", "removal_reason": null, "link_id": "t3_64q0fr", "likes": null, "replies": "", "user_reports": [], "id": "dg4uius", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "eightvo", "parent_id": "t3_64q0fr", "subreddit_name_prefixed": "r/gamedev", "controversiality": 0, "body": "Dynamic loading and resolution... basically, if you are far enough away the object isn't even loaded... then as you approach the object it becomes more and more complex... at an extreme distance, it may be a simple sphere... then as you approach the resolution is increased and the shape becomes more complex as polygons are added to flesh out hills and valleys and mountains. This mechanism isn't necessary for some FPS's because the maps are kept small... but I think you might see it in some open world games... in those, some of the work is handled by view distance culling, but that only affects objects and not terrain so much... In a space game you can \"see\" a planet much further away then view distance culling would allow... and open world games would have a similar issue with large terrain objects such as mountains and/or oceans. \n\nIt is sometimes called LOD (Level of detail)\n\nhttps://en.wikipedia.org/wiki/Level_of_detail\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dynamic loading and resolution... basically, if you are far enough away the object isn&amp;#39;t even loaded... then as you approach the object it becomes more and more complex... at an extreme distance, it may be a simple sphere... then as you approach the resolution is increased and the shape becomes more complex as polygons are added to flesh out hills and valleys and mountains. This mechanism isn&amp;#39;t necessary for some FPS&amp;#39;s because the maps are kept small... but I think you might see it in some open world games... in those, some of the work is handled by view distance culling, but that only affects objects and not terrain so much... In a space game you can &amp;quot;see&amp;quot; a planet much further away then view distance culling would allow... and open world games would have a similar issue with large terrain objects such as mountains and/or oceans. &lt;/p&gt;\n\n&lt;p&gt;It is sometimes called LOD (Level of detail)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Level_of_detail\"&gt;https://en.wikipedia.org/wiki/Level_of_detail&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "gamedev", "name": "t1_dg4uius", "score_hidden": false, "stickied": false, "created": 1491970437.0, "created_utc": 1491941637.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]