[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64u8q9", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 179, "report_reasons": null, "author": "tomdale", "saved": false, "mod_reports": [], "name": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/64u8q9/glimmerjs_whats_the_deal_with_typescript/", "num_reports": null, "locked": false, "stickied": false, "created": 1491978775.0, "url": "https://medium.com/@tomdale/glimmer-js-whats-the-deal-with-typescript-f666d1a3aad0", "author_flair_text": null, "quarantine": false, "title": "Glimmer.js: What\u2019s the Deal with TypeScript?", "created_utc": 1491949975.0, "distinguished": null, "media": null, "upvote_ratio": 0.92, "num_comments": 62, "visited": false, "subreddit_type": "public", "ups": 179}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5jb84", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "wizang", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks Tom. So what's the roadmap for using glimmer components in our ember apps :)?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks Tom. So what&amp;#39;s the roadmap for using glimmer components in our ember apps :)?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5jb84", "score_hidden": false, "stickied": false, "created": 1492004695.0, "created_utc": 1491975895.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5l9jg", "gilded": 0, "archived": false, "score": 18, "report_reasons": null, "author": "vinnl", "parent_id": "t1_dg5ff91", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "You mean that the articles gave you reason to think Flow is better than TypeScript without even mentioning Flow?\n\nI don't think there's _that much_ difference between the two, but indeed, an important reason to use TypeScript is pretty much the same as the reason to use VHS: the ecosystem's larger.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You mean that the articles gave you reason to think Flow is better than TypeScript without even mentioning Flow?&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t think there&amp;#39;s &lt;em&gt;that much&lt;/em&gt; difference between the two, but indeed, an important reason to use TypeScript is pretty much the same as the reason to use VHS: the ecosystem&amp;#39;s larger.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5l9jg", "score_hidden": false, "stickied": false, "created": 1492009407.0, "created_utc": 1491980607.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 18}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg72mh4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "DrummerHead", "parent_id": "t1_dg5vvzl", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Elm's compiler is quite verbose and friendly and points out suggestions about why your code might not be working. If you follow anything Elm related on twitter is always comments from first time users about how friendly and helpful the compiler's messages are.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elm&amp;#39;s compiler is quite verbose and friendly and points out suggestions about why your code might not be working. If you follow anything Elm related on twitter is always comments from first time users about how friendly and helpful the compiler&amp;#39;s messages are.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg72mh4", "score_hidden": false, "stickied": false, "created": 1492082719.0, "created_utc": 1492053919.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg7zbnd", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "KurtLovesCode", "parent_id": "t1_dg5vvzl", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Elm's compiler is extremely helpful in pointing out errors and giving out helpful hints as to what might be wrong with your code. It's really useful for refactoring either large swaths of code or a critical piece of logic. \n\nFor me, languages like Elm that are compile and ML typed are the present/future language I'd prefer to work in.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elm&amp;#39;s compiler is extremely helpful in pointing out errors and giving out helpful hints as to what might be wrong with your code. It&amp;#39;s really useful for refactoring either large swaths of code or a critical piece of logic. &lt;/p&gt;\n\n&lt;p&gt;For me, languages like Elm that are compile and ML typed are the present/future language I&amp;#39;d prefer to work in.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg7zbnd", "score_hidden": false, "stickied": false, "created": 1492136648.0, "created_utc": 1492107848.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5vvzl", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "arendjr", "parent_id": "t1_dg5vq06", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I know about Elm and have checked it out a little as well, but never worked with it... Why would it be awesome if Reason's compiler would be more like Elm's? :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know about Elm and have checked it out a little as well, but never worked with it... Why would it be awesome if Reason&amp;#39;s compiler would be more like Elm&amp;#39;s? :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5vvzl", "score_hidden": false, "stickied": false, "created": 1492034034.0, "created_utc": 1492005234.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg7zzsq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "KurtLovesCode", "parent_id": "t1_dg6h5qt", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "You were right and I was wrong - I asked in the ReasonML's discord channel and they told me it was written in OCaml only. My apologies for spreading misinformation.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You were right and I was wrong - I asked in the ReasonML&amp;#39;s discord channel and they told me it was written in OCaml only. My apologies for spreading misinformation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg7zzsq", "score_hidden": false, "stickied": false, "created": 1492137363.0, "created_utc": 1492108563.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6h5qt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Akkuma", "parent_id": "t1_dg6e398", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Yes I know, but the question was whether they are writing Flow in Reason now or if the OP was incorrect.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes I know, but the question was whether they are writing Flow in Reason now or if the OP was incorrect.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6h5qt", "score_hidden": false, "stickied": false, "created": 1492056700.0, "created_utc": 1492027900.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg80118", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "KurtLovesCode", "parent_id": "t1_dg6e398", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "/u/Akkuma was right and I was wrong - I asked in the ReasonML's discord channel and they told me it was written in OCaml only. My apologies for spreading misinformation.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/u/Akkuma\"&gt;/u/Akkuma&lt;/a&gt; was right and I was wrong - I asked in the ReasonML&amp;#39;s discord channel and they told me it was written in OCaml only. My apologies for spreading misinformation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg80118", "score_hidden": false, "stickied": false, "created": 1492137401.0, "created_utc": 1492108601.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6e398", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vcarl", "parent_id": "t1_dg5xylg", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Reason is a layer on top of OCaml. I'm not familiar enough with either OCaml or Reason to explain, but k  the homepage it says\n\n&gt; Reason\u00a0is a new syntax &amp; curated layer for\u00a0OCaml", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Reason is a layer on top of OCaml. I&amp;#39;m not familiar enough with either OCaml or Reason to explain, but k  the homepage it says&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Reason\u00a0is a new syntax &amp;amp; curated layer for\u00a0OCaml&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6e398", "score_hidden": false, "stickied": false, "created": 1492053553.0, "created_utc": 1492024753.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5xylg", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Akkuma", "parent_id": "t1_dg5vq06", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I thought OCaml powered Flow. Did they switch to Reason after?\n\n&gt;OCaml is a great tool for writing highly expressive, functional or imperative code, with type inference and fast runtime performance. Because of these properties, OCaml has helped Facebook quickly build scalable infrastructure such as Hack, Flow, and Infer.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I thought OCaml powered Flow. Did they switch to Reason after?&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;OCaml is a great tool for writing highly expressive, functional or imperative code, with type inference and fast runtime performance. Because of these properties, OCaml has helped Facebook quickly build scalable infrastructure such as Hack, Flow, and Infer.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5xylg", "score_hidden": false, "stickied": false, "created": 1492036581.0, "created_utc": 1492007781.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5vq06", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "KurtLovesCode", "parent_id": "t1_dg5uhgi", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "As an aside, ReasonML is the language that powers Flow. I'm keeping my eye on it - Sean Grove has said he'd like ReasonML's compiler to be similar to Elm's... which would be absolutely awesome.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As an aside, ReasonML is the language that powers Flow. I&amp;#39;m keeping my eye on it - Sean Grove has said he&amp;#39;d like ReasonML&amp;#39;s compiler to be similar to Elm&amp;#39;s... which would be absolutely awesome.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5vq06", "score_hidden": false, "stickied": false, "created": 1492033821.0, "created_utc": 1492005021.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5uhgi", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "arendjr", "parent_id": "t1_dg5rdzy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Holy shit, didn't know about this language, but this looks very promising! I was looking deeply into Rust the other week, but this actually appears to be a more functional approach to Rust without the borrowing, but with JavaScript compatibility. I'm definitely gonna check this out some more!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Holy shit, didn&amp;#39;t know about this language, but this looks very promising! I was looking deeply into Rust the other week, but this actually appears to be a more functional approach to Rust without the borrowing, but with JavaScript compatibility. I&amp;#39;m definitely gonna check this out some more!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5uhgi", "score_hidden": false, "stickied": false, "created": 1492032113.0, "created_utc": 1492003313.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5rdzy", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "nicolasmerouze", "parent_id": "t1_dg5pphy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Homepage: https://facebook.github.io/reason/\n\nReason/React examples: https://github.com/chenglou/reason-react-example", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Homepage: &lt;a href=\"https://facebook.github.io/reason/\"&gt;https://facebook.github.io/reason/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Reason/React examples: &lt;a href=\"https://github.com/chenglou/reason-react-example\"&gt;https://github.com/chenglou/reason-react-example&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5rdzy", "score_hidden": false, "stickied": false, "created": 1492026814.0, "created_utc": 1491998014.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pphy", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "GoTheFuckToBed", "parent_id": "t1_dg5lr5o", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; ReasonML\n\ncan you show some code?\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;ReasonML&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;can you show some code?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5pphy", "score_hidden": false, "stickied": false, "created": 1492022793.0, "created_utc": 1491993993.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6rjwd", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nicolasmerouze", "parent_id": "t1_dg67dac", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "BuckleScript includes ReasonML and can be used with Windows:\n\nhttps://bloomberg.github.io/bucklescript/Manual.html#_windows_installation\n\nhttps://bloomberg.github.io/bucklescript/Manual.html#_integration_with_reason", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;BuckleScript includes ReasonML and can be used with Windows:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://bloomberg.github.io/bucklescript/Manual.html#_windows_installation\"&gt;https://bloomberg.github.io/bucklescript/Manual.html#_windows_installation&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://bloomberg.github.io/bucklescript/Manual.html#_integration_with_reason\"&gt;https://bloomberg.github.io/bucklescript/Manual.html#_integration_with_reason&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6rjwd", "score_hidden": false, "stickied": false, "created": 1492068862.0, "created_utc": 1492040062.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6ikss", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MahmudAdam", "parent_id": "t1_dg6i984", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I guess I should've clarified. I cannot use Bash with my current version of Windows because I am using a university computer that seems to prevent Windows updates.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I guess I should&amp;#39;ve clarified. I cannot use Bash with my current version of Windows because I am using a university computer that seems to prevent Windows updates.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6ikss", "score_hidden": false, "stickied": false, "created": 1492058164.0, "created_utc": 1492029364.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6i984", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "RedditWithBoners", "parent_id": "t1_dg67dac", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; I can't use Bash on Windows\n\nSure you can.\n\nNative bash: https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/\n\nGit bash (the best \"emulated\" Linux env I've used on Windows - there are others): https://git-scm.com/downloads", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I can&amp;#39;t use Bash on Windows&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Sure you can.&lt;/p&gt;\n\n&lt;p&gt;Native bash: &lt;a href=\"https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/\"&gt;https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Git bash (the best &amp;quot;emulated&amp;quot; Linux env I&amp;#39;ve used on Windows - there are others): &lt;a href=\"https://git-scm.com/downloads\"&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6i984", "score_hidden": false, "stickied": false, "created": 1492057823.0, "created_utc": 1492029023.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg67dac", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MahmudAdam", "parent_id": "t1_dg5lr5o", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "ReasonML looks interesting; however, I use Windows (and I can't use Bash on Windows), and so far, I cannot find a way of installing ReasonML on Windows. Do you use Windows 10 by chance? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ReasonML looks interesting; however, I use Windows (and I can&amp;#39;t use Bash on Windows), and so far, I cannot find a way of installing ReasonML on Windows. Do you use Windows 10 by chance? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg67dac", "score_hidden": false, "stickied": false, "created": 1492046684.0, "created_utc": 1492017884.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5lr5o", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "nicolasmerouze", "parent_id": "t1_dg5ff91", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I am using Flow and TypeScript at work, and Elm, PureScript, and ReasonML on the side.\n\nIMO, ReasonML has the best chances of becoming big mainly because using external JavaScript libraries is as easy as TypeScript (similar to writing definition files). And ReasonML is closer to the JavaScript syntax that Elm and PureScript (while being an awesome typed functional language like the others).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am using Flow and TypeScript at work, and Elm, PureScript, and ReasonML on the side.&lt;/p&gt;\n\n&lt;p&gt;IMO, ReasonML has the best chances of becoming big mainly because using external JavaScript libraries is as easy as TypeScript (similar to writing definition files). And ReasonML is closer to the JavaScript syntax that Elm and PureScript (while being an awesome typed functional language like the others).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5lr5o", "score_hidden": false, "stickied": false, "created": 1492010737.0, "created_utc": 1491981937.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5rzvh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cyberst0rm", "parent_id": "t1_dg5ff91", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "typescript is dippen dots ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;typescript is dippen dots &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5rzvh", "score_hidden": false, "stickied": false, "created": 1492028029.0, "created_utc": 1491999229.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5l667", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ruzmutuz", "parent_id": "t1_dg5ff91", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Elm for ui", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elm for ui&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5l667", "score_hidden": false, "stickied": false, "created": 1492009165.0, "created_utc": 1491980365.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5tdkc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "captain_obvious_here", "parent_id": "t1_dg5sl9m", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Sometimes I kinda wish it's HD-DVD.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sometimes I kinda wish it&amp;#39;s HD-DVD.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5tdkc", "score_hidden": false, "stickied": false, "created": 1492030414.0, "created_utc": 1492001614.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5sl9m", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dg5ff91", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5sl9m", "score_hidden": false, "stickied": false, "created": 1492029110.0, "created_utc": 1492000310.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ff91", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "kevisazombie", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "This and the recent Slack article make me feel like TypeScript is VHS and Flowtype is Betamax. What's the next frontier ReasonML vs Purescript?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This and the recent Slack article make me feel like TypeScript is VHS and Flowtype is Betamax. What&amp;#39;s the next frontier ReasonML vs Purescript?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5ff91", "score_hidden": false, "stickied": false, "created": 1491997636.0, "created_utc": 1491968836.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6ov5e", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6k1ul", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The angular cli does the heavy lifting for me.  I went through the process of setting up a gulp task combined with a systemjs config and all that during beta but I was never doing anything with it that the cli doesn't address.  Path of least resistance basically.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The angular cli does the heavy lifting for me.  I went through the process of setting up a gulp task combined with a systemjs config and all that during beta but I was never doing anything with it that the cli doesn&amp;#39;t address.  Path of least resistance basically.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6ov5e", "score_hidden": false, "stickied": false, "created": 1492065543.0, "created_utc": 1492036743.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6k1ul", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Buckwheat469", "parent_id": "t1_dg6jlvy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'll have to try again before I can answer your question. It's on my list of things to do. May I ask why you decided to transition away from gulp?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll have to try again before I can answer your question. It&amp;#39;s on my list of things to do. May I ask why you decided to transition away from gulp?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6k1ul", "score_hidden": false, "stickied": false, "created": 1492059743.0, "created_utc": 1492030943.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6jlvy", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6gls6", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I've never run into that while using gulp.  I transitioned off of gulp a while ago so I'm not really sure where your issue lies but does gulp have a reference to the node modules directory your using?  That's where the d.ts files should be for libraries.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve never run into that while using gulp.  I transitioned off of gulp a while ago so I&amp;#39;m not really sure where your issue lies but does gulp have a reference to the node modules directory your using?  That&amp;#39;s where the d.ts files should be for libraries.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6jlvy", "score_hidden": false, "stickied": false, "created": 1492059253.0, "created_utc": 1492030453.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6gls6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Buckwheat469", "parent_id": "t1_dg6bs8c", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "As best as I could understand it at the time, yes. It would fail to compile the Typescript files because it couldn't find the .d files.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As best as I could understand it at the time, yes. It would fail to compile the Typescript files because it couldn&amp;#39;t find the .d files.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6gls6", "score_hidden": false, "stickied": false, "created": 1492056129.0, "created_utc": 1492027329.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6bs8c", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg5hp1s", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'm not totally clear on  what your saying here.  Are you saying gulp wouldn't run the typescript compiler because it couldn't find definition files?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not totally clear on  what your saying here.  Are you saying gulp wouldn&amp;#39;t run the typescript compiler because it couldn&amp;#39;t find definition files?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6bs8c", "score_hidden": false, "stickied": false, "created": 1492051165.0, "created_utc": 1492022365.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5hp1s", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Buckwheat469", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "This is a good write-up. The author mentioned angular's use of definition files, and I think this is my main holdup for truly grasping Typescript. I tried to set up an Angular 4 project with Gulp but ran into definition file hell trying to find the .d file that defined a Typescript class in order to transpile to JavaScript. For whatever reason Webpack didn't have the same issue but I wanted to play with gulp instead. Because of the problems I had to go back to Webpack until I could understand the problems more.", "edited": 1492062084.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a good write-up. The author mentioned angular&amp;#39;s use of definition files, and I think this is my main holdup for truly grasping Typescript. I tried to set up an Angular 4 project with Gulp but ran into definition file hell trying to find the .d file that defined a Typescript class in order to transpile to JavaScript. For whatever reason Webpack didn&amp;#39;t have the same issue but I wanted to play with gulp instead. Because of the problems I had to go back to Webpack until I could understand the problems more.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5hp1s", "score_hidden": false, "stickied": false, "created": 1492001531.0, "created_utc": 1491972731.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg5cabz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "wwalser", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks for the excellent write up Tom. :D", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the excellent write up Tom. :D&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5cabz", "score_hidden": false, "stickied": false, "created": 1491993055.0, "created_utc": 1491964255.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6uxsi", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6u24t", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "OK then technically your assertion that the article is wrong and that typescript isn't literally *only* javascript with types is true.  Seems overly nitpicky and counter productive to me but whatever.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK then technically your assertion that the article is wrong and that typescript isn&amp;#39;t literally &lt;em&gt;only&lt;/em&gt; javascript with types is true.  Seems overly nitpicky and counter productive to me but whatever.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6uxsi", "score_hidden": false, "stickied": false, "created": 1492073006.0, "created_utc": 1492044206.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6u24t", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "adversarial_game", "parent_id": "t1_dg6trvs", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'm not confused about what superset means. Rather, the article makes a claim about what *kind* of superset TypeScript is, namely, that it only adds types. I'm pointing out that this is not true.\n\nYes, of course it can compile its non-type syntax additions to JavaScript. So could CoffeeScript. That doesn't mean it doesn't have syntax additions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not confused about what superset means. Rather, the article makes a claim about what &lt;em&gt;kind&lt;/em&gt; of superset TypeScript is, namely, that it only adds types. I&amp;#39;m pointing out that this is not true.&lt;/p&gt;\n\n&lt;p&gt;Yes, of course it can compile its non-type syntax additions to JavaScript. So could CoffeeScript. That doesn&amp;#39;t mean it doesn&amp;#39;t have syntax additions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6u24t", "score_hidden": false, "stickied": false, "created": 1492071971.0, "created_utc": 1492043171.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6trvs", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6sb1d", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Well if you bothered to look at what that compiles down to you'd see that that compiles into\n\n    class Foo  { \n        constructor() {\n            this.prop = 0;\n        }\n     }\n\nWhich is 100% current idiomatic javascript.  It's called a super set.  I don't know what is confusing about that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well if you bothered to look at what that compiles down to you&amp;#39;d see that that compiles into&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Foo  { \n    constructor() {\n        this.prop = 0;\n    }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which is 100% current idiomatic javascript.  It&amp;#39;s called a super set.  I don&amp;#39;t know what is confusing about that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6trvs", "score_hidden": false, "stickied": false, "created": 1492071621.0, "created_utc": 1492042821.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6sb1d", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "adversarial_game", "parent_id": "t1_dg6rk25", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Class fields, meaning specifically the syntax\n\n    class Foo {\n      prop = 0;\n    }\n\nare not a part of JavaScript. They're a [proposal](https://tc39.github.io/proposal-class-public-fields/), just as, say, [do-expressions](https://gist.github.com/dherman/1c97dfb25179fa34a41b5fff040f9879) are a proposal. Proposals are how features advance through TC39, the JavaScript standards committee, on their way to becoming part of the language. If something is a proposal (before stage 4, anyway), that means it's not part of JavaScript.\n\nThe fact that TypeScript allows you to write the above code means that it adds syntax unrelated to types, which the article specifically claims is not the case.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Class fields, meaning specifically the syntax&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Foo {\n  prop = 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;are not a part of JavaScript. They&amp;#39;re a &lt;a href=\"https://tc39.github.io/proposal-class-public-fields/\"&gt;proposal&lt;/a&gt;, just as, say, &lt;a href=\"https://gist.github.com/dherman/1c97dfb25179fa34a41b5fff040f9879\"&gt;do-expressions&lt;/a&gt; are a proposal. Proposals are how features advance through TC39, the JavaScript standards committee, on their way to becoming part of the language. If something is a proposal (before stage 4, anyway), that means it&amp;#39;s not part of JavaScript.&lt;/p&gt;\n\n&lt;p&gt;The fact that TypeScript allows you to write the above code means that it adds syntax unrelated to types, which the article specifically claims is not the case.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6sb1d", "score_hidden": false, "stickied": false, "created": 1492069788.0, "created_utc": 1492040988.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6rk25", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6r08d", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Typescript is a super set of the current standard of javascript.  I don't even know what nonsense you are talking about with proposals.  That statement makes no sense.\n\nAnd what do you mean class fields?  Javascript supports class fields already.  A class field is just a key on the this pointer of a class instance.\n\nI don't even understand what you are saying here.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript is a super set of the current standard of javascript.  I don&amp;#39;t even know what nonsense you are talking about with proposals.  That statement makes no sense.&lt;/p&gt;\n\n&lt;p&gt;And what do you mean class fields?  Javascript supports class fields already.  A class field is just a key on the this pointer of a class instance.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t even understand what you are saying here.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6rk25", "score_hidden": false, "stickied": false, "created": 1492068868.0, "created_utc": 1492040068.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6r08d", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "adversarial_game", "parent_id": "t1_dg6q6vk", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Decorators are proposed. Class fields are proposed. [*Lots*](https://github.com/tc39/proposals) of things are proposed. That doesn't make them part of JavaScript. The claim in the article is that TypeScript is just JavaScript + types, and that's demonstrably untrue, as evidenced by the fact that TypeScript includes class fields, which are not a part of JavaScript.\n\nEven if you want to claim that proposals *are* part of JavaScript - which they are not - then TypeScript isn't a superset of JavaScript because it doesn't support most of the other proposals.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Decorators are proposed. Class fields are proposed. &lt;a href=\"https://github.com/tc39/proposals\"&gt;&lt;em&gt;Lots&lt;/em&gt;&lt;/a&gt; of things are proposed. That doesn&amp;#39;t make them part of JavaScript. The claim in the article is that TypeScript is just JavaScript + types, and that&amp;#39;s demonstrably untrue, as evidenced by the fact that TypeScript includes class fields, which are not a part of JavaScript.&lt;/p&gt;\n\n&lt;p&gt;Even if you want to claim that proposals &lt;em&gt;are&lt;/em&gt; part of JavaScript - which they are not - then TypeScript isn&amp;#39;t a superset of JavaScript because it doesn&amp;#39;t support most of the other proposals.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6r08d", "score_hidden": false, "stickied": false, "created": 1492068199.0, "created_utc": 1492039399.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6q6vk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg6og92", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Decorators are proposed for javascript.  Not sure what stage they are at currently.  But you can turn off decorator support in the typescript config.  This is no different from multiple constructs that have support in babel but aren't actually in javascript.\n\nAs for the private thing yeah javascript doesn't actually have private.  Which is why the typescript implementation doesn't stop you from changing the field through a string accessor.  Because currently it is literally impossible to stop so they don't even try.  You should consider the private keyword to being the equivalent of using an _variable inside a js class.  Technically anyone can change it, but you shouldn't because it's private.  There just is no enforcement at the runtime level.  \n\nThe nice thing about typescript is that the tooling will complain if you try to change a member marked private without a string accessor.  You get literally no warning or anything if you change a _privateMember in traditional javascript.\n\nSo again, typescript is a super set and it does not have the same problems coffeescript has.  Every line of javascript is also valid typescript unless you get into proposed features that haven't made it into the standard yet.\n\nThere is no diverging from javascript.  If / when javascript gets private members typescript will change their implementation to follow suit.  The same thing happened with modules where typescript had a module implementation before the js one was published.  Once the js implementation was published typescript changed their system to match the js one.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Decorators are proposed for javascript.  Not sure what stage they are at currently.  But you can turn off decorator support in the typescript config.  This is no different from multiple constructs that have support in babel but aren&amp;#39;t actually in javascript.&lt;/p&gt;\n\n&lt;p&gt;As for the private thing yeah javascript doesn&amp;#39;t actually have private.  Which is why the typescript implementation doesn&amp;#39;t stop you from changing the field through a string accessor.  Because currently it is literally impossible to stop so they don&amp;#39;t even try.  You should consider the private keyword to being the equivalent of using an _variable inside a js class.  Technically anyone can change it, but you shouldn&amp;#39;t because it&amp;#39;s private.  There just is no enforcement at the runtime level.  &lt;/p&gt;\n\n&lt;p&gt;The nice thing about typescript is that the tooling will complain if you try to change a member marked private without a string accessor.  You get literally no warning or anything if you change a _privateMember in traditional javascript.&lt;/p&gt;\n\n&lt;p&gt;So again, typescript is a super set and it does not have the same problems coffeescript has.  Every line of javascript is also valid typescript unless you get into proposed features that haven&amp;#39;t made it into the standard yet.&lt;/p&gt;\n\n&lt;p&gt;There is no diverging from javascript.  If / when javascript gets private members typescript will change their implementation to follow suit.  The same thing happened with modules where typescript had a module implementation before the js one was published.  Once the js implementation was published typescript changed their system to match the js one.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6q6vk", "score_hidden": false, "stickied": false, "created": 1492067183.0, "created_utc": 1492038383.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6og92", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "adversarial_game", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; In reality, TypeScript is just JavaScript plus the smallest possible set of syntax additions required to let you incrementally typecheck your code.\n\nWait, but... this isn't remotely true.\n\nHere's some valid TypeScript:\n\n    class Foo {\n      private prop = 0;\n      prop2 = \"foobar\";\n    }\n    (new Foo)['prop'] = 1;\n\nPrivate fields aren't a part of JavaScript. They're proposed, but the proposal looks very different. (Also, this is off-topic, but notice that TypeScript allows you to modify the private field as long as you do it with brackets. This is incidentally the reason the proposal looks so different.)\n\nPublic fields aren't a part of JavaScript either, and that proposal currently looks pretty similar but might have different semantics (or possibly both different syntax and semantics).\n\nIt doesn't even give a warning when you class fields. At least it gives a warning when using decorators, which are also not part of the language. Even worse, as far as I'm aware there's no way to make the TypeScript compiler disallow these non-type extensions to the language.\n\nIn other words, TypeScript suffers from exactly the same problem you identify in CoffeeScript:\n\n&gt; \u201cJavaScript-alikes\u201d like CoffeeScript [*and TypeScript*] will have to break their own backwards compatibility, or diverge from JavaScript (and thus become less JS-alike over time).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;In reality, TypeScript is just JavaScript plus the smallest possible set of syntax additions required to let you incrementally typecheck your code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Wait, but... this isn&amp;#39;t remotely true.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s some valid TypeScript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Foo {\n  private prop = 0;\n  prop2 = &amp;quot;foobar&amp;quot;;\n}\n(new Foo)[&amp;#39;prop&amp;#39;] = 1;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Private fields aren&amp;#39;t a part of JavaScript. They&amp;#39;re proposed, but the proposal looks very different. (Also, this is off-topic, but notice that TypeScript allows you to modify the private field as long as you do it with brackets. This is incidentally the reason the proposal looks so different.)&lt;/p&gt;\n\n&lt;p&gt;Public fields aren&amp;#39;t a part of JavaScript either, and that proposal currently looks pretty similar but might have different semantics (or possibly both different syntax and semantics).&lt;/p&gt;\n\n&lt;p&gt;It doesn&amp;#39;t even give a warning when you class fields. At least it gives a warning when using decorators, which are also not part of the language. Even worse, as far as I&amp;#39;m aware there&amp;#39;s no way to make the TypeScript compiler disallow these non-type extensions to the language.&lt;/p&gt;\n\n&lt;p&gt;In other words, TypeScript suffers from exactly the same problem you identify in CoffeeScript:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;\u201cJavaScript-alikes\u201d like CoffeeScript [&lt;em&gt;and TypeScript&lt;/em&gt;] will have to break their own backwards compatibility, or diverge from JavaScript (and thus become less JS-alike over time).&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6og92", "score_hidden": false, "stickied": false, "created": 1492065035.0, "created_utc": 1492036235.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg747xw", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "drunkenfaggot", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "No offense to Facebook's efforts with Flow, but it really annoys me to see them continuing to invest resources into it instead of just making TypeScript better. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No offense to Facebook&amp;#39;s efforts with Flow, but it really annoys me to see them continuing to invest resources into it instead of just making TypeScript better. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg747xw", "score_hidden": false, "stickied": false, "created": 1492085072.0, "created_utc": 1492056272.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg7ku6u", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ower89", "parent_id": "t1_dg6p38j", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Not liking classes is OK, but if you like FP you must like static types? What about using TypeScript without classes? I meet Anders Hejlsberg in person last year and I had a conversation with him about this. His reply was: \"TypeScript is great for FP, in fact, there is not one single class in the entire TypeScript compiler code base\". You can chek it, there are classes only in the unit test  https://github.com/Microsoft/TypeScript/search?utf8=%E2%9C%93&amp;q=class&amp;type=", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not liking classes is OK, but if you like FP you must like static types? What about using TypeScript without classes? I meet Anders Hejlsberg in person last year and I had a conversation with him about this. His reply was: &amp;quot;TypeScript is great for FP, in fact, there is not one single class in the entire TypeScript compiler code base&amp;quot;. You can chek it, there are classes only in the unit test  &lt;a href=\"https://github.com/Microsoft/TypeScript/search?utf8=%E2%9C%93&amp;amp;q=class&amp;amp;type=\"&gt;https://github.com/Microsoft/TypeScript/search?utf8=%E2%9C%93&amp;amp;q=class&amp;amp;type=&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg7ku6u", "score_hidden": false, "stickied": false, "created": 1492120860.0, "created_utc": 1492092060.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg7bl69", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "cerved", "parent_id": "t1_dg6q450", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Using `class` is problematic. If you're interested in why, check-out [JavaScript Factory Functions vs Constructor Functions vs Classes](https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e) by Eric Elliot", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using &lt;code&gt;class&lt;/code&gt; is problematic. If you&amp;#39;re interested in why, check-out &lt;a href=\"https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e\"&gt;JavaScript Factory Functions vs Constructor Functions vs Classes&lt;/a&gt; by Eric Elliot&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg7bl69", "score_hidden": false, "stickied": false, "created": 1492101434.0, "created_utc": 1492072634.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6uhzx", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "EnchantedSalvia", "parent_id": "t1_dg6q450", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I think it's fair to say that classes have never been a part of JS in the conventional sense. However many attempts have been made to shoehorn classes in, with EmberJS being one, and TS being another. Prototypal inheritance has always been awkward, and making JS conventionally class based using PI has been even more awkward and embarrassing. I'm sure TS won't be the last library to push the OOP agenda. Nevertheless the original point was that I see the JS community diverging between OOP and functional. I come from an OOP background but moved toward functional in the past few years. From a personal development perspective it's necessary to be fluent in both. As a senior developer I attempt to teach my less senior coworkers both, because at the end of the day whether we choose OOP or functional, we achieve the same outcome.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s fair to say that classes have never been a part of JS in the conventional sense. However many attempts have been made to shoehorn classes in, with EmberJS being one, and TS being another. Prototypal inheritance has always been awkward, and making JS conventionally class based using PI has been even more awkward and embarrassing. I&amp;#39;m sure TS won&amp;#39;t be the last library to push the OOP agenda. Nevertheless the original point was that I see the JS community diverging between OOP and functional. I come from an OOP background but moved toward functional in the past few years. From a personal development perspective it&amp;#39;s necessary to be fluent in both. As a senior developer I attempt to teach my less senior coworkers both, because at the end of the day whether we choose OOP or functional, we achieve the same outcome.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6uhzx", "score_hidden": false, "stickied": false, "created": 1492072492.0, "created_utc": 1492043692.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6q450", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nmdanny2", "parent_id": "t1_dg6p38j", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I disagree, it's not as if before ES6/TS there weren't classes and interfaces, it's just that there were many ways of defining them, via prototypes and/or various helper functions. \n\n'Class' just provides a uniform syntax for doing so.\n\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I disagree, it&amp;#39;s not as if before ES6/TS there weren&amp;#39;t classes and interfaces, it&amp;#39;s just that there were many ways of defining them, via prototypes and/or various helper functions. &lt;/p&gt;\n\n&lt;p&gt;&amp;#39;Class&amp;#39; just provides a uniform syntax for doing so.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6q450", "score_hidden": false, "stickied": false, "created": 1492067087.0, "created_utc": 1492038287.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6p38j", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "EnchantedSalvia", "parent_id": "t1_dg61drd", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I have to agree with you. At this point I see the JS community diverging. Those who love classes, interfaces, and a more general appreciation for OOP, mutable state, etc... And those like myself who love the functional approach and have spent their time learning Clojure, Haskell, etc... It's also not a question of a dislike for static types either, because Haskell is statically typed, yet it feels far more mature than what TS provides.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have to agree with you. At this point I see the JS community diverging. Those who love classes, interfaces, and a more general appreciation for OOP, mutable state, etc... And those like myself who love the functional approach and have spent their time learning Clojure, Haskell, etc... It&amp;#39;s also not a question of a dislike for static types either, because Haskell is statically typed, yet it feels far more mature than what TS provides.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6p38j", "score_hidden": false, "stickied": false, "created": 1492065816.0, "created_utc": 1492037016.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg61drd", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cerved", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "I have a visceral reaction every time I see `class` in js", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have a visceral reaction every time I see &lt;code&gt;class&lt;/code&gt; in js&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg61drd", "score_hidden": false, "stickied": false, "created": 1492040408.0, "created_utc": 1492011608.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6nyum", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "syholloway", "parent_id": "t1_dg6j1at", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; With that logic, why start with JS when you should really start with ~~C Assembly Machine code magnetized needles on a disk platter~~ butterflies to truly understand the fundamentals of software engineering?\n\nEven better.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;With that logic, why start with JS when you should really start with &lt;del&gt;C Assembly Machine code magnetized needles on a disk platter&lt;/del&gt; butterflies to truly understand the fundamentals of software engineering?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Even better.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6nyum", "score_hidden": false, "stickied": false, "created": 1492064426.0, "created_utc": 1492035626.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6j1at", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nmdanny2", "parent_id": "t1_dg60cr7", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "\n\n&gt;   With that logic, why start with JS when you should really start with ~~C Assembly Machine code~~ magnetized needles on a disk platter to truly \n     understand the fundamentals of software engineering? \n\nEven better.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;With that logic, why start with JS when you should really start with &lt;del&gt;C Assembly Machine code&lt;/del&gt; magnetized needles on a disk platter to truly \n     understand the fundamentals of software engineering? &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Even better.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6j1at", "score_hidden": false, "stickied": false, "created": 1492058640.0, "created_utc": 1492029840.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg60cr7", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "papers_", "parent_id": "t1_dg5ydra", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; With that logic, why start with JS when you should really start with ~~C~~ ~~Assembly~~ Machine code to truly understand the fundamentals of software engineering?\n&gt; Even better.\n\n_Even_ better.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;With that logic, why start with JS when you should really start with &lt;del&gt;C&lt;/del&gt; &lt;del&gt;Assembly&lt;/del&gt; Machine code to truly understand the fundamentals of software engineering?\nEven better.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;Even&lt;/em&gt; better.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg60cr7", "score_hidden": false, "stickied": false, "created": 1492039282.0, "created_utc": 1492010482.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ydra", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "akujinhikari", "parent_id": "t1_dg5te2v", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt;With that logic, why start with JS when you should really start with ~~C~~ Assembly to truly understand the fundamentals of software engineering?\n\nEven better.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;With that logic, why start with JS when you should really start with &lt;del&gt;C&lt;/del&gt; Assembly to truly understand the fundamentals of software engineering?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Even better.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5ydra", "score_hidden": false, "stickied": false, "created": 1492037069.0, "created_utc": 1492008269.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg64x4k", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "i_ate_god", "parent_id": "t1_dg62yap", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "C is great as a first language as it gives you an excellent foundation to understand how software works.\n\nBut you can gain that knowledge in the future. Starting off with something very high level and abstract like Typescript is fine as long you're ready to take the red pill and go down the rabbit hole.\n\nIt's like Java devs that don't even understand how a garbage collector works. You can get by being ignorant of the GC, but you'll never be great.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C is great as a first language as it gives you an excellent foundation to understand how software works.&lt;/p&gt;\n\n&lt;p&gt;But you can gain that knowledge in the future. Starting off with something very high level and abstract like Typescript is fine as long you&amp;#39;re ready to take the red pill and go down the rabbit hole.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s like Java devs that don&amp;#39;t even understand how a garbage collector works. You can get by being ignorant of the GC, but you&amp;#39;ll never be great.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg64x4k", "score_hidden": false, "stickied": false, "created": 1492044182.0, "created_utc": 1492015382.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg62yap", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "inu-no-policemen", "parent_id": "t1_dg5te2v", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "C is a fairly simple language, though. It's not that bad as a first language.\n\nUnfortunately, being simple does not mean that it's easy to use.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C is a fairly simple language, though. It&amp;#39;s not that bad as a first language.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately, being simple does not mean that it&amp;#39;s easy to use.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg62yap", "score_hidden": false, "stickied": false, "created": 1492042119.0, "created_utc": 1492013319.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6488t", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "i_ate_god", "parent_id": "t1_dg63ktr", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "if you're doing semiconductor design, then geology is an important source of knowledge. Doesn't mean you need to be a geologist, but knowing where and how the materials you need are sourced will make you better than someone who doesn't know.\n\nUnderstanding what lies beneath all your abstractions is important if you want to be proficient. Ignorance is a poor career move.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;if you&amp;#39;re doing semiconductor design, then geology is an important source of knowledge. Doesn&amp;#39;t mean you need to be a geologist, but knowing where and how the materials you need are sourced will make you better than someone who doesn&amp;#39;t know.&lt;/p&gt;\n\n&lt;p&gt;Understanding what lies beneath all your abstractions is important if you want to be proficient. Ignorance is a poor career move.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6488t", "score_hidden": false, "stickied": false, "created": 1492043467.0, "created_utc": 1492014667.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg63ktr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cwmma", "parent_id": "t1_dg5te2v", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Good idea since C and JavaScript share the same package manager and execution environment they practically are the same thing.  I personally learned Geology first, followed by mining, before learning semiconductor design before finely delving into assembly. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good idea since C and JavaScript share the same package manager and execution environment they practically are the same thing.  I personally learned Geology first, followed by mining, before learning semiconductor design before finely delving into assembly. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg63ktr", "score_hidden": false, "stickied": false, "created": 1492042786.0, "created_utc": 1492013986.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5te2v", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "i_ate_god", "parent_id": "t1_dg5q98z", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "With that logic, why start with JS when you should really start with C to truly understand the fundamentals of software engineering?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With that logic, why start with JS when you should really start with C to truly understand the fundamentals of software engineering?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5te2v", "score_hidden": false, "stickied": false, "created": 1492030437.0, "created_utc": 1492001637.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6468z", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "myrrlyn", "parent_id": "t1_dg63gc6", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Re: 1, yes, but that's *all* the difference.\n\nRe: 2, JS is the most egregious example of horrifying mandatory tooling I can think of, with the possible exception of Makefiles. `tsc` is an extremely simple compiler in both relative and absolute terms.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Re: 1, yes, but that&amp;#39;s &lt;em&gt;all&lt;/em&gt; the difference.&lt;/p&gt;\n\n&lt;p&gt;Re: 2, JS is the most egregious example of horrifying mandatory tooling I can think of, with the possible exception of Makefiles. &lt;code&gt;tsc&lt;/code&gt; is an extremely simple compiler in both relative and absolute terms.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6468z", "score_hidden": false, "stickied": false, "created": 1492043409.0, "created_utc": 1492014609.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg63gc6", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cwmma", "parent_id": "t1_dg5rfgx", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; They specifically said in the article, start with plain JavaScript, change the extension from js to ts, then add type markers where you need them.\n\nThey were talking about starting your TS journey not JS journey here.\n\n&gt; Learning TS is learning JS, \n\neh except for mandatory tooling \n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;They specifically said in the article, start with plain JavaScript, change the extension from js to ts, then add type markers where you need them.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;They were talking about starting your TS journey not JS journey here.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Learning TS is learning JS, &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;eh except for mandatory tooling &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg63gc6", "score_hidden": false, "stickied": false, "created": 1492042655.0, "created_utc": 1492013855.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6ewg1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg5rfgx", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Class was added in es2015 / es6.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Class was added in es2015 / es6.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6ewg1", "score_hidden": false, "stickied": false, "created": 1492054390.0, "created_utc": 1492025590.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5rfgx", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "myrrlyn", "parent_id": "t1_dg5q98z", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "They specifically said in the article, start with plain JavaScript, change the extension from js to ts, then add type markers where you need them.\n\nAs your transpilation target advances, the difference between TS and JS reduces. Transpiling to, say, ES5 will have a huge difference, in which case you should look at the source and not the output, but TS' only language constructs that aren't in JS are class/interface. And apparently ES2017 has classes now, and interfaces aren't real.\n\nLearning TS is learning JS, except type errors are caught sooner rather than having the thing Just Not Work and no obvious reason why.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They specifically said in the article, start with plain JavaScript, change the extension from js to ts, then add type markers where you need them.&lt;/p&gt;\n\n&lt;p&gt;As your transpilation target advances, the difference between TS and JS reduces. Transpiling to, say, ES5 will have a huge difference, in which case you should look at the source and not the output, but TS&amp;#39; only language constructs that aren&amp;#39;t in JS are class/interface. And apparently ES2017 has classes now, and interfaces aren&amp;#39;t real.&lt;/p&gt;\n\n&lt;p&gt;Learning TS is learning JS, except type errors are caught sooner rather than having the thing Just Not Work and no obvious reason why.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5rfgx", "score_hidden": false, "stickied": false, "created": 1492026902.0, "created_utc": 1491998102.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5q98z", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cwmma", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "Typescript is neat but DON'T START WITH IT, start with JavaScript first so you can understand the basics, I've had so many bugs opened by people new to the scene writing in typescript and somewhere in the compile chain is a bug that I can't help them with because I don't do typescript. I'm not one of those 'in my day we wrote in notepad' old timers against compiling or anything just you will have to learn JS eventually so you arn't doing yourself any favors by putting it off at first. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript is neat but DON&amp;#39;T START WITH IT, start with JavaScript first so you can understand the basics, I&amp;#39;ve had so many bugs opened by people new to the scene writing in typescript and somewhere in the compile chain is a bug that I can&amp;#39;t help them with because I don&amp;#39;t do typescript. I&amp;#39;m not one of those &amp;#39;in my day we wrote in notepad&amp;#39; old timers against compiling or anything just you will have to learn JS eventually so you arn&amp;#39;t doing yourself any favors by putting it off at first. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5q98z", "score_hidden": false, "stickied": false, "created": 1492024255.0, "created_utc": 1491995455.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg6c7ua", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "icantthinkofone", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt;Because JavaScript is the lingua franca of the web, and the web is everywhere, it is a programming language subject to enormous compatibility...\n\nHe should have stopped there. Now he's lost.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Because JavaScript is the lingua franca of the web, and the web is everywhere, it is a programming language subject to enormous compatibility...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;He should have stopped there. Now he&amp;#39;s lost.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg6c7ua", "score_hidden": false, "stickied": false, "created": 1492051609.0, "created_utc": 1492022809.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64u8q9", "likes": null, "replies": "", "user_reports": [], "id": "dg7qmfo", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "scaramanga9", "parent_id": "t3_64u8q9", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What sold me on TypeScript was that it didn't just add features, it actively solved a problem I'd been experiencing.\n\nOnce a JavaScript project scales beyond what can fit in your head, JS's initial productivity boost crumbles because you have to constantly double back and make sure your methods/constructors/etc. are correctly used, which properties are optional, etc... A lot of the debugging happens in runtime and god help you if you try to make a breaking change to one of the major classes/apis in your project.\n\nIt's not unbearable, but the main reason for using JS is because of the productivity it allows.\n\nWith TS for the cost of taking the time to explicitly define your data you get a C#/Java level of debugging that has clear productivity gains and shifts your debugging from the browser/console to the IDE.\n\nAnd when something doesn't fit the TS model you can just exclude it or only type the wrappers that integrate with the rest of your project.\n\nThat and async/await is a godsend over promises.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What sold me on TypeScript was that it didn&amp;#39;t just add features, it actively solved a problem I&amp;#39;d been experiencing.&lt;/p&gt;\n\n&lt;p&gt;Once a JavaScript project scales beyond what can fit in your head, JS&amp;#39;s initial productivity boost crumbles because you have to constantly double back and make sure your methods/constructors/etc. are correctly used, which properties are optional, etc... A lot of the debugging happens in runtime and god help you if you try to make a breaking change to one of the major classes/apis in your project.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s not unbearable, but the main reason for using JS is because of the productivity it allows.&lt;/p&gt;\n\n&lt;p&gt;With TS for the cost of taking the time to explicitly define your data you get a C#/Java level of debugging that has clear productivity gains and shifts your debugging from the browser/console to the IDE.&lt;/p&gt;\n\n&lt;p&gt;And when something doesn&amp;#39;t fit the TS model you can just exclude it or only type the wrappers that integrate with the rest of your project.&lt;/p&gt;\n\n&lt;p&gt;That and async/await is a godsend over promises.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg7qmfo", "score_hidden": false, "stickied": false, "created": 1492127396.0, "created_utc": 1492098596.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]