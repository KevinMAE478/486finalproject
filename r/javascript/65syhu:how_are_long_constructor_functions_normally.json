[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I tend to have this problem where I&amp;#39;m writing Javascript and I have a long constructor function that does a ton of stuff. It sometimes gets difficult to maintain. One idea is to separate it into a bunch of mini functions and call them in the constructor, so each chunk of code is essentially namespaced. But then the prototype becomes a big list of functions that are only called in the constructor, which is also difficult to maintain. And semantically, I like functions to be actual functions that could theoretically come in handy at any time...not just a namespace for a chunk of code only called in the constructor. &lt;/p&gt;\n\n&lt;p&gt;Does anyone have a decent solution for long constructor functions?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I tend to have this problem where I'm writing Javascript and I have a long constructor function that does a ton of stuff. It sometimes gets difficult to maintain. One idea is to separate it into a bunch of mini functions and call them in the constructor, so each chunk of code is essentially namespaced. But then the prototype becomes a big list of functions that are only called in the constructor, which is also difficult to maintain. And semantically, I like functions to be actual functions that could theoretically come in handy at any time...not just a namespace for a chunk of code only called in the constructor. \n\nDoes anyone have a decent solution for long constructor functions?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "help", "id": "65syhu", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 8, "report_reasons": null, "author": "EducationalSoftware", "saved": false, "mod_reports": [], "name": "t3_65syhu", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": "help", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/65syhu/how_are_long_constructor_functions_normally/", "num_reports": null, "locked": false, "stickied": false, "created": 1492424324.0, "url": "https://www.reddit.com/r/javascript/comments/65syhu/how_are_long_constructor_functions_normally/", "author_flair_text": null, "quarantine": false, "title": "How are long constructor functions normally organized?", "created_utc": 1492395524.0, "distinguished": null, "media": null, "upvote_ratio": 0.91, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": "", "user_reports": [], "id": "dgd7v58", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "cthechartreuse", "parent_id": "t1_dgczmkt", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I second this. If you have lots of constructor logic, you likely have a big, complex object. Consider breaking your object down and then composing objects to set up your state. The dependency injection pattern can help with this, too. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I second this. If you have lots of constructor logic, you likely have a big, complex object. Consider breaking your object down and then composing objects to set up your state. The dependency injection pattern can help with this, too. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgd7v58", "score_hidden": false, "stickied": false, "created": 1492440211.0, "created_utc": 1492411411.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": "", "user_reports": [], "id": "dgd01r3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "sirunclecid", "parent_id": "t1_dgczsn1", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Look up \"single responsibility principle\".  Very easy to maintain if you do it properly.  ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Look up &amp;quot;single responsibility principle&amp;quot;.  Very easy to maintain if you do it properly.  &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgd01r3", "score_hidden": false, "stickied": false, "created": 1492426220.0, "created_utc": 1492397420.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": "", "user_reports": [], "id": "dgdxkvm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "malicart", "parent_id": "t1_dgczsn1", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Everything is possible, its how much work is required ;)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Everything is possible, its how much work is required ;)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgdxkvm", "score_hidden": false, "stickied": false, "created": 1492484235.0, "created_utc": 1492455435.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgczsn1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "EducationalSoftware", "parent_id": "t1_dgczmkt", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks, I'll consider whether or not this is possible.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks, I&amp;#39;ll consider whether or not this is possible.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgczsn1", "score_hidden": false, "stickied": false, "created": 1492425876.0, "created_utc": 1492397076.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgczmkt", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "MoTTs_", "parent_id": "t3_65syhu", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Honestly... the best solution is don't do so much work in constructors. My guess is you need to move most of the logic into the methods, not the constructor, and split the responsibilities into multiple classes that use each other.\n\nWe'll need to see some code for more specific details.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Honestly... the best solution is don&amp;#39;t do so much work in constructors. My guess is you need to move most of the logic into the methods, not the constructor, and split the responsibilities into multiple classes that use each other.&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;ll need to see some code for more specific details.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgczmkt", "score_hidden": false, "stickied": false, "created": 1492425652.0, "created_utc": 1492396852.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65syhu", "likes": null, "replies": "", "user_reports": [], "id": "dgdhigy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "NotSelfAware", "parent_id": "t3_65syhu", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The use of public and private methods on a class/prototype is a very widely used practice. I honestly really wouldn't worry about it so much. If you really want to keep those methods private, consider using something like the [revealing module pattern](https://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript). Or just extract them from the constructor and call them as standalone functions. You can always bind the function to the instance when you call it in the constructor.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The use of public and private methods on a class/prototype is a very widely used practice. I honestly really wouldn&amp;#39;t worry about it so much. If you really want to keep those methods private, consider using something like the &lt;a href=\"https://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript\"&gt;revealing module pattern&lt;/a&gt;. Or just extract them from the constructor and call them as standalone functions. You can always bind the function to the instance when you call it in the constructor.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgdhigy", "score_hidden": false, "stickied": false, "created": 1492465200.0, "created_utc": 1492436400.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]