[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Looking for personal experiences. When do you usually start writing tests for a project?&lt;/p&gt;\n\n&lt;p&gt;On personal projects I&amp;#39;ve done either starting very early, or no tests at all. Usually depends how complex it might be. Haven&amp;#39;t ever started a project with tests before code (something I&amp;#39;d like to try though).&lt;/p&gt;\n\n&lt;p&gt;In job realated areas it&amp;#39;s usually been the case that the project will start with no tests, and they&amp;#39;ll come later once things have stabalized a bit, and time constraints are less (could be many months for fresh projects).&lt;/p&gt;\n\n&lt;p&gt;Which leads me to a second question, do you find writing tests increases the time to push out features? Or does it lessen for you because there&amp;#39;s less time debugging?&lt;/p&gt;\n\n&lt;p&gt;I usually find I&amp;#39;m not very quick when it comes to test writing, but my debugging takes a very short time, and I don&amp;#39;t usually encounter many errors.&lt;/p&gt;\n\n&lt;p&gt;Not saying tests are bad, they definitely don&amp;#39;t, so many benifits when working within teams.&lt;/p&gt;\n\n&lt;p&gt;I also find debugging a lot more enjoyable than writing tests, something about the problem solving aspect.&lt;/p&gt;\n\n&lt;p&gt;Lastly if anyone has any resources for learning effective testing, or making it more enjoyable please include.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Looking for personal experiences. When do you usually start writing tests for a project?\n\nOn personal projects I've done either starting very early, or no tests at all. Usually depends how complex it might be. Haven't ever started a project with tests before code (something I'd like to try though).\n\nIn job realated areas it's usually been the case that the project will start with no tests, and they'll come later once things have stabalized a bit, and time constraints are less (could be many months for fresh projects).\n\nWhich leads me to a second question, do you find writing tests increases the time to push out features? Or does it lessen for you because there's less time debugging?\n\nI usually find I'm not very quick when it comes to test writing, but my debugging takes a very short time, and I don't usually encounter many errors.\n\nNot saying tests are bad, they definitely don't, so many benifits when working within teams.\n\nI also find debugging a lot more enjoyable than writing tests, something about the problem solving aspect.\n\nLastly if anyone has any resources for learning effective testing, or making it more enjoyable please include.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ewbw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 18, "report_reasons": null, "author": "notNullOrVoid", "saved": false, "mod_reports": [], "name": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/65ewbw/testing_when_do_you_do_it/", "num_reports": null, "locked": false, "stickied": false, "created": 1492229393.0, "url": "https://www.reddit.com/r/javascript/comments/65ewbw/testing_when_do_you_do_it/", "author_flair_text": null, "quarantine": false, "title": "Testing, when do you do it?", "created_utc": 1492200593.0, "distinguished": null, "media": null, "upvote_ratio": 0.95, "num_comments": 17, "visited": false, "subreddit_type": "public", "ups": 18}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgaceqz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Sacrosaint", "parent_id": "t1_dga59u2", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "FunFunFunction on YouTube talks about how to add testing to your team.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FunFunFunction on YouTube talks about how to add testing to your team.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgaceqz", "score_hidden": false, "stickied": false, "created": 1492263532.0, "created_utc": 1492234732.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dga59u2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Angular360_No_Scopes", "parent_id": "t1_dg9s94o", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Got tips on how to start writing tests for work when nobody else does? Our idea of testing is \"push that code to Development branch and let QA handle it\". We got 0% coverage on the dev side. If someone wants to try something out, it's only with console.log. Hell, I'm exposed to more testing frameworks doing coding exercises for job interviews. The tests are usually pre-written though.\n\n I know unit testing has been around for a while but I don't know how widespread it is in the web industry. I also don't want to introduce friction to the company by accident, when everyone is already set in their ways.", "edited": 1492223243.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Got tips on how to start writing tests for work when nobody else does? Our idea of testing is &amp;quot;push that code to Development branch and let QA handle it&amp;quot;. We got 0% coverage on the dev side. If someone wants to try something out, it&amp;#39;s only with console.log. Hell, I&amp;#39;m exposed to more testing frameworks doing coding exercises for job interviews. The tests are usually pre-written though.&lt;/p&gt;\n\n&lt;p&gt;I know unit testing has been around for a while but I don&amp;#39;t know how widespread it is in the web industry. I also don&amp;#39;t want to introduce friction to the company by accident, when everyone is already set in their ways.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga59u2", "score_hidden": false, "stickied": false, "created": 1492251722.0, "created_utc": 1492222922.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dg9xftc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rsteier", "parent_id": "t1_dg9s94o", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "^ perfect answer.\n\nTo add to it, I highly recommend all software engineers learn and periodically brush up on Test Driven Design (TDD). There are lots of great resources out there, this is a favorite of mine: \n\nhttps://medium.com/javascript-scene/5-common-misconceptions-about-tdd-unit-tests-863d5beb3ce9\n\nFrom my personal experience, there are few times that when I didn't write tests, that I was okay with it. Even when trying to learn a new library or framework, I've found that the best way to learn it is to write tests around it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;^ perfect answer.&lt;/p&gt;\n\n&lt;p&gt;To add to it, I highly recommend all software engineers learn and periodically brush up on Test Driven Design (TDD). There are lots of great resources out there, this is a favorite of mine: &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/javascript-scene/5-common-misconceptions-about-tdd-unit-tests-863d5beb3ce9\"&gt;https://medium.com/javascript-scene/5-common-misconceptions-about-tdd-unit-tests-863d5beb3ce9&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;From my personal experience, there are few times that when I didn&amp;#39;t write tests, that I was okay with it. Even when trying to learn a new library or framework, I&amp;#39;ve found that the best way to learn it is to write tests around it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg9xftc", "score_hidden": false, "stickied": false, "created": 1492241059.0, "created_utc": 1492212259.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9s94o", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "Meqube", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Testing gives the security that your code does not break unexpectedly if you make a change somewhere in your code base. You will become faster in writing tests once you do it more and more. A golden rule for testing is that every part should be independent and should not rely on other tests. If you find debugging more enjoyable, try writing tests while debugging your code. This way do you not have to repeat yourself once your code is \"stable\". Try to make writing tests a habit once you have written a couple of functions or created a new API entry point write immediately the tests for it. This way do you not end up with dozens of functions that have no testing. Testing maybe takes some time of your day but in the end is it really worth it. It almost always guarantees that the code that you have written keeps working. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Testing gives the security that your code does not break unexpectedly if you make a change somewhere in your code base. You will become faster in writing tests once you do it more and more. A golden rule for testing is that every part should be independent and should not rely on other tests. If you find debugging more enjoyable, try writing tests while debugging your code. This way do you not have to repeat yourself once your code is &amp;quot;stable&amp;quot;. Try to make writing tests a habit once you have written a couple of functions or created a new API entry point write immediately the tests for it. This way do you not end up with dozens of functions that have no testing. Testing maybe takes some time of your day but in the end is it really worth it. It almost always guarantees that the code that you have written keeps working. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg9s94o", "score_hidden": false, "stickied": false, "created": 1492234197.0, "created_utc": 1492205397.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgam0xg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "amazingatomic", "parent_id": "t1_dgakq8r", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks! Sounds useful. I was curious because getting test coverage for the stateful chunk of an app is really hard (ie, validation is super easy to test, but the part that checks validation before updating the database is really hard to test.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks! Sounds useful. I was curious because getting test coverage for the stateful chunk of an app is really hard (ie, validation is super easy to test, but the part that checks validation before updating the database is really hard to test.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgam0xg", "score_hidden": false, "stickied": false, "created": 1492289624.0, "created_utc": 1492260824.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakq8r", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hotel2oscar", "parent_id": "t1_dgai4gc", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "It's a code coverage tool. Let's you know which lines in your source files are covered by your tests to help ensure you don't miss anything.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a code coverage tool. Let&amp;#39;s you know which lines in your source files are covered by your tests to help ensure you don&amp;#39;t miss anything.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgakq8r", "score_hidden": false, "stickied": false, "created": 1492286638.0, "created_utc": 1492257838.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgai4gc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "amazingatomic", "parent_id": "t1_dga2ddj", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What's Icov?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s Icov?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgai4gc", "score_hidden": false, "stickied": false, "created": 1492278928.0, "created_utc": 1492250128.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dga2ddj", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "hotel2oscar", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I try to follow TDD. I usually end up writing tests after doing some initial trial and error coding to prove the concept. I don't merge pull requests unless the code is fully covered (or as close as I can get without lcov).\n\nSaves me so much time during refactoring. Initial development is slightly slower, but when requirements change or I do some optimizing it's so nice to be able to validate that everything still works.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I try to follow TDD. I usually end up writing tests after doing some initial trial and error coding to prove the concept. I don&amp;#39;t merge pull requests unless the code is fully covered (or as close as I can get without lcov).&lt;/p&gt;\n\n&lt;p&gt;Saves me so much time during refactoring. Initial development is slightly slower, but when requirements change or I do some optimizing it&amp;#39;s so nice to be able to validate that everything still works.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga2ddj", "score_hidden": false, "stickied": false, "created": 1492247636.0, "created_utc": 1492218836.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgabti4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "zQpNB", "parent_id": "t1_dg9zhsq", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I don't FOR ME tests take away time from feature development. They make me faster. Sometimes. \n\nI mean, you take a little time to think about what you need and write the test, then you have a thing that refreshes instantly every time you save and tells you if you're don't or not. \n\nI had basically a template for features/issues. It was like 5 checkboxes that said, Write a test for this part of the stack and make it pass, then go on to the next one; One I get to the actually UI, it just works. It keeps you organized and focused too. And keeps your commit history nice. \n\nThis does take some set up to get the initial skeleton set up. But each new feature is paint by numbers. ", "edited": 1492234128.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t FOR ME tests take away time from feature development. They make me faster. Sometimes. &lt;/p&gt;\n\n&lt;p&gt;I mean, you take a little time to think about what you need and write the test, then you have a thing that refreshes instantly every time you save and tells you if you&amp;#39;re don&amp;#39;t or not. &lt;/p&gt;\n\n&lt;p&gt;I had basically a template for features/issues. It was like 5 checkboxes that said, Write a test for this part of the stack and make it pass, then go on to the next one; One I get to the actually UI, it just works. It keeps you organized and focused too. And keeps your commit history nice. &lt;/p&gt;\n\n&lt;p&gt;This does take some set up to get the initial skeleton set up. But each new feature is paint by numbers. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgabti4", "score_hidden": false, "stickied": false, "created": 1492262337.0, "created_utc": 1492233537.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9zhsq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "RonAtDD", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Pros:\n\n* Can save you from manual testing via browser (over and over and over)\n* Can catch bugs in places you don't expect them\n* Can influence architectural decisions towards more modular code\n* Can act as a documentation of features\n\nCons:\n\n* Takes time from away from feature development\n* Can give false confidence if a test doesn't cover all circumstances\n* Can be a pain in the butt (technical term) to learn.\n* If feature changes, you have to update the test as well, so premature testing is a thing.\n\nI'm sure there are others, critique/additions welcome.\n\nAs for personal experiences, I like to have tests, maybe not right away, depending on the feature.  It seems like it's all a trade off taking into account the business requirements &amp; time available.  Then you have to decide which types of tests as well.  Right now my project has tests mostly for the service layer (business logic, &amp; saving/retrieving), and a few tests for the frontend, more coming.", "edited": 1492215813.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pros:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Can save you from manual testing via browser (over and over and over)&lt;/li&gt;\n&lt;li&gt;Can catch bugs in places you don&amp;#39;t expect them&lt;/li&gt;\n&lt;li&gt;Can influence architectural decisions towards more modular code&lt;/li&gt;\n&lt;li&gt;Can act as a documentation of features&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Cons:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Takes time from away from feature development&lt;/li&gt;\n&lt;li&gt;Can give false confidence if a test doesn&amp;#39;t cover all circumstances&lt;/li&gt;\n&lt;li&gt;Can be a pain in the butt (technical term) to learn.&lt;/li&gt;\n&lt;li&gt;If feature changes, you have to update the test as well, so premature testing is a thing.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;m sure there are others, critique/additions welcome.&lt;/p&gt;\n\n&lt;p&gt;As for personal experiences, I like to have tests, maybe not right away, depending on the feature.  It seems like it&amp;#39;s all a trade off taking into account the business requirements &amp;amp; time available.  Then you have to decide which types of tests as well.  Right now my project has tests mostly for the service layer (business logic, &amp;amp; saving/retrieving), and a few tests for the frontend, more coming.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg9zhsq", "score_hidden": false, "stickied": false, "created": 1492243780.0, "created_utc": 1492214980.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgabwv2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cthechartreuse", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I am a big fan of TDD, so I typically write a test before any production code has been written. I write a lot of libraries, so my functions are often fairly pure and isolated, so they tend to not cause a lot of test pain. On the other hand, when I write application code, I've had a lot of success using approvals to verify state and code output. \n\nApproval tests allow me to set input and check output without having to lock my implementation into place. This makes refactoring really pain free, which is kind of awesome.\n\nIf you want to see an example of what I do with unit tests, have a look at signet-typelog:\n\nhttps://github.com/signetjs/signet-typelog\n\nFor an example of application code with approval tests, check out JS Refactorings for Atom:\n\nhttps://github.com/cmstead/js-refactor-atom", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am a big fan of TDD, so I typically write a test before any production code has been written. I write a lot of libraries, so my functions are often fairly pure and isolated, so they tend to not cause a lot of test pain. On the other hand, when I write application code, I&amp;#39;ve had a lot of success using approvals to verify state and code output. &lt;/p&gt;\n\n&lt;p&gt;Approval tests allow me to set input and check output without having to lock my implementation into place. This makes refactoring really pain free, which is kind of awesome.&lt;/p&gt;\n\n&lt;p&gt;If you want to see an example of what I do with unit tests, have a look at signet-typelog:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/signetjs/signet-typelog\"&gt;https://github.com/signetjs/signet-typelog&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For an example of application code with approval tests, check out JS Refactorings for Atom:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/cmstead/js-refactor-atom\"&gt;https://github.com/cmstead/js-refactor-atom&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgabwv2", "score_hidden": false, "stickied": false, "created": 1492262517.0, "created_utc": 1492233717.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dga47ur", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "achen2345", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "In my personal application I don't bother to test in the browser.  Headless browsers are a pain in the ass and if the application works in other environments then the only thing left to check in the browser is DOM interaction and presentation, which I am fine with checking manually.\n\nI do all my automation testing on the command line.  I try to make my test cycle execute as fast as possible so that I can run tests as frequently as convenient.  I have a validator, diff tool, beautifier, file system simulator, and parser wrapped up in my test build.  The largest code sample I run tests against is a 1.7mb JS file and the largest operation in my test cycle is a large directory tree operation.  I have this thing set up so that I can run it from the command line when ever I want to manually run it.  I also have it configured to run on Travis CI whenever I push a commit or open a pull request.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In my personal application I don&amp;#39;t bother to test in the browser.  Headless browsers are a pain in the ass and if the application works in other environments then the only thing left to check in the browser is DOM interaction and presentation, which I am fine with checking manually.&lt;/p&gt;\n\n&lt;p&gt;I do all my automation testing on the command line.  I try to make my test cycle execute as fast as possible so that I can run tests as frequently as convenient.  I have a validator, diff tool, beautifier, file system simulator, and parser wrapped up in my test build.  The largest code sample I run tests against is a 1.7mb JS file and the largest operation in my test cycle is a large directory tree operation.  I have this thing set up so that I can run it from the command line when ever I want to manually run it.  I also have it configured to run on Travis CI whenever I push a commit or open a pull request.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga47ur", "score_hidden": false, "stickied": false, "created": 1492250179.0, "created_utc": 1492221379.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dga48ca", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MWrathDev", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "You are aware there are 2 types of tests, unit tests vs integration tests. You have yet to specify which one you're talking about.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are aware there are 2 types of tests, unit tests vs integration tests. You have yet to specify which one you&amp;#39;re talking about.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga48ca", "score_hidden": false, "stickied": false, "created": 1492250198.0, "created_utc": 1492221398.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgaehoe", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mikelieman", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; When do you usually start writing tests for a project?\n\nWhen there's something to test.  Stack is setup and should be returning pages?   test for a get with the right return code and content.   \n\n&gt;Which leads me to a second question, do you find writing tests increases the time to push out features? \n\nIt's factored into the development time.\n\n&gt;Or does it lessen for you because there's less time debugging?\n\nActually, not even less time debugging.  Stuff moves from development -&gt; QA -&gt; production a lot quicker because you don't spend time debugging regressions that make it to production because it wasn't tested in dev, because no-one wrote a test.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;When do you usually start writing tests for a project?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;When there&amp;#39;s something to test.  Stack is setup and should be returning pages?   test for a get with the right return code and content.   &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Which leads me to a second question, do you find writing tests increases the time to push out features? &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s factored into the development time.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Or does it lessen for you because there&amp;#39;s less time debugging?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Actually, not even less time debugging.  Stuff moves from development -&amp;gt; QA -&amp;gt; production a lot quicker because you don&amp;#39;t spend time debugging regressions that make it to production because it wasn&amp;#39;t tested in dev, because no-one wrote a test.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgaehoe", "score_hidden": false, "stickied": false, "created": 1492268254.0, "created_utc": 1492239454.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgagux5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "yarauuta", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Everytime you want something to always happen, write a test. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Everytime you want something to always happen, write a test. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgagux5", "score_hidden": false, "stickied": false, "created": 1492274877.0, "created_utc": 1492246077.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgbaj4h", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "IDCh", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "when it's already late", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;when it&amp;#39;s already late&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgbaj4h", "score_hidden": false, "stickied": false, "created": 1492325073.0, "created_utc": 1492296273.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65ewbw", "likes": null, "replies": "", "user_reports": [], "id": "dgbv6rq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "dmitri14_gmail_com", "parent_id": "t3_65ewbw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Read whatever Uncle Bob aka Robert Martin writes on TDD and clean code - you'll never look back ;)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Read whatever Uncle Bob aka Robert Martin writes on TDD and clean code - you&amp;#39;ll never look back ;)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgbv6rq", "score_hidden": false, "stickied": false, "created": 1492361865.0, "created_utc": 1492333065.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]