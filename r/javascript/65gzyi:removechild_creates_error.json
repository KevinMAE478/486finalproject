[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I honestly have no idea why this is happening (as I cannot debug, the whole page just dies), but when I check for a &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag in an element and try to delete it, the page dies.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function check(){\n    editable = document.getElementsByClassName(&amp;quot;input-edit&amp;quot;)[0]; // Editable div\n    for(var i = 0; i &amp;lt; document.getElementsByTagName(&amp;quot;br&amp;quot;).length; i++){ // Repeating for each and every &amp;lt;br&amp;gt; element\n        if(document.getElementsByTagName(&amp;quot;br&amp;quot;)[i].parentElement.className == &amp;quot;input-edit&amp;quot;){ // If &amp;lt;br&amp;gt; element is in is in editable div\n            send(); // Send text in editable div\n        }\n    }\n}\n\nfunction send(){\n    console.log(&amp;quot;sent&amp;quot;); // Debug\n    for(var i = 0; i &amp;lt; document.getElementsByTagName(&amp;quot;br&amp;quot;).length; i++){ // Repeating for reach and every &amp;lt;br&amp;gt; element\n        if(document.getElementsByTagName(&amp;quot;br&amp;quot;)[i].parentElement.className == &amp;quot;input-edit&amp;quot;){ // If &amp;lt;br&amp;gt; element is in editable div\n            var el = document.getElementsByTagName(&amp;quot;br&amp;quot;)[i]; // Getting specific &amp;lt;br&amp;gt; element\n            el.parentElement.removeChild(el); // WHERE ERROR OCCURS. Trying to remove that specific &amp;lt;br&amp;gt; element\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When a div gets edited, it triggers an event which calls &lt;code&gt;check()&lt;/code&gt;, which calls the function &lt;code&gt;send()&lt;/code&gt; if the div has a &amp;lt;br&amp;gt; element in it.&lt;/p&gt;\n\n&lt;p&gt;When I try to remove that element, the whole page dies and says &amp;quot;Aw, snap! Something went wrong while displaying this webpage&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;I think this has to do with it being a &amp;lt;br&amp;gt; element, as lots of people say that the &lt;code&gt;element.parentElement.removeChild(element)&lt;/code&gt; works. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I honestly have no idea why this is happening (as I cannot debug, the whole page just dies), but when I check for a `&lt;br&gt;` tag in an element and try to delete it, the page dies.\n\n\n    function check(){\n        editable = document.getElementsByClassName(\"input-edit\")[0]; // Editable div\n        for(var i = 0; i &lt; document.getElementsByTagName(\"br\").length; i++){ // Repeating for each and every &lt;br&gt; element\n            if(document.getElementsByTagName(\"br\")[i].parentElement.className == \"input-edit\"){ // If &lt;br&gt; element is in is in editable div\n                send(); // Send text in editable div\n            }\n        }\n    }\n    \n    function send(){\n        console.log(\"sent\"); // Debug\n        for(var i = 0; i &lt; document.getElementsByTagName(\"br\").length; i++){ // Repeating for reach and every &lt;br&gt; element\n            if(document.getElementsByTagName(\"br\")[i].parentElement.className == \"input-edit\"){ // If &lt;br&gt; element is in editable div\n                var el = document.getElementsByTagName(\"br\")[i]; // Getting specific &lt;br&gt; element\n                el.parentElement.removeChild(el); // WHERE ERROR OCCURS. Trying to remove that specific &lt;br&gt; element\n            }\n        }\n    }\n\nWhen a div gets edited, it triggers an event which calls `check()`, which calls the function `send()` if the div has a &lt;br&gt; element in it.\n\nWhen I try to remove that element, the whole page dies and says \"Aw, snap! Something went wrong while displaying this webpage\".\n\nI think this has to do with it being a &lt;br&gt; element, as lots of people say that the `element.parentElement.removeChild(element)` works. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "solved!", "id": "65gzyi", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 5, "report_reasons": null, "author": "crazeyzaney", "saved": false, "mod_reports": [], "name": "t3_65gzyi", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": "solved", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/65gzyi/removechild_creates_error/", "num_reports": null, "locked": false, "stickied": false, "created": 1492254502.0, "url": "https://www.reddit.com/r/javascript/comments/65gzyi/removechild_creates_error/", "author_flair_text": null, "quarantine": false, "title": "removeChild() creates error", "created_utc": 1492225702.0, "distinguished": null, "media": null, "upvote_ratio": 0.73, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65gzyi", "likes": null, "replies": "", "user_reports": [], "id": "dgab2ij", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tswaters", "parent_id": "t3_65gzyi", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "`getElementsByClassName` is a special one.\n\nIt return a \"live\" HTMLCollection - this means it will be updated if results of the call changes, such as if the className of an element changes or an element is removed from the dom.\n\nIt's interesting you're getting a hard crash from it, but my assumption is this is the underlying cause.... maybe some wizardry with v8 where it optimizes something away and you're getting aw snap due to null pointer.... hard to say.\n\nTo get around this, iterate over the elements backwards, or run the returned `HTMLCollection` through `Array.prototype.slice` to ensure it isn't updated any more and the 0th element remains the same element throughout the function call.\n\nI'm sure if you can get this as a reduced test case the chromium developers would welcome a ticket on their bug tracker.... js shouldn't crash the browser, I don't think.", "edited": 1492232596.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;getElementsByClassName&lt;/code&gt; is a special one.&lt;/p&gt;\n\n&lt;p&gt;It return a &amp;quot;live&amp;quot; HTMLCollection - this means it will be updated if results of the call changes, such as if the className of an element changes or an element is removed from the dom.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s interesting you&amp;#39;re getting a hard crash from it, but my assumption is this is the underlying cause.... maybe some wizardry with v8 where it optimizes something away and you&amp;#39;re getting aw snap due to null pointer.... hard to say.&lt;/p&gt;\n\n&lt;p&gt;To get around this, iterate over the elements backwards, or run the returned &lt;code&gt;HTMLCollection&lt;/code&gt; through &lt;code&gt;Array.prototype.slice&lt;/code&gt; to ensure it isn&amp;#39;t updated any more and the 0th element remains the same element throughout the function call.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m sure if you can get this as a reduced test case the chromium developers would welcome a ticket on their bug tracker.... js shouldn&amp;#39;t crash the browser, I don&amp;#39;t think.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgab2ij", "score_hidden": false, "stickied": false, "created": 1492260936.0, "created_utc": 1492232136.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65gzyi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65gzyi", "likes": null, "replies": "", "user_reports": [], "id": "dga8vby", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "crazeyzaney", "parent_id": "t1_dga8kga", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "It still responds with an error...\n\nI think I might know why. When you press enter, it creates two `&lt;br&gt;` tags. I don't exactly know how this results in an error, but it might do so.\n\nI'm probably just going to take the keydown approach of sending when you press enter, not when I detect a `&lt;br&gt;` tag.\n\nEdit: Haha that is so much faster. Took me like a minute to do versus 20 minutes to do the previous.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It still responds with an error...&lt;/p&gt;\n\n&lt;p&gt;I think I might know why. When you press enter, it creates two &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tags. I don&amp;#39;t exactly know how this results in an error, but it might do so.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m probably just going to take the keydown approach of sending when you press enter, not when I detect a &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;\n\n&lt;p&gt;Edit: Haha that is so much faster. Took me like a minute to do versus 20 minutes to do the previous.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga8vby", "score_hidden": false, "stickied": false, "created": 1492257154.0, "created_utc": 1492228354.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dga8kga", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "grinde", "parent_id": "t3_65gzyi", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'd try cleaning up all of the `getElementsByTagName` calls. Right now you're editing the DOM while iterating through it, which can have all sorts of unintended results. Instead try something like this\n\n    var tags = document.getElementsByTagName(\"br\");\n    for (var i = 0; i &lt; tags.length; i++) {\n        if (tags[i].parentElement.className == \"input-edit\") {\n            tags[i].parent.removeChild(tags[i]);\n        }\n    }\n\nWith the above you get the list of elements once, and iterate through it. In your code you get the list of tags 9n^2 times in the worst case, and the list is constantly changing. You're actually skipping an element for every one you remove just like in this example:\n\n    var list = [0, 1, 2, 3];\n    for (var i = 0; i &lt; list.length; i++) {\n        if (list[i] === 1) {\n            list.splice(i, 1);\n        } else {\n            console.log(list[i]);\n        }\n    }\n\n    // Prints 0, 3 instead of the expected 0, 2, 3 because the array\n    // changed partway through the loop and i wasn't adjusted\n\nEDIT: Additionally, you can do things like the following:\n\n    var editable = document.getElementsByClassName(\"input-edit\")[0];\n    var tags = editable.getElementsByTagName(\"br\");\n\n    // tags now contains the complete array of elements you need to loop through,\n    // rather than checking the parent of every &lt;br&gt; on the page.", "edited": 1492228150.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d try cleaning up all of the &lt;code&gt;getElementsByTagName&lt;/code&gt; calls. Right now you&amp;#39;re editing the DOM while iterating through it, which can have all sorts of unintended results. Instead try something like this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var tags = document.getElementsByTagName(&amp;quot;br&amp;quot;);\nfor (var i = 0; i &amp;lt; tags.length; i++) {\n    if (tags[i].parentElement.className == &amp;quot;input-edit&amp;quot;) {\n        tags[i].parent.removeChild(tags[i]);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With the above you get the list of elements once, and iterate through it. In your code you get the list of tags 9n&lt;sup&gt;2&lt;/sup&gt; times in the worst case, and the list is constantly changing. You&amp;#39;re actually skipping an element for every one you remove just like in this example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var list = [0, 1, 2, 3];\nfor (var i = 0; i &amp;lt; list.length; i++) {\n    if (list[i] === 1) {\n        list.splice(i, 1);\n    } else {\n        console.log(list[i]);\n    }\n}\n\n// Prints 0, 3 instead of the expected 0, 2, 3 because the array\n// changed partway through the loop and i wasn&amp;#39;t adjusted\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT: Additionally, you can do things like the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var editable = document.getElementsByClassName(&amp;quot;input-edit&amp;quot;)[0];\nvar tags = editable.getElementsByTagName(&amp;quot;br&amp;quot;);\n\n// tags now contains the complete array of elements you need to loop through,\n// rather than checking the parent of every &amp;lt;br&amp;gt; on the page.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dga8kga", "score_hidden": false, "stickied": false, "created": 1492256668.0, "created_utc": 1492227868.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]