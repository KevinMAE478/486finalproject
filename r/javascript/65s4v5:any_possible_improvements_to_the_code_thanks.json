[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65s4v5", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 3, "report_reasons": null, "author": "djhasad47", "saved": false, "mod_reports": [], "name": "t3_65s4v5", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "pastebin.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/65s4v5/any_possible_improvements_to_the_code_thanks/", "num_reports": null, "locked": false, "stickied": false, "created": 1492414150.0, "url": "https://pastebin.com/vUWEfCsf", "author_flair_text": null, "quarantine": false, "title": "Any possible improvements to the code? Thanks", "created_utc": 1492385350.0, "distinguished": null, "media": null, "upvote_ratio": 0.64, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": "", "user_reports": [], "id": "dgcxfno", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "djhasad47", "parent_id": "t1_dgcwmgn", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "oh well i suppose that's an easy fix then", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;oh well i suppose that&amp;#39;s an easy fix then&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcxfno", "score_hidden": false, "stickied": false, "created": 1492422574.0, "created_utc": 1492393774.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcwmgn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ike_the_strangetamer", "parent_id": "t1_dgcu08p", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "or it looks like you cheated :) \n\nyou don't need the extra curly braces around the if.  You can do \n\n\nelse if (myScore &gt; 50) { myContentsPtr = 1; }\n\nelse if(myScore &gt; 40) {....}\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;or it looks like you cheated :) &lt;/p&gt;\n\n&lt;p&gt;you don&amp;#39;t need the extra curly braces around the if.  You can do &lt;/p&gt;\n\n&lt;p&gt;else if (myScore &amp;gt; 50) { myContentsPtr = 1; }&lt;/p&gt;\n\n&lt;p&gt;else if(myScore &amp;gt; 40) {....}&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcwmgn", "score_hidden": false, "stickied": false, "created": 1492421472.0, "created_utc": 1492392672.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcu08p", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "djhasad47", "parent_id": "t1_dgctget", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Isn't there already a bunch of if else statements around the myContentsPtr? Sorry if i sound a bit uninformed (because I am) but what do you mean exactly\n\nI replaced the for loop with the fill function and it worked well, thanks ! I suppose it'll look like I know what I am doing more now lmao", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Isn&amp;#39;t there already a bunch of if else statements around the myContentsPtr? Sorry if i sound a bit uninformed (because I am) but what do you mean exactly&lt;/p&gt;\n\n&lt;p&gt;I replaced the for loop with the fill function and it worked well, thanks ! I suppose it&amp;#39;ll look like I know what I am doing more now lmao&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcu08p", "score_hidden": false, "stickied": false, "created": 1492418053.0, "created_utc": 1492389253.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgctget", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ike_the_strangetamer", "parent_id": "t3_65s4v5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The thing that jumped out to me most is setting myContentsPtr. You could use a series of `else if`or use some math to compute it.\n\n.style1, .style2, etc. isn't very descriptive. The color would help or even better, name class based on its function on the page (.questionSpan, .answerSpan)\n\nMight be easier to set MyContent as\n\n````\n    MyContent = [\"blajhblahbal\",\n        \"blaskdfjlasjdfas\",\n        \"jlaksjdflajsdlfkas\"]\n````\n\nThat would make it easier to add questions or change the order.\n\nOh, and that second for loop, you should do `for (var i=0; i&lt;Quest.length; i++)` that way if you change the size of Quest, it will still work.\n\nOkay now here's something new to JavaScript that you might not have covered yet, but I'm going to tell you anyways. Arrays have a new method called `fill` that will fill every entry with the value you want. So you could avoid the for loop and do `Quest.fill(0);` and, if your browser supports it, that should do the trick.  [Read the documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill) but notice at the bottom it shows that it is not currently compatible with IE. YMMV, but it's fun to live on the edge.\n\nHope this helps! You're doing great though, it looks a hell of a lot better than my first JavaScript code.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The thing that jumped out to me most is setting myContentsPtr. You could use a series of &lt;code&gt;else if&lt;/code&gt;or use some math to compute it.&lt;/p&gt;\n\n&lt;p&gt;.style1, .style2, etc. isn&amp;#39;t very descriptive. The color would help or even better, name class based on its function on the page (.questionSpan, .answerSpan)&lt;/p&gt;\n\n&lt;p&gt;Might be easier to set MyContent as&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n    MyContent = [&amp;quot;blajhblahbal&amp;quot;,\n        &amp;quot;blaskdfjlasjdfas&amp;quot;,\n        &amp;quot;jlaksjdflajsdlfkas&amp;quot;]\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;That would make it easier to add questions or change the order.&lt;/p&gt;\n\n&lt;p&gt;Oh, and that second for loop, you should do &lt;code&gt;for (var i=0; i&amp;lt;Quest.length; i++)&lt;/code&gt; that way if you change the size of Quest, it will still work.&lt;/p&gt;\n\n&lt;p&gt;Okay now here&amp;#39;s something new to JavaScript that you might not have covered yet, but I&amp;#39;m going to tell you anyways. Arrays have a new method called &lt;code&gt;fill&lt;/code&gt; that will fill every entry with the value you want. So you could avoid the for loop and do &lt;code&gt;Quest.fill(0);&lt;/code&gt; and, if your browser supports it, that should do the trick.  &lt;a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"&gt;Read the documentation&lt;/a&gt; but notice at the bottom it shows that it is not currently compatible with IE. YMMV, but it&amp;#39;s fun to live on the edge.&lt;/p&gt;\n\n&lt;p&gt;Hope this helps! You&amp;#39;re doing great though, it looks a hell of a lot better than my first JavaScript code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgctget", "score_hidden": false, "stickied": false, "created": 1492417310.0, "created_utc": 1492388510.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": "", "user_reports": [], "id": "dgcuhha", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ndaljr", "parent_id": "t3_65s4v5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "`var Quest = new Array(10);  //this sets up an array for all of the answers that are given`\n\nThere isn't a need to do this. Javascript isn't a lanaguage where you have to declare the size of the array before using it. You can just do this instead. Arrays in javascript are dynamic. \n\n`const quest = [];`\n\nYou could either then use `quest.push('your content');` or `quest[0] = 'your content'`. They are different ways of adding things into your array'\n\nInstead of this, you could use the Array.prototype.reduce function for a more functional approach. Check out functional programming in javascript as well when you've moved past the beginner stages. After having learned functional programming, I have skipped using for loops and instead have used methods such as `Array.Prototype.filter, Array.Prototype.map, Array.Prototype.filter`\n\n\nFrom this:\n` for (var i=0; i&lt;10; i++) { myScore=myScore+Quest[i]; }\n analyzer(myScore);\n}`\n\nTo this:\n`let myScore = Quest.reduce((accumulator, currentValue) =&gt; accumulator + currentValue, 0);\nanalyzer(myScore);`", "edited": 1492390878.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;var Quest = new Array(10);  //this sets up an array for all of the answers that are given&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;There isn&amp;#39;t a need to do this. Javascript isn&amp;#39;t a lanaguage where you have to declare the size of the array before using it. You can just do this instead. Arrays in javascript are dynamic. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const quest = [];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You could either then use &lt;code&gt;quest.push(&amp;#39;your content&amp;#39;);&lt;/code&gt; or &lt;code&gt;quest[0] = &amp;#39;your content&amp;#39;&lt;/code&gt;. They are different ways of adding things into your array&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;Instead of this, you could use the Array.prototype.reduce function for a more functional approach. Check out functional programming in javascript as well when you&amp;#39;ve moved past the beginner stages. After having learned functional programming, I have skipped using for loops and instead have used methods such as &lt;code&gt;Array.Prototype.filter, Array.Prototype.map, Array.Prototype.filter&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;From this:\n&lt;code&gt;for (var i=0; i&amp;lt;10; i++) { myScore=myScore+Quest[i]; }\n analyzer(myScore);\n}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;To this:\n&lt;code&gt;let myScore = Quest.reduce((accumulator, currentValue) =&amp;gt; accumulator + currentValue, 0);\nanalyzer(myScore);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcuhha", "score_hidden": false, "stickied": false, "created": 1492418697.0, "created_utc": 1492389897.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": "", "user_reports": [], "id": "dgd10xg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "crisbee", "parent_id": "t3_65s4v5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'm not going to go over ES6 use, as that looks like it'll be something for you to learn in the future.  Here are a bunch of general tips based on the code you've shown.\n\nIt is generally preferred to organize your code, from top to bottom: variables, functions, then initialization code.  It makes it easier to read and follow. \n\nSpeaking of placement, put your script block just before your closing &lt;/body&gt; tag.\n\nAt the top of your script block, add this:\n    'use strict';\nIt will put JS in \"strict\" mode, and force you to write better code. For example, it will require you to define variables before you use them (rather than creating them and hoisting them into the global namespace).\n\nMost variable names are better if they're lowerCamelCase.  Define constants in UPPERCASE_WITH_UNDERSCORES.\n\nUse intuitive style names in your CSS.\n\nWith data that consists of a lot of repeating items, it is often easier to put that data in an object and then parse it with JS, then stick that in the page. For example, your question data is easily represented as:\n\n    var content = [\n        {\n            question: \"This is a question\",\n            answers: [\n                \"First answer\",\n                \"Second answer\",\n                \"Third answer\"\n            ],\n            values: [1, 2, 3]\n        },\n        ...\n    ];\n\nThis kind of data is easily parsed by JS.  You could parse it, create a content variable to hold your parsed data, then stick it back in the page with something like this: \n\n    document.getElementById('content').innerHTML = content;\n\nIf/else if/else statements are defined like this:\n\n    if (condition) {\n        ...\n    } else if (other condition) {\n        ...\n    } else {\n        ...\n    }\n\nIf you've got an array of numbers that you want to add up, you can reduce in ES5 as well.  The format is:\n\n    sum = arrayVariable.reduce(function(a, b) { return a + b; });\n\nedit:\n\nAnd one more tip: If your data involves user generated data, it doesn't hurt to make use of exception handling around code that uses that data.  The simplest method is:\n\n    try {\n        sum = arrayVariable.reduce(function(a, b) { return a + b; });\n    } catch(e) {\n        // handle the error state\n    }", "edited": 1492399129.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not going to go over ES6 use, as that looks like it&amp;#39;ll be something for you to learn in the future.  Here are a bunch of general tips based on the code you&amp;#39;ve shown.&lt;/p&gt;\n\n&lt;p&gt;It is generally preferred to organize your code, from top to bottom: variables, functions, then initialization code.  It makes it easier to read and follow. &lt;/p&gt;\n\n&lt;p&gt;Speaking of placement, put your script block just before your closing &amp;lt;/body&amp;gt; tag.&lt;/p&gt;\n\n&lt;p&gt;At the top of your script block, add this:\n    &amp;#39;use strict&amp;#39;;\nIt will put JS in &amp;quot;strict&amp;quot; mode, and force you to write better code. For example, it will require you to define variables before you use them (rather than creating them and hoisting them into the global namespace).&lt;/p&gt;\n\n&lt;p&gt;Most variable names are better if they&amp;#39;re lowerCamelCase.  Define constants in UPPERCASE_WITH_UNDERSCORES.&lt;/p&gt;\n\n&lt;p&gt;Use intuitive style names in your CSS.&lt;/p&gt;\n\n&lt;p&gt;With data that consists of a lot of repeating items, it is often easier to put that data in an object and then parse it with JS, then stick that in the page. For example, your question data is easily represented as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var content = [\n    {\n        question: &amp;quot;This is a question&amp;quot;,\n        answers: [\n            &amp;quot;First answer&amp;quot;,\n            &amp;quot;Second answer&amp;quot;,\n            &amp;quot;Third answer&amp;quot;\n        ],\n        values: [1, 2, 3]\n    },\n    ...\n];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This kind of data is easily parsed by JS.  You could parse it, create a content variable to hold your parsed data, then stick it back in the page with something like this: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;document.getElementById(&amp;#39;content&amp;#39;).innerHTML = content;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If/else if/else statements are defined like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (condition) {\n    ...\n} else if (other condition) {\n    ...\n} else {\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you&amp;#39;ve got an array of numbers that you want to add up, you can reduce in ES5 as well.  The format is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sum = arrayVariable.reduce(function(a, b) { return a + b; });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:&lt;/p&gt;\n\n&lt;p&gt;And one more tip: If your data involves user generated data, it doesn&amp;#39;t hurt to make use of exception handling around code that uses that data.  The simplest method is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try {\n    sum = arrayVariable.reduce(function(a, b) { return a + b; });\n} catch(e) {\n    // handle the error state\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgd10xg", "score_hidden": false, "stickied": false, "created": 1492427614.0, "created_utc": 1492398814.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65s4v5", "likes": null, "replies": "", "user_reports": [], "id": "dgd18u1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "djhasad47", "parent_id": "t3_65s4v5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks for the insight, I suppose the whole thing with the parsing would have been useful but I don't really feel like rewriting so much of the current code. I will indeed use it next time though, and the other insight as well. Thanks!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the insight, I suppose the whole thing with the parsing would have been useful but I don&amp;#39;t really feel like rewriting so much of the current code. I will indeed use it next time though, and the other insight as well. Thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgd18u1", "score_hidden": false, "stickied": false, "created": 1492427936.0, "created_utc": 1492399136.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]