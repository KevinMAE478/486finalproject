[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, i&amp;#39;ve a problem with a var in a script for Drafts on iOS. It responds &amp;quot;TypeError: undefined is not an object (evaluating re.exec).\nCan you help me pls?\nThe script is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function regExpPodcast(podcast){\n    var re;\n    if(podcast == &amp;quot;Il Disinformatico&amp;quot;){\n                &amp;lt;CODE&amp;gt;\n            re = new RegExp(re1+re2+re3+re4+re5+re6,[&amp;quot;i&amp;quot;]);\n       }\n\n    return re;\n}\n\nfunction recognizePodcast(podcast,re,text){\n    var m = re.exec(text);\n         &amp;lt;CODE&amp;gt;\n\n return result;\n }\n\n\n function parseText(text){\n        var podcasts = [&amp;quot;Il Disinformatico&amp;quot;];\n    var re;\n    var result;\n\n    for(podcast = 0; podcast &amp;lt; podcasts.length; poadcast++) {\n        re =  regExpPodcast(podcast);\n                result = recognizePodcast(podcast,re,text);\n                &amp;lt;CODE&amp;gt;\n        }\n}\n\nvar text = draft.content;\nvar rows = text.split(&amp;quot;\\n&amp;quot;);\nvar title = &amp;quot;&amp;quot;;\ntitle = parseText(rows[0]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, i've a problem with a var in a script for Drafts on iOS. It responds \"TypeError: undefined is not an object (evaluating re.exec).\nCan you help me pls?\nThe script is:\n\n    function regExpPodcast(podcast){\n        var re;\n        if(podcast == \"Il Disinformatico\"){\n                    &lt;CODE&gt;\n          \t\tre = new RegExp(re1+re2+re3+re4+re5+re6,[\"i\"]);\n           }\n    \n     \treturn re;\n    }\n    \n    function recognizePodcast(podcast,re,text){\n     \tvar m = re.exec(text);\n             &lt;CODE&gt;\n          \n     return result;\n     }\n    \n    \n     function parseText(text){\n          \tvar podcasts = [\"Il Disinformatico\"];\n     \tvar re;\n    \tvar result;\n    \n     \tfor(podcast = 0; podcast &lt; podcasts.length; poadcast++) {\n    \t\tre =  regExpPodcast(podcast);\n                    result = recognizePodcast(podcast,re,text);\n                    &lt;CODE&gt;\n            }\n    }\n    \n    var text = draft.content;\n    var rows = text.split(\"\\n\");\n    var title = \"\";\n    title = parseText(rows[0]);\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "solved!", "id": "64ps5u", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 4, "report_reasons": null, "author": "nathanvit", "saved": false, "mod_reports": [], "name": "t3_64ps5u", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": 1491902780.0, "link_flair_css_class": "solved", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/64ps5u/problem_with_a_var_regexp/", "num_reports": null, "locked": false, "stickied": false, "created": 1491931300.0, "url": "https://www.reddit.com/r/javascript/comments/64ps5u/problem_with_a_var_regexp/", "author_flair_text": null, "quarantine": false, "title": "Problem with a var RegExp", "created_utc": 1491902500.0, "distinguished": null, "media": null, "upvote_ratio": 0.67, "num_comments": 11, "visited": false, "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": "", "user_reports": [], "id": "dg5m22a", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nathanvit", "parent_id": "t1_dg4bwnf", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Yes, it is true.\nI've just changed \"podcast\" into \"count\".\nIt was a bad naming idea :-)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, it is true.\nI&amp;#39;ve just changed &amp;quot;podcast&amp;quot; into &amp;quot;count&amp;quot;.\nIt was a bad naming idea :-)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5m22a", "score_hidden": false, "stickied": false, "created": 1492011597.0, "created_utc": 1491982797.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4bwnf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "SamSlate", "parent_id": "t1_dg45y5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "naming conventions, they'll fuck you up every time. this is why i/j/index are so standard.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;naming conventions, they&amp;#39;ll fuck you up every time. this is why i/j/index are so standard.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4bwnf", "score_hidden": false, "stickied": false, "created": 1491950015.0, "created_utc": 1491921215.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": "", "user_reports": [], "id": "dg5xeox", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ddl_smurf", "parent_id": "t1_dg5m37f", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "most likely you can use the safari debugger from a connected itunes computer. That said, if it's hard to use a debugger, dont use it to learn. Especially javascript which has excellent tools like the chrome dev tools.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;most likely you can use the safari debugger from a connected itunes computer. That said, if it&amp;#39;s hard to use a debugger, dont use it to learn. Especially javascript which has excellent tools like the chrome dev tools.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5xeox", "score_hidden": false, "stickied": false, "created": 1492035928.0, "created_utc": 1492007128.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5m37f", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nathanvit", "parent_id": "t1_dg4j2ce", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Unfortunately i use Drafts, an iOS app to run my javascript scripts and i do not have a debugger for this language :-(\nReally, I do not know a debugger for it", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unfortunately i use Drafts, an iOS app to run my javascript scripts and i do not have a debugger for this language :-(\nReally, I do not know a debugger for it&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5m37f", "score_hidden": false, "stickied": false, "created": 1492011687.0, "created_utc": 1491982887.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4j2ce", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ddl_smurf", "parent_id": "t1_dg45y5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The `podcast` variable is not scoped either. The regex string is formed it seems without escaping. Op I recommend your first priority should be to learn to use a debugger to break, step and watch some variables, progress will be much easier from there.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &lt;code&gt;podcast&lt;/code&gt; variable is not scoped either. The regex string is formed it seems without escaping. Op I recommend your first priority should be to learn to use a debugger to break, step and watch some variables, progress will be much easier from there.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4j2ce", "score_hidden": false, "stickied": false, "created": 1491957996.0, "created_utc": 1491929196.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": "", "user_reports": [], "id": "dg5m1la", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nathanvit", "parent_id": "t1_dg45y5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks, that was the problem. I solved thanks you!\nI've also changed \"podcast\" into \"count\"\nThanks a lot", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks, that was the problem. I solved thanks you!\nI&amp;#39;ve also changed &amp;quot;podcast&amp;quot; into &amp;quot;count&amp;quot;\nThanks a lot&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5m1la", "score_hidden": false, "stickied": false, "created": 1492011561.0, "created_utc": 1491982761.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg45y5u", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "zedpowa", "parent_id": "t3_64ps5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "In  the `parseText` function your `podcast` variable is an integer that you use to index the `podcasts` array. Doing `re =  regExpPodcast(podcast);` passes the counter to the regex builder.  You probably meant to write `re =  regExpPodcast(podcasts[podcast]);`", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In  the &lt;code&gt;parseText&lt;/code&gt; function your &lt;code&gt;podcast&lt;/code&gt; variable is an integer that you use to index the &lt;code&gt;podcasts&lt;/code&gt; array. Doing &lt;code&gt;re =  regExpPodcast(podcast);&lt;/code&gt; passes the counter to the regex builder.  You probably meant to write &lt;code&gt;re =  regExpPodcast(podcasts[podcast]);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg45y5u", "score_hidden": false, "stickied": false, "created": 1491941399.0, "created_utc": 1491912599.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": "", "user_reports": [], "id": "dg5m3hn", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nathanvit", "parent_id": "t1_dg47zi1", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thanks a lot: i've solved :-)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks a lot: i&amp;#39;ve solved :-)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5m3hn", "score_hidden": false, "stickied": false, "created": 1492011710.0, "created_utc": 1491982910.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg47zi1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jeromeavoustin", "parent_id": "t3_64ps5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Obviously, you pass the index to your functions instead of the value in your array. Try podcasts[podcast] instead of podcast... \nProbably that podcast is a bad name for your index in your loop. This has lead you to a mistake.\nYou can also try a for...of if you are ES2015 compatible. No index anymore. \n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Obviously, you pass the index to your functions instead of the value in your array. Try podcasts[podcast] instead of podcast... \nProbably that podcast is a bad name for your index in your loop. This has lead you to a mistake.\nYou can also try a for...of if you are ES2015 compatible. No index anymore. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg47zi1", "score_hidden": false, "stickied": false, "created": 1491944814.0, "created_utc": 1491916014.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64ps5u", "likes": null, "replies": "", "user_reports": [], "id": "dg5m5sw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nathanvit", "parent_id": "t1_dg4d3uk", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "WOW! Thanks thanks.\nI'me a newbie of javascript and it is really usefull.\nI'll change my code with this tip!\nThanks really a lot for the time that you spent for me.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;WOW! Thanks thanks.\nI&amp;#39;me a newbie of javascript and it is really usefull.\nI&amp;#39;ll change my code with this tip!\nThanks really a lot for the time that you spent for me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5m5sw", "score_hidden": false, "stickied": false, "created": 1492011893.0, "created_utc": 1491983093.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4d3uk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "GeneralYouri", "parent_id": "t3_64ps5u", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Other comments already mentioned the current problem of passing an index where you meant to pass a value.\n\nThere's another related issue which doesn't pose a problem now, but may in the future. `regExpPodcast` returns `undefined` for any value not matched, which is why it did return `undefined` when you passed the index, rather than the value. But it can also return `undefined` when the value being passed isn't matched by any `if` statement - which can happen when you fill your `podcasts` array with other values, but don't represent them in the `regExpPodcast` function. This results in the same problem as now - the `undefined` value for `re` is never checked, and then passed to `recognisePodcast` which calls `re.exec()`.\n\nThese two places are now dependent on each other in a potentially bad way, as it can be easy to forget that you have to actually change code in two places instead of one, when changing `podcasts`. I believe this is called Tight Coupling, since your code in `regExpPodcast` directly depends on the value of `podcasts`, which is private to `parseText` and thus not known by `regExpPodcast`.\n\nTo properly fix the problem, you'd have to get rid of this coupling. One way would be to extract the `podcasts` array out of the `parseText` function. Then, instead of having a 'regExpPodcast' function, you could map over this array to create an array of functions, each representing one branch of your original `if` statement, and they return the relevant RegExp objects. This array would either also sit outside of your code sample, or within the `parseText` function, depending on where you planned to use `regExpPodcast`. With this data in place, in `parseText` you can simply access the proper index in this array. Add a simple check to see if the index actually exists within the array, and you've prevented the `undefined` value from causing problems, while also fixing coupling issues within your code.\n\nI realise this was a fairly lengthy explanation, so here's a code sample to show what I was talking about. I've also come across some other issues with the code, which are fixed and include comments.\n\n    // The new array to provide the RegExp\n    // If the &lt;CODE&gt; part were not needed, you could instead strip the functions and directly provide RegExp objects\n    // Note you're still depending on re1, re2, etc, which may be something else you'd want to solve\n    var regExpPodcast = {\n        'Il Disinformatico': function () {\n            // &lt;CODE&gt;\n            return new RegExp(re1 + re2 + re3 + re4 + re5 + re6, [ 'i' ]);\n        },\n    };\n    \n    // The podcasts array, taken outside of the function\n    var podcasts = [ 'Il Disinformatico' ];\n    // Alternatively you could create it from the above array of RegExps:\n    var podcasts = regExpPodcast.keys();\n    // Which you use depends on your use case, and how you get the podcasts data in the first place\n    \n    // I'll assume m is being used by, and result is being defined by, the &lt;CODE&gt; block you left out\n    function recognizePodcast(podcast, re, text){\n        var m = re.exec(text);\n        // &lt;CODE&gt;\n        return result;\n    }\n    \n    // Similarly, I'll assume result is (conditionally) being returned by the &lt;CODE&gt; block you left out\n    function parseText(text) {\n        var result;\n        \n        for (var podcast = 0; podcast &lt; podcasts.length; podcast++) { // Added var, and fixed typo 'poadcasts++'\n            var re =  regExpPodcast(podcast); // Added var inside the for loop, as it won't be needed outside of it\n            result = recognizePodcast(podcast, re, text); // Depending on what you use this for, the var could be moved here, too\n            // &lt;CODE&gt;\n        }\n    }\n    \n    // This should probably put inside a function of sorts\n    var text = draft.content;\n    var rows = text.split('\\n');\n    var title = parseText(rows[0]);", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Other comments already mentioned the current problem of passing an index where you meant to pass a value.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s another related issue which doesn&amp;#39;t pose a problem now, but may in the future. &lt;code&gt;regExpPodcast&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; for any value not matched, which is why it did return &lt;code&gt;undefined&lt;/code&gt; when you passed the index, rather than the value. But it can also return &lt;code&gt;undefined&lt;/code&gt; when the value being passed isn&amp;#39;t matched by any &lt;code&gt;if&lt;/code&gt; statement - which can happen when you fill your &lt;code&gt;podcasts&lt;/code&gt; array with other values, but don&amp;#39;t represent them in the &lt;code&gt;regExpPodcast&lt;/code&gt; function. This results in the same problem as now - the &lt;code&gt;undefined&lt;/code&gt; value for &lt;code&gt;re&lt;/code&gt; is never checked, and then passed to &lt;code&gt;recognisePodcast&lt;/code&gt; which calls &lt;code&gt;re.exec()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;These two places are now dependent on each other in a potentially bad way, as it can be easy to forget that you have to actually change code in two places instead of one, when changing &lt;code&gt;podcasts&lt;/code&gt;. I believe this is called Tight Coupling, since your code in &lt;code&gt;regExpPodcast&lt;/code&gt; directly depends on the value of &lt;code&gt;podcasts&lt;/code&gt;, which is private to &lt;code&gt;parseText&lt;/code&gt; and thus not known by &lt;code&gt;regExpPodcast&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;To properly fix the problem, you&amp;#39;d have to get rid of this coupling. One way would be to extract the &lt;code&gt;podcasts&lt;/code&gt; array out of the &lt;code&gt;parseText&lt;/code&gt; function. Then, instead of having a &amp;#39;regExpPodcast&amp;#39; function, you could map over this array to create an array of functions, each representing one branch of your original &lt;code&gt;if&lt;/code&gt; statement, and they return the relevant RegExp objects. This array would either also sit outside of your code sample, or within the &lt;code&gt;parseText&lt;/code&gt; function, depending on where you planned to use &lt;code&gt;regExpPodcast&lt;/code&gt;. With this data in place, in &lt;code&gt;parseText&lt;/code&gt; you can simply access the proper index in this array. Add a simple check to see if the index actually exists within the array, and you&amp;#39;ve prevented the &lt;code&gt;undefined&lt;/code&gt; value from causing problems, while also fixing coupling issues within your code.&lt;/p&gt;\n\n&lt;p&gt;I realise this was a fairly lengthy explanation, so here&amp;#39;s a code sample to show what I was talking about. I&amp;#39;ve also come across some other issues with the code, which are fixed and include comments.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// The new array to provide the RegExp\n// If the &amp;lt;CODE&amp;gt; part were not needed, you could instead strip the functions and directly provide RegExp objects\n// Note you&amp;#39;re still depending on re1, re2, etc, which may be something else you&amp;#39;d want to solve\nvar regExpPodcast = {\n    &amp;#39;Il Disinformatico&amp;#39;: function () {\n        // &amp;lt;CODE&amp;gt;\n        return new RegExp(re1 + re2 + re3 + re4 + re5 + re6, [ &amp;#39;i&amp;#39; ]);\n    },\n};\n\n// The podcasts array, taken outside of the function\nvar podcasts = [ &amp;#39;Il Disinformatico&amp;#39; ];\n// Alternatively you could create it from the above array of RegExps:\nvar podcasts = regExpPodcast.keys();\n// Which you use depends on your use case, and how you get the podcasts data in the first place\n\n// I&amp;#39;ll assume m is being used by, and result is being defined by, the &amp;lt;CODE&amp;gt; block you left out\nfunction recognizePodcast(podcast, re, text){\n    var m = re.exec(text);\n    // &amp;lt;CODE&amp;gt;\n    return result;\n}\n\n// Similarly, I&amp;#39;ll assume result is (conditionally) being returned by the &amp;lt;CODE&amp;gt; block you left out\nfunction parseText(text) {\n    var result;\n\n    for (var podcast = 0; podcast &amp;lt; podcasts.length; podcast++) { // Added var, and fixed typo &amp;#39;poadcasts++&amp;#39;\n        var re =  regExpPodcast(podcast); // Added var inside the for loop, as it won&amp;#39;t be needed outside of it\n        result = recognizePodcast(podcast, re, text); // Depending on what you use this for, the var could be moved here, too\n        // &amp;lt;CODE&amp;gt;\n    }\n}\n\n// This should probably put inside a function of sorts\nvar text = draft.content;\nvar rows = text.split(&amp;#39;\\n&amp;#39;);\nvar title = parseText(rows[0]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4d3uk", "score_hidden": false, "stickied": false, "created": 1491951400.0, "created_utc": 1491922600.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]