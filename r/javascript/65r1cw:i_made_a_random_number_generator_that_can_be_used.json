[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65r1cw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "eepieh", "saved": false, "mod_reports": [], "name": "t3_65r1cw", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/65r1cw/i_made_a_random_number_generator_that_can_be_used/", "num_reports": null, "locked": false, "stickied": false, "created": 1492401234.0, "url": "https://github.com/SkepticalHippo/crypto-random", "author_flair_text": null, "quarantine": false, "title": "I made a random number generator that can be used in place of Math.random(). Feedback appreciated!", "created_utc": 1492372434.0, "distinguished": null, "media": null, "upvote_ratio": 0.6, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": "", "user_reports": [], "id": "dgd746s", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ugwe43to874nf4", "parent_id": "t3_65r1cw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Two things...\n\n1. `range` seems odd to me in that it excludes the lower value but includes the upper one. Generally, I'm more accustomed to `[min, max)` than `(min,max]`. Maybe it's just me.\n\n2. It would make _a lot_ of sense to add some bias tests. Right now, due to the _faulty_ conversion, the results are _heavily_ biased. Not only that, there are discriminated values (i.e. `Random.value()` is always `&gt;= 0.1`). When making a (P)RNG having at least a couple of frequency analysis tests is a requirement so that this kind of thing doesn't happen. Just generate a bunch of values (some hundred thousands, at least) and then do at least a simple analysis on the results to see how evenly distributed they are.", "edited": 1492410529.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Two things...&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;range&lt;/code&gt; seems odd to me in that it excludes the lower value but includes the upper one. Generally, I&amp;#39;m more accustomed to &lt;code&gt;[min, max)&lt;/code&gt; than &lt;code&gt;(min,max]&lt;/code&gt;. Maybe it&amp;#39;s just me.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;It would make &lt;em&gt;a lot&lt;/em&gt; of sense to add some bias tests. Right now, due to the &lt;em&gt;faulty&lt;/em&gt; conversion, the results are &lt;em&gt;heavily&lt;/em&gt; biased. Not only that, there are discriminated values (i.e. &lt;code&gt;Random.value()&lt;/code&gt; is always &lt;code&gt;&amp;gt;= 0.1&lt;/code&gt;). When making a (P)RNG having at least a couple of frequency analysis tests is a requirement so that this kind of thing doesn&amp;#39;t happen. Just generate a bunch of values (some hundred thousands, at least) and then do at least a simple analysis on the results to see how evenly distributed they are.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgd746s", "score_hidden": false, "stickied": false, "created": 1492438511.0, "created_utc": 1492409711.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": "", "user_reports": [], "id": "dgchkqp", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "eepieh", "parent_id": "t3_65r1cw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Some background: I've lately been fascinated by randomness and after reading that `Math.random()` is not that great I decided to make this small lib. I wanted something that'd work in Node and the browser effortlessly.\n\nI'm very open to feedback as to what can be improved. I've also opened some issues that I'd like some help with, so if anyone has a minute, take a gander :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some background: I&amp;#39;ve lately been fascinated by randomness and after reading that &lt;code&gt;Math.random()&lt;/code&gt; is not that great I decided to make this small lib. I wanted something that&amp;#39;d work in Node and the browser effortlessly.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m very open to feedback as to what can be improved. I&amp;#39;ve also opened some issues that I&amp;#39;d like some help with, so if anyone has a minute, take a gander :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgchkqp", "score_hidden": false, "stickied": false, "created": 1492401474.0, "created_utc": 1492372674.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": "", "user_reports": [], "id": "dgcjico", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "eepieh", "parent_id": "t1_dgcim78", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thank you!\n\nI somehow had it in my mind that it's a single-precision float. Will sort this out :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you!&lt;/p&gt;\n\n&lt;p&gt;I somehow had it in my mind that it&amp;#39;s a single-precision float. Will sort this out :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcjico", "score_hidden": false, "stickied": false, "created": 1492403967.0, "created_utc": 1492375167.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcim78", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "inu-no-policemen", "parent_id": "t3_65r1cw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt;     const buffer = crypto.randomBytes(4);\n&gt;     return this._intToFloat(buffer.readInt32BE(0));\n\nDoubles are 8 bytes, though.\n\nIn the [0-1) interval, there are about 2^62 different values:\n\nhttp://stackoverflow.com/questions/2978930/how-many-double-numbers-are-there-between-0-0-and-1-0", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;pre&gt;&lt;code&gt;const buffer = crypto.randomBytes(4);\nreturn this._intToFloat(buffer.readInt32BE(0));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Doubles are 8 bytes, though.&lt;/p&gt;\n\n&lt;p&gt;In the [0-1) interval, there are about 2&lt;sup&gt;62&lt;/sup&gt; different values:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://stackoverflow.com/questions/2978930/how-many-double-numbers-are-there-between-0-0-and-1-0\"&gt;http://stackoverflow.com/questions/2978930/how-many-double-numbers-are-there-between-0-0-and-1-0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcim78", "score_hidden": false, "stickied": false, "created": 1492402809.0, "created_utc": 1492374009.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_65r1cw", "likes": null, "replies": "", "user_reports": [], "id": "dge6ubk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "eepieh", "parent_id": "t1_dgcvz9y", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Is extracting static private functions outside of the class considered standard practice? I come from a mostly PHP background, so this is a bit odd to me.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is extracting static private functions outside of the class considered standard practice? I come from a mostly PHP background, so this is a bit odd to me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dge6ubk", "score_hidden": false, "stickied": false, "created": 1492494896.0, "created_utc": 1492466096.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcvz9y", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ijmacd", "parent_id": "t3_65r1cw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I like the simplicity. Apart from the change mentioned by *inu-no-policeman* about float vs. double I would suggest changing [this method](https://github.com/SkepticalHippo/crypto-random/blob/master/random.js#L20-L22) as well (just moving closing parenthesis):\n\n    static range(min, max) {\n        return Math.floor(this.value() * (max - min + 1) + min);\n    }\n\nI expect this function to always return an integer, but that's not necessarily true if I call it like so:\n\n    Random.range(1.5, 5)\n\nAlso as there are no private class methods in javascript ([yet](https://github.com/tc39/proposal-bind-operator)) and all of yours are called statically (e.g.``` _getIntToFloat```) they don't have to be part of the class. They can be regular function definitions in the module. This way they are not exposed and your API shrinks to just the two methods you intend.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like the simplicity. Apart from the change mentioned by &lt;em&gt;inu-no-policeman&lt;/em&gt; about float vs. double I would suggest changing &lt;a href=\"https://github.com/SkepticalHippo/crypto-random/blob/master/random.js#L20-L22\"&gt;this method&lt;/a&gt; as well (just moving closing parenthesis):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static range(min, max) {\n    return Math.floor(this.value() * (max - min + 1) + min);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I expect this function to always return an integer, but that&amp;#39;s not necessarily true if I call it like so:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Random.range(1.5, 5)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also as there are no private class methods in javascript (&lt;a href=\"https://github.com/tc39/proposal-bind-operator\"&gt;yet&lt;/a&gt;) and all of yours are called statically (e.g.&lt;code&gt;_getIntToFloat&lt;/code&gt;) they don&amp;#39;t have to be part of the class. They can be regular function definitions in the module. This way they are not exposed and your API shrinks to just the two methods you intend.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dgcvz9y", "score_hidden": false, "stickied": false, "created": 1492420657.0, "created_utc": 1492391857.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]