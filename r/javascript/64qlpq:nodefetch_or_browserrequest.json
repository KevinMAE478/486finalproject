[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My boss wants a common API for making requests in JS.\nIt seems like my choice is either using node-fetch and the normal fetch API (using babel for IE and Safari), or going with request and browser-request.\nWhat is my best choice here? Or is there some alternative?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "My boss wants a common API for making requests in JS.\nIt seems like my choice is either using node-fetch and the normal fetch API (using babel for IE and Safari), or going with request and browser-request.\nWhat is my best choice here? Or is there some alternative?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "help", "id": "64qlpq", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 8, "report_reasons": null, "author": "hgiesel", "saved": false, "mod_reports": [], "name": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": "help", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/64qlpq/nodefetch_or_browserrequest/", "num_reports": null, "locked": false, "stickied": false, "created": 1491943751.0, "url": "https://www.reddit.com/r/javascript/comments/64qlpq/nodefetch_or_browserrequest/", "author_flair_text": null, "quarantine": false, "title": "node-fetch or browser-request?", "created_utc": 1491914951.0, "distinguished": null, "media": null, "upvote_ratio": 0.76, "num_comments": 9, "visited": false, "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg5jtnb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gustix", "parent_id": "t1_dg492c3", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "+1 for axios, just started using the library a few months ago. It's solid.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;+1 for axios, just started using the library a few months ago. It&amp;#39;s solid.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5jtnb", "score_hidden": false, "stickied": false, "created": 1492005826.0, "created_utc": 1491977026.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg492c3", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "djslakor", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "axios", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;axios&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg492c3", "score_hidden": false, "stickied": false, "created": 1491946366.0, "created_utc": 1491917566.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg4twz6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "caspervonb", "parent_id": "t1_dg4a88o", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Except, streams should not be promises, which is a fundamental design flaw with fetch IMHO. Seems basically they were too quick to jump on the promisify stuff bandwagon.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Except, streams should not be promises, which is a fundamental design flaw with fetch IMHO. Seems basically they were too quick to jump on the promisify stuff bandwagon.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4twz6", "score_hidden": false, "stickied": false, "created": 1491969756.0, "created_utc": 1491940956.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4a88o", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "hunterloftis", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Of the two options you mentioned directly, use fetch and node-fetch.\n\nFetch is a standard. It's what the client side of the web is (and will be) using. If you want to actually standardize on something across the lines, pick a real standard.\n\n[Request](https://github.com/request/request) is just a popular node library. If you're going to standardize on something non-standard, evaluate all the browser + node options and just pick the one you like best. [Superagent](https://github.com/visionmedia/superagent) is solid. [Axios](https://github.com/mzabriskie/axios) is popular but has many open issues.", "edited": 1491943632.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Of the two options you mentioned directly, use fetch and node-fetch.&lt;/p&gt;\n\n&lt;p&gt;Fetch is a standard. It&amp;#39;s what the client side of the web is (and will be) using. If you want to actually standardize on something across the lines, pick a real standard.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/request/request\"&gt;Request&lt;/a&gt; is just a popular node library. If you&amp;#39;re going to standardize on something non-standard, evaluate all the browser + node options and just pick the one you like best. &lt;a href=\"https://github.com/visionmedia/superagent\"&gt;Superagent&lt;/a&gt; is solid. &lt;a href=\"https://github.com/mzabriskie/axios\"&gt;Axios&lt;/a&gt; is popular but has many open issues.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4a88o", "score_hidden": false, "stickied": false, "created": 1491947911.0, "created_utc": 1491919111.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg4m2s7", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "oweiler", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'd suggest using superagent. Works in node and browser, has a nice API and a rich feature set. Much better than axios IMHO.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d suggest using superagent. Works in node and browser, has a nice API and a rich feature set. Much better than axios IMHO.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4m2s7", "score_hidden": false, "stickied": false, "created": 1491961275.0, "created_utc": 1491932475.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg5gcac", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Porso7", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Axios \ud83d\udc4c", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Axios \ud83d\udc4c&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5gcac", "score_hidden": false, "stickied": false, "created": 1491999128.0, "created_utc": 1491970328.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg4upv2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ninjaroach", "parent_id": "t1_dg4lc4t", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I recently switched over here from r/node and now wish I would have done so loooong ago.\n\nAnyways, thanks for the heads up here.\n\nYour comments sent me looking for generic ways to \"cancel\" Promises, since it seems like *that* would be the right way to abort a Fetch request, hack a timeout onto one, etc.  \n\nAs it turns out, Promises are \"uncancellable\" by default.  There's [some discussion](https://github.com/bergus/promise-cancellation) about how it could be implemented in the spec, but we won't see it for another version (or two) of ES.\n\nEDIT: [More reading](https://medium.com/@benlesh/promise-cancellation-is-dead-long-live-promise-cancellation-c6601f1f5082)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I recently switched over here from &lt;a href=\"/r/node\"&gt;r/node&lt;/a&gt; and now wish I would have done so loooong ago.&lt;/p&gt;\n\n&lt;p&gt;Anyways, thanks for the heads up here.&lt;/p&gt;\n\n&lt;p&gt;Your comments sent me looking for generic ways to &amp;quot;cancel&amp;quot; Promises, since it seems like &lt;em&gt;that&lt;/em&gt; would be the right way to abort a Fetch request, hack a timeout onto one, etc.  &lt;/p&gt;\n\n&lt;p&gt;As it turns out, Promises are &amp;quot;uncancellable&amp;quot; by default.  There&amp;#39;s &lt;a href=\"https://github.com/bergus/promise-cancellation\"&gt;some discussion&lt;/a&gt; about how it could be implemented in the spec, but we won&amp;#39;t see it for another version (or two) of ES.&lt;/p&gt;\n\n&lt;p&gt;EDIT: &lt;a href=\"https://medium.com/@benlesh/promise-cancellation-is-dead-long-live-promise-cancellation-c6601f1f5082\"&gt;More reading&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4upv2", "score_hidden": false, "stickied": false, "created": 1491970653.0, "created_utc": 1491941853.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4lc4t", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "enkideridu", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "**Do not use fetch**  \n\nFetch does not support aborting requests, it does not support specifying a timeout, it does not support upload progress  \n\nPerhaps those aren't things that you need right away, but unless you can guarantee that none of those things will be needed in your project's lifetime, do not use fetch.  \n\nbrowser-request seems abandoned, it [hasn't been updated in years](https://github.com/iriscouch/browser-request)\n\nI'd second the recommendation for axios, which can be used in both node and browser (it automatically uses the http transport in node and xhr in browser). ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Do not use fetch&lt;/strong&gt;  &lt;/p&gt;\n\n&lt;p&gt;Fetch does not support aborting requests, it does not support specifying a timeout, it does not support upload progress  &lt;/p&gt;\n\n&lt;p&gt;Perhaps those aren&amp;#39;t things that you need right away, but unless you can guarantee that none of those things will be needed in your project&amp;#39;s lifetime, do not use fetch.  &lt;/p&gt;\n\n&lt;p&gt;browser-request seems abandoned, it &lt;a href=\"https://github.com/iriscouch/browser-request\"&gt;hasn&amp;#39;t been updated in years&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d second the recommendation for axios, which can be used in both node and browser (it automatically uses the http transport in node and xhr in browser). &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4lc4t", "score_hidden": false, "stickied": false, "created": 1491960477.0, "created_utc": 1491931677.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64qlpq", "likes": null, "replies": "", "user_reports": [], "id": "dg4lttt", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "liming91", "parent_id": "t3_64qlpq", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "XMLHttpRequest", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;XMLHttpRequest&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4lttt", "score_hidden": false, "stickied": false, "created": 1491961008.0, "created_utc": 1491932208.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}]