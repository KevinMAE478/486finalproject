[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Im curious. I have been dancing around it for a few weeks/months now and I am curious what people think of it. &lt;/p&gt;\n\n&lt;p&gt;I like that it has Interfaces, Classes and Generics among other things, but some people would say that this type of stuff does not belong in javascript, that it&amp;#39;s not made for this.&lt;/p&gt;\n\n&lt;p&gt;So I am curious what ya&amp;#39;ll think. I know Angular is a huge user of it, so it must have some friends in the community.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Im curious. I have been dancing around it for a few weeks/months now and I am curious what people think of it. \n\nI like that it has Interfaces, Classes and Generics among other things, but some people would say that this type of stuff does not belong in javascript, that it's not made for this.\n\nSo I am curious what ya'll think. I know Angular is a huge user of it, so it must have some friends in the community.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "help", "id": "64rgnw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 19, "report_reasons": null, "author": "SavishSalacious", "saved": false, "mod_reports": [], "name": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "approved_by": null, "over_18": false, "domain": "self.javascript", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": "help", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/javascript/comments/64rgnw/what_is_the_over_all_consensus_on_typescript/", "num_reports": null, "locked": false, "stickied": false, "created": 1491952774.0, "url": "https://www.reddit.com/r/javascript/comments/64rgnw/what_is_the_over_all_consensus_on_typescript/", "author_flair_text": null, "quarantine": false, "title": "What is the over all consensus on Typescript?", "created_utc": 1491923974.0, "distinguished": null, "media": null, "upvote_ratio": 0.8, "num_comments": 67, "visited": false, "subreddit_type": "public", "ups": 19}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4kmac", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "sittingprettyin", "parent_id": "t1_dg4ipvp", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "This. Happily waving goodbye to the era of logging out some library's instance methods just to see what it's making available. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This. Happily waving goodbye to the era of logging out some library&amp;#39;s instance methods just to see what it&amp;#39;s making available. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4kmac", "score_hidden": false, "stickied": false, "created": 1491959686.0, "created_utc": 1491930886.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 13}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4ipvp", "gilded": 0, "archived": false, "score": 36, "report_reasons": null, "author": "chachinsky", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I know nothing of Angular but we use TypeScript with React extensively.  I honestly don't want to go back to writing regular JavaScript. My main reason is because debugging simple issues like what is in an object become nonsensical. \n\nInterfaces provide contracts for objects to follow, this avoids the problem of having to run the app, find out that you are calling the method wrong (either typing mistake or on the wrong object), and continuing this loop process. You still have to write tests but tests no longer become about what you are passing in and doing type checking.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know nothing of Angular but we use TypeScript with React extensively.  I honestly don&amp;#39;t want to go back to writing regular JavaScript. My main reason is because debugging simple issues like what is in an object become nonsensical. &lt;/p&gt;\n\n&lt;p&gt;Interfaces provide contracts for objects to follow, this avoids the problem of having to run the app, find out that you are calling the method wrong (either typing mistake or on the wrong object), and continuing this loop process. You still have to write tests but tests no longer become about what you are passing in and doing type checking.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4ipvp", "score_hidden": false, "stickied": false, "created": 1491957622.0, "created_utc": 1491928822.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 36}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg57sz7", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "SandalsMan", "parent_id": "t1_dg4w6bb", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "If you are using babel-preset-react to transpile JSX you can use flow out of the box.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are using babel-preset-react to transpile JSX you can use flow out of the box.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg57sz7", "score_hidden": false, "stickied": false, "created": 1491987145.0, "created_utc": 1491958345.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4y5dg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Veuxdo", "parent_id": "t1_dg4w6bb", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Probably depends some on your existing tools. Are you using an IDE and/or compilers now?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Probably depends some on your existing tools. Are you using an IDE and/or compilers now?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4y5dg", "score_hidden": false, "stickied": false, "created": 1491974596.0, "created_utc": 1491945796.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5lu35", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "siegfryd", "parent_id": "t1_dg4w6bb", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Both have optional typing, so it doesn't really matter which.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Both have optional typing, so it doesn&amp;#39;t really matter which.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5lu35", "score_hidden": false, "stickied": false, "created": 1492010970.0, "created_utc": 1491982170.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg59jut", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "Porso7", "parent_id": "t1_dg4w6bb", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Not sure about Flow, but for Typescript you can probably just add it to your existing build system. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not sure about Flow, but for Typescript you can probably just add it to your existing build system. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg59jut", "score_hidden": false, "stickied": false, "created": 1491989386.0, "created_utc": 1491960586.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4w6bb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "power-lift", "parent_id": "t1_dg4gqhd", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Which is the easiest to incorporate in to an existing project?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which is the easiest to incorporate in to an existing project?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4w6bb", "score_hidden": false, "stickied": false, "created": 1491972281.0, "created_utc": 1491943481.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4gqhd", "gilded": 0, "archived": false, "score": 27, "report_reasons": null, "author": "Veuxdo", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The consensus is that we like Typescript (and Flow) a lot, and that you should use one or the other on any mid-to-large scale project.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The consensus is that we like Typescript (and Flow) a lot, and that you should use one or the other on any mid-to-large scale project.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4gqhd", "score_hidden": false, "stickied": false, "created": 1491955447.0, "created_utc": 1491926647.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 27}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4hw2v", "gilded": 0, "archived": false, "score": 15, "report_reasons": null, "author": "DeUsuahiaALaQuiaca", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The idea that a static type-checking system doesn't work in JavaScript is just false... Plenty of large corporations are writing production code with TypeScript, and both TypeScript and Flow have structural typing systems which fit in pretty naturally with the duck-typing that is typical in JavaScript applications. The difference is that instead of manually writing JavaScript to do all that type checking at runtime, the type checker can tell you that your chicken doesn't quack before you even run your code.\n\nI highly recommend checking out this slideshow: http://djcordhose.github.io/flow-vs-typescript/elm-flow-typescript.html#/", "edited": 1491929157.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The idea that a static type-checking system doesn&amp;#39;t work in JavaScript is just false... Plenty of large corporations are writing production code with TypeScript, and both TypeScript and Flow have structural typing systems which fit in pretty naturally with the duck-typing that is typical in JavaScript applications. The difference is that instead of manually writing JavaScript to do all that type checking at runtime, the type checker can tell you that your chicken doesn&amp;#39;t quack before you even run your code.&lt;/p&gt;\n\n&lt;p&gt;I highly recommend checking out this slideshow: &lt;a href=\"http://djcordhose.github.io/flow-vs-typescript/elm-flow-typescript.html#/\"&gt;http://djcordhose.github.io/flow-vs-typescript/elm-flow-typescript.html#/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4hw2v", "score_hidden": false, "stickied": false, "created": 1491956707.0, "created_utc": 1491927907.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 15}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4kjdt", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "sittingprettyin", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Just use it on a bigger project and you'll see how much time it saves you in dealing with a debugging shitty runtime errors like missing camel case on object properties, refactoring var names, function argument types etc. It's _such_ a time saver really. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just use it on a bigger project and you&amp;#39;ll see how much time it saves you in dealing with a debugging shitty runtime errors like missing camel case on object properties, refactoring var names, function argument types etc. It&amp;#39;s &lt;em&gt;such&lt;/em&gt; a time saver really. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4kjdt", "score_hidden": false, "stickied": false, "created": 1491959598.0, "created_utc": 1491930798.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg57v9b", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fwovertheory", "parent_id": "t1_dg56qvy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Flow's focus seems more narrow, which is good and bad. TS definitely promotes a certain paradigm -- that is C# style object oriented programming. It's very good at doing that, so it's my hope that Flow could stick out by being a little more opinionated and maybe developing a different paradigmatic style, e.g. favoring functional programming.\n\nThat being said, functional programming is already totally possible in TS, and looking from the issue tracker, it looks like TS is going to receive higher-kinded types -- the \"killer feature\" of functional programming -- long before Flow does.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Flow&amp;#39;s focus seems more narrow, which is good and bad. TS definitely promotes a certain paradigm -- that is C# style object oriented programming. It&amp;#39;s very good at doing that, so it&amp;#39;s my hope that Flow could stick out by being a little more opinionated and maybe developing a different paradigmatic style, e.g. favoring functional programming.&lt;/p&gt;\n\n&lt;p&gt;That being said, functional programming is already totally possible in TS, and looking from the issue tracker, it looks like TS is going to receive higher-kinded types -- the &amp;quot;killer feature&amp;quot; of functional programming -- long before Flow does.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg57v9b", "score_hidden": false, "stickied": false, "created": 1491987230.0, "created_utc": 1491958430.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg56qvy", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "dumbmatter", "parent_id": "t1_dg5600d", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Yeah, I don't see how Flow can catch up either, unless Microsoft decides to do something really stupid (which is always a possibility).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, I don&amp;#39;t see how Flow can catch up either, unless Microsoft decides to do something really stupid (which is always a possibility).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg56qvy", "score_hidden": false, "stickied": false, "created": 1491985749.0, "created_utc": 1491956949.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5600d", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "fwovertheory", "parent_id": "t1_dg53jzs", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I theoretically like Flow too, but it seems like it's already sort of lost the battle... I'm very curious where things will go in the next few years, because it seems like TypeScript has a major mind share advantage. It's hard to see how Flow could catch up.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I theoretically like Flow too, but it seems like it&amp;#39;s already sort of lost the battle... I&amp;#39;m very curious where things will go in the next few years, because it seems like TypeScript has a major mind share advantage. It&amp;#39;s hard to see how Flow could catch up.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5600d", "score_hidden": false, "stickied": false, "created": 1491984753.0, "created_utc": 1491955953.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53jzs", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "dumbmatter", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "[I converted a large JS project to Flow](https://github.com/dumbmatter/basketball-gm) and I've used TypeScript a lot in my day job. Both are better than plain JS. Both will find bugs you would have missed, without forcing you to write tons of tedious unit tests.\n\nI like Flow better, in theory. It figures out more shit on its own (TypeScript means more manual annotation of variables), it is a less intrusive change to the language (literally just JS with types that can be safely removed, TypeScript feels like it's trying to do too much to be its own language), it plays nice with the Babel ecosystem (again, TypeScript doing too much, they reimplement similar features but it generally lags behind)...\n\nBut TypeScript has tons of types for third-party npm packages, and Flow doesn't. That just about evens the score, in my mind.\n\nOne thing people struggle with is that they write super dynamic JS that is hard to type. Like objects whose properties change a lot depending on the context, crazily overloaded functions with weird logic based on different inputs, etc. It's frustrating to type that kind of code. But what I've learned is... I shouldn't be writing that kind of code in the first place, because even without types, it's fucking confusing. The types just make that explicitly clear. I think that's made me a better JS programmer.", "edited": 1491952940.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/dumbmatter/basketball-gm\"&gt;I converted a large JS project to Flow&lt;/a&gt; and I&amp;#39;ve used TypeScript a lot in my day job. Both are better than plain JS. Both will find bugs you would have missed, without forcing you to write tons of tedious unit tests.&lt;/p&gt;\n\n&lt;p&gt;I like Flow better, in theory. It figures out more shit on its own (TypeScript means more manual annotation of variables), it is a less intrusive change to the language (literally just JS with types that can be safely removed, TypeScript feels like it&amp;#39;s trying to do too much to be its own language), it plays nice with the Babel ecosystem (again, TypeScript doing too much, they reimplement similar features but it generally lags behind)...&lt;/p&gt;\n\n&lt;p&gt;But TypeScript has tons of types for third-party npm packages, and Flow doesn&amp;#39;t. That just about evens the score, in my mind.&lt;/p&gt;\n\n&lt;p&gt;One thing people struggle with is that they write super dynamic JS that is hard to type. Like objects whose properties change a lot depending on the context, crazily overloaded functions with weird logic based on different inputs, etc. It&amp;#39;s frustrating to type that kind of code. But what I&amp;#39;ve learned is... I shouldn&amp;#39;t be writing that kind of code in the first place, because even without types, it&amp;#39;s fucking confusing. The types just make that explicitly clear. I think that&amp;#39;s made me a better JS programmer.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53jzs", "score_hidden": false, "stickied": false, "created": 1491981464.0, "created_utc": 1491952664.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4o1ln", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "rickdg", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "It's the easiest way to check the syntax of a js file from the command line. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s the easiest way to check the syntax of a js file from the command line. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4o1ln", "score_hidden": false, "stickied": false, "created": 1491963443.0, "created_utc": 1491934643.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4q9xp", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mhink", "parent_id": "t1_dg4ownf", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Yeah, I kinda look at it as a smarter linter. It takes a little while to become accustomed to the semantics of typechecking Javascript (whether using TypeScript or Flow), but I've come to realize that both projects provide a considerable number of tools which allow you to specify \"just enough\" typing that you get the benefits without needing to adapt your code's structure to appease the typechecker.\n\nThis was huge for me, because without that power, you end up adapting your code to appease the typechecker, in which case you're basically just writing Java.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, I kinda look at it as a smarter linter. It takes a little while to become accustomed to the semantics of typechecking Javascript (whether using TypeScript or Flow), but I&amp;#39;ve come to realize that both projects provide a considerable number of tools which allow you to specify &amp;quot;just enough&amp;quot; typing that you get the benefits without needing to adapt your code&amp;#39;s structure to appease the typechecker.&lt;/p&gt;\n\n&lt;p&gt;This was huge for me, because without that power, you end up adapting your code to appease the typechecker, in which case you&amp;#39;re basically just writing Java.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4q9xp", "score_hidden": false, "stickied": false, "created": 1491965850.0, "created_utc": 1491937050.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg56aw7", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "wazoocakes", "parent_id": "t1_dg53lsr", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "nice!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;nice!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg56aw7", "score_hidden": false, "stickied": false, "created": 1491985154.0, "created_utc": 1491956354.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53lsr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg4ownf", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Conversely I find typescript immensely helpful on smaller projects, anywhere from 500 to 10000 LOC. Especially ones with tight deadlines. I can very quickly go from prototyping to rewriting and refactoring with ease and confidence.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Conversely I find typescript immensely helpful on smaller projects, anywhere from 500 to 10000 LOC. Especially ones with tight deadlines. I can very quickly go from prototyping to rewriting and refactoring with ease and confidence.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53lsr", "score_hidden": false, "stickied": false, "created": 1491981532.0, "created_utc": 1491952732.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4ownf", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "wazoocakes", "parent_id": "t1_dg4isc7", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Thank you very much. To me those are some really strong and valid arguments that should be promoted a whole lot more then simply \"because types\". I have been on very large projects, and you're right. Thanks!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you very much. To me those are some really strong and valid arguments that should be promoted a whole lot more then simply &amp;quot;because types&amp;quot;. I have been on very large projects, and you&amp;#39;re right. Thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4ownf", "score_hidden": false, "stickied": false, "created": 1491964389.0, "created_utc": 1491935589.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4isc7", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "DeUsuahiaALaQuiaca", "parent_id": "t1_dg4hrk0", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Nothing wrong with that, and I would definitely say the benefits of static type-checking don't quickly become apparent until the application becomes very large with a lot of moving pieces.\n\nI would just say that in any JavaScript application you are dealing with typing. TypeScript and Flow just help you find type errors more easily, while editing your code instead of while running it.  The common practice of duck typing in JavaScript is highly compatible with the structural typing systems that TS and Flow have. And if you have to write tons of overloaded signatures (keep in mind a TypeScript method with 10 signatures still only has one implementation, just like JavaScript), I would say it's a good sign that your method is very complex and you might want to think about refactoring and focusing on interfaces. After all, even if JavaScript doesn't make you explicitly declare all your method signatures, you're still going to have to describe them all in your documentation!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nothing wrong with that, and I would definitely say the benefits of static type-checking don&amp;#39;t quickly become apparent until the application becomes very large with a lot of moving pieces.&lt;/p&gt;\n\n&lt;p&gt;I would just say that in any JavaScript application you are dealing with typing. TypeScript and Flow just help you find type errors more easily, while editing your code instead of while running it.  The common practice of duck typing in JavaScript is highly compatible with the structural typing systems that TS and Flow have. And if you have to write tons of overloaded signatures (keep in mind a TypeScript method with 10 signatures still only has one implementation, just like JavaScript), I would say it&amp;#39;s a good sign that your method is very complex and you might want to think about refactoring and focusing on interfaces. After all, even if JavaScript doesn&amp;#39;t make you explicitly declare all your method signatures, you&amp;#39;re still going to have to describe them all in your documentation!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4isc7", "score_hidden": false, "stickied": false, "created": 1491957698.0, "created_utc": 1491928898.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg526ge", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "wazoocakes", "parent_id": "t1_dg51erw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "thank you! Comments and feedback like this, is very useful for seeing what's going on. I'm beginning to understand why TS is getting so much traction. :bow:", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank you! Comments and feedback like this, is very useful for seeing what&amp;#39;s going on. I&amp;#39;m beginning to understand why TS is getting so much traction. :bow:&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg526ge", "score_hidden": false, "stickied": false, "created": 1491979625.0, "created_utc": 1491950825.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg51erw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "bobandalice", "parent_id": "t1_dg4ouj4", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I was the same way, 'type safety' as they say sounded like it was solving a problem I did not have, but a have been a recent convert due to the other benefits I discovered through vscode and using the monaco editor in online projects.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was the same way, &amp;#39;type safety&amp;#39; as they say sounded like it was solving a problem I did not have, but a have been a recent convert due to the other benefits I discovered through vscode and using the monaco editor in online projects.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg51erw", "score_hidden": false, "stickied": false, "created": 1491978634.0, "created_utc": 1491949834.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4ouj4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "wazoocakes", "parent_id": "t1_dg4kjcy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "thank you! I have been on very large projects, so I do understand where you're coming from there. To me THAT is a very valid reason that should be promoted a little more then simply \"because types\". Thanks!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank you! I have been on very large projects, so I do understand where you&amp;#39;re coming from there. To me THAT is a very valid reason that should be promoted a little more then simply &amp;quot;because types&amp;quot;. Thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4ouj4", "score_hidden": false, "stickied": false, "created": 1491964327.0, "created_utc": 1491935527.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4kjcy", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "GBcrazy", "parent_id": "t1_dg4hrk0", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Main advantage for typescript would be autocompletion and navigation for smart IDEs/editors, in which javascript is still really weak. You'll not run into these problems in solo projects or something like that, but in big projects it could be a pain to track a particular class/object declaration and look at what methods it does have, this leads to loss of time and efficiency.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Main advantage for typescript would be autocompletion and navigation for smart IDEs/editors, in which javascript is still really weak. You&amp;#39;ll not run into these problems in solo projects or something like that, but in big projects it could be a pain to track a particular class/object declaration and look at what methods it does have, this leads to loss of time and efficiency.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4kjcy", "score_hidden": false, "stickied": false, "created": 1491959597.0, "created_utc": 1491930797.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4hrk0", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "wazoocakes", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "The reasons why the zeitgeist is *for* TypeScript, has pretty much been the reasons why I haven't yet jumped on-board. \"Because Types\" just doesn't sway me. The power of JavaScript has been in being able to deal with anything...if you bring typing back into things, then we're back to J2EE and 10 overloads for a function. If you prefer using it, great. All the power to you (seriously). I'm just not \"there\". Been loving the hell out of React lately.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The reasons why the zeitgeist is &lt;em&gt;for&lt;/em&gt; TypeScript, has pretty much been the reasons why I haven&amp;#39;t yet jumped on-board. &amp;quot;Because Types&amp;quot; just doesn&amp;#39;t sway me. The power of JavaScript has been in being able to deal with anything...if you bring typing back into things, then we&amp;#39;re back to J2EE and 10 overloads for a function. If you prefer using it, great. All the power to you (seriously). I&amp;#39;m just not &amp;quot;there&amp;quot;. Been loving the hell out of React lately.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4hrk0", "score_hidden": false, "stickied": false, "created": 1491956572.0, "created_utc": 1491927772.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4xmg1", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg4xj0k", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Sorry if I'm being unclear, but there is no reason to write tests about type. If it works, it's working. If you have good tests, success is guaranteed. After that, it's down to documentation to provide developers with info on what objects are like ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry if I&amp;#39;m being unclear, but there is no reason to write tests about type. If it works, it&amp;#39;s working. If you have good tests, success is guaranteed. After that, it&amp;#39;s down to documentation to provide developers with info on what objects are like &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4xmg1", "score_hidden": false, "stickied": false, "created": 1491973964.0, "created_utc": 1491945164.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4xj0k", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "tme321", "parent_id": "t1_dg4sd4f", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Imo this is completely backwards.  Unit testing should be about testing the actual logic of the unit.  All the effort javascript devs waste writing tests just to confirm that the right type is being passed around is ludicrous.  One of the major selling points of a static typing system is that whole class of tests disappears because they are pointless.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Imo this is completely backwards.  Unit testing should be about testing the actual logic of the unit.  All the effort javascript devs waste writing tests just to confirm that the right type is being passed around is ludicrous.  One of the major selling points of a static typing system is that whole class of tests disappears because they are pointless.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4xj0k", "score_hidden": false, "stickied": false, "created": 1491973848.0, "created_utc": 1491945048.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4sd4f", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg4r7bi", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "&gt;  VS Code is pretty outstanding and cross platform.\n\nyeah I'm just not switching editors. I've been running vim for closing in on 15 years. I can't imagine a day when that is not the case. \n\n&gt; Regarding the errors that seem obvious...  They may seem obvious in a small to even a medium sized application but might not be so obvious in a large application on a large team. \n\nThis is true, but in my opinion this function is better served through unit testing, which will tend to catch more critical errors and has benefits in projects of all sizes", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;VS Code is pretty outstanding and cross platform.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;yeah I&amp;#39;m just not switching editors. I&amp;#39;ve been running vim for closing in on 15 years. I can&amp;#39;t imagine a day when that is not the case. &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Regarding the errors that seem obvious...  They may seem obvious in a small to even a medium sized application but might not be so obvious in a large application on a large team. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is true, but in my opinion this function is better served through unit testing, which will tend to catch more critical errors and has benefits in projects of all sizes&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4sd4f", "score_hidden": false, "stickied": false, "created": 1491968085.0, "created_utc": 1491939285.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4r7bi", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "misc_ent", "parent_id": "t1_dg4nb4s", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Many editors can provide benefits from Typescript without being an IDE. VS Code is pretty outstanding and cross platform.\n\nRegarding the errors that seem obvious... They may seem obvious in a small to even a medium sized application but might not be so obvious in a large application on a large team. Either the tsc compiler or your editor/ide will bubble those errors to you before you even run the code. It also pairs will with continuous deployment.\n\nIf you don't have those needs then yeah Typescript might be too much overhead for you.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Many editors can provide benefits from Typescript without being an IDE. VS Code is pretty outstanding and cross platform.&lt;/p&gt;\n\n&lt;p&gt;Regarding the errors that seem obvious... They may seem obvious in a small to even a medium sized application but might not be so obvious in a large application on a large team. Either the tsc compiler or your editor/ide will bubble those errors to you before you even run the code. It also pairs will with continuous deployment.&lt;/p&gt;\n\n&lt;p&gt;If you don&amp;#39;t have those needs then yeah Typescript might be too much overhead for you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4r7bi", "score_hidden": false, "stickied": false, "created": 1491966825.0, "created_utc": 1491938025.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg69l30", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Tevesh", "parent_id": "t1_dg5on5g", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Well ...\n&gt; but none of the things I mentioned are features of an ide imo\n\nSplit screen? CLI? Keyboard only controls? Auto running tests? I use all that on daily basis. Vi is no longer unique, deal with it. Only thing that stays with it is the non-standard UI ... \n\nI didn't like TS either but it sure seems to have benefits in large projects. Actually working on large projects without IDE seems like willingly tying your hands ... Maybe you are working totally alone, but in teams your attitude seems very unhelpful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well ...&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;but none of the things I mentioned are features of an ide imo&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Split screen? CLI? Keyboard only controls? Auto running tests? I use all that on daily basis. Vi is no longer unique, deal with it. Only thing that stays with it is the non-standard UI ... &lt;/p&gt;\n\n&lt;p&gt;I didn&amp;#39;t like TS either but it sure seems to have benefits in large projects. Actually working on large projects without IDE seems like willingly tying your hands ... Maybe you are working totally alone, but in teams your attitude seems very unhelpful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg69l30", "score_hidden": false, "stickied": false, "created": 1492048915.0, "created_utc": 1492020115.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5on5g", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg5d30m", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I am the one that uses vim. Vim has all of those things without plugins (but none of the things I mentioned are features of an ide imo). When you add plugins, vim becomes even more powerful. Personally, I do not consider vim an ide. An ide is an ide out of the box. Vim is a text editor that can accept plugins ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am the one that uses vim. Vim has all of those things without plugins (but none of the things I mentioned are features of an ide imo). When you add plugins, vim becomes even more powerful. Personally, I do not consider vim an ide. An ide is an ide out of the box. Vim is a text editor that can accept plugins &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5on5g", "score_hidden": false, "stickied": false, "created": 1492019604.0, "created_utc": 1491990804.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5d30m", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Porso7", "parent_id": "t1_dg53bt6", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "fyi (neo)vim can do all of that with plugins. Not sure why op isn't using them, Vim can be a very powerful IDE. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;fyi (neo)vim can do all of that with plugins. Not sure why op isn&amp;#39;t using them, Vim can be a very powerful IDE. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5d30m", "score_hidden": false, "stickied": false, "created": 1491994166.0, "created_utc": 1491965366.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5ou13", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg5gxwv", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Your argument is still that I do twice as much work for the same amount of benefit. I'm glad you like them, I'm glad you find your ide useful. I don't like them (both ides and types), I find them cumbersome and of little value. It's fine, you know. I don't have to agree with you, and you don't have to agree with me.\n\nI said in the beginning, lots of people clearly like strict typing. I also realize a lot of people rely on their editor to help them a lot more than I do. I have never understood that...But then I live my entire computer life on the cli and most people don't understand why I would do that. So, there you go. It's just not my preference, and I don't see that changing.\n\nSince it's totally not a critical issue, and the benefits are subjective, I'm going to stick with type-free. Might try flow one of these days, but again I just don't see the point. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your argument is still that I do twice as much work for the same amount of benefit. I&amp;#39;m glad you like them, I&amp;#39;m glad you find your ide useful. I don&amp;#39;t like them (both ides and types), I find them cumbersome and of little value. It&amp;#39;s fine, you know. I don&amp;#39;t have to agree with you, and you don&amp;#39;t have to agree with me.&lt;/p&gt;\n\n&lt;p&gt;I said in the beginning, lots of people clearly like strict typing. I also realize a lot of people rely on their editor to help them a lot more than I do. I have never understood that...But then I live my entire computer life on the cli and most people don&amp;#39;t understand why I would do that. So, there you go. It&amp;#39;s just not my preference, and I don&amp;#39;t see that changing.&lt;/p&gt;\n\n&lt;p&gt;Since it&amp;#39;s totally not a critical issue, and the benefits are subjective, I&amp;#39;m going to stick with type-free. Might try flow one of these days, but again I just don&amp;#39;t see the point. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5ou13", "score_hidden": false, "stickied": false, "created": 1492020200.0, "created_utc": 1491991400.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5gxwv", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gearvOsh", "parent_id": "t1_dg53bt6", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Man, I still never said there's no testing. Stop saying that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Man, I still never said there&amp;#39;s no testing. Stop saying that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5gxwv", "score_hidden": false, "stickied": false, "created": 1492000171.0, "created_utc": 1491971371.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53bt6", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg52zdw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I'm glad you like it. Split screen, keyboard only editing, CLI access, keyboard shortcuts to navigate directories has far too many benefits. Tests auto run in the background. I never have to touch them. They protect a lot more than the superficial \n\nA type system is no substitute for tests. http://literateprogrammer.blogspot.com/2014/10/types-dont-substitute-for-tests.html?m=1", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m glad you like it. Split screen, keyboard only editing, CLI access, keyboard shortcuts to navigate directories has far too many benefits. Tests auto run in the background. I never have to touch them. They protect a lot more than the superficial &lt;/p&gt;\n\n&lt;p&gt;A type system is no substitute for tests. &lt;a href=\"http://literateprogrammer.blogspot.com/2014/10/types-dont-substitute-for-tests.html?m=1\"&gt;http://literateprogrammer.blogspot.com/2014/10/types-dont-substitute-for-tests.html?m=1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53bt6", "score_hidden": false, "stickied": false, "created": 1491981150.0, "created_utc": 1491952350.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg52zdw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gearvOsh", "parent_id": "t1_dg52c6h", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I never said they go away, I said that you don't need to run them as often. The same goes for linting. Hell, you rarely need to run a watcher anymore either. \n\nUsing an IDE that provides inline static analysis by hooking into the type system has far too many benefits. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I never said they go away, I said that you don&amp;#39;t need to run them as often. The same goes for linting. Hell, you rarely need to run a watcher anymore either. &lt;/p&gt;\n\n&lt;p&gt;Using an IDE that provides inline static analysis by hooking into the type system has far too many benefits. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg52zdw", "score_hidden": false, "stickied": false, "created": 1491980682.0, "created_utc": 1491951882.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg55wc9", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "fwovertheory", "parent_id": "t1_dg52c6h", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Wow, I didn't realize Vi supported asynchronous task runners! /s", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, I didn&amp;#39;t realize Vi supported asynchronous task runners! /s&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg55wc9", "score_hidden": false, "stickied": false, "created": 1491984620.0, "created_utc": 1491955820.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg52c6h", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg50pwu", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "The need to run tests never goes away. Tests run in the background. Vi is king. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The need to run tests never goes away. Tests run in the background. Vi is king. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg52c6h", "score_hidden": false, "stickied": false, "created": 1491979831.0, "created_utc": 1491951031.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg50pwu", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "gearvOsh", "parent_id": "t1_dg4z6iw", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "If you use an IDE, the need to run tests constantly drops by quite a bit. That's the entire point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you use an IDE, the need to run tests constantly drops by quite a bit. That&amp;#39;s the entire point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg50pwu", "score_hidden": false, "stickied": false, "created": 1491977758.0, "created_utc": 1491948958.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4z6iw", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "whtevn", "parent_id": "t1_dg4xxh1", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Run the tests to see what's broken. I use immutable so my defaults are basically interfaces. It's not a big deal with good organization", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Run the tests to see what&amp;#39;s broken. I use immutable so my defaults are basically interfaces. It&amp;#39;s not a big deal with good organization&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4z6iw", "score_hidden": false, "stickied": false, "created": 1491975839.0, "created_utc": 1491947039.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4xxh1", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg4nb4s", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; I do not use an IDE\n\n&gt; Changing attributes of a widely used object can be an incredibly arduous task\n\nOkay then.\n\nEither way, this is way worse in plain JS. How do you know you caught every instance needing to be changed, 133t search &amp; replace skillz? How about subtle stuff like \"this property is now required\" or \"this property is no longer truthy but must be a boolean\"? A value that must be a key of a struct?\n\nAnd isn't it just plain horrible trying to keep your JSDocs up to date?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I do not use an IDE&lt;/p&gt;\n\n&lt;p&gt;Changing attributes of a widely used object can be an incredibly arduous task&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Okay then.&lt;/p&gt;\n\n&lt;p&gt;Either way, this is way worse in plain JS. How do you know you caught every instance needing to be changed, 133t search &amp;amp; replace skillz? How about subtle stuff like &amp;quot;this property is now required&amp;quot; or &amp;quot;this property is no longer truthy but must be a boolean&amp;quot;? A value that must be a key of a struct?&lt;/p&gt;\n\n&lt;p&gt;And isn&amp;#39;t it just plain horrible trying to keep your JSDocs up to date?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4xxh1", "score_hidden": false, "stickied": false, "created": 1491974332.0, "created_utc": 1491945532.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4nb4s", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "whtevn", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "apparently an unpopular opinion here, but having recently used typescript for the first time in an angular project, I am unimpressed. \n\nI do not use an IDE, so I don't get any direct benefit from it. The types of errors it prevents seem obvious and easy to prevent without all the overhead. The errors it shows are difficult to read and not always obvious to debug. At times it can get in the way by being too overzealous with vendor code. It is tedious to write and wordy to read. Changing attributes of a widely used object can be an incredibly arduous task, again for very little benefit. \n\nUltimately, to me, it feels like way more trouble than it's worth, and the costs far outweigh the supposed benefits. Lots of people seem to love it, but I do not share that love. Just my opinion.", "edited": 1491934101.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;apparently an unpopular opinion here, but having recently used typescript for the first time in an angular project, I am unimpressed. &lt;/p&gt;\n\n&lt;p&gt;I do not use an IDE, so I don&amp;#39;t get any direct benefit from it. The types of errors it prevents seem obvious and easy to prevent without all the overhead. The errors it shows are difficult to read and not always obvious to debug. At times it can get in the way by being too overzealous with vendor code. It is tedious to write and wordy to read. Changing attributes of a widely used object can be an incredibly arduous task, again for very little benefit. &lt;/p&gt;\n\n&lt;p&gt;Ultimately, to me, it feels like way more trouble than it&amp;#39;s worth, and the costs far outweigh the supposed benefits. Lots of people seem to love it, but I do not share that love. Just my opinion.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4nb4s", "score_hidden": false, "stickied": false, "created": 1491962629.0, "created_utc": 1491933829.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5h2mv", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "jocull", "parent_id": "t1_dg5gi43", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I think they're still needed... just this makes it easier than it used to be :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think they&amp;#39;re still needed... just this makes it easier than it used to be :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5h2mv", "score_hidden": false, "stickied": false, "created": 1492000403.0, "created_utc": 1491971603.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5tzo2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "apatheorist", "parent_id": "t1_dg5gi43", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Good. One red flag down.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good. One red flag down.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5tzo2", "score_hidden": false, "stickied": false, "created": 1492031380.0, "created_utc": 1492002580.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5gi43", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "DanielRosenwasser", "parent_id": "t1_dg5fxti", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "They're not needed as of TypeScript 2.1. See the section [on this blog post](https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/) titled \"Easier Imports\".", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They&amp;#39;re not needed as of TypeScript 2.1. See the section &lt;a href=\"https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/\"&gt;on this blog post&lt;/a&gt; titled &amp;quot;Easier Imports&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5gi43", "score_hidden": false, "stickied": false, "created": 1491999405.0, "created_utc": 1491970605.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5fxti", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "apatheorist", "parent_id": "t1_dg5d5o5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I mean [declarations](https://typescript.codeplex.com/wikipage?title=Writing%20Definition%20%28.d.ts%29%20Files). Just another name for headers.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean &lt;a href=\"https://typescript.codeplex.com/wikipage?title=Writing%20Definition%20%28.d.ts%29%20Files\"&gt;declarations&lt;/a&gt;. Just another name for headers.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5fxti", "score_hidden": false, "stickied": false, "created": 1491998462.0, "created_utc": 1491969662.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5d5o5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Porso7", "parent_id": "t1_dg4pbxy", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What do you mean by header files? Typescript doesn't have them. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean by header files? Typescript doesn&amp;#39;t have them. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5d5o5", "score_hidden": false, "stickied": false, "created": 1491994268.0, "created_utc": 1491965468.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4pbxy", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "apatheorist", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I like Typescript but its not overbearing es6+ compiler and the need for header files in javascript. So I use flow with webpack and babel.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like Typescript but its not overbearing es6+ compiler and the need for header files in javascript. So I use flow with webpack and babel.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4pbxy", "score_hidden": false, "stickied": false, "created": 1491964858.0, "created_utc": 1491936058.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg4uz55", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mini_eggs", "parent_id": "t1_dg4iwm1", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "React-native/redux/redux-thunk/most things in the react ecosystem. The React ecosystem as a whole tends to favor Flow over TS so it generally makes more sense to lean that way for me. Plenty of examples/etc.\n\nAlthough, if anyone finds themselves in the same boat as me with React/TS there are some great open source repos out there to learn from. https://github.com/palantir/ has a couple nice ones.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;React-native/redux/redux-thunk/most things in the react ecosystem. The React ecosystem as a whole tends to favor Flow over TS so it generally makes more sense to lean that way for me. Plenty of examples/etc.&lt;/p&gt;\n\n&lt;p&gt;Although, if anyone finds themselves in the same boat as me with React/TS there are some great open source repos out there to learn from. &lt;a href=\"https://github.com/palantir/\"&gt;https://github.com/palantir/&lt;/a&gt; has a couple nice ones.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4uz55", "score_hidden": false, "stickied": false, "created": 1491970943.0, "created_utc": 1491942143.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4iwm1", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Artraxes", "parent_id": "t1_dg4esai", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What's painful about using JS libraries..? You can just import them the classic way using `require` or whatever and cast the type to `any`. Granted you won't get any type support, but then that's just a result of the library not being written in TS or having TS definition files.\n\nWhat libraries were you specifically having trouble with?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s painful about using JS libraries..? You can just import them the classic way using &lt;code&gt;require&lt;/code&gt; or whatever and cast the type to &lt;code&gt;any&lt;/code&gt;. Granted you won&amp;#39;t get any type support, but then that&amp;#39;s just a result of the library not being written in TS or having TS definition files.&lt;/p&gt;\n\n&lt;p&gt;What libraries were you specifically having trouble with?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4iwm1", "score_hidden": false, "stickied": false, "created": 1491957826.0, "created_utc": 1491929026.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5gg1p", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "DanielRosenwasser", "parent_id": "t1_dg53p6m", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "In TypeScript 2.1, we allowed you to import *anything* without warnings as long as\n\n* `noImplicitAny` isn't turned on\n* You have something of that name in your `node_modules` folder\n\nSee the section [on this blog post](https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/) titled \"Easier Imports\".", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In TypeScript 2.1, we allowed you to import &lt;em&gt;anything&lt;/em&gt; without warnings as long as&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;noImplicitAny&lt;/code&gt; isn&amp;#39;t turned on&lt;/li&gt;\n&lt;li&gt;You have something of that name in your &lt;code&gt;node_modules&lt;/code&gt; folder&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;See the section &lt;a href=\"https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/\"&gt;on this blog post&lt;/a&gt; titled &amp;quot;Easier Imports&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5gg1p", "score_hidden": false, "stickied": false, "created": 1491999305.0, "created_utc": 1491970505.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53p6m", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "bel9708", "parent_id": "t1_dg4h896", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "TIL using require avoids typescript yelling at me for not having types. Will probably just stick with flow at the point though but good to know.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TIL using require avoids typescript yelling at me for not having types. Will probably just stick with flow at the point though but good to know.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53p6m", "score_hidden": false, "stickied": false, "created": 1491981660.0, "created_utc": 1491952860.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg53pf9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg4uqux", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Typescript can generate type definitions, so if I want to create a commonjs module I just compile and let it generate the definitions for me. I think you still have to write them by hand with Flow.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript can generate type definitions, so if I want to create a commonjs module I just compile and let it generate the definitions for me. I think you still have to write them by hand with Flow.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53pf9", "score_hidden": false, "stickied": false, "created": 1491981669.0, "created_utc": 1491952869.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4uqux", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mini_eggs", "parent_id": "t1_dg4h896", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Keeping track of type definition files is a pain/another thing to think about and requires/anys next to imports I find ugly.\n\nI'm aware these aren't real complaints but I find myself siding with flow more and more while spinning up new projects because of it.\n\nPath of least resistance, baby!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Keeping track of type definition files is a pain/another thing to think about and requires/anys next to imports I find ugly.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m aware these aren&amp;#39;t real complaints but I find myself siding with flow more and more while spinning up new projects because of it.&lt;/p&gt;\n\n&lt;p&gt;Path of least resistance, baby!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4uqux", "score_hidden": false, "stickied": false, "created": 1491970683.0, "created_utc": 1491941883.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4h896", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Raymonder", "parent_id": "t1_dg4esai", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What is the disadvantage of typescript regarding external libraries? If you have a type definition file installed for your library you get all the advantages of strictly typing, and if there's no definition file available then you can still use the library the normal (untyped) way. just use require() instead of import/from. I don't want to disagree, I'm just curious what the advantages are when using flow instead of typescript regarding external libraries.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is the disadvantage of typescript regarding external libraries? If you have a type definition file installed for your library you get all the advantages of strictly typing, and if there&amp;#39;s no definition file available then you can still use the library the normal (untyped) way. just use require() instead of import/from. I don&amp;#39;t want to disagree, I&amp;#39;m just curious what the advantages are when using flow instead of typescript regarding external libraries.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4h896", "score_hidden": false, "stickied": false, "created": 1491955993.0, "created_utc": 1491927193.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4esai", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mini_eggs", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 1, "body": "TypeScript is great. Love interfaces and the like but integrating it with other libraries is too painful to use it on non side projects. Flow has all the pros and none of the cons in my eyes.", "edited": 1491942231.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TypeScript is great. Love interfaces and the like but integrating it with other libraries is too painful to use it on non side projects. Flow has all the pros and none of the cons in my eyes.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4esai", "score_hidden": false, "stickied": false, "created": 1491953289.0, "created_utc": 1491924489.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg58p1m", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "turkish_gold", "parent_id": "t1_dg53y1r", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "Awesome, and thank you.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awesome, and thank you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg58p1m", "score_hidden": false, "stickied": false, "created": 1491988298.0, "created_utc": 1491959498.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53y1r", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "my_ledge_ends", "parent_id": "t1_dg53sk7", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "sure! [here](https://github.com/zackschuster/fs-utils) is a fork of fs-utils that adds tests and features if you're looking for something meatier to dive through; otherwise you can thumb through [some of my recent ts libs](https://github.com/zackschuster?utf8=%E2%9C%93&amp;tab=repositories&amp;q=NOT%20ng&amp;type=&amp;language=typescript) to pull ideas (fair warning: some of them don't quite work as advertised, so use your own discretion :) ).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;sure! &lt;a href=\"https://github.com/zackschuster/fs-utils\"&gt;here&lt;/a&gt; is a fork of fs-utils that adds tests and features if you&amp;#39;re looking for something meatier to dive through; otherwise you can thumb through &lt;a href=\"https://github.com/zackschuster?utf8=%E2%9C%93&amp;amp;tab=repositories&amp;amp;q=NOT%20ng&amp;amp;type=&amp;amp;language=typescript\"&gt;some of my recent ts libs&lt;/a&gt; to pull ideas (fair warning: some of them don&amp;#39;t quite work as advertised, so use your own discretion :) ).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53y1r", "score_hidden": false, "stickied": false, "created": 1491981995.0, "created_utc": 1491953195.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53sk7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "turkish_gold", "parent_id": "t1_dg51tf5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I've been looking for some little typescript libraries to check if my own coding is following community conventions. Do you have any on GitHub?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been looking for some little typescript libraries to check if my own coding is following community conventions. Do you have any on GitHub?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53sk7", "score_hidden": false, "stickied": false, "created": 1491981788.0, "created_utc": 1491952988.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg51tf5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "my_ledge_ends", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "i like it a lot, to the point where i'm writing all my reusable code libraries in typescript. combining it with alexlur's [rollup plugin](https://github.com/alexlur/rollup-plugin-typescript) has made shipping single-file binaries a breeze. i don't have to worry about pulling in the world whenever i want to install my library :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i like it a lot, to the point where i&amp;#39;m writing all my reusable code libraries in typescript. combining it with alexlur&amp;#39;s &lt;a href=\"https://github.com/alexlur/rollup-plugin-typescript\"&gt;rollup plugin&lt;/a&gt; has made shipping single-file binaries a breeze. i don&amp;#39;t have to worry about pulling in the world whenever i want to install my library :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg51tf5", "score_hidden": false, "stickied": false, "created": 1491979154.0, "created_utc": 1491950354.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5n7qt", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "ower89", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "TypeScript is just perfect. You get the JavaScript ecosystem with its millions of open source modules, the JavaScript flexibility, the BEST developer experience, a higher level of productivity and the possibility of refactoring even when not enough unit tests are available. Because let's face it not every organization out there has 100% test coverage...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TypeScript is just perfect. You get the JavaScript ecosystem with its millions of open source modules, the JavaScript flexibility, the BEST developer experience, a higher level of productivity and the possibility of refactoring even when not enough unit tests are available. Because let&amp;#39;s face it not every organization out there has 100% test coverage...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5n7qt", "score_hidden": false, "stickied": false, "created": 1492015088.0, "created_utc": 1491986288.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5a0sz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheIncredibleWalrus", "parent_id": "t1_dg53ty5", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "I prefer to just send electrical signals directly to my CPU. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I prefer to just send electrical signals directly to my CPU. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5a0sz", "score_hidden": false, "stickied": false, "created": 1491989995.0, "created_utc": 1491961195.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53ty5", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "bel9708", "parent_id": "t1_dg4v5yx", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "What's the point of assembly if it just becomes binary. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s the point of assembly if it just becomes binary. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg53ty5", "score_hidden": false, "stickied": false, "created": 1491981838.0, "created_utc": 1491953038.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4v5yx", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "Veuxdo", "parent_id": "t1_dg4un7y", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "&gt; If it compiles down to javascript, why not write it in javascript?\n\nThe same reason we don't write native code in assembly...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;If it compiles down to javascript, why not write it in javascript?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The same reason we don&amp;#39;t write native code in assembly...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4v5yx", "score_hidden": false, "stickied": false, "created": 1491971153.0, "created_utc": 1491942353.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh30", "removal_reason": null, "link_id": "t3_64rgnw", "likes": null, "replies": "", "user_reports": [], "id": "dg5knh3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "_MCCCXXXVII", "parent_id": "t1_dg4un7y", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "If you're writing es6+, react, angular 4, etc you're compiling anyway, so adding types is practically free.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re writing es6+, react, angular 4, etc you&amp;#39;re compiling anyway, so adding types is practically free.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg5knh3", "score_hidden": false, "stickied": false, "created": 1492007829.0, "created_utc": 1491979029.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4un7y", "gilded": 0, "archived": false, "score": -7, "report_reasons": null, "author": "eavichay", "parent_id": "t3_64rgnw", "subreddit_name_prefixed": "r/javascript", "controversiality": 0, "body": "If it compiles down to javascript, why not write it in javascript?\n\nThe whole point of interpreted language is NOT USING A COMPILER. If your code needs \"compilation\" then just remember that the running code, isn't yours. And, There are BUGS in the Typescript compiler that can make you sweat bullets, like using const with chained operators.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If it compiles down to javascript, why not write it in javascript?&lt;/p&gt;\n\n&lt;p&gt;The whole point of interpreted language is NOT USING A COMPILER. If your code needs &amp;quot;compilation&amp;quot; then just remember that the running code, isn&amp;#39;t yours. And, There are BUGS in the Typescript compiler that can make you sweat bullets, like using const with chained operators.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "javascript", "name": "t1_dg4un7y", "score_hidden": false, "stickied": false, "created": 1491970571.0, "created_utc": 1491941771.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -7}}], "after": null, "before": null}}]