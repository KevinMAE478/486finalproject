[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "netsec", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65mwn6", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 300, "report_reasons": null, "author": "prinnyerwin", "saved": false, "mod_reports": [], "name": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "approved_by": null, "over_18": false, "domain": "bridge.grumpy-troll.org", "hidden": false, "thumbnail": "", "subreddit_id": "t5_1rqwi", "author_cakeday": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/netsec/comments/65mwn6/golang_ssh_security/", "num_reports": null, "locked": false, "stickied": false, "created": 1492337976.0, "url": "https://bridge.grumpy-troll.org/2017/04/golang-ssh-security/", "author_flair_text": null, "quarantine": false, "title": "Golang SSH Security", "created_utc": 1492309176.0, "distinguished": null, "media": null, "upvote_ratio": 0.94, "num_comments": 47, "visited": false, "subreddit_type": "public", "ups": 300}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgclguf", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgckq2c", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Good points, thanks for actually responding to my initial questions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good points, thanks for actually responding to my initial questions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgclguf", "score_hidden": false, "stickied": false, "created": 1492406514.0, "created_utc": 1492377714.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgckq2c", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "therico", "parent_id": "t1_dgbnwck", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Because nobody really cares about host key checking.\n\nIt's a flawed system; even though it displays the fingerprint, there is no easy method to check it, so most people will not bother. Even if the fingerprint changes and a warning is issued, the false positive alert rate is high (due to VM rebuilds, changed IP etc.) so people tend to ignore it. For internal connections, it's desirable to ignore host keys because it simplifies configuration (e.g. maintaining a known_hosts file across all hosts for all plausible connections).\n\nI suspect that having strict host key checking on causes more problems (in terms of spuriously failing connections) than the perceived gains (because the threat of an impersonation attack is really small, or because if someone can impersonate an internal IP, you're fucked anyway) so people just don't care about it that much. A similar analogy can be seen with SSL certificate warnings and man in the middle attacks, although awareness/enforcement of SSL security has become a lot stronger in recent years.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Because nobody really cares about host key checking.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s a flawed system; even though it displays the fingerprint, there is no easy method to check it, so most people will not bother. Even if the fingerprint changes and a warning is issued, the false positive alert rate is high (due to VM rebuilds, changed IP etc.) so people tend to ignore it. For internal connections, it&amp;#39;s desirable to ignore host keys because it simplifies configuration (e.g. maintaining a known_hosts file across all hosts for all plausible connections).&lt;/p&gt;\n\n&lt;p&gt;I suspect that having strict host key checking on causes more problems (in terms of spuriously failing connections) than the perceived gains (because the threat of an impersonation attack is really small, or because if someone can impersonate an internal IP, you&amp;#39;re fucked anyway) so people just don&amp;#39;t care about it that much. A similar analogy can be seen with SSL certificate warnings and man in the middle attacks, although awareness/enforcement of SSL security has become a lot stronger in recent years.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgckq2c", "score_hidden": false, "stickied": false, "created": 1492405561.0, "created_utc": 1492376761.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc2jnq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgc1x3h", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Doesn't really apply here though. SSL Key Management is an entirely different beast then the Host Key verification built into SSH, both server and client. Especially because this effects how and where you ship.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doesn&amp;#39;t really apply here though. SSL Key Management is an entirely different beast then the Host Key verification built into SSH, both server and client. Especially because this effects how and where you ship.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc2jnq", "score_hidden": false, "stickied": false, "created": 1492381057.0, "created_utc": 1492352257.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc1x3h", "gilded": 0, "archived": false, "score": 20, "report_reasons": null, "author": "lordcirth", "parent_id": "t1_dgbzkse", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I think he's just talking about the general idea of skipping security to ship on time.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think he&amp;#39;s just talking about the general idea of skipping security to ship on time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc1x3h", "score_hidden": false, "stickied": false, "created": 1492380019.0, "created_utc": 1492351219.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 20}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc1b55", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgbzkse", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Yeah he missed the whole point of this.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah he missed the whole point of this.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc1b55", "score_hidden": false, "stickied": false, "created": 1492378927.0, "created_utc": 1492350127.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dge0ydu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pacotes", "parent_id": "t1_dgdjesh", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "SSH CA's and certs are probably the most underused feature of OpenSSH.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;SSH CA&amp;#39;s and certs are probably the most underused feature of OpenSSH.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge0ydu", "score_hidden": false, "stickied": false, "created": 1492488056.0, "created_utc": 1492459256.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdjesh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PM_UR_ALTFACTS_GURL", "parent_id": "t1_dgbzkse", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I doubt they're using it, but you *can* have [certificate authorities for SSH as well.](https://www.ssh.com/manuals/server-admin/44/Server_Authentication_with_Certificates.html) Whilst that document is for the commercial SSH, a similar process works with OpenSSH for signed host keys as well.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I doubt they&amp;#39;re using it, but you &lt;em&gt;can&lt;/em&gt; have &lt;a href=\"https://www.ssh.com/manuals/server-admin/44/Server_Authentication_with_Certificates.html\"&gt;certificate authorities for SSH as well.&lt;/a&gt; Whilst that document is for the commercial SSH, a similar process works with OpenSSH for signed host keys as well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdjesh", "score_hidden": false, "stickied": false, "created": 1492467946.0, "created_utc": 1492439146.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcd9i1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mvm92", "parent_id": "t1_dgbzkse", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Whoops. Totally missed that. Yeah, I read SSL. My bad", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Whoops. Totally missed that. Yeah, I read SSL. My bad&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcd9i1", "score_hidden": false, "stickied": false, "created": 1492395759.0, "created_utc": 1492366959.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbzkse", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "joffuk", "parent_id": "t1_dgbu1lf", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "You know SSL certs are not SSH keys right?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You know SSL certs are not SSH keys right?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbzkse", "score_hidden": false, "stickied": false, "created": 1492375429.0, "created_utc": 1492346629.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc5sng", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "bluefirecorp", "parent_id": "t1_dgbu1lf", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "https://github.com/google/easypki\n\nGet yourself a proper PKI =)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/google/easypki\"&gt;https://github.com/google/easypki&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Get yourself a proper PKI =)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc5sng", "score_hidden": false, "stickied": false, "created": 1492385862.0, "created_utc": 1492357062.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcc98s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "SnoopyTRB", "parent_id": "t1_dgc59bn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "you people and your \"spelling\"\n\nI'd blame autocorrect but yeah, we all know I just F'd that one up. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;you people and your &amp;quot;spelling&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d blame autocorrect but yeah, we all know I just F&amp;#39;d that one up. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcc98s", "score_hidden": false, "stickied": false, "created": 1492394412.0, "created_utc": 1492365612.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc59bn", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "gschroder", "parent_id": "t1_dgc2idm", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "https://en.m.wiktionary.org/wiki/voil%C3%A0\n\nI do like your spelling, though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.m.wiktionary.org/wiki/voil%C3%A0\"&gt;https://en.m.wiktionary.org/wiki/voil%C3%A0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I do like your spelling, though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc59bn", "score_hidden": false, "stickied": false, "created": 1492385122.0, "created_utc": 1492356322.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc2idm", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "SnoopyTRB", "parent_id": "t1_dgbx6la", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Are we talking about certs still? Because all the browsers support self signed certs permanently. All the big browsers besides Firefox use the computer cert store. All you have to do is install the cert from the site to your computer's cert store and voila, permanent exception. For Firefox you just install it to Firefox's cert store. \n\nEdit: walla to voila", "edited": 1492356980.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are we talking about certs still? Because all the browsers support self signed certs permanently. All the big browsers besides Firefox use the computer cert store. All you have to do is install the cert from the site to your computer&amp;#39;s cert store and voila, permanent exception. For Firefox you just install it to Firefox&amp;#39;s cert store. &lt;/p&gt;\n\n&lt;p&gt;Edit: walla to voila&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc2idm", "score_hidden": false, "stickied": false, "created": 1492381003.0, "created_utc": 1492352203.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc6087", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "nfsnobody", "parent_id": "t1_dgbx6la", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "When did we start talking about browsers? Are we not talking about SSH keys here?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When did we start talking about browsers? Are we not talking about SSH keys here?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc6087", "score_hidden": false, "stickied": false, "created": 1492386149.0, "created_utc": 1492357349.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgbzc7p", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ponkanpinoy", "parent_id": "t1_dgbx6la", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I just did, following the instructions [here](https://devcenter.heroku.com/articles/ssl-certificate-self) to generate and sign the certificate. MacOS FireFox, Preferences -&gt; Advanced -&gt; Certificates -&gt; View Certificates -&gt; Import.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just did, following the instructions &lt;a href=\"https://devcenter.heroku.com/articles/ssl-certificate-self\"&gt;here&lt;/a&gt; to generate and sign the certificate. MacOS FireFox, Preferences -&amp;gt; Advanced -&amp;gt; Certificates -&amp;gt; View Certificates -&amp;gt; Import.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbzc7p", "score_hidden": false, "stickied": false, "created": 1492374860.0, "created_utc": 1492346060.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbx6la", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "lalaland4711", "parent_id": "t1_dgbvhtn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Uh, like which? I've never seen a browser that allows it. Temporarily (e.g. a week) yes, but that's pretty much useless.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Uh, like which? I&amp;#39;ve never seen a browser that allows it. Temporarily (e.g. a week) yes, but that&amp;#39;s pretty much useless.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbx6la", "score_hidden": false, "stickied": false, "created": 1492368724.0, "created_utc": 1492339924.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvhtn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "alphager", "parent_id": "t1_dgbu1lf", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I strongly disagree. You don't need to accept every key. I haven't encountered an implementation that doesn't let you whitelist individual certificates, even if they are self-signed. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I strongly disagree. You don&amp;#39;t need to accept every key. I haven&amp;#39;t encountered an implementation that doesn&amp;#39;t let you whitelist individual certificates, even if they are self-signed. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbvhtn", "score_hidden": false, "stickied": false, "created": 1492362900.0, "created_utc": 1492334100.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbu1lf", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "mvm92", "parent_id": "t1_dgbnwck", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I'll speak to using the insecure settings. When working inside a big company with lots of self signed certs and poor cert management, it's kind of necessary. If we got from Audit the requirement to enable strict checking across the board tomorrow, just about everything would grind to a halt while everyone got their act together. I don't like it, but I have to do it if I want to ship software this decade.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll speak to using the insecure settings. When working inside a big company with lots of self signed certs and poor cert management, it&amp;#39;s kind of necessary. If we got from Audit the requirement to enable strict checking across the board tomorrow, just about everything would grind to a halt while everyone got their act together. I don&amp;#39;t like it, but I have to do it if I want to ship software this decade.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbu1lf", "score_hidden": false, "stickied": false, "created": 1492358183.0, "created_utc": 1492329383.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgdkytz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgdexzy", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "There's also always DNS poisoning. You control someone's internal DNS, you control their world.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s also always DNS poisoning. You control someone&amp;#39;s internal DNS, you control their world.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdkytz", "score_hidden": false, "stickied": false, "created": 1492469967.0, "created_utc": 1492441167.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dge9e18", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nullityrofl", "parent_id": "t1_dgds6un", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Definitely possible. Again, not something I've seen actually reported on or used in an actor report. I'm happy to be proven wrong.\n\nIf you're cache poisoning the DNS server then chances are your access is pervasive enough to collect credentials another, more simple, way. ARP poisoning is common in red team scenarios due to physical access abuse but I'm also yet to see a real world attack that heavily leveraged physical access. \n\nAgain, it's all super possible. Other attack avenues are just infinitely more likely and you're unlikely to be able to defend against *everything*. Especially when a user is going to type 'Yes' and continue on anyway.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Definitely possible. Again, not something I&amp;#39;ve seen actually reported on or used in an actor report. I&amp;#39;m happy to be proven wrong.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re cache poisoning the DNS server then chances are your access is pervasive enough to collect credentials another, more simple, way. ARP poisoning is common in red team scenarios due to physical access abuse but I&amp;#39;m also yet to see a real world attack that heavily leveraged physical access. &lt;/p&gt;\n\n&lt;p&gt;Again, it&amp;#39;s all super possible. Other attack avenues are just infinitely more likely and you&amp;#39;re unlikely to be able to defend against &lt;em&gt;everything&lt;/em&gt;. Especially when a user is going to type &amp;#39;Yes&amp;#39; and continue on anyway.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge9e18", "score_hidden": false, "stickied": false, "created": 1492498155.0, "created_utc": 1492469355.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgds6un", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rationalbit", "parent_id": "t1_dgdexzy", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "How about DNS cache poisoning or ARP spoofing and then hosting a fake SSH server to steal login credentials?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How about DNS cache poisoning or ARP spoofing and then hosting a fake SSH server to steal login credentials?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgds6un", "score_hidden": false, "stickied": false, "created": 1492478225.0, "created_utc": 1492449425.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdexzy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nullityrofl", "parent_id": "t1_dgbnwck", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I think part of the problem is that the ability to exploit skipped host key checking has not been readily demonstrated in a standard attack framework (i.e., Metasploit, etc). It is theoretically possible to intercept a users communications and redirect them to another SSH server, thus failing host key checking, but rather difficult in practicality.\n\nYou could add a pre-route NAT rule on the destination server to redirect them to another host -- but at that point you already have root on a target server, so why do you need to hijack a user session and redirect it to another host?\n\nI can't think of many demonstrable examples where host-key checking prevents a practical (read: not theoretical) attack. It's possible there is a Linux host acting as a router where DNAT can be used to MITM. It's possible someone has gained access to a router or firewall and used NAT/PAT rules to MITM the connection. As far as I am aware this has not been demonstrated in the wild in a report from an AV/DFIR company. It's also not a feature (as far as I am aware) of MITM hardware/software combinations like the LAN Buddy which would be a prime avenue for demonstrating this technique.\n\nI'm not saying it doesn't exist just that until it becomes widely or easily exploitable then implementors are likely to skip over it as a serious issue.", "edited": 1492432670.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think part of the problem is that the ability to exploit skipped host key checking has not been readily demonstrated in a standard attack framework (i.e., Metasploit, etc). It is theoretically possible to intercept a users communications and redirect them to another SSH server, thus failing host key checking, but rather difficult in practicality.&lt;/p&gt;\n\n&lt;p&gt;You could add a pre-route NAT rule on the destination server to redirect them to another host -- but at that point you already have root on a target server, so why do you need to hijack a user session and redirect it to another host?&lt;/p&gt;\n\n&lt;p&gt;I can&amp;#39;t think of many demonstrable examples where host-key checking prevents a practical (read: not theoretical) attack. It&amp;#39;s possible there is a Linux host acting as a router where DNAT can be used to MITM. It&amp;#39;s possible someone has gained access to a router or firewall and used NAT/PAT rules to MITM the connection. As far as I am aware this has not been demonstrated in the wild in a report from an AV/DFIR company. It&amp;#39;s also not a feature (as far as I am aware) of MITM hardware/software combinations like the LAN Buddy which would be a prime avenue for demonstrating this technique.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not saying it doesn&amp;#39;t exist just that until it becomes widely or easily exploitable then implementors are likely to skip over it as a serious issue.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdexzy", "score_hidden": false, "stickied": false, "created": 1492460698.0, "created_utc": 1492431898.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbnwck", "gilded": 0, "archived": false, "score": 42, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Definitely a scary find, and the fact that the writer seems to be the first to bring it to light and start a discussion on it is kind of disconcerting as well. The cynicism of the poll at the end kind of reflects on ourselves as well as the code maintainers in this instance. If this has been the case since the beginning of the API why has no one brought this up until now if people are using these tools he discusses? Is it just the fact no one realized host key checking wasn't going on or was it ambivalence to security on users part as well as the maintainers?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Definitely a scary find, and the fact that the writer seems to be the first to bring it to light and start a discussion on it is kind of disconcerting as well. The cynicism of the poll at the end kind of reflects on ourselves as well as the code maintainers in this instance. If this has been the case since the beginning of the API why has no one brought this up until now if people are using these tools he discusses? Is it just the fact no one realized host key checking wasn&amp;#39;t going on or was it ambivalence to security on users part as well as the maintainers?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbnwck", "score_hidden": false, "stickied": false, "created": 1492344696.0, "created_utc": 1492315896.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 42}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgbsage", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "Boom5Boom", "parent_id": "t1_dgbs88r", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "My bad. It's indeed there. Thank you for correcting me. I should have read more careful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My bad. It&amp;#39;s indeed there. Thank you for correcting me. I should have read more careful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbsage", "score_hidden": false, "stickied": false, "created": 1492353422.0, "created_utc": 1492324622.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbs88r", "gilded": 0, "archived": false, "score": 36, "report_reasons": null, "author": "ICThat", "parent_id": "t1_dgbrxp5", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "It doesn't leave out the name, it just doesn't mention it straight away. It is indeed Hashicorp.\n\nThe founder of Hashicorp replied in the HN thread if you're interested - [link](https://news.ycombinator.com/item?id=14122973)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It doesn&amp;#39;t leave out the name, it just doesn&amp;#39;t mention it straight away. It is indeed Hashicorp.&lt;/p&gt;\n\n&lt;p&gt;The founder of Hashicorp replied in the HN thread if you&amp;#39;re interested - &lt;a href=\"https://news.ycombinator.com/item?id=14122973\"&gt;link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbs88r", "score_hidden": false, "stickied": false, "created": 1492353274.0, "created_utc": 1492324474.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 36}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbrxp5", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "Boom5Boom", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "A bit irresponsible that you left out the vendor's name. The whole point of you going public with this is to inform people so that they're more aware of this issue so they can decide which actions to take.\n\nHaving that said, I kinda sorta think it's HashiCorp.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A bit irresponsible that you left out the vendor&amp;#39;s name. The whole point of you going public with this is to inform people so that they&amp;#39;re more aware of this issue so they can decide which actions to take.&lt;/p&gt;\n\n&lt;p&gt;Having that said, I kinda sorta think it&amp;#39;s HashiCorp.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbrxp5", "score_hidden": false, "stickied": false, "created": 1492352569.0, "created_utc": 1492323769.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc6ptn", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "warbiscuit", "parent_id": "t1_dgc3bvp", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "I think the important part of the CVE was that it's not doing host verification *at all*.\n\nThe fact that \"out of band\" verification provides better security than  \"trust on first use\" is an import one; but I think not *quite* in the same ballpark.  \n\nIf my \"trust on first use\" is performed when connecting over a secure LAN, and I subsequently connect from a coffeehouse somewhere... I should be able to expect the verification guarantee is still as good as that first connection. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think the important part of the CVE was that it&amp;#39;s not doing host verification &lt;em&gt;at all&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;The fact that &amp;quot;out of band&amp;quot; verification provides better security than  &amp;quot;trust on first use&amp;quot; is an import one; but I think not &lt;em&gt;quite&lt;/em&gt; in the same ballpark.  &lt;/p&gt;\n\n&lt;p&gt;If my &amp;quot;trust on first use&amp;quot; is performed when connecting over a secure LAN, and I subsequently connect from a coffeehouse somewhere... I should be able to expect the verification guarantee is still as good as that first connection. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc6ptn", "score_hidden": false, "stickied": false, "created": 1492387111.0, "created_utc": 1492358311.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc3syz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgc3bvp", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Lol RIP me and my explanation", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lol RIP me and my explanation&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc3syz", "score_hidden": false, "stickied": false, "created": 1492383007.0, "created_utc": 1492354207.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc3bvp", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "count757", "parent_id": "t1_dgc363i", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "It is, ironically, the important part that was the source of the CVE :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is, ironically, the important part that was the source of the CVE :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc3bvp", "score_hidden": false, "stickied": false, "created": 1492382273.0, "created_utc": 1492353473.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc363i", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgc2ztw", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Fair enough, I wanted to keep it eli5 as they asked for but that is an important piece and kind of glazed over it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fair enough, I wanted to keep it eli5 as they asked for but that is an important piece and kind of glazed over it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc363i", "score_hidden": false, "stickied": false, "created": 1492382025.0, "created_utc": 1492353225.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc2ztw", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "count757", "parent_id": "t1_dgbouul", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "You forgot the import part where *when you set the server up the first time* it generates a key pair and provides you the fingerprint.  You're not supposed to just accept that first one: you're supposed to verify it against the known fingerprint from setup!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You forgot the import part where &lt;em&gt;when you set the server up the first time&lt;/em&gt; it generates a key pair and provides you the fingerprint.  You&amp;#39;re not supposed to just accept that first one: you&amp;#39;re supposed to verify it against the known fingerprint from setup!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc2ztw", "score_hidden": false, "stickied": false, "created": 1492381756.0, "created_utc": 1492352956.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgc2lew", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgc1vzh", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Good catch", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good catch&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc2lew", "score_hidden": false, "stickied": false, "created": 1492381136.0, "created_utc": 1492352336.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc1vzh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "lordcirth", "parent_id": "t1_dgbouul", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "s/promoted/prompted/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;s/promoted/prompted/&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc1vzh", "score_hidden": false, "stickied": false, "created": 1492379964.0, "created_utc": 1492351164.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbouul", "gilded": 0, "archived": false, "score": 44, "report_reasons": null, "author": "hubCAPPS", "parent_id": "t1_dgboebc", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "For typical SSH, When you SSH to a host for the first time, it says something along the lines of \"Hey, I'm the server, here's my unique id, save me.\" You're then prompted to type yes or no.\n\nIf you type yes, it saves the unique id to your .Ssh/known_hosts file and everytime after you SSH to the server there after, if the id doesn't match the server you're attempting to connect to, it fails and ends the connection immediately.\n\nThis is Host Key verification, and protects you from connecting to a server pretending to be the server you really want to connect to.\n\nThis piece is basically saying that most people using the GOLANG SSH API library aren't actually checking for verified host keys, which can be pretty dangerous if you're using these DevOps tools mentioned in the article to say deploy your source code of your businesses application to an EC2 instance or something over open internet.\n\nEdit: a word", "edited": 1492352358.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For typical SSH, When you SSH to a host for the first time, it says something along the lines of &amp;quot;Hey, I&amp;#39;m the server, here&amp;#39;s my unique id, save me.&amp;quot; You&amp;#39;re then prompted to type yes or no.&lt;/p&gt;\n\n&lt;p&gt;If you type yes, it saves the unique id to your .Ssh/known_hosts file and everytime after you SSH to the server there after, if the id doesn&amp;#39;t match the server you&amp;#39;re attempting to connect to, it fails and ends the connection immediately.&lt;/p&gt;\n\n&lt;p&gt;This is Host Key verification, and protects you from connecting to a server pretending to be the server you really want to connect to.&lt;/p&gt;\n\n&lt;p&gt;This piece is basically saying that most people using the GOLANG SSH API library aren&amp;#39;t actually checking for verified host keys, which can be pretty dangerous if you&amp;#39;re using these DevOps tools mentioned in the article to say deploy your source code of your businesses application to an EC2 instance or something over open internet.&lt;/p&gt;\n\n&lt;p&gt;Edit: a word&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgbouul", "score_hidden": false, "stickied": false, "created": 1492346345.0, "created_utc": 1492317545.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 44}}], "after": null, "before": null}}, "user_reports": [], "id": "dgboebc", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Arrogant_Anaconda", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Eli5?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Eli5?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgboebc", "score_hidden": false, "stickied": false, "created": 1492345553.0, "created_utc": 1492316753.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcx1og", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Ryan_Jarv", "parent_id": "t1_dgcw0io", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Yeah that's a good point, probably would be the main way MITM pub auth could be abused. Although it's not really related to ssh-agent running, you have to explicitly enable SSH forwarding for that which is a risk regardless. I would be surprised if ssh forwarding is enabled anywhere by default, It is pretty useful and a lot of people have it turned on though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah that&amp;#39;s a good point, probably would be the main way MITM pub auth could be abused. Although it&amp;#39;s not really related to ssh-agent running, you have to explicitly enable SSH forwarding for that which is a risk regardless. I would be surprised if ssh forwarding is enabled anywhere by default, It is pretty useful and a lot of people have it turned on though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcx1og", "score_hidden": false, "stickied": false, "created": 1492422040.0, "created_utc": 1492393240.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcw0io", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Kagee", "parent_id": "t1_dgcl9zt", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "The golang commit message has a example of how this can be used against public key auth for users that also have an ssh-agent running. I belive at least Ubuntu has it running as default. Quote: \"Clients that use public-key authentication with agent forwarding are also vulnerable: the MITM server could allow the login to succeed, and then immediately ask the agent to authenticate the login to the real server.\"\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The golang commit message has a example of how this can be used against public key auth for users that also have an ssh-agent running. I belive at least Ubuntu has it running as default. Quote: &amp;quot;Clients that use public-key authentication with agent forwarding are also vulnerable: the MITM server could allow the login to succeed, and then immediately ask the agent to authenticate the login to the real server.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcw0io", "score_hidden": false, "stickied": false, "created": 1492420700.0, "created_utc": 1492391900.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcl9zt", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Ryan_Jarv", "parent_id": "t1_dgchcn4", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; This allows anyone in between you and a destination SSH server to impersonate that server to you.\n\nRight my point is the issue is limited to this.\n\n&gt; It does not allow you to read an already-established connection, but that doesn't matter if you can just intercept connections as they occur.\n\nThe intercepting server can impersonate the login but the main advantage here with pub key auth is they can't use anything sent over the wire to then login to the real server. The attacker can sit there and wait for you to send a password.. but assuming you don't they can't do much.\n\nThe reason I started looking into this originally is because it seems (at least when I last checked) there are no PoC's for this attack that support pub auth.\n\nEdit: iirc this comes down to a shared random number that Diffie Hellman uses that neither the server or client can control. I know that's not a good explanation.. but would have to dig into it again to remember what is exactly happening there.\n\nEdit2: http://www.gremwell.com/ssh-mitm-public-key-authentication", "edited": 1492378123.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;This allows anyone in between you and a destination SSH server to impersonate that server to you.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Right my point is the issue is limited to this.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;It does not allow you to read an already-established connection, but that doesn&amp;#39;t matter if you can just intercept connections as they occur.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The intercepting server can impersonate the login but the main advantage here with pub key auth is they can&amp;#39;t use anything sent over the wire to then login to the real server. The attacker can sit there and wait for you to send a password.. but assuming you don&amp;#39;t they can&amp;#39;t do much.&lt;/p&gt;\n\n&lt;p&gt;The reason I started looking into this originally is because it seems (at least when I last checked) there are no PoC&amp;#39;s for this attack that support pub auth.&lt;/p&gt;\n\n&lt;p&gt;Edit: iirc this comes down to a shared random number that Diffie Hellman uses that neither the server or client can control. I know that&amp;#39;s not a good explanation.. but would have to dig into it again to remember what is exactly happening there.&lt;/p&gt;\n\n&lt;p&gt;Edit2: &lt;a href=\"http://www.gremwell.com/ssh-mitm-public-key-authentication\"&gt;http://www.gremwell.com/ssh-mitm-public-key-authentication&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcl9zt", "score_hidden": false, "stickied": false, "created": 1492406274.0, "created_utc": 1492377474.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgchcn4", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "stouset", "parent_id": "t1_dgcgpdw", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Your understanding is wrong. This allows anyone in between you and a destination SSH server to impersonate that server to you. It does not allow you to read an already-established connection, but that doesn't matter if you can just intercept connections as they occur. \n\nUsing public key with doesn't help you here \u2014 that's how the server verifies that you are who you say you are. The issue here is golang not verifying that the *server* is who it says it is.\n\nEncryption of secret data is pointless if you negotiate that encrypted channel with anyone who asks. ", "edited": 1492372617.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your understanding is wrong. This allows anyone in between you and a destination SSH server to impersonate that server to you. It does not allow you to read an already-established connection, but that doesn&amp;#39;t matter if you can just intercept connections as they occur. &lt;/p&gt;\n\n&lt;p&gt;Using public key with doesn&amp;#39;t help you here \u2014 that&amp;#39;s how the server verifies that you are who you say you are. The issue here is golang not verifying that the &lt;em&gt;server&lt;/em&gt; is who it says it is.&lt;/p&gt;\n\n&lt;p&gt;Encryption of secret data is pointless if you negotiate that encrypted channel with anyone who asks. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgchcn4", "score_hidden": false, "stickied": false, "created": 1492401183.0, "created_utc": 1492372383.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcgpdw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Ryan_Jarv", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Don't want to detract from the point here since I agree that strict checking should be default.\n\nSo somewhat related, last time I looked into it it seemed that this is less of an issue if you are using public key auth. As far as I understand an attacker can impersonate a target but can't MITM a connection to the end target due to how the Diffie Hellman key exchange works. The issue comes in when you enter passwords or other sensitive data over the tunnel (like for normal password auth).\n\nBut would actually be curious if any one here that knows more then me could confirm this or not.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t want to detract from the point here since I agree that strict checking should be default.&lt;/p&gt;\n\n&lt;p&gt;So somewhat related, last time I looked into it it seemed that this is less of an issue if you are using public key auth. As far as I understand an attacker can impersonate a target but can&amp;#39;t MITM a connection to the end target due to how the Diffie Hellman key exchange works. The issue comes in when you enter passwords or other sensitive data over the tunnel (like for normal password auth).&lt;/p&gt;\n\n&lt;p&gt;But would actually be curious if any one here that knows more then me could confirm this or not.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcgpdw", "score_hidden": false, "stickied": false, "created": 1492400337.0, "created_utc": 1492371537.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcne93", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "crypticgeek", "parent_id": "t1_dgcn89a", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "This sounds like a perfect confession bear meme. I post insecure code answers to stack overflow. That way I can always have a job in infosec. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like a perfect confession bear meme. I post insecure code answers to stack overflow. That way I can always have a job in infosec. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcne93", "score_hidden": false, "stickied": false, "created": 1492409055.0, "created_utc": 1492380255.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcqtbo", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "UncleMeat11", "parent_id": "t1_dgcn89a", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Its not just android apps that have this problem. Papers have found this stuff *everywhere*. Pretty much its just the major browsers that actually implement the spec correctly.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its not just android apps that have this problem. Papers have found this stuff &lt;em&gt;everywhere&lt;/em&gt;. Pretty much its just the major browsers that actually implement the spec correctly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcqtbo", "score_hidden": false, "stickied": false, "created": 1492413734.0, "created_utc": 1492384934.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcn89a", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "helloinvader", "parent_id": "t1_dgcc2ve", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Similar problem that is particularly common in Java Android apps, funnily enough the problem can almost always be traced back to one wrong StackOverflow answer", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Similar problem that is particularly common in Java Android apps, funnily enough the problem can almost always be traced back to one wrong StackOverflow answer&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcn89a", "score_hidden": false, "stickied": false, "created": 1492408844.0, "created_utc": 1492380044.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcc2ve", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "crypticgeek", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Not all that surprisingly honestly. You also see this kind of shitty behavior all the time in code that should validate an SSL certificate chain and either fails to do so or does so incorrectly.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not all that surprisingly honestly. You also see this kind of shitty behavior all the time in code that should validate an SSL certificate chain and either fails to do so or does so incorrectly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcc2ve", "score_hidden": false, "stickied": false, "created": 1492394178.0, "created_utc": 1492365378.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65mwn6", "likes": null, "replies": "", "user_reports": [], "id": "dgcozyf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "aris_ada", "parent_id": "t1_dgcj0ah", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Thanks for clarifying this out.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for clarifying this out.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcozyf", "score_hidden": false, "stickied": false, "created": 1492411221.0, "created_utc": 1492382421.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcj0ah", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "syscomet", "parent_id": "t1_dgc3f7l", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Post author here: the library devs never left out verification, they just didn't provide a default method.  It was always documented as something which apps using the library should set.  In other fora discussing the post, people have pointed to libraries in languages which don't **let** you set **any** host-key verification at all.\n\nIt turns out, most people using the library weren't using it right.  So the library maintainers changed it so that you must make a conscious decision and mark it in your code, instead of defaulting to YOLO security.\n\nThe rest of the library is very clean and reasonable.  The Golang crypto code in general is readable, understandable and some of the nicest I've seen.\n\nThat said, a helper function which fully and correctly handles OpenSSH's cache, `~/.ssh/known_hosts`, would not go amiss.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Post author here: the library devs never left out verification, they just didn&amp;#39;t provide a default method.  It was always documented as something which apps using the library should set.  In other fora discussing the post, people have pointed to libraries in languages which don&amp;#39;t &lt;strong&gt;let&lt;/strong&gt; you set &lt;strong&gt;any&lt;/strong&gt; host-key verification at all.&lt;/p&gt;\n\n&lt;p&gt;It turns out, most people using the library weren&amp;#39;t using it right.  So the library maintainers changed it so that you must make a conscious decision and mark it in your code, instead of defaulting to YOLO security.&lt;/p&gt;\n\n&lt;p&gt;The rest of the library is very clean and reasonable.  The Golang crypto code in general is readable, understandable and some of the nicest I&amp;#39;ve seen.&lt;/p&gt;\n\n&lt;p&gt;That said, a helper function which fully and correctly handles OpenSSH&amp;#39;s cache, &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;, would not go amiss.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgcj0ah", "score_hidden": false, "stickied": false, "created": 1492403309.0, "created_utc": 1492374509.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc3f7l", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "aris_ada", "parent_id": "t3_65mwn6", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "The fundation of SSH is cryptography. If the devs let such an important security parameter out (because they didn't care), what do you think the remaining of the lib looks like? Even the first release of libssh 14 years ago had this feature.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The fundation of SSH is cryptography. If the devs let such an important security parameter out (because they didn&amp;#39;t care), what do you think the remaining of the lib looks like? Even the first release of libssh 14 years ago had this feature.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgc3f7l", "score_hidden": false, "stickied": false, "created": 1492382416.0, "created_utc": 1492353616.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]