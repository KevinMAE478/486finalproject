[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "netsec", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ucsn", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 266, "report_reasons": null, "author": "reddit_read_today", "saved": false, "mod_reports": [], "name": "t3_65ucsn", "subreddit_name_prefixed": "r/netsec", "approved_by": null, "over_18": false, "domain": "mov.sx", "hidden": false, "thumbnail": "", "subreddit_id": "t5_1rqwi", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/netsec/comments/65ucsn/attacking_microsoft_edge_to_identify_users_by/", "num_reports": null, "locked": false, "stickied": false, "created": 1492445973.0, "url": "http://mov.sx/2017/04/16/microsoft-edge-leaks-url.html", "author_flair_text": null, "quarantine": false, "title": "Attacking Microsoft Edge to identify users by leaking URLs from Fetch requests", "created_utc": 1492417173.0, "distinguished": null, "media": null, "upvote_ratio": 0.93, "num_comments": 19, "visited": false, "subreddit_type": "public", "ups": 266}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgdnqou", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "Sam-Gunn", "parent_id": "t1_dgdef1h", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "HOW DO YOU KNOW WHO I AM?! /s", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;HOW DO YOU KNOW WHO I AM?! /s&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdnqou", "score_hidden": false, "stickied": false, "created": 1492473247.0, "created_utc": 1492444447.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdef1h", "gilded": 0, "archived": false, "score": 38, "report_reasons": null, "author": "lunboks", "parent_id": "t3_65ucsn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "This can also be used to determine your reddit username, by the way.\n\n/u/me", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This can also be used to determine your reddit username, by the way.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/u/me\"&gt;/u/me&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdef1h", "score_hidden": false, "stickied": false, "created": 1492459593.0, "created_utc": 1492430793.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 38}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgdkozf", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "indrora", "parent_id": "t1_dgdd0pj", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "It's now [in their bug tracker](https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11684657/).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s now &lt;a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11684657/\"&gt;in their bug tracker&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdkozf", "score_hidden": false, "stickied": false, "created": 1492469627.0, "created_utc": 1492440827.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgdogxk", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Sam-Gunn", "parent_id": "t1_dgdfexf", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Not to be too blunt, but what makes you think that? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not to be too blunt, but what makes you think that? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdogxk", "score_hidden": false, "stickied": false, "created": 1492474082.0, "created_utc": 1492445282.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdfexf", "gilded": 0, "archived": false, "score": -19, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgdd0pj", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "[removed]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdfexf", "score_hidden": false, "stickied": false, "created": 1492461620.0, "created_utc": 1492432820.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -19}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdd0pj", "gilded": 0, "archived": false, "score": 18, "report_reasons": null, "author": "big-blue", "parent_id": "t3_65ucsn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Interesting that MS does not consider this to be an issue, although it clearly violates the specification. While I don't think this has high severity as a security issue, this definitely should be fixed and that actually shouldn't be too hard to do.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting that MS does not consider this to be an issue, although it clearly violates the specification. While I don&amp;#39;t think this has high severity as a security issue, this definitely should be fixed and that actually shouldn&amp;#39;t be too hard to do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdd0pj", "score_hidden": false, "stickied": false, "created": 1492456122.0, "created_utc": 1492427322.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 18}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgeb4wv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "indrora", "parent_id": "t1_dge8k16", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Huh, I stand corrected. I just tested and my understanding was old. TIL.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Huh, I stand corrected. I just tested and my understanding was old. TIL.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgeb4wv", "score_hidden": false, "stickied": false, "created": 1492500447.0, "created_utc": 1492471647.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dge8k16", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "iq8", "parent_id": "t1_dgdm775", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Maybe on edge but on chrome and firefox you dont get the url AFTER redirect.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe on edge but on chrome and firefox you dont get the url AFTER redirect.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge8k16", "score_hidden": false, "stickied": false, "created": 1492497061.0, "created_utc": 1492468261.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgebcnw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "indrora", "parent_id": "t1_dge99qa", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; I don't think so. If you make an img tag pointing to https://www.reddit.com/u/me for example (which would get redirected to your own user page), and then extract the URL on the image using either currentSrc or src in JavaScript, it will give you the pre-redirect URL.\n\nYeah, I stand corrected on that front. \n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I don&amp;#39;t think so. If you make an img tag pointing to &lt;a href=\"https://www.reddit.com/u/me\"&gt;https://www.reddit.com/u/me&lt;/a&gt; for example (which would get redirected to your own user page), and then extract the URL on the image using either currentSrc or src in JavaScript, it will give you the pre-redirect URL.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yeah, I stand corrected on that front. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgebcnw", "score_hidden": false, "stickied": false, "created": 1492500728.0, "created_utc": 1492471928.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dged6vf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "already_have_account", "parent_id": "t1_dge99qa", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; What are the reasons you are thinking of? \n\nCross-site request forgery maybe?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;What are the reasons you are thinking of? &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Cross-site request forgery maybe?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dged6vf", "score_hidden": false, "stickied": false, "created": 1492503081.0, "created_utc": 1492474281.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dge99qa", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "y-c-c", "parent_id": "t1_dgdm775", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; **Is the Fetch spec broken?** Why the fuck does no-cors exist?\n\nIt exists exactly because you can already do the `img` tag trick as an attack. You can make a new image or JavaScript source tag that points to an external unrelated website and the browser will load it, for various legacy reasons. The (big) saving grace is you won't be able to read the results from them (including redirects) unless you have CORS permissions to do so.\n\n&gt; From what I understand, IMG tags. As long as you can keep https, you can get the real url for the \"image\".\n\nI don't think so. If you make an `img` tag pointing to https://www.reddit.com/u/me for example (which would get redirected to your own user page), and then extract the URL on the image using either `currentSrc` or `src` in JavaScript, it will give you the pre-redirect URL. You shouldn't be able to find out what it redirects to even though the browser does make the redirected requests.\n\n&gt; **Are URIs considered sensitive?** Not by most folks, no. We've long said \"don't put the sensitive stuff in a URI\" but few people listen.\n\nWhat are the reasons you are thinking of? The main ones I can think of are that the browser may cache the URL in the history and/or send to the server (e.g. Chrome's search suggestion features). Semi-sensitive URLs are definitely used all over the place though, e.g. YouTube private videos, Google Drive shared document (you can just share a secret URL).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Is the Fetch spec broken?&lt;/strong&gt; Why the fuck does no-cors exist?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It exists exactly because you can already do the &lt;code&gt;img&lt;/code&gt; tag trick as an attack. You can make a new image or JavaScript source tag that points to an external unrelated website and the browser will load it, for various legacy reasons. The (big) saving grace is you won&amp;#39;t be able to read the results from them (including redirects) unless you have CORS permissions to do so.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;From what I understand, IMG tags. As long as you can keep https, you can get the real url for the &amp;quot;image&amp;quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&amp;#39;t think so. If you make an &lt;code&gt;img&lt;/code&gt; tag pointing to &lt;a href=\"https://www.reddit.com/u/me\"&gt;https://www.reddit.com/u/me&lt;/a&gt; for example (which would get redirected to your own user page), and then extract the URL on the image using either &lt;code&gt;currentSrc&lt;/code&gt; or &lt;code&gt;src&lt;/code&gt; in JavaScript, it will give you the pre-redirect URL. You shouldn&amp;#39;t be able to find out what it redirects to even though the browser does make the redirected requests.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Are URIs considered sensitive?&lt;/strong&gt; Not by most folks, no. We&amp;#39;ve long said &amp;quot;don&amp;#39;t put the sensitive stuff in a URI&amp;quot; but few people listen.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;What are the reasons you are thinking of? The main ones I can think of are that the browser may cache the URL in the history and/or send to the server (e.g. Chrome&amp;#39;s search suggestion features). Semi-sensitive URLs are definitely used all over the place though, e.g. YouTube private videos, Google Drive shared document (you can just share a secret URL).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge99qa", "score_hidden": false, "stickied": false, "created": 1492497996.0, "created_utc": 1492469196.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dge0d2v", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "npoole", "parent_id": "t1_dgdm775", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Interesting! Via JS or some other mechanism?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting! Via JS or some other mechanism?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge0d2v", "score_hidden": false, "stickied": false, "created": 1492487389.0, "created_utc": 1492458589.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdm775", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "indrora", "parent_id": "t1_dgdlug8", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "From what I understand, IMG tags. As long as you can keep https, you can get the real url for the \"image\".", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From what I understand, IMG tags. As long as you can keep https, you can get the real url for the &amp;quot;image&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdm775", "score_hidden": false, "stickied": false, "created": 1492471468.0, "created_utc": 1492442668.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdlug8", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "reddit_read_today", "parent_id": "t1_dgdjf7p", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Wow, thanks for the detailed clarification.\n\nCould you elaborate on the other means to get the same information though?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, thanks for the detailed clarification.&lt;/p&gt;\n\n&lt;p&gt;Could you elaborate on the other means to get the same information though?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdlug8", "score_hidden": false, "stickied": false, "created": 1492471049.0, "created_utc": 1492442249.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgeb7f1", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "indrora", "parent_id": "t1_dge8j4b", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; The bug described in the article is a valid bug for both firefox and chrome, microsoft even said they will fix it but it doesnt deserve a bug bounty.\n\nI just tested on Chrome and the behavior is that Opaque requests have no URL value, whereas in Edge they do.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;The bug described in the article is a valid bug for both firefox and chrome, microsoft even said they will fix it but it doesnt deserve a bug bounty.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I just tested on Chrome and the behavior is that Opaque requests have no URL value, whereas in Edge they do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgeb7f1", "score_hidden": false, "stickied": false, "created": 1492500538.0, "created_utc": 1492471738.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dge8j4b", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "iq8", "parent_id": "t1_dgdjf7p", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "&gt; Is it a security problem? Eh, probably? On the other hand, it's not hard to get that information via other means.\n\nI call bullshit on that. The bug described in the article is a valid bug for both firefox and chrome, microsoft even said they will fix it but it doesnt deserve a bug bounty.\n\nEDIT: also any response code 3xx IS technically a redirect. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Is it a security problem? Eh, probably? On the other hand, it&amp;#39;s not hard to get that information via other means.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I call bullshit on that. The bug described in the article is a valid bug for both firefox and chrome, microsoft even said they will fix it but it doesnt deserve a bug bounty.&lt;/p&gt;\n\n&lt;p&gt;EDIT: also any response code 3xx IS technically a redirect. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dge8j4b", "score_hidden": false, "stickied": false, "created": 1492497026.0, "created_utc": 1492468226.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgeekiv", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mouth_with_a_merc", "parent_id": "t1_dgdjf7p", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "wait... FB uses 301 to redirect `/me` to the current user?! that seems very wrong considering that browsers cache it even after you log out from the site...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;wait... FB uses 301 to redirect &lt;code&gt;/me&lt;/code&gt; to the current user?! that seems very wrong considering that browsers cache it even after you log out from the site...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgeekiv", "score_hidden": false, "stickied": false, "created": 1492504813.0, "created_utc": 1492476013.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdjf7p", "gilded": 0, "archived": false, "score": 29, "report_reasons": null, "author": "indrora", "parent_id": "t3_65ucsn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Reading through the spec, it's *really* hard to know when you should return an opaque response. What it looks like is [here](https://fetch.spec.whatwg.org/#main-fetch) is where it's described. \n\nIt looks like someone misread it and what should be an `opaque` response was made into an `opaque-filtered` response. What's the difference? `opaque-filtered` responses have the URL, but *before* any redirects are resolved. The problem here is it doesn't define how redirects are defined. \n\nfacebook, etc. use \"moved permanently\", not \"temporary redirect\". Technically, 301 (moved permanently) is not a redirect: It's a note from the server to the user-agent that the requested object (say, `/me`) lives at another location (`/profile/wangjangler69`). The spec is ambiguous about body content, but 10.3.2 of the HTTP/1.1 spec reads:\n\n&gt; The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs\n\nThis means that the UA should just slap what it was handed back in, re-run the request and off it goes. Hell, the UA doesn't even need to actually re-run the request: It's possibly okay for the UA to take whatever the server responded with in the body as the content to be displayed. \n\n307 (temporary redirect) on the other hand is a totally different beast. The spec (10.3.8) says\n\n&gt; The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field. \n\nWhich means the UA is going to go \"oh, well *darn*, I need to go further down this rabbit hole\" and request again using the new URI. The major difference between 301 and 307 is that 301 says \"there is a hard connection between the *requested URI* and the *actual* URI\" whereas 307 says \"The requested URI is understood, and is a placeholder for the *current* URI that is represented by the *original* URI\".\n\nWhy do Facebook, etc. use the 301 redirect? Well, it turns out they're *following the HTTP/1.1 spec*! These hard locations (`/me`, `/profile`, etc) are considered hard URIs that have, for a specific set of cases and for the user agent specifically, a hard connection to their longer counterparts. They may be used in place of those hard counterparts and vice-versa. \n\nSo:\n\n* **Is the Fetch spec broken?** Why the fuck does `no-cors` exist?\n* **Did someone misread the Fetch spec?** Probably.\n* **Is HTTP/1.1 (RFC 2616) a steaming pile?** Kinda. It does say that the 3xx series are considered *redirects*, but the 301 case is a little awkward as to how UAs should interpret that.\n* **Should it be fixed?** Certainly, it's a violation of the spec. So I [logged it in the public bug tracker](https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11684657/), like a reasonable human.\n* **Is it a security problem?** Eh, probably? On the other hand, it's not hard to get that information via other means.\n* **Are URIs considered sensitive?** Not by most folks, no. We've long said \"don't put the sensitive stuff in a URI\" but few people listen. ", "edited": 1492440780.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Reading through the spec, it&amp;#39;s &lt;em&gt;really&lt;/em&gt; hard to know when you should return an opaque response. What it looks like is &lt;a href=\"https://fetch.spec.whatwg.org/#main-fetch\"&gt;here&lt;/a&gt; is where it&amp;#39;s described. &lt;/p&gt;\n\n&lt;p&gt;It looks like someone misread it and what should be an &lt;code&gt;opaque&lt;/code&gt; response was made into an &lt;code&gt;opaque-filtered&lt;/code&gt; response. What&amp;#39;s the difference? &lt;code&gt;opaque-filtered&lt;/code&gt; responses have the URL, but &lt;em&gt;before&lt;/em&gt; any redirects are resolved. The problem here is it doesn&amp;#39;t define how redirects are defined. &lt;/p&gt;\n\n&lt;p&gt;facebook, etc. use &amp;quot;moved permanently&amp;quot;, not &amp;quot;temporary redirect&amp;quot;. Technically, 301 (moved permanently) is not a redirect: It&amp;#39;s a note from the server to the user-agent that the requested object (say, &lt;code&gt;/me&lt;/code&gt;) lives at another location (&lt;code&gt;/profile/wangjangler69&lt;/code&gt;). The spec is ambiguous about body content, but 10.3.2 of the HTTP/1.1 spec reads:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This means that the UA should just slap what it was handed back in, re-run the request and off it goes. Hell, the UA doesn&amp;#39;t even need to actually re-run the request: It&amp;#39;s possibly okay for the UA to take whatever the server responded with in the body as the content to be displayed. &lt;/p&gt;\n\n&lt;p&gt;307 (temporary redirect) on the other hand is a totally different beast. The spec (10.3.8) says&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Which means the UA is going to go &amp;quot;oh, well &lt;em&gt;darn&lt;/em&gt;, I need to go further down this rabbit hole&amp;quot; and request again using the new URI. The major difference between 301 and 307 is that 301 says &amp;quot;there is a hard connection between the &lt;em&gt;requested URI&lt;/em&gt; and the &lt;em&gt;actual&lt;/em&gt; URI&amp;quot; whereas 307 says &amp;quot;The requested URI is understood, and is a placeholder for the &lt;em&gt;current&lt;/em&gt; URI that is represented by the &lt;em&gt;original&lt;/em&gt; URI&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Why do Facebook, etc. use the 301 redirect? Well, it turns out they&amp;#39;re &lt;em&gt;following the HTTP/1.1 spec&lt;/em&gt;! These hard locations (&lt;code&gt;/me&lt;/code&gt;, &lt;code&gt;/profile&lt;/code&gt;, etc) are considered hard URIs that have, for a specific set of cases and for the user agent specifically, a hard connection to their longer counterparts. They may be used in place of those hard counterparts and vice-versa. &lt;/p&gt;\n\n&lt;p&gt;So:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Is the Fetch spec broken?&lt;/strong&gt; Why the fuck does &lt;code&gt;no-cors&lt;/code&gt; exist?&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Did someone misread the Fetch spec?&lt;/strong&gt; Probably.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Is HTTP/1.1 (RFC 2616) a steaming pile?&lt;/strong&gt; Kinda. It does say that the 3xx series are considered &lt;em&gt;redirects&lt;/em&gt;, but the 301 case is a little awkward as to how UAs should interpret that.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Should it be fixed?&lt;/strong&gt; Certainly, it&amp;#39;s a violation of the spec. So I &lt;a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11684657/\"&gt;logged it in the public bug tracker&lt;/a&gt;, like a reasonable human.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Is it a security problem?&lt;/strong&gt; Eh, probably? On the other hand, it&amp;#39;s not hard to get that information via other means.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Are URIs considered sensitive?&lt;/strong&gt; Not by most folks, no. We&amp;#39;ve long said &amp;quot;don&amp;#39;t put the sensitive stuff in a URI&amp;quot; but few people listen. &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgdjf7p", "score_hidden": false, "stickied": false, "created": 1492467961.0, "created_utc": 1492439161.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 29}}, {"kind": "t1", "data": {"subreddit_id": "t5_1rqwi", "removal_reason": null, "link_id": "t3_65ucsn", "likes": null, "replies": "", "user_reports": [], "id": "dgebkgz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Unkn0wn77777771", "parent_id": "t3_65ucsn", "subreddit_name_prefixed": "r/netsec", "controversiality": 0, "body": "Now only if someone would use edge......", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Now only if someone would use edge......&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "netsec", "name": "t1_dgebkgz", "score_hidden": false, "stickied": false, "created": 1492501004.0, "created_utc": 1492472204.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]