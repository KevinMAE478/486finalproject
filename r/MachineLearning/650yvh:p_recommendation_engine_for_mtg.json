[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "MachineLearning", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve done a little dabbling with ML for neural networks in a supervised learning scenario, but I&amp;#39;ve finally decided on a personal project to pursue and was looking for advice.  I want to build a recommendation engine for Magic the Gathering cards:  If I pick a color, ability, or even a card, I want to see cards that it associates with those cards as useful counter parts that are synergistic.  I&amp;#39;m thinking this would be an unsupervised situation, I basically want to use the full database of cards as my data to train on.  In theory I could pull from deck building sites for more supervised data, showing cards that others have decided work well, I&amp;#39;m not opposed to that, I&amp;#39;m still very early in the planning phases.  For anyone with mtg experience, my goal is to build this around the Commander/EDH format, as that&amp;#39;s what I play most, so I can pretty much utilize the entirety of the MTG database of cards.&lt;br/&gt;\nI&amp;#39;m not sure off hand what approach I should take (ensembles, neural networks, SVM, etc) and I was hoping people might have some ideas on what might be a logical starting place for that.  I&amp;#39;ve considered going the recommendation engine route along with using external built deck data from various sites as my training data, which might be better than trying to just do the unsupervised approach of feeding it all of the cards as a data source.  So any advice would be greatly appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've done a little dabbling with ML for neural networks in a supervised learning scenario, but I've finally decided on a personal project to pursue and was looking for advice.  I want to build a recommendation engine for Magic the Gathering cards:  If I pick a color, ability, or even a card, I want to see cards that it associates with those cards as useful counter parts that are synergistic.  I'm thinking this would be an unsupervised situation, I basically want to use the full database of cards as my data to train on.  In theory I could pull from deck building sites for more supervised data, showing cards that others have decided work well, I'm not opposed to that, I'm still very early in the planning phases.  For anyone with mtg experience, my goal is to build this around the Commander/EDH format, as that's what I play most, so I can pretty much utilize the entirety of the MTG database of cards.  \nI'm not sure off hand what approach I should take (ensembles, neural networks, SVM, etc) and I was hoping people might have some ideas on what might be a logical starting place for that.  I've considered going the recommendation engine route along with using external built deck data from various sites as my training data, which might be better than trying to just do the unsupervised approach of feeding it all of the cards as a data source.  So any advice would be greatly appreciated!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Project", "id": "650yvh", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "anubis_dragoon", "saved": false, "mod_reports": [], "name": "t3_650yvh", "subreddit_name_prefixed": "r/MachineLearning", "approved_by": null, "over_18": false, "domain": "self.MachineLearning", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2r3gv", "edited": false, "link_flair_css_class": "four", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/MachineLearning/comments/650yvh/p_recommendation_engine_for_mtg/", "num_reports": null, "locked": false, "stickied": false, "created": 1492059516.0, "url": "https://www.reddit.com/r/MachineLearning/comments/650yvh/p_recommendation_engine_for_mtg/", "author_flair_text": null, "quarantine": false, "title": "[P] Recommendation Engine for MTG", "created_utc": 1492030716.0, "distinguished": null, "media": null, "upvote_ratio": 0.54, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_650yvh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_650yvh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_650yvh", "likes": null, "replies": "", "user_reports": [], "id": "dg7ek1j", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "anubis_dragoon", "parent_id": "t1_dg6r2on", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Thanks! I hadn't heard of this, but this looks to have some strong potential for addressing the card text.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks! I hadn&amp;#39;t heard of this, but this looks to have some strong potential for addressing the card text.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg7ek1j", "score_hidden": false, "stickied": false, "created": 1492110257.0, "created_utc": 1492081457.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6r2on", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "dismal_denizen", "parent_id": "t1_dg6qdef", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Paragraph Vector (https://arxiv.org/abs/1405.4053) seems to be an appropriate extension of word2vec which may work well here.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Paragraph Vector (&lt;a href=\"https://arxiv.org/abs/1405.4053\"&gt;https://arxiv.org/abs/1405.4053&lt;/a&gt;) seems to be an appropriate extension of word2vec which may work well here.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6r2on", "score_hidden": false, "stickied": false, "created": 1492068282.0, "created_utc": 1492039482.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6qdef", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Wocto", "parent_id": "t3_650yvh", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Word2vec, with each card being a word, would be interesting to look into", "edited": 1492132152.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Word2vec, with each card being a word, would be interesting to look into&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6qdef", "score_hidden": false, "stickied": false, "created": 1492067413.0, "created_utc": 1492038613.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}]