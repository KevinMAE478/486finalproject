[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "MachineLearning", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Project", "id": "64vy89", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 58, "report_reasons": null, "author": "joshpeng", "saved": false, "mod_reports": [], "name": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "approved_by": null, "over_18": false, "domain": "joshpeng.github.io", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Xl1HM1kmc7DED-UR6VAFXPX4pHd7fejSfhBeBDD98gc.jpg?s=26ed8914c93c5ba06abbc5ef00d7aa5b", "width": 630, "height": 364}, "resolutions": [{"url": "https://i.redditmedia.com/Xl1HM1kmc7DED-UR6VAFXPX4pHd7fejSfhBeBDD98gc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8ed075edaafbf123d44c9a62a9afa764", "width": 108, "height": 62}, {"url": "https://i.redditmedia.com/Xl1HM1kmc7DED-UR6VAFXPX4pHd7fejSfhBeBDD98gc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=41b94d02d4492d6236493057a4112109", "width": 216, "height": 124}, {"url": "https://i.redditmedia.com/Xl1HM1kmc7DED-UR6VAFXPX4pHd7fejSfhBeBDD98gc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=345b8b4f482df4d2be6e6289aee5a2ce", "width": 320, "height": 184}], "variants": {}, "id": "-h9-zCY6zMN9af8whDhxnpB6IVsbN4RzVBYC50WRLAY"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/k8BhoFNXuk8wKccPcgQTKqB5FxjGfRkPpjT3-z98B_k.jpg", "subreddit_id": "t5_2r3gv", "edited": false, "link_flair_css_class": "four", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/MachineLearning/comments/64vy89/p_cnn_trained_to_be_a_motorcycle_lean_assist/", "num_reports": null, "locked": false, "stickied": false, "created": 1491998649.0, "url": "https://joshpeng.github.io/post/mla/", "author_flair_text": null, "quarantine": false, "title": "[P] CNN trained to be a Motorcycle Lean Assist", "created_utc": 1491969849.0, "distinguished": null, "media": null, "upvote_ratio": 0.87, "num_comments": 30, "visited": false, "subreddit_type": "public", "ups": 58}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg6hk5u", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5khfb", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Perhaps. Thought about it, but wanted to play with CNNs so did it this way.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps. Thought about it, but wanted to play with CNNs so did it this way.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6hk5u", "score_hidden": false, "stickied": false, "created": 1492057114.0, "created_utc": 1492028314.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg7mik2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg7fhfe", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Did try, but gyroscopes can't account for road camber and, on a motorcycle, the readings are incredibly noisy. Vibrations are heavy not only from suspension travel, but from having an engine right under your mount.\n\nAlso using a gyroscope would mean I need to actually ride and get footage. I'd love to, but there's only so many roads I can physically reach and only certain weather/lighting conditions I can encounter in a reasonable amount of time. One of the key benefits of my approach is being able to hit up Google Street View and getting tons of road and weather variety I wouldn't otherwise be able to have in my training set.", "edited": 1492094709.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did try, but gyroscopes can&amp;#39;t account for road camber and, on a motorcycle, the readings are incredibly noisy. Vibrations are heavy not only from suspension travel, but from having an engine right under your mount.&lt;/p&gt;\n\n&lt;p&gt;Also using a gyroscope would mean I need to actually ride and get footage. I&amp;#39;d love to, but there&amp;#39;s only so many roads I can physically reach and only certain weather/lighting conditions I can encounter in a reasonable amount of time. One of the key benefits of my approach is being able to hit up Google Street View and getting tons of road and weather variety I wouldn&amp;#39;t otherwise be able to have in my training set.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg7mik2", "score_hidden": false, "stickied": false, "created": 1492122884.0, "created_utc": 1492094084.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7fhfe", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gopietz", "parent_id": "t1_dg5khfb", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I feel like he could do this a lot more reliably with a gyroscope sensor every smartphone comes with.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I feel like he could do this a lot more reliably with a gyroscope sensor every smartphone comes with.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg7fhfe", "score_hidden": false, "stickied": false, "created": 1492112432.0, "created_utc": 1492083632.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5khfb", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "ginsunuva", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I feel like you could do this much more reliably with regular CV techniques.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I feel like you could do this much more reliably with regular CV techniques.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5khfb", "score_hidden": false, "stickied": false, "created": 1492007403.0, "created_utc": 1491978603.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg6hc54", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "barnyardman", "parent_id": "t1_dg6fhe2", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Or a wiper mechanism like on a fuel tank float, they give different resistance depending on where the wiper sits on the coil.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Or a wiper mechanism like on a fuel tank float, they give different resistance depending on where the wiper sits on the coil.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6hc54", "score_hidden": false, "stickied": false, "created": 1492056883.0, "created_utc": 1492028083.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6fhe2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "skhehw", "parent_id": "t1_dg60yt1", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "look into quadcopter flight controllers. you can pick one up for &lt;$20, and they'll record sensor readings to onboard flash.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;look into quadcopter flight controllers. you can pick one up for &amp;lt;$20, and they&amp;#39;ll record sensor readings to onboard flash.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6fhe2", "score_hidden": false, "stickied": false, "created": 1492054988.0, "created_utc": 1492026188.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg60yt1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5nc19", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I did actually try to use my phone's gyro in the beginning. Unfortunately I couldn't get it stabilized enough to give steady readings. The cell phone mount I have isn't firm enough to not wobble.\n\nAlso, my phone is 4 years old haha. The battery died half way through the route. Would have to revisit the problem with better hardware at some point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I did actually try to use my phone&amp;#39;s gyro in the beginning. Unfortunately I couldn&amp;#39;t get it stabilized enough to give steady readings. The cell phone mount I have isn&amp;#39;t firm enough to not wobble.&lt;/p&gt;\n\n&lt;p&gt;Also, my phone is 4 years old haha. The battery died half way through the route. Would have to revisit the problem with better hardware at some point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg60yt1", "score_hidden": false, "stickied": false, "created": 1492039951.0, "created_utc": 1492011151.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5nc19", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "johnpatrck", "parent_id": "t1_dg5k1mb", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "It would be cool to fuse the image and sensor data.\n\nSensors are cheap.  Your phone even has a decent one!\n\n10-4 on the camber, interesting problem.\n\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would be cool to fuse the image and sensor data.&lt;/p&gt;\n\n&lt;p&gt;Sensors are cheap.  Your phone even has a decent one!&lt;/p&gt;\n\n&lt;p&gt;10-4 on the camber, interesting problem.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5nc19", "score_hidden": false, "stickied": false, "created": 1492015457.0, "created_utc": 1491986657.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5k1mb", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5jqxx", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I agree. Unfortunately I don't have access to a sensor. Also for a sensor I would need to compensate for road camber.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree. Unfortunately I don&amp;#39;t have access to a sensor. Also for a sensor I would need to compensate for road camber.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5k1mb", "score_hidden": false, "stickied": false, "created": 1492006348.0, "created_utc": 1491977548.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5jqxx", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "barnyardman", "parent_id": "t1_dg5j98r", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Neat project, but wouldn't it be easier to just use a direct sensor for this?  Seems like you should focus on that next step with generated data.  Reinforcement learning with a simple real physics engine should be relatively easy to model and allow many wheel widths to test against (hate to cause an accident when someone falls using extra wide tires).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Neat project, but wouldn&amp;#39;t it be easier to just use a direct sensor for this?  Seems like you should focus on that next step with generated data.  Reinforcement learning with a simple real physics engine should be relatively easy to model and allow many wheel widths to test against (hate to cause an accident when someone falls using extra wide tires).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5jqxx", "score_hidden": false, "stickied": false, "created": 1492005648.0, "created_utc": 1491976848.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5j98r", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5j173", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "How much they SHOULD lean is the continuation project :] It is a significantly more complicated problem since I would then need to take into account current speed, riding line/trajectory. Those impact how much you need to lean to make it across the corner.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How much they SHOULD lean is the continuation project :] It is a significantly more complicated problem since I would then need to take into account current speed, riding line/trajectory. Those impact how much you need to lean to make it across the corner.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5j98r", "score_hidden": false, "stickied": false, "created": 1492004581.0, "created_utc": 1491975781.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5j173", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "omniron", "parent_id": "t1_dg5ijbs", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Ahh i see. I thought it was trying to tell the rider how much they SHOULD lean, but rather it's telling the rider how much they ARE leaning.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ahh i see. I thought it was trying to tell the rider how much they SHOULD lean, but rather it&amp;#39;s telling the rider how much they ARE leaning.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5j173", "score_hidden": false, "stickied": false, "created": 1492004120.0, "created_utc": 1491975320.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg5k86d", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "omniron", "parent_id": "t1_dg5jlw0", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "seq2seq based audio neural net application", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;seq2seq based audio neural net application&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5k86d", "score_hidden": false, "stickied": false, "created": 1492006776.0, "created_utc": 1491977976.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5jlw0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5jbfs", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "-_-)b\n\nproject in similar area?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;-_-)b&lt;/p&gt;\n\n&lt;p&gt;project in similar area?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5jlw0", "score_hidden": false, "stickied": false, "created": 1492005331.0, "created_utc": 1491976531.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5jbfs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "omniron", "parent_id": "t1_dg5ijbs", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Cool project though, it's giving me motivation to continue working on a project i started but haven't finished.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cool project though, it&amp;#39;s giving me motivation to continue working on a project i started but haven&amp;#39;t finished.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5jbfs", "score_hidden": false, "stickied": false, "created": 1492004708.0, "created_utc": 1491975908.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ijbs", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5i0sx", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "In this [gif](https://joshpeng.github.io/img/mla/ImageProcessing_dark.gif), I created a data set by rotating the original image every degree between -45 and +45. The amount of rotation is the synthetic lean angle that the CNN is trying to recognize.\n\nTo put it another way, when I rotated the original Google Street View images I stored the rotation degree as the label. Between -45 and +45 there are 91 degrees so I basically end up with 91 labels for the net to try and work towards.\n\nIt is trying to identify how leaned over the motorcyclist is at any point in time.", "edited": 1491974539.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In this &lt;a href=\"https://joshpeng.github.io/img/mla/ImageProcessing_dark.gif\"&gt;gif&lt;/a&gt;, I created a data set by rotating the original image every degree between -45 and +45. The amount of rotation is the synthetic lean angle that the CNN is trying to recognize.&lt;/p&gt;\n\n&lt;p&gt;To put it another way, when I rotated the original Google Street View images I stored the rotation degree as the label. Between -45 and +45 there are 91 degrees so I basically end up with 91 labels for the net to try and work towards.&lt;/p&gt;\n\n&lt;p&gt;It is trying to identify how leaned over the motorcyclist is at any point in time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5ijbs", "score_hidden": false, "stickied": false, "created": 1492003132.0, "created_utc": 1491974332.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5i0sx", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "omniron", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Hmm what were the image classifications based on? I'm not following what you were training the net to recognize?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hmm what were the image classifications based on? I&amp;#39;m not following what you were training the net to recognize?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5i0sx", "score_hidden": false, "stickied": false, "created": 1492002149.0, "created_utc": 1491973349.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg5y8uv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "senorstallone", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Always nice when you are creative enough to create a dataset to solve your problem with small effort", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Always nice when you are creative enough to create a dataset to solve your problem with small effort&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5y8uv", "score_hidden": false, "stickied": false, "created": 1492036911.0, "created_utc": 1492008111.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg86ymr", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg839c3", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Great question. I applied a temporal smoothing over several frames. What I ended up using was an inverse weighted moving average. Normally a WMA weighs newer values heavier, but I am actually weighing older values more. This increases lag time a bit, but reduces choppiness.\n\nI also ignore frames with classification values too far from the current WMA. Sometimes it would be averaging around -30 degrees and then the next frame would say it is +45 degrees. It's just not possible to go 75 degrees in one video frame so I would skip that. There were other methods I played around with too like just capping the max degree distance between any two frames, but I felt what I ended up with had a good enough balance between responsiveness and accuracy.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great question. I applied a temporal smoothing over several frames. What I ended up using was an inverse weighted moving average. Normally a WMA weighs newer values heavier, but I am actually weighing older values more. This increases lag time a bit, but reduces choppiness.&lt;/p&gt;\n\n&lt;p&gt;I also ignore frames with classification values too far from the current WMA. Sometimes it would be averaging around -30 degrees and then the next frame would say it is +45 degrees. It&amp;#39;s just not possible to go 75 degrees in one video frame so I would skip that. There were other methods I played around with too like just capping the max degree distance between any two frames, but I felt what I ended up with had a good enough balance between responsiveness and accuracy.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg86ymr", "score_hidden": false, "stickied": false, "created": 1492144985.0, "created_utc": 1492116185.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg839c3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mnipm", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "You say you're using classification to get 91 labels for every degree from -45 to +45. However in the simulation I see angles in decimals. Have you done somekind of post processing to make the predictions more accurate?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You say you&amp;#39;re using classification to get 91 labels for every degree from -45 to +45. However in the simulation I see angles in decimals. Have you done somekind of post processing to make the predictions more accurate?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg839c3", "score_hidden": false, "stickied": false, "created": 1492140900.0, "created_utc": 1492112100.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg6gqgm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hypponaut", "parent_id": "t1_dg67bb2", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Well, couldn't really tell you what went wrong then. Best of luck with the continuation!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, couldn&amp;#39;t really tell you what went wrong then. Best of luck with the continuation!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6gqgm", "score_hidden": false, "stickied": false, "created": 1492056264.0, "created_utc": 1492027464.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg67bb2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg662j0", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Mostly used a step policy with a gamma of 0.5. I did mess a little bit with how often the steps would occur too, but my training experiments generally did not go through more than 1 or 2 steps before I stopped them. Damn, I no longer have the training curve charts I generated for these to show you.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mostly used a step policy with a gamma of 0.5. I did mess a little bit with how often the steps would occur too, but my training experiments generally did not go through more than 1 or 2 steps before I stopped them. Damn, I no longer have the training curve charts I generated for these to show you.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg67bb2", "score_hidden": false, "stickied": false, "created": 1492046629.0, "created_utc": 1492017829.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg662j0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hypponaut", "parent_id": "t1_dg63po9", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Did you use a certain learning rate policy?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did you use a certain learning rate policy?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg662j0", "score_hidden": false, "stickied": false, "created": 1492045374.0, "created_utc": 1492016574.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg63po9", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg6337y", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I tweaked the learning rate to be quite larger, wanting it to take bigger steps. Off memory, believe I took it from 0.000001 to 0.0001 for those particular experiments. Ran them overnight, but when I woke up the performance already plateaued for all epochs in the last several hours.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I tweaked the learning rate to be quite larger, wanting it to take bigger steps. Off memory, believe I took it from 0.000001 to 0.0001 for those particular experiments. Ran them overnight, but when I woke up the performance already plateaued for all epochs in the last several hours.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg63po9", "score_hidden": false, "stickied": false, "created": 1492042928.0, "created_utc": 1492014128.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6337y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hypponaut", "parent_id": "t1_dg62s94", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Hard to tell, normally you should've seen some progression. Did you tweak the learning rate when you tried to learn the convolutional layers?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hard to tell, normally you should&amp;#39;ve seen some progression. Did you tweak the learning rate when you tried to learn the convolutional layers?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg6337y", "score_hidden": false, "stickied": false, "created": 1492042265.0, "created_utc": 1492013465.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg62s94", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg61mq5", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Thanks for the suggestion. I'll have to give it a shot. I did try retraining the last one and last two convolutional layers. Training wasn't making progress so I stopped them at about 150-200 epochs if I remember correctly. Do you think I may have potentially stopped too early before it was able to learn high-level features?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the suggestion. I&amp;#39;ll have to give it a shot. I did try retraining the last one and last two convolutional layers. Training wasn&amp;#39;t making progress so I stopped them at about 150-200 epochs if I remember correctly. Do you think I may have potentially stopped too early before it was able to learn high-level features?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg62s94", "score_hidden": false, "stickied": false, "created": 1492041936.0, "created_utc": 1492013136.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg61mq5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hypponaut", "parent_id": "t1_dg60l2r", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "I guess SqueezeNet would fit your use case better. It's a network that's 50x smaller with AlexNet-like performance. Did you try retraining the last convolutional layer? Seems like you could benefit from learning different high-level features.", "edited": 1492012306.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I guess SqueezeNet would fit your use case better. It&amp;#39;s a network that&amp;#39;s 50x smaller with AlexNet-like performance. Did you try retraining the last convolutional layer? Seems like you could benefit from learning different high-level features.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg61mq5", "score_hidden": false, "stickied": false, "created": 1492040685.0, "created_utc": 1492011885.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg60l2r", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joshpeng", "parent_id": "t1_dg5ojqp", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "The intuition I went in with was I didn't want to use a CNN like Inception that was too complicated. The calculation time on something like that would make it impossible to use in real-time on a motorcycle.\n\nI also assumed that transfer learning a few layers would probably be good enough since the early layers in a CNN generally activate on broad patterns rather than specific shapes. The road images I wanted to feed in seemed like they would fit into broad left/right patterns so I hoped CaffeNet would be sufficient enough with its 8 layers. Perhaps I could have gone with an even simpler net, maybe that would have been even better. What I do know though is that going more complicated didn't necessarily yield better results (I also tried Inception v3).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The intuition I went in with was I didn&amp;#39;t want to use a CNN like Inception that was too complicated. The calculation time on something like that would make it impossible to use in real-time on a motorcycle.&lt;/p&gt;\n\n&lt;p&gt;I also assumed that transfer learning a few layers would probably be good enough since the early layers in a CNN generally activate on broad patterns rather than specific shapes. The road images I wanted to feed in seemed like they would fit into broad left/right patterns so I hoped CaffeNet would be sufficient enough with its 8 layers. Perhaps I could have gone with an even simpler net, maybe that would have been even better. What I do know though is that going more complicated didn&amp;#39;t necessarily yield better results (I also tried Inception v3).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg60l2r", "score_hidden": false, "stickied": false, "created": 1492039534.0, "created_utc": 1492010734.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ojqp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Hypponaut", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Cool project! Any reason in particular why you went with Caffenet?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cool project! Any reason in particular why you went with Caffenet?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5ojqp", "score_hidden": false, "stickied": false, "created": 1492019316.0, "created_utc": 1491990516.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_64vy89", "likes": null, "replies": "", "user_reports": [], "id": "dg5isir", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "daskro", "parent_id": "t3_64vy89", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "This is very clever!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is very clever!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dg5isir", "score_hidden": false, "stickied": false, "created": 1492003625.0, "created_utc": 1491974825.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]