[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/5Uao9Of_nxc?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "subreddit": "MachineLearning", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "ACER AI: Open Hexagon, Pi 9.94s", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/5Uao9Of_nxc?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Nixx", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/5Uao9Of_nxc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/nickdean10"}, "type": "youtube.com"}, "link_flair_text": "Project", "id": "65wpwf", "gilded": 0, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/5Uao9Of_nxc?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "clicked": false, "score": 2, "report_reasons": null, "author": "innixma", "saved": false, "mod_reports": [], "name": "t3_65wpwf", "subreddit_name_prefixed": "r/MachineLearning", "approved_by": null, "over_18": false, "domain": "youtube.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/GKCO-29OOZ2JRAuJ-XOoJ3hwAXVPc1xditTd22rgr-E.jpg?s=5a89d0f4c3ffea9a3992e1b67c6b4c3b", "width": 480, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/GKCO-29OOZ2JRAuJ-XOoJ3hwAXVPc1xditTd22rgr-E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=fdccd70fe8ff38119b6b398f1d3a45cc", "width": 108, "height": 81}, {"url": "https://i.redditmedia.com/GKCO-29OOZ2JRAuJ-XOoJ3hwAXVPc1xditTd22rgr-E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=26aea9f609720397a4506541b42480a0", "width": 216, "height": 162}, {"url": "https://i.redditmedia.com/GKCO-29OOZ2JRAuJ-XOoJ3hwAXVPc1xditTd22rgr-E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=6d25feb5d1d881a8d29a5b82fbab7036", "width": 320, "height": 240}], "variants": {}, "id": "6aiUI8TfNjMzQmwi02b5Qy4cZ00SiR_CKcdKOdpwkCA"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/7Dvx0x_oSDZXfQRT-iZp-ofUVeJgnkQ5UrQYANKvAaI.jpg", "subreddit_id": "t5_2r3gv", "edited": false, "link_flair_css_class": "four", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "rich:video", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/MachineLearning/comments/65wpwf/p_super_hexagon_a3cacer_ai/", "num_reports": null, "locked": false, "stickied": false, "created": 1492476449.0, "url": "https://www.youtube.com/watch?v=5Uao9Of_nxc", "author_flair_text": null, "quarantine": false, "title": "[P] Super Hexagon A3C/ACER AI", "created_utc": 1492447649.0, "distinguished": null, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "ACER AI: Open Hexagon, Pi 9.94s", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/5Uao9Of_nxc?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Nixx", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/5Uao9Of_nxc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/nickdean10"}, "type": "youtube.com"}, "upvote_ratio": 0.76, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2r3gv", "removal_reason": null, "link_id": "t3_65wpwf", "likes": null, "replies": "", "user_reports": [], "id": "dgdqqae", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "innixma", "parent_id": "t3_65wpwf", "subreddit_name_prefixed": "r/MachineLearning", "controversiality": 0, "body": "Github Repo: https://github.com/Innixma/dex\n\nAnother Video: https://www.youtube.com/watch?v=A58buCK4qEc\n\nI made an ACER/A3C implementation run with an Open Hexagon emulator. I am using it to test the ability for an AI to accelerate learning by conquering easier but similar tasks when approaching difficult ones, by means of incrementally more challenging levels.\n\nIt uses only screen pixel information in a 96x96 gray scaled grid, which it uses to make its decision, similar to Google DeepMind's Atari.\n\nIt is still fairly early on, but I thought I'd share it.", "edited": 1492450314.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Github Repo: &lt;a href=\"https://github.com/Innixma/dex\"&gt;https://github.com/Innixma/dex&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Another Video: &lt;a href=\"https://www.youtube.com/watch?v=A58buCK4qEc\"&gt;https://www.youtube.com/watch?v=A58buCK4qEc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I made an ACER/A3C implementation run with an Open Hexagon emulator. I am using it to test the ability for an AI to accelerate learning by conquering easier but similar tasks when approaching difficult ones, by means of incrementally more challenging levels.&lt;/p&gt;\n\n&lt;p&gt;It uses only screen pixel information in a 96x96 gray scaled grid, which it uses to make its decision, similar to Google DeepMind&amp;#39;s Atari.&lt;/p&gt;\n\n&lt;p&gt;It is still fairly early on, but I thought I&amp;#39;d share it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "MachineLearning", "name": "t1_dgdqqae", "score_hidden": false, "stickied": false, "created": 1492476598.0, "created_utc": 1492447798.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]