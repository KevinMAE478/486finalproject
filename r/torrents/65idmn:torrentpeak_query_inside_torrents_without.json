[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "torrents", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65idmn", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 7, "report_reasons": null, "author": "sktrdie", "saved": false, "mod_reports": [], "name": "t3_65idmn", "subreddit_name_prefixed": "r/torrents", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0w", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": false, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/torrents/comments/65idmn/torrentpeak_query_inside_torrents_without/", "num_reports": null, "locked": false, "stickied": false, "created": 1492279292.0, "url": "https://github.com/lmatteis/torrent-peek#torrentpeek", "author_flair_text": null, "quarantine": false, "title": "TorrentPeak - Query inside torrents without downloading them entirely", "created_utc": 1492250492.0, "distinguished": null, "media": null, "upvote_ratio": 0.71, "num_comments": 12, "visited": false, "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": "", "user_reports": [], "id": "dgaquvs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dgaqb02", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "Any query, even full text search ones. It depends on the structure of the database of course. But you could literally build search engines.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any query, even full text search ones. It depends on the structure of the database of course. But you could literally build search engines.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgaquvs", "score_hidden": false, "stickied": false, "created": 1492297941.0, "created_utc": 1492269141.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaqb02", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "bioszombie", "parent_id": "t1_dgaps9b", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "What information is available in the SQL database that I'm able to query?\n\nMaybe I'm misunderstanding the scope of this project. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What information is available in the SQL database that I&amp;#39;m able to query?&lt;/p&gt;\n\n&lt;p&gt;Maybe I&amp;#39;m misunderstanding the scope of this project. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgaqb02", "score_hidden": false, "stickied": false, "created": 1492297135.0, "created_utc": 1492268335.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": "", "user_reports": [], "id": "dge78wj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dge34mq", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "When you create the torrent, you create it using an SQLite database. Users of the torrent (peers downloading it that don't have the file) can query it without downloading it entirely.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When you create the torrent, you create it using an SQLite database. Users of the torrent (peers downloading it that don&amp;#39;t have the file) can query it without downloading it entirely.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dge78wj", "score_hidden": false, "stickied": false, "created": 1492495395.0, "created_utc": 1492466595.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dge34mq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "312c", "parent_id": "t1_dge2tm3", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "&gt;Query inside torrents **without downloading them entirely**", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Query inside torrents &lt;strong&gt;without downloading them entirely&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dge34mq", "score_hidden": false, "stickied": false, "created": 1492490484.0, "created_utc": 1492461684.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dge2tm3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dgdlc5w", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "You'd uncompress it and store it in a sqlite database.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;d uncompress it and store it in a sqlite database.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dge2tm3", "score_hidden": false, "stickied": false, "created": 1492490140.0, "created_utc": 1492461340.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdlc5w", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "312c", "parent_id": "t1_dgaps9b", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "How exactly are you going to do a full text search on a compressed file?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How exactly are you going to do a full text search on a compressed file?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgdlc5w", "score_hidden": false, "stickied": false, "created": 1492470429.0, "created_utc": 1492441629.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaps9b", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dgakzqb", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "What do you mean? Imagine sharing Wikipedia dumps using this technique. Users would not need to wait for the ~10gb dump to be downloaded before querying it, they can query it beforehand, as soon as the torrent is opened. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean? Imagine sharing Wikipedia dumps using this technique. Users would not need to wait for the ~10gb dump to be downloaded before querying it, they can query it beforehand, as soon as the torrent is opened. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgaps9b", "score_hidden": false, "stickied": false, "created": 1492296341.0, "created_utc": 1492267541.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakzqb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "bioszombie", "parent_id": "t1_dgajjff", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "Agreed but depending on whose seeding or piece  availability wouldn't the database just show the same information the download client already know?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Agreed but depending on whose seeding or piece  availability wouldn&amp;#39;t the database just show the same information the download client already know?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgakzqb", "score_hidden": false, "stickied": false, "created": 1492287288.0, "created_utc": 1492258488.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": "", "user_reports": [], "id": "dgapjva", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dgamr6g", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "I don't see how that is related with this technique. This downloads specific pieces of the torrent based on the SQL query users perform. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t see how that is related with this technique. This downloads specific pieces of the torrent based on the SQL query users perform. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgapjva", "score_hidden": false, "stickied": false, "created": 1492295992.0, "created_utc": 1492267192.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgamr6g", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gubatron", "parent_id": "t1_dgajjff", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "frostwire has been doing this for like 7 years. when you search it creates a local sql database using the .torrents' metadata/file list, the more you search the more it has to locally search from, thus speeding search results.\n\nwe created this also with the intention of presenting search results separated by file type (video, music, photos, apps, docs) in case all you need from a torrent is a specific set of files that match your search criteria.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;frostwire has been doing this for like 7 years. when you search it creates a local sql database using the .torrents&amp;#39; metadata/file list, the more you search the more it has to locally search from, thus speeding search results.&lt;/p&gt;\n\n&lt;p&gt;we created this also with the intention of presenting search results separated by file type (video, music, photos, apps, docs) in case all you need from a torrent is a specific set of files that match your search criteria.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgamr6g", "score_hidden": false, "stickied": false, "created": 1492291123.0, "created_utc": 1492262323.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0w", "removal_reason": null, "link_id": "t3_65idmn", "likes": null, "replies": "", "user_reports": [], "id": "dgapdy3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "sktrdie", "parent_id": "t1_dgajjff", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "Along with the bep46 which is about mutable torrents, you can imagine this being used in \"torrent sites\". Users can create HTML pages shared on a mutable DHT key, along with an SQLite db. The HTML javascript code could search the inner db using this TorrentPeek technique. \n\nUsers would simply need the public key of the mutable torrent, and they would start downloading the HTML/JS along with the .db file. The .db could be huge, and interactions on the site could trigger these piece-priority SQL queries.\n\nEssentially it would be like ZeroNet, or FreeNet, but with querying capabilities. You can't really build a search-engine in ZeroNet because you'd need to wait for the whole data to download. With TorrentPeek on the other hand you could. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Along with the bep46 which is about mutable torrents, you can imagine this being used in &amp;quot;torrent sites&amp;quot;. Users can create HTML pages shared on a mutable DHT key, along with an SQLite db. The HTML javascript code could search the inner db using this TorrentPeek technique. &lt;/p&gt;\n\n&lt;p&gt;Users would simply need the public key of the mutable torrent, and they would start downloading the HTML/JS along with the .db file. The .db could be huge, and interactions on the site could trigger these piece-priority SQL queries.&lt;/p&gt;\n\n&lt;p&gt;Essentially it would be like ZeroNet, or FreeNet, but with querying capabilities. You can&amp;#39;t really build a search-engine in ZeroNet because you&amp;#39;d need to wait for the whole data to download. With TorrentPeek on the other hand you could. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgapdy3", "score_hidden": false, "stickied": false, "created": 1492295730.0, "created_utc": 1492266930.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgajjff", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "robinkooli", "parent_id": "t3_65idmn", "subreddit_name_prefixed": "r/torrents", "controversiality": 0, "body": "What are the real-world applications for this?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What are the real-world applications for this?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "torrents", "name": "t1_dgajjff", "score_hidden": false, "stickied": false, "created": 1492283398.0, "created_utc": 1492254598.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]