[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "hacking", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am reading Hacking the art of exploitation (amazing book have learned a lot and still am). I was wondering if what the best way to go about exploit development is and if their are any sources that anyone would know of. I am currently working on a HID attack with my couple of dev boards.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am reading Hacking the art of exploitation (amazing book have learned a lot and still am). I was wondering if what the best way to go about exploit development is and if their are any sources that anyone would know of. I am currently working on a HID attack with my couple of dev boards.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "659v1i", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "RayofLight-z", "saved": false, "mod_reports": [], "name": "t3_659v1i", "subreddit_name_prefixed": "r/hacking", "approved_by": null, "over_18": false, "domain": "self.hacking", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qhva", "edited": 1492135396.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/hacking/comments/659v1i/good_sources_for_exploit_devolopment/", "num_reports": null, "locked": false, "stickied": false, "created": 1492163810.0, "url": "https://www.reddit.com/r/hacking/comments/659v1i/good_sources_for_exploit_devolopment/", "author_flair_text": null, "quarantine": false, "title": "Good sources for exploit devolopment", "created_utc": 1492135010.0, "distinguished": null, "media": null, "upvote_ratio": 0.6, "num_comments": 4, "visited": false, "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhva", "removal_reason": null, "link_id": "t3_659v1i", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhva", "removal_reason": null, "link_id": "t3_659v1i", "likes": null, "replies": "", "user_reports": [], "id": "dg90msp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "RayofLight-z", "parent_id": "t1_dg8u2rz", "subreddit_name_prefixed": "r/hacking", "controversiality": 0, "body": "Thanks. Sorry for the questions but what would be considered a strong background?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks. Sorry for the questions but what would be considered a strong background?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "hacking", "name": "t1_dg90msp", "score_hidden": false, "stickied": false, "created": 1492197472.0, "created_utc": 1492168672.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8u2rz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fibonascii", "parent_id": "t3_659v1i", "subreddit_name_prefixed": "r/hacking", "controversiality": 0, "body": "If you want to write exploits then you need to understand what you are exploiting. Learn how computers work, understand memory, the kernel, how software and websites are written. Learn about computer networking and infrastructure. Understanding core CS principals and how modern software/hardware systems work and are implemented is the key to learning exploit development.\n\nIf you already have a strong background in computer science then learning MSF and Ruby would be a good jumping off point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you want to write exploits then you need to understand what you are exploiting. Learn how computers work, understand memory, the kernel, how software and websites are written. Learn about computer networking and infrastructure. Understanding core CS principals and how modern software/hardware systems work and are implemented is the key to learning exploit development.&lt;/p&gt;\n\n&lt;p&gt;If you already have a strong background in computer science then learning MSF and Ruby would be a good jumping off point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "hacking", "name": "t1_dg8u2rz", "score_hidden": false, "stickied": false, "created": 1492178295.0, "created_utc": 1492149495.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhva", "removal_reason": null, "link_id": "t3_659v1i", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhva", "removal_reason": null, "link_id": "t3_659v1i", "likes": null, "replies": "", "user_reports": [], "id": "dgaleks", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "RayofLight-z", "parent_id": "t1_dgab1h1", "subreddit_name_prefixed": "r/hacking", "controversiality": 0, "body": "Thanks for the tips. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the tips. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "hacking", "name": "t1_dgaleks", "score_hidden": false, "stickied": false, "created": 1492288264.0, "created_utc": 1492259464.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgab1h1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "PM_ME_YOUR_SHELLCODE", "parent_id": "t3_659v1i", "subreddit_name_prefixed": "r/hacking", "controversiality": 0, "body": "A few months ago I replied to a similar question, thougb the person had a specific interest in low-level exploit development. It would be a fair starting place for you also though, perhaps drop the kernel exploitation and Modern OS books if thats not interesting to you though. A big thing though is just getting experience actually writing exploits, playing CTFs and wargames is nice for that. \n\nContrary to what fibonascii has said, I would advise against learning Ruby and the Metasploit Framework as a starting point. Honestly, MSF is used pretty heavily by pentesters (who often don't write the exploits) but its far less used by those doing exploit development. Starting with MSF might be quicker in some sense because it does a lot for you. This is a bad analogy but its a bit like telling someone who wants to learn algebra just use a calculator when learning basic arithmetic so you can focus on the algebra there is value in learning some of the associated fundamentals that MSF does for you and I'd recommend learning MSF once your comfortable with basic exploit development.\n\nAnyway, the following is the older post: https://www.reddit.com/r/AskNetsec/comments/5i73db/path_to_exploit_developer/db61ken/\n\n--------\n\nEven though it doesn't interest you as much, its easiest to start off with web-based stuff. Web-based attacks are often more logical and less technical giving you some practicing getting the right mindset.\n\n**Web Application hackers handbook** - This would be a great starting point for that, its an excellent book covering the majority of these types of attacks. Even though your not going to find most of it in your low-level exploitation its worth being familiar. You can practice this on any of a number of websites, check out https://www.wechall.net/challs and find something related to what your working on, or vulnhub.com.\n\n**Exploit-Exercises - Nebula** - http://exploit-exercises.com/nebula/ - This particular server has several challenges that will force you to dig into some topic and figure out how to break it. Most of the issues deal with Linux concepts, but there are a couple other things in there. Again, its stuff yyou should know.\n\nBefore getting into the binary stuff, you do need some programming experience. Specifically, by this point you should know C. I also recommend learning two other languages for some software engineering experieince. Its useful to know how software is built when you want to break it. For that, An object oriented language like Java or C# should be learned, and a scripting language like Python, Ruby or Perl.\n\n**Introduction to Software Exploits** - http://opensecuritytraining.info/Exploits1.html - I recommend this course to anyone wanting to get into binary exploitation, it is probably the best introduction I've come across. It uses **The Shellcoders Handbook** as a class textbook which is good, I also recommend  **Hacking: Art of Exploitation** for its introduction. The Shellcoders Handbook is better in the long run though.\n\n**Exploit-Exercises - Protostar** - Once you've completed the Exploits course, you'll know what you need to complete everything on this server.\n\n**Corelan's Exploit Writting Tutorials** - https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ - You'll find there is overlap from the past resources, there will also be some new stuff.\n\n**Exploits 2: Exploitation in the Windows Environment** - http://opensecuritytraining.info/Exploits2.html - You might not be interested in this exactly, but it deals with some of the mitigations you'll encounter in modern binaries\n\nUp to this point a lot of the content has been general and the concepts applicable to modern exploitation. The big thing to know is that modern exploitation is at its core the same as its been in the past, only now there are extra mitigations to deal with. So, I'm not going to give you any recommendations for specific mitigations, instead as you encounter them you'll need to do research on your own. Most you'll encounter have several writeups you can learn from and apply to your situation. (If someone has a concise set of resources on this topic I'd love to see it)\n\n**Malloc Maleficarum** - https://packetstormsecurity.com/papers/attack/MallocMaleficarum.txt - You may or may not find yourself exploiting ptmalloc2 (the default allocator on linux). Whats useful from this is that there are a number of creative and complicated techniques explained within. Its a purely theoretical document which makes it even better to see how things were reasoned about. There is [**Malloc Des-Maleficarum**](http://phrack.org/issues/66/10.html) which touches on most of the attacks with actual demonstrations if that interests you. Malloc Maleficarum was a real eye opener for me back then, opened my eyes to a world of more complicated exploits, it had a huge impact on me so I recommend it, ymmv.\n\n*A Guide to Kernel Exploitation: Attacking the Core** - There are not too many resources specifically on OS level exploitation, this is the only one I've read.\n\n**Modern Operating Systems (by Tanenbaum)** - Its not exploitation but as I said earlier its useful to understand how software works if you're going to break it, this is the classic book on operating systems as such its worth keeping by atleast as a reference to explain what is going on at different levels.\n\nThe best thing you can do is just practice, exploit development involves a lot of failure and banging your head against a wall making no progress. Eventually you get that one insight, that one crack you can leverage to take a step forward and then you repeat the failure again and again until you're successful. Its rarely immediately obvious and quick. So don't be disheartened when you spend a long time working on a single exploit, know that you learn a lot in failures and even when you spend hours researching something that turns out to be a dead end, that knowledge will probably prove useful on a future exploit. Just keep practicing and writting exploits and you'll get better\n\n-----------\n\nOne further skill that I didn't place into the above is Reverse Engineering. Its something you'll develop as you do it but there are some resources you can reference as you will.\n\n - Reversing: Secrets of Reverse Engineering\n - Practical Reverse Engineering\n - Malware Analyst's Cookbook\n\nI also haven't touched on the actual discover of exploits, using fuzzers and the like. When you understand the exploit techniques though, I think you'll simply be able to understand what your looking for with some practice and experience.\n\nGood Luck!\n\n\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A few months ago I replied to a similar question, thougb the person had a specific interest in low-level exploit development. It would be a fair starting place for you also though, perhaps drop the kernel exploitation and Modern OS books if thats not interesting to you though. A big thing though is just getting experience actually writing exploits, playing CTFs and wargames is nice for that. &lt;/p&gt;\n\n&lt;p&gt;Contrary to what fibonascii has said, I would advise against learning Ruby and the Metasploit Framework as a starting point. Honestly, MSF is used pretty heavily by pentesters (who often don&amp;#39;t write the exploits) but its far less used by those doing exploit development. Starting with MSF might be quicker in some sense because it does a lot for you. This is a bad analogy but its a bit like telling someone who wants to learn algebra just use a calculator when learning basic arithmetic so you can focus on the algebra there is value in learning some of the associated fundamentals that MSF does for you and I&amp;#39;d recommend learning MSF once your comfortable with basic exploit development.&lt;/p&gt;\n\n&lt;p&gt;Anyway, the following is the older post: &lt;a href=\"https://www.reddit.com/r/AskNetsec/comments/5i73db/path_to_exploit_developer/db61ken/\"&gt;https://www.reddit.com/r/AskNetsec/comments/5i73db/path_to_exploit_developer/db61ken/&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Even though it doesn&amp;#39;t interest you as much, its easiest to start off with web-based stuff. Web-based attacks are often more logical and less technical giving you some practicing getting the right mindset.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Web Application hackers handbook&lt;/strong&gt; - This would be a great starting point for that, its an excellent book covering the majority of these types of attacks. Even though your not going to find most of it in your low-level exploitation its worth being familiar. You can practice this on any of a number of websites, check out &lt;a href=\"https://www.wechall.net/challs\"&gt;https://www.wechall.net/challs&lt;/a&gt; and find something related to what your working on, or vulnhub.com.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Exploit-Exercises - Nebula&lt;/strong&gt; - &lt;a href=\"http://exploit-exercises.com/nebula/\"&gt;http://exploit-exercises.com/nebula/&lt;/a&gt; - This particular server has several challenges that will force you to dig into some topic and figure out how to break it. Most of the issues deal with Linux concepts, but there are a couple other things in there. Again, its stuff yyou should know.&lt;/p&gt;\n\n&lt;p&gt;Before getting into the binary stuff, you do need some programming experience. Specifically, by this point you should know C. I also recommend learning two other languages for some software engineering experieince. Its useful to know how software is built when you want to break it. For that, An object oriented language like Java or C# should be learned, and a scripting language like Python, Ruby or Perl.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Introduction to Software Exploits&lt;/strong&gt; - &lt;a href=\"http://opensecuritytraining.info/Exploits1.html\"&gt;http://opensecuritytraining.info/Exploits1.html&lt;/a&gt; - I recommend this course to anyone wanting to get into binary exploitation, it is probably the best introduction I&amp;#39;ve come across. It uses &lt;strong&gt;The Shellcoders Handbook&lt;/strong&gt; as a class textbook which is good, I also recommend  &lt;strong&gt;Hacking: Art of Exploitation&lt;/strong&gt; for its introduction. The Shellcoders Handbook is better in the long run though.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Exploit-Exercises - Protostar&lt;/strong&gt; - Once you&amp;#39;ve completed the Exploits course, you&amp;#39;ll know what you need to complete everything on this server.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Corelan&amp;#39;s Exploit Writting Tutorials&lt;/strong&gt; - &lt;a href=\"https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/\"&gt;https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/&lt;/a&gt; - You&amp;#39;ll find there is overlap from the past resources, there will also be some new stuff.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Exploits 2: Exploitation in the Windows Environment&lt;/strong&gt; - &lt;a href=\"http://opensecuritytraining.info/Exploits2.html\"&gt;http://opensecuritytraining.info/Exploits2.html&lt;/a&gt; - You might not be interested in this exactly, but it deals with some of the mitigations you&amp;#39;ll encounter in modern binaries&lt;/p&gt;\n\n&lt;p&gt;Up to this point a lot of the content has been general and the concepts applicable to modern exploitation. The big thing to know is that modern exploitation is at its core the same as its been in the past, only now there are extra mitigations to deal with. So, I&amp;#39;m not going to give you any recommendations for specific mitigations, instead as you encounter them you&amp;#39;ll need to do research on your own. Most you&amp;#39;ll encounter have several writeups you can learn from and apply to your situation. (If someone has a concise set of resources on this topic I&amp;#39;d love to see it)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Malloc Maleficarum&lt;/strong&gt; - &lt;a href=\"https://packetstormsecurity.com/papers/attack/MallocMaleficarum.txt\"&gt;https://packetstormsecurity.com/papers/attack/MallocMaleficarum.txt&lt;/a&gt; - You may or may not find yourself exploiting ptmalloc2 (the default allocator on linux). Whats useful from this is that there are a number of creative and complicated techniques explained within. Its a purely theoretical document which makes it even better to see how things were reasoned about. There is &lt;a href=\"http://phrack.org/issues/66/10.html\"&gt;&lt;strong&gt;Malloc Des-Maleficarum&lt;/strong&gt;&lt;/a&gt; which touches on most of the attacks with actual demonstrations if that interests you. Malloc Maleficarum was a real eye opener for me back then, opened my eyes to a world of more complicated exploits, it had a huge impact on me so I recommend it, ymmv.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;A Guide to Kernel Exploitation: Attacking the Core&lt;/em&gt;* - There are not too many resources specifically on OS level exploitation, this is the only one I&amp;#39;ve read.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Modern Operating Systems (by Tanenbaum)&lt;/strong&gt; - Its not exploitation but as I said earlier its useful to understand how software works if you&amp;#39;re going to break it, this is the classic book on operating systems as such its worth keeping by atleast as a reference to explain what is going on at different levels.&lt;/p&gt;\n\n&lt;p&gt;The best thing you can do is just practice, exploit development involves a lot of failure and banging your head against a wall making no progress. Eventually you get that one insight, that one crack you can leverage to take a step forward and then you repeat the failure again and again until you&amp;#39;re successful. Its rarely immediately obvious and quick. So don&amp;#39;t be disheartened when you spend a long time working on a single exploit, know that you learn a lot in failures and even when you spend hours researching something that turns out to be a dead end, that knowledge will probably prove useful on a future exploit. Just keep practicing and writting exploits and you&amp;#39;ll get better&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;One further skill that I didn&amp;#39;t place into the above is Reverse Engineering. Its something you&amp;#39;ll develop as you do it but there are some resources you can reference as you will.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Reversing: Secrets of Reverse Engineering&lt;/li&gt;\n&lt;li&gt;Practical Reverse Engineering&lt;/li&gt;\n&lt;li&gt;Malware Analyst&amp;#39;s Cookbook&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I also haven&amp;#39;t touched on the actual discover of exploits, using fuzzers and the like. When you understand the exploit techniques though, I think you&amp;#39;ll simply be able to understand what your looking for with some practice and experience.&lt;/p&gt;\n\n&lt;p&gt;Good Luck!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "hacking", "name": "t1_dgab1h1", "score_hidden": false, "stickied": false, "created": 1492260884.0, "created_utc": 1492232084.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]