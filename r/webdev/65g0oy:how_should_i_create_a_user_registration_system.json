[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "webdev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a total noob to web development, and just want to create a prototype for my web app, and am trying to figure out how to create a user registration system. (And I really want to avoid using PHP -- everyone advises against using it.)&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve heard good things about Django and PassportJS. Would you recommend one of those or something else? Which would be easiest to learn and implement?&lt;/p&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm a total noob to web development, and just want to create a prototype for my web app, and am trying to figure out how to create a user registration system. (And I really want to avoid using PHP -- everyone advises against using it.)\n\nI've heard good things about Django and PassportJS. Would you recommend one of those or something else? Which would be easiest to learn and implement?\n\nThanks.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65g0oy", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 10, "report_reasons": null, "author": "GrantHenryHall", "saved": false, "mod_reports": [], "name": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "approved_by": null, "over_18": false, "domain": "self.webdev", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qs0q", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/webdev/comments/65g0oy/how_should_i_create_a_user_registration_system/", "num_reports": null, "locked": false, "stickied": false, "created": 1492241704.0, "url": "https://www.reddit.com/r/webdev/comments/65g0oy/how_should_i_create_a_user_registration_system/", "author_flair_text": null, "quarantine": false, "title": "How should I create a user registration system for my website?", "created_utc": 1492212904.0, "distinguished": null, "media": null, "upvote_ratio": 0.85, "num_comments": 17, "visited": false, "subreddit_type": "public", "ups": 10}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgbfejb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ExecutiveChimp", "parent_id": "t1_dgbczvt", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "&gt; there's nothing wrong with PHP\n\nWell hey now I wouldn't go that far...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;there&amp;#39;s nothing wrong with PHP&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Well hey now I wouldn&amp;#39;t go that far...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgbfejb", "score_hidden": false, "stickied": false, "created": 1492332058.0, "created_utc": 1492303258.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbczvt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MatthewMob", "parent_id": "t1_dgaee5n", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "You damn hippies with your Nodes and your Vues!\n\nNo but seriously ~~there's nothing wrong with PHP~~ PHP isn't that bad. I really don't get where they got that information from.", "edited": 1492307351.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You damn hippies with your Nodes and your Vues!&lt;/p&gt;\n\n&lt;p&gt;No but seriously &lt;del&gt;there&amp;#39;s nothing wrong with PHP&lt;/del&gt; PHP isn&amp;#39;t that bad. I really don&amp;#39;t get where they got that information from.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgbczvt", "score_hidden": false, "stickied": false, "created": 1492328644.0, "created_utc": 1492299844.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaee5n", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "ExecutiveChimp", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "PHP is fine. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP is fine. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgaee5n", "score_hidden": false, "stickied": false, "created": 1492268012.0, "created_utc": 1492239212.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgcypti", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "keyboard_2387", "parent_id": "t1_dgakdn3", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Third this, I came from learning Node/Express and using Passport.js to discovering Laravel. I find Laravel enjoyable to work with :D", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Third this, I came from learning Node/Express and using Passport.js to discovering Laravel. I find Laravel enjoyable to work with :D&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgcypti", "score_hidden": false, "stickied": false, "created": 1492424370.0, "created_utc": 1492395570.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakdn3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "atomicshapes", "parent_id": "t1_dgadq89", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Second this, it's the easiest and most secure way with the least work ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Second this, it&amp;#39;s the easiest and most secure way with the least work &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgakdn3", "score_hidden": false, "stickied": false, "created": 1492285750.0, "created_utc": 1492256950.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgadq89", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "PencilRocket69", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "I like laravel, and one of the reasons is it makes user authentication so easy. It's php, but using it makes it much easier to work with. All you gotta do is \"php artisan make:auth\" and \"php artisan migrate\" and you're done! \n\n\nDisclaimer: I'm a little bit of a laravel fanboy right now.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like laravel, and one of the reasons is it makes user authentication so easy. It&amp;#39;s php, but using it makes it much easier to work with. All you gotta do is &amp;quot;php artisan make:auth&amp;quot; and &amp;quot;php artisan migrate&amp;quot; and you&amp;#39;re done! &lt;/p&gt;\n\n&lt;p&gt;Disclaimer: I&amp;#39;m a little bit of a laravel fanboy right now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgadq89", "score_hidden": false, "stickied": false, "created": 1492266430.0, "created_utc": 1492237630.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgc013l", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "A-Grey-World", "parent_id": "t1_dgafwog", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "If the OP wanted to know how to create a backend server, that's what he should/would have asked...\n\nAny authentication/user login requires a backend server.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the OP wanted to know how to create a backend server, that&amp;#39;s what he should/would have asked...&lt;/p&gt;\n\n&lt;p&gt;Any authentication/user login requires a backend server.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgc013l", "score_hidden": false, "stickied": false, "created": 1492376426.0, "created_utc": 1492347626.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgar7z6", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "LeBuddha", "parent_id": "t1_dgafwog", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "If you want to stay on nodejs, this is pretty much like Laravel for nodejs: https://github.com/nuxt/adonuxt", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you want to stay on nodejs, this is pretty much like Laravel for nodejs: &lt;a href=\"https://github.com/nuxt/adonuxt\"&gt;https://github.com/nuxt/adonuxt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgar7z6", "score_hidden": false, "stickied": false, "created": 1492298460.0, "created_utc": 1492269660.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgafwog", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "jb492", "parent_id": "t1_dga2w8o", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "As nice as this tutorial is, it's hardly beginner friendly. You skipped over hours of work for a beginner with the line 'create a backend server'. As a dev I would say Node.JS is quite a hard framework to start a beginner on. Why not use Laravel which arguably requires less server set-up time and also comes with a login solution out of the box using the command 'php artisan make:auth'.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As nice as this tutorial is, it&amp;#39;s hardly beginner friendly. You skipped over hours of work for a beginner with the line &amp;#39;create a backend server&amp;#39;. As a dev I would say Node.JS is quite a hard framework to start a beginner on. Why not use Laravel which arguably requires less server set-up time and also comes with a login solution out of the box using the command &amp;#39;php artisan make:auth&amp;#39;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgafwog", "score_hidden": false, "stickied": false, "created": 1492272020.0, "created_utc": 1492243220.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, "user_reports": [], "id": "dga2w8o", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "kindashittyfeeling", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "1. Create a backend server. I recommend Node.js + express but you can obviously substitute whatever backend language you want. \n1. Give the server access to a database. You should probably use MySQL or something like Mongodb would also work. If I'm creating a super simple side project I find that Mongodb works great and is super fast to get started with.\n1. Create tables/models for the Users. In MySQL it could look something like this:\n\n    User(username, password)\n\nand in Mongodb the model would look something like this:\n\n    var UserSchema = new Schema({\n        username: {\n\t    type: String,\n\t    required: true,\n\t    index: {\n\t        unique: true\n\t    }\n\t},\n\tpassword: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tselect: false\n\t}\n    });\n\n\n\n4. **Hash your passwords** this is very important! Do not store plaintext passwords in your database. This can be done in node very easily using bcrypt-nodejs.\n\n5. Lock down the rest of your API using an authentication system, tokens, and middleware to prevent access to the rest of the API without tokens.\n    \nAuthentication returning a token example: \n\n        apiRouter.post('/authenticate', function(req, res) {\n\t\tif(req.body.username &amp;&amp; req.body.password) {\n\t\t\tUser.findOne({\n\t\t\t\tusername: req.body.username\n\t\t\t}).select('username password').exec(function(err, user) {\n\t\t\t\tif(err) {\n\t\t\t\t\treturn res.json({\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: err\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(!user) {\n\t\t\t\t\treturn res.json({\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: 'User not found'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar validPassword = user.comparePassword(req.body.password);\n\t\t\t\t\tif(!validPassword) {\n\t\t\t\t\t\treturn res.json({\n\t\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\t\tmessage: 'Wrong username or password'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar token = jwt.sign({\n\t\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t\t}, superSecret, {\n\t\t\t\t\t\t\texpiresIn: 60*60*24\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.json({\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t\tmessage: 'Token created',\n\t\t\t\t\t\t\ttoken: token\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn res.json({\n\t\t\t\tsuccess: false,\n\t\t\t\tmessage: 'Please include a username and password'\n\t\t\t});\n\t\t}\n\t   });\n\nMiddleware (this goes above the rest of your endpoints):\n\n    apiRouter.use(function(req, res, next) {\n\t\tvar token = req.body.token || req.query.token || req.headers['x-access-token'];\n\t\tif(token) {\n\t\t\tjwt.verify(token, superSecret, function(err, decoded) {\n\t\t\t\tif(err) {\n\t\t\t\t\tres.status(403).send({\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: 'Failed to authenticate token'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treq.decoded = decoded;\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(403).send({\n\t\t\t\tsuccess: false,\n\t\t\t\tmessage: 'No token provided'\n\t\t\t});\n\t\t}\n\t});\n\nIf you have any questions let me know. Good luck!", "edited": 1492219768.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;ol&gt;\n&lt;li&gt;Create a backend server. I recommend Node.js + express but you can obviously substitute whatever backend language you want. &lt;/li&gt;\n&lt;li&gt;Give the server access to a database. You should probably use MySQL or something like Mongodb would also work. If I&amp;#39;m creating a super simple side project I find that Mongodb works great and is super fast to get started with.&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Create tables/models for the Users. In MySQL it could look something like this:&lt;/p&gt;\n\n&lt;p&gt;User(username, password)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;and in Mongodb the model would look something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var UserSchema = new Schema({\n    username: {\n    type: String,\n    required: true,\n    index: {\n        unique: true\n    }\n},\npassword: {\n    type: String,\n    required: true,\n    select: false\n}\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hash your passwords&lt;/strong&gt; this is very important! Do not store plaintext passwords in your database. This can be done in node very easily using bcrypt-nodejs.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Lock down the rest of your API using an authentication system, tokens, and middleware to prevent access to the rest of the API without tokens.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Authentication returning a token example: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    apiRouter.post(&amp;#39;/authenticate&amp;#39;, function(req, res) {\n    if(req.body.username &amp;amp;&amp;amp; req.body.password) {\n        User.findOne({\n            username: req.body.username\n        }).select(&amp;#39;username password&amp;#39;).exec(function(err, user) {\n            if(err) {\n                return res.json({\n                    success: false,\n                    message: err\n                });\n            }\n            if(!user) {\n                return res.json({\n                    success: false,\n                    message: &amp;#39;User not found&amp;#39;\n                });\n            } else {\n                var validPassword = user.comparePassword(req.body.password);\n                if(!validPassword) {\n                    return res.json({\n                        success: false,\n                        message: &amp;#39;Wrong username or password&amp;#39;\n                    });\n                } else {\n                    var token = jwt.sign({\n                        username: user.username\n                    }, superSecret, {\n                        expiresIn: 60*60*24\n                    });\n                    res.json({\n                        success: true,\n                        message: &amp;#39;Token created&amp;#39;,\n                        token: token\n                    });\n                }\n            }\n        });\n    } else {\n        return res.json({\n            success: false,\n            message: &amp;#39;Please include a username and password&amp;#39;\n        });\n    }\n   });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Middleware (this goes above the rest of your endpoints):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;apiRouter.use(function(req, res, next) {\n    var token = req.body.token || req.query.token || req.headers[&amp;#39;x-access-token&amp;#39;];\n    if(token) {\n        jwt.verify(token, superSecret, function(err, decoded) {\n            if(err) {\n                res.status(403).send({\n                    success: false,\n                    message: &amp;#39;Failed to authenticate token&amp;#39;\n                });\n            } else {\n                req.decoded = decoded;\n                next();\n            }\n        });\n    } else {\n        res.status(403).send({\n            success: false,\n            message: &amp;#39;No token provided&amp;#39;\n        });\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you have any questions let me know. Good luck!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dga2w8o", "score_hidden": false, "stickied": false, "created": 1492248365.0, "created_utc": 1492219565.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dga0ra2", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "dead_lemons", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Your gonna need a backend. If you want to stay in JavaScript then look at node + express + (whatever database you want) for the backend.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your gonna need a backend. If you want to stay in JavaScript then look at node + express + (whatever database you want) for the backend.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dga0ra2", "score_hidden": false, "stickied": false, "created": 1492245458.0, "created_utc": 1492216658.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgarpqw", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "LeBuddha", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "&gt; And I really want to avoid using PHP -- everyone advises against using it.\n\nStatistically speaking, these people probably don't know what they are talking about, or they are talking about PHP4 (current version: 7). Laravel is an excellent way to prototype your app in PHP.\n\nMake auth in Laravel:\n\n* `php artisan make:auth` https://laravel.com/docs/5.4/authentication\n\nNot using PHP:\n\nThe easiest and fastest way though, is to fork this and modify it into your app: https://github.com/sahat/hackathon-starter A lot of the passport JS stuff is done for you. Be careful, MongoDB will bite you long-term if you go into production with it and you need ACID compliance. But right now you're prototyping and probably don't care about databases yet. Postgre, MariaDB, and RethinkDB are some interesting options to consider switching to (or starting with?).\n\nAdonisjs is like Laravel/Rails for Nodejs:\n\n* `./ace auth:setup` http://www.adonisjs.com/docs/3.2/authentication\n* adonisjs with vuejs server-side rendering: https://github.com/nuxt/adonuxt", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;And I really want to avoid using PHP -- everyone advises against using it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Statistically speaking, these people probably don&amp;#39;t know what they are talking about, or they are talking about PHP4 (current version: 7). Laravel is an excellent way to prototype your app in PHP.&lt;/p&gt;\n\n&lt;p&gt;Make auth in Laravel:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;php artisan make:auth&lt;/code&gt; &lt;a href=\"https://laravel.com/docs/5.4/authentication\"&gt;https://laravel.com/docs/5.4/authentication&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Not using PHP:&lt;/p&gt;\n\n&lt;p&gt;The easiest and fastest way though, is to fork this and modify it into your app: &lt;a href=\"https://github.com/sahat/hackathon-starter\"&gt;https://github.com/sahat/hackathon-starter&lt;/a&gt; A lot of the passport JS stuff is done for you. Be careful, MongoDB will bite you long-term if you go into production with it and you need ACID compliance. But right now you&amp;#39;re prototyping and probably don&amp;#39;t care about databases yet. Postgre, MariaDB, and RethinkDB are some interesting options to consider switching to (or starting with?).&lt;/p&gt;\n\n&lt;p&gt;Adonisjs is like Laravel/Rails for Nodejs:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;./ace auth:setup&lt;/code&gt; &lt;a href=\"http://www.adonisjs.com/docs/3.2/authentication\"&gt;http://www.adonisjs.com/docs/3.2/authentication&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;adonisjs with vuejs server-side rendering: &lt;a href=\"https://github.com/nuxt/adonuxt\"&gt;https://github.com/nuxt/adonuxt&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgarpqw", "score_hidden": false, "stickied": false, "created": 1492299159.0, "created_utc": 1492270359.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgamqwh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "De_Wouter", "parent_id": "t1_dgahfxf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Probably one of the best options to prototype something fast and easy. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Probably one of the best options to prototype something fast and easy. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgamqwh", "score_hidden": false, "stickied": false, "created": 1492291109.0, "created_utc": 1492262309.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgahfxf", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "JoeB_88", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Google Firebase", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Google Firebase&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgahfxf", "score_hidden": false, "stickied": false, "created": 1492276732.0, "created_utc": 1492247932.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgaff1w", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "osirola", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Django is fine imo, but I have only made a few API's for work so I'm not an expert. I chose Django for easy authentication and modelling of data.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Django is fine imo, but I have only made a few API&amp;#39;s for work so I&amp;#39;m not an expert. I chose Django for easy authentication and modelling of data.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgaff1w", "score_hidden": false, "stickied": false, "created": 1492270671.0, "created_utc": 1492241871.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgasv3g", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "xiongchiamiov", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "If you haven't decided on a backend language yet, then it sounds like you don't have a site. Build that, and then you can add user registration to it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you haven&amp;#39;t decided on a backend language yet, then it sounds like you don&amp;#39;t have a site. Build that, and then you can add user registration to it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgasv3g", "score_hidden": false, "stickied": false, "created": 1492300781.0, "created_utc": 1492271981.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65g0oy", "likes": null, "replies": "", "user_reports": [], "id": "dgatzjb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "xpsdeset", "parent_id": "t3_65g0oy", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "I can suggest \nhttps://github.com/angular-fullstack/generator-angular-fullstack\n\nHave your website with authentication up and running in minutes. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can suggest \n&lt;a href=\"https://github.com/angular-fullstack/generator-angular-fullstack\"&gt;https://github.com/angular-fullstack/generator-angular-fullstack&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Have your website with authentication up and running in minutes. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgatzjb", "score_hidden": false, "stickied": false, "created": 1492302337.0, "created_utc": 1492273537.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]