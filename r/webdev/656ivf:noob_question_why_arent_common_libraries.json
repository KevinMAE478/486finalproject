[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "webdev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How does externally linking AJAX/JQuery/React/Node.js/etc make more sense than just including them in the browser? Wouldn&amp;#39;t that reduce server load and bandwidth while increasing responsiveness? Or am I missing something?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "How does externally linking AJAX/JQuery/React/Node.js/etc make more sense than just including them in the browser? Wouldn't that reduce server load and bandwidth while increasing responsiveness? Or am I missing something?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "656ivf", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 13, "report_reasons": null, "author": "Shields42", "saved": false, "mod_reports": [], "name": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "approved_by": null, "over_18": false, "domain": "self.webdev", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qs0q", "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/webdev/comments/656ivf/noob_question_why_arent_common_libraries/", "num_reports": null, "locked": false, "stickied": false, "created": 1492129473.0, "url": "https://www.reddit.com/r/webdev/comments/656ivf/noob_question_why_arent_common_libraries/", "author_flair_text": "UX |Novice|", "quarantine": false, "title": "Noob question: why aren't common libraries integrated into the browser?", "created_utc": 1492100673.0, "distinguished": null, "media": null, "upvote_ratio": 0.8, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 13}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg7tir6", "gilded": 0, "archived": false, "score": 25, "report_reasons": null, "author": "tdammers", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Yes, it would; and in fact, there are browser plugins that do exactly this - substitute common JS libraries served from some CDN by built-in versions loaded from a local filesystem. Not only does this improve performance, it also makes things more secure, because if the CDN gets compromised and starts serving malicious versions of those libraries, you'll still use the built-in ones that are fine.\n\nThere is a downside though: these libraries are under constant development, new versions get released all the time, but not everyone updates all their code to the newest versions immediately. Just for jQuery alone, you will see dozens of different versions being used in the wild, many of them mutually incompatible. Worse yet, often people will use a stripped build that contains only the parts they need, rather than the full standard build, so there are literally thousands of different versions of jQuery out there. You can't possibly include them all with the browser, and even if you can, you will have to update your browser every time a new library version gets released or someone starts using a different subset of it. Another probem is that of reliably identifying the right version; it is not obvious from an URL like `http://static.example.org/js/jquery.js` which jQuery version hides behind that.\n\nBesides, the performance hit is mitigated heavily through caching - if many sites pull the same jQuery from the same CDN, then the browser will cache it and reuse it between them, giving you essentially the same benefit after the first load.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, it would; and in fact, there are browser plugins that do exactly this - substitute common JS libraries served from some CDN by built-in versions loaded from a local filesystem. Not only does this improve performance, it also makes things more secure, because if the CDN gets compromised and starts serving malicious versions of those libraries, you&amp;#39;ll still use the built-in ones that are fine.&lt;/p&gt;\n\n&lt;p&gt;There is a downside though: these libraries are under constant development, new versions get released all the time, but not everyone updates all their code to the newest versions immediately. Just for jQuery alone, you will see dozens of different versions being used in the wild, many of them mutually incompatible. Worse yet, often people will use a stripped build that contains only the parts they need, rather than the full standard build, so there are literally thousands of different versions of jQuery out there. You can&amp;#39;t possibly include them all with the browser, and even if you can, you will have to update your browser every time a new library version gets released or someone starts using a different subset of it. Another probem is that of reliably identifying the right version; it is not obvious from an URL like &lt;code&gt;http://static.example.org/js/jquery.js&lt;/code&gt; which jQuery version hides behind that.&lt;/p&gt;\n\n&lt;p&gt;Besides, the performance hit is mitigated heavily through caching - if many sites pull the same jQuery from the same CDN, then the browser will cache it and reuse it between them, giving you essentially the same benefit after the first load.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg7tir6", "score_hidden": false, "stickied": false, "created": 1492130488.0, "created_utc": 1492101688.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 25}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg80xa1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Mark_at_work", "parent_id": "t1_dg7yla5", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Came here to say this. A lot of libraries exist to add functionality that their authors think should be in the browsers. As a library gains popularity, the browser vendors realize the authors are on to something and add the features. But JS libraries will always exist because JS authors will never stop thinking of features they think should be in the browser.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Came here to say this. A lot of libraries exist to add functionality that their authors think should be in the browsers. As a library gains popularity, the browser vendors realize the authors are on to something and add the features. But JS libraries will always exist because JS authors will never stop thinking of features they think should be in the browser.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg80xa1", "score_hidden": false, "stickied": false, "created": 1492138358.0, "created_utc": 1492109558.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7yla5", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "3skil", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "They are. Ajax is now included in the browser (called fetch). \nPromises started as libraries, but it's now included in javascript. \nQuery selectors from jquery is included in browsers nowadays. \n\nThe problem is that it's a slow process, because all the different browser vendors have to agree to include something. Otherwise it's problematic if some functions exist in chrome but not in Firefox for instance. \n \nAnd, there are a lot of users with old browsers, so even if it's included in newer browsers, the libraries will probably be around for a long time. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They are. Ajax is now included in the browser (called fetch). \nPromises started as libraries, but it&amp;#39;s now included in javascript. \nQuery selectors from jquery is included in browsers nowadays. &lt;/p&gt;\n\n&lt;p&gt;The problem is that it&amp;#39;s a slow process, because all the different browser vendors have to agree to include something. Otherwise it&amp;#39;s problematic if some functions exist in chrome but not in Firefox for instance. &lt;/p&gt;\n\n&lt;p&gt;And, there are a lot of users with old browsers, so even if it&amp;#39;s included in newer browsers, the libraries will probably be around for a long time. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg7yla5", "score_hidden": false, "stickied": false, "created": 1492135871.0, "created_utc": 1492107071.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg7yg53", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nyxin", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "&gt; Or am I missing something?\n\n*Browser caching.*", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Or am I missing something?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;Browser caching.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg7yg53", "score_hidden": false, "stickied": false, "created": 1492135718.0, "created_utc": 1492106918.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg88033", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "RS3_TROLLER", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Politics.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Politics.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg88033", "score_hidden": false, "stickied": false, "created": 1492146169.0, "created_utc": 1492117369.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg89hmn", "gilded": 0, "archived": false, "score": -5, "report_reasons": null, "author": "Triforcey", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Interestingly enough, by now with JS you rarely need to use any of the above-mentioned libraries. For instance, an element with an id can easily be assigned an src attribute like this:\n    someRandomId.src = 'I am a URL in disguise.';\nAs for something like Ajax, you'd only really care about that if you needed live communication. And finally, React. React is honestly overhyped. It's good for the purpose of templating, but that's about it. Even templating can easily be accomplished with some HTML. Just have an element with display: none; That will allow it to be rendered while hidden. You can even just clone it with JS. I'd highly recommend trying building an app without any of the above-mentioned frameworks (Excluding Node.js if used as the backend.) and build a web page. It's a lot easier than one might think.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interestingly enough, by now with JS you rarely need to use any of the above-mentioned libraries. For instance, an element with an id can easily be assigned an src attribute like this:\n    someRandomId.src = &amp;#39;I am a URL in disguise.&amp;#39;;\nAs for something like Ajax, you&amp;#39;d only really care about that if you needed live communication. And finally, React. React is honestly overhyped. It&amp;#39;s good for the purpose of templating, but that&amp;#39;s about it. Even templating can easily be accomplished with some HTML. Just have an element with display: none; That will allow it to be rendered while hidden. You can even just clone it with JS. I&amp;#39;d highly recommend trying building an app without any of the above-mentioned frameworks (Excluding Node.js if used as the backend.) and build a web page. It&amp;#39;s a lot easier than one might think.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg89hmn", "score_hidden": false, "stickied": false, "created": 1492147964.0, "created_utc": 1492119164.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_656ivf", "likes": null, "replies": "", "user_reports": [], "id": "dg89xrw", "gilded": 0, "archived": false, "score": -5, "report_reasons": null, "author": "Mr-Yellow", "parent_id": "t3_656ivf", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Ignoring that AJAX isn't a framework, none of those are things which belong in a browser in any way.\n\nWhat do you need from jQuery in your browser? The ability to use selectors? Well implement that as a clear and concise API with meaningful semantics and a solid specification. Would you implement the whole jQuery as default syntax for Javascript? I'd hope not.\n\nIs there a reason you want to run NodeJS backend in the browser frontend?\n\nYou'd like everyone to start writing markup in javascript like React?", "edited": 1492119946.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ignoring that AJAX isn&amp;#39;t a framework, none of those are things which belong in a browser in any way.&lt;/p&gt;\n\n&lt;p&gt;What do you need from jQuery in your browser? The ability to use selectors? Well implement that as a clear and concise API with meaningful semantics and a solid specification. Would you implement the whole jQuery as default syntax for Javascript? I&amp;#39;d hope not.&lt;/p&gt;\n\n&lt;p&gt;Is there a reason you want to run NodeJS backend in the browser frontend?&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;d like everyone to start writing markup in javascript like React?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dg89xrw", "score_hidden": false, "stickied": false, "created": 1492148522.0, "created_utc": 1492119722.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -5}}], "after": null, "before": null}}]