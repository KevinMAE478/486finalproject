[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "webdev", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65suvv", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 19, "report_reasons": null, "author": "astigsen", "saved": false, "mod_reports": [], "name": "t3_65suvv", "subreddit_name_prefixed": "r/webdev", "approved_by": null, "over_18": false, "domain": "realm.io", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?s=a53909080413bcdcd9eeb119d061b524", "width": 1200, "height": 627}, "resolutions": [{"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=77644d145cf4ccb24f2296660f61e4ef", "width": 108, "height": 56}, {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=bdf42420fa289aaa1590b58ae8f40823", "width": 216, "height": 112}, {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=acfa84d889d2736274943ba059f3bf95", "width": 320, "height": 167}, {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=59eb3f74b77142cba150b18561bee2ad", "width": 640, "height": 334}, {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=7b23e7e8db53ee0dd7717b1c93dbe2a2", "width": 960, "height": 501}, {"url": "https://i.redditmedia.com/Bi32kgjPKoSvk2_QIrf0i3S-QwcwqucfxL_LK9mvSpI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=e329e5ee8c31fe7397d42ef2455ebde7", "width": 1080, "height": 564}], "variants": {}, "id": "xvxt4H9oRZ8AWGTnhEEiqF7Y0gZ5CxRHXtiS__ZA1Sk"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/xuntbOfO4ZQSs_3QI85S1NcVUUJXE557DUyFkZS6aBk.jpg", "subreddit_id": "t5_2qs0q", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/webdev/comments/65suvv/the_postmvc_age_components_redux_and_rx/", "num_reports": null, "locked": false, "stickied": false, "created": 1492423088.0, "url": "https://realm.io/news/the-post-mvc-age/", "author_flair_text": null, "quarantine": false, "title": "The Post-MVC Age (Components, Redux, and Rx)", "created_utc": 1492394288.0, "distinguished": null, "media": null, "upvote_ratio": 0.83, "num_comments": 15, "visited": false, "subreddit_type": "public", "ups": 19}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgelowt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mattaugamer", "parent_id": "t1_dgdfq6k", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "More specifically I'd say that Redux and RxJS are specific solutions to requirements that exist **regardless** of its pattern. Ember has its own handling of state either built-in or using the excellent [ember-state-services](https://emberobserver.com/addons/ember-state-services), which uses weak maps to link draft state to objects, or even quite happily using Redux itself. It's also quite possible to use RxJS Observables in Ember.\n\nThat certain patterns or technologies are more common in one platform than another (Redux in React, RxJS Observables in Angular, etc) doesn't necessarily mean they're intrinsic to it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More specifically I&amp;#39;d say that Redux and RxJS are specific solutions to requirements that exist &lt;strong&gt;regardless&lt;/strong&gt; of its pattern. Ember has its own handling of state either built-in or using the excellent &lt;a href=\"https://emberobserver.com/addons/ember-state-services\"&gt;ember-state-services&lt;/a&gt;, which uses weak maps to link draft state to objects, or even quite happily using Redux itself. It&amp;#39;s also quite possible to use RxJS Observables in Ember.&lt;/p&gt;\n\n&lt;p&gt;That certain patterns or technologies are more common in one platform than another (Redux in React, RxJS Observables in Angular, etc) doesn&amp;#39;t necessarily mean they&amp;#39;re intrinsic to it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgelowt", "score_hidden": false, "stickied": false, "created": 1492513529.0, "created_utc": 1492484729.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdfq6k", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nahnah2017", "parent_id": "t1_dgdb94b", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Interesting, too, that MVC is a methodology/style/process while Redux and Rx are products, essentially.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting, too, that MVC is a methodology/style/process while Redux and Rx are products, essentially.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdfq6k", "score_hidden": false, "stickied": false, "created": 1492462213.0, "created_utc": 1492433413.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgeih8a", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mattaugamer", "parent_id": "t1_dgehlwj", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "I think you're thinking of Angular? Ember doesn't have any such construct. Ember has components that are called components and strictly follow the custom elements syntax and standards.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you&amp;#39;re thinking of Angular? Ember doesn&amp;#39;t have any such construct. Ember has components that are called components and strictly follow the custom elements syntax and standards.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgeih8a", "score_hidden": false, "stickied": false, "created": 1492509626.0, "created_utc": 1492480826.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgehlwj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mvpmvh", "parent_id": "t1_dgdb94b", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Ember has directives tho. Wouldn't consider them components in this new age of web components", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ember has directives tho. Wouldn&amp;#39;t consider them components in this new age of web components&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgehlwj", "score_hidden": false, "stickied": false, "created": 1492508582.0, "created_utc": 1492479782.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdb94b", "gilded": 0, "archived": false, "score": 20, "report_reasons": null, "author": "mattaugamer", "parent_id": "t3_65suvv", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "I don't really get why people have such a hate boner for MVC. It's a simple and clear organisational pattern. \n\nI'd also like to point out that MVC and components are **not** mutually exclusive. Ember, for example, is an MVC framework that uses the MVC pattern as a structural skeleton and as best-practise encourages the use of components for re-usability, isolation and composability, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t really get why people have such a hate boner for MVC. It&amp;#39;s a simple and clear organisational pattern. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d also like to point out that MVC and components are &lt;strong&gt;not&lt;/strong&gt; mutually exclusive. Ember, for example, is an MVC framework that uses the MVC pattern as a structural skeleton and as best-practise encourages the use of components for re-usability, isolation and composability, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdb94b", "score_hidden": false, "stickied": false, "created": 1492450455.0, "created_utc": 1492421655.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 20}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgdkmbf", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "alejalapeno", "parent_id": "t1_dgdjyxx", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "I agree with /u/mattaugamer that using components in a MVC pattern is great and that components aren't post-MVC. The title of the link is marketing, but components as a paradigm is absolutely silly to dismiss as a fad. If you can't separate the methodology from the framework that's promoting it then you are lost.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree with &lt;a href=\"/u/mattaugamer\"&gt;/u/mattaugamer&lt;/a&gt; that using components in a MVC pattern is great and that components aren&amp;#39;t post-MVC. The title of the link is marketing, but components as a paradigm is absolutely silly to dismiss as a fad. If you can&amp;#39;t separate the methodology from the framework that&amp;#39;s promoting it then you are lost.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdkmbf", "score_hidden": false, "stickied": false, "created": 1492469530.0, "created_utc": 1492440730.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdjyxx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nahnah2017", "parent_id": "t1_dgdi3aj", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "You are posting on reddit which used to claim MVC was the gold standard and now proclaims React and all these things as gold. This isn't evolution. It's marketing and fads.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are posting on reddit which used to claim MVC was the gold standard and now proclaims React and all these things as gold. This isn&amp;#39;t evolution. It&amp;#39;s marketing and fads.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdjyxx", "score_hidden": false, "stickied": false, "created": 1492468696.0, "created_utc": 1492439896.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdi3aj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "alejalapeno", "parent_id": "t1_dgdg2g3", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "MVC is from [1978](http://heim.ifi.uio.no/~trygver/themes/mvc/mvc-index.html) and we're living in the age of WebDev where it is only ~27 years old. Rapid evolutions in methodologies and paradigms should be happening.\n\nThe automobile was created in 1886 but Henry Ford revolutionized the industry with the assembly line in 1913. 27 years later... Don't mistake evolutionary learnings in the way we do things for framework and language \"trends\" and \"fads\".", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;MVC is from &lt;a href=\"http://heim.ifi.uio.no/%7Etrygver/themes/mvc/mvc-index.html\"&gt;1978&lt;/a&gt; and we&amp;#39;re living in the age of WebDev where it is only ~27 years old. Rapid evolutions in methodologies and paradigms should be happening.&lt;/p&gt;\n\n&lt;p&gt;The automobile was created in 1886 but Henry Ford revolutionized the industry with the assembly line in 1913. 27 years later... Don&amp;#39;t mistake evolutionary learnings in the way we do things for framework and language &amp;quot;trends&amp;quot; and &amp;quot;fads&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdi3aj", "score_hidden": false, "stickied": false, "created": 1492466085.0, "created_utc": 1492437285.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdg2g3", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nahnah2017", "parent_id": "t3_65suvv", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "In three years, we'll all be reading about the Post-Components, Redux, Rx Age. Which exemplifies what I've said for decades. Stick to the fundamentals and what you use will never fall out of favor or go out of style.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In three years, we&amp;#39;ll all be reading about the Post-Components, Redux, Rx Age. Which exemplifies what I&amp;#39;ve said for decades. Stick to the fundamentals and what you use will never fall out of favor or go out of style.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdg2g3", "score_hidden": false, "stickied": false, "created": 1492462819.0, "created_utc": 1492434019.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgeit07", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mattaugamer", "parent_id": "t1_dge9pov", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "This is one thing I find interesting about the \"component\" structure. Where do you put data access? Where do you put persistence? If your components are supposed to be \"isolated\" at some point you need to either have a skeleton that holds the components (like Ember) that deals with these sorts of lifecycle hooks, persistence, etc, and calls and manages them. **Or** you need some sort of root level component that actually has all this stuff and then violates all of the principles of isolation and composability that you were setting out to achieve in the first place, right?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is one thing I find interesting about the &amp;quot;component&amp;quot; structure. Where do you put data access? Where do you put persistence? If your components are supposed to be &amp;quot;isolated&amp;quot; at some point you need to either have a skeleton that holds the components (like Ember) that deals with these sorts of lifecycle hooks, persistence, etc, and calls and manages them. &lt;strong&gt;Or&lt;/strong&gt; you need some sort of root level component that actually has all this stuff and then violates all of the principles of isolation and composability that you were setting out to achieve in the first place, right?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgeit07", "score_hidden": false, "stickied": false, "created": 1492510000.0, "created_utc": 1492481200.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dge9pov", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "the_bacon", "parent_id": "t1_dgdorrz", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "MVC is just about giving each piece of code a role of either dealing with the view, dealing with logic / data, or connecting the two. Your view shouldn't be doing any heavy lifting and should only 'care' about presentation of data passed to it via the controller from the model. It gives us a standard pattern to follow that helps us decide where to put things. Very helpful in teams especially. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;MVC is just about giving each piece of code a role of either dealing with the view, dealing with logic / data, or connecting the two. Your view shouldn&amp;#39;t be doing any heavy lifting and should only &amp;#39;care&amp;#39; about presentation of data passed to it via the controller from the model. It gives us a standard pattern to follow that helps us decide where to put things. Very helpful in teams especially. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dge9pov", "score_hidden": false, "stickied": false, "created": 1492498581.0, "created_utc": 1492469781.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgdqrzu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Obio1", "parent_id": "t1_dgdorrz", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Yes. Already broadly supported.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes. Already broadly supported.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdqrzu", "score_hidden": false, "stickied": false, "created": 1492476650.0, "created_utc": 1492447850.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdorrz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "thomasdevin", "parent_id": "t1_dgcycgz", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Haha yeah same, still don't really understand MVC. When is ES6 even going to be standardized? Do browsers support it yet?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha yeah same, still don&amp;#39;t really understand MVC. When is ES6 even going to be standardized? Do browsers support it yet?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgdorrz", "score_hidden": false, "stickied": false, "created": 1492474423.0, "created_utc": 1492445623.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65suvv", "likes": null, "replies": "", "user_reports": [], "id": "dgd62np", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Pancakepalpatine", "parent_id": "t1_dgcycgz", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "Preach.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Preach.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgd62np", "score_hidden": false, "stickied": false, "created": 1492436284.0, "created_utc": 1492407484.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcycgz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Obio1", "parent_id": "t3_65suvv", "subreddit_name_prefixed": "r/webdev", "controversiality": 1, "body": "Well I suppose I should be happy I never really got my head around MVC.\n\nMaybe if I never bother to learn es6 it'll go away too.\n\n:D\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well I suppose I should be happy I never really got my head around MVC.&lt;/p&gt;\n\n&lt;p&gt;Maybe if I never bother to learn es6 it&amp;#39;ll go away too.&lt;/p&gt;\n\n&lt;p&gt;:D&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgcycgz", "score_hidden": false, "stickied": false, "created": 1492423853.0, "created_utc": 1492395053.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}]