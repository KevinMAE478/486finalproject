[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "webdev", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The other day I bought myself a VPS thru Linode. Nothing expensive, just their cheap $5/mo plan. After buying it, I started configuring it and making sure everything is secure before I start my foray into webdev. I then setup a free Cloudflare account and had it take over the DNS for my domain &amp;#39;example.com&amp;#39;. &lt;/p&gt;\n\n&lt;p&gt;Now, ideally, I want all requests to example.com to be redirected to &lt;a href=\"http://www.example.com\"&gt;www.example.com&lt;/a&gt;. I&amp;#39;ll likely be running a few other sites on subdomains at alpha.example.com, beta.example.com, and gamma.example.com. Now, all requests to these sites (www + alpha-gamma) should be done in https. If the user does not enter it in as https, it should be redirected as so. I know I can do this via .htaccess files, but shouldn&amp;#39;t i just do it in each individual .conf file? And while I don&amp;#39;t plan on visiting the VPS&amp;#39;s IP via a browser, I would still like those requests to be directed towards https as well.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll also be using Let&amp;#39;s Encrypt to auto-renew their free certificates, but if I&amp;#39;m understanding things correctly, I&amp;#39;ve got to use some different manner of obtaining them if I&amp;#39;m behind CloudFlare... Something called webroot? I guess I&amp;#39;ll also need to obtain certificates for example.com, &lt;a href=\"http://www.example.com\"&gt;www.example.com&lt;/a&gt;, alpha.example.com, beta.example.com, and gamma.example.com correct?&lt;/p&gt;\n\n&lt;p&gt;To sum everything up:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;All requests to my server, either on the domain, or the ip, should be forwarded to https.&lt;/li&gt;\n&lt;li&gt;All requests to my root domain example.com should also be forwarded to www (in addition to the https)&lt;/li&gt;\n&lt;li&gt;Proper setup of Let&amp;#39;s Encrypt auto-CA issuance and renewal behind CloudFlare&lt;/li&gt;\n&lt;li&gt;I want www/(root), alpha, beta, and gamma to all have different .conf files, so they can be enabled and disabled as necessary.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Thanks in advance for anyone who can help assist me.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "The other day I bought myself a VPS thru Linode. Nothing expensive, just their cheap $5/mo plan. After buying it, I started configuring it and making sure everything is secure before I start my foray into webdev. I then setup a free Cloudflare account and had it take over the DNS for my domain 'example.com'. \n\nNow, ideally, I want all requests to example.com to be redirected to www.example.com. I'll likely be running a few other sites on subdomains at alpha.example.com, beta.example.com, and gamma.example.com. Now, all requests to these sites (www + alpha-gamma) should be done in https. If the user does not enter it in as https, it should be redirected as so. I know I can do this via .htaccess files, but shouldn't i just do it in each individual .conf file? And while I don't plan on visiting the VPS's IP via a browser, I would still like those requests to be directed towards https as well.\n\nI'll also be using Let's Encrypt to auto-renew their free certificates, but if I'm understanding things correctly, I've got to use some different manner of obtaining them if I'm behind CloudFlare... Something called webroot? I guess I'll also need to obtain certificates for example.com, www.example.com, alpha.example.com, beta.example.com, and gamma.example.com correct?\n\nTo sum everything up:\n\n* All requests to my server, either on the domain, or the ip, should be forwarded to https.\n* All requests to my root domain example.com should also be forwarded to www (in addition to the https)\n* Proper setup of Let's Encrypt auto-CA issuance and renewal behind CloudFlare\n* I want www/(root), alpha, beta, and gamma to all have different .conf files, so they can be enabled and disabled as necessary.\n\nThanks in advance for anyone who can help assist me.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65jpgi", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 12, "report_reasons": null, "author": "UDK450", "saved": false, "mod_reports": [], "name": "t3_65jpgi", "subreddit_name_prefixed": "r/webdev", "approved_by": null, "over_18": false, "domain": "self.webdev", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qs0q", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/webdev/comments/65jpgi/properly_setting_up_apache_with_lets_encrypt_and/", "num_reports": null, "locked": false, "stickied": false, "created": 1492299804.0, "url": "https://www.reddit.com/r/webdev/comments/65jpgi/properly_setting_up_apache_with_lets_encrypt_and/", "author_flair_text": null, "quarantine": false, "title": "Properly setting up Apache with Let's Encrypt and multiple websites while behind Cloudflare", "created_utc": 1492271004.0, "distinguished": null, "media": null, "upvote_ratio": 0.75, "num_comments": 2, "visited": false, "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65jpgi", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qs0q", "removal_reason": null, "link_id": "t3_65jpgi", "likes": null, "replies": "", "user_reports": [], "id": "dgbkar9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Hello_Mouse", "parent_id": "t1_dgb2cz7", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "&gt; this is because the other two modes (DNS and SNI) will be talking to Cloudflare, not you, so you can't use them to prove you're in control.\n\nThe DNS challenge actually can be used with cloudflare! I've recently gotten LetsEncrypt to issue a cert for my non public facing server, which has a domain using cloudflare's nameservers (because namecheap API access had steep requirements).\n\nhttps://blog.thesparktree.com/generating-intranet-and-private-network-ssl", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;this is because the other two modes (DNS and SNI) will be talking to Cloudflare, not you, so you can&amp;#39;t use them to prove you&amp;#39;re in control.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The DNS challenge actually can be used with cloudflare! I&amp;#39;ve recently gotten LetsEncrypt to issue a cert for my non public facing server, which has a domain using cloudflare&amp;#39;s nameservers (because namecheap API access had steep requirements).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.thesparktree.com/generating-intranet-and-private-network-ssl\"&gt;https://blog.thesparktree.com/generating-intranet-and-private-network-ssl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgbkar9", "score_hidden": false, "stickied": false, "created": 1492339154.0, "created_utc": 1492310354.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb2cz7", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "tialaramex", "parent_id": "t3_65jpgi", "subreddit_name_prefixed": "r/webdev", "controversiality": 0, "body": "If you intend to remain behind Cloudflare you can get them to provide you with their own private certificates, this will likely be easier / less work.\n\nWhen Cloudflare provides CDN service for HTTPS, the user is talking to Cloudflare over HTTPS (not you) and they'll get a certificate issued for your DNS names (they have control so they can do that without further steps by you) to make that work. Because they're providing the CDN, the certificates on your actual site only matter for talking to Cloudflare, not to end users, so you can use ones Cloudflare supplies for that purpose if it makes your life easier.\n\nYou are welcome to use Let's Encrypt, and it would make sense to do so if you plan to, or think you might, get rid of Cloudflare, since the Cloudflare private certs won't be trusted by anybody except Cloudflare.\n\nYes, you must use Webroot mode to prove control of your site to Let's Encrypt, this is because the other two modes (DNS and SNI) will be talking to Cloudflare, not you, so you can't use them to prove you're in control. The webroot mode works by Let's Encrypt agreeing with you what should appear in a magic file on your server, then they try to access the file, and it has what they expected in it, so that proves you control the server.\n\nIf you're providing control of alpha.example.com, you will need to arrange for the file to appear on alpha.example.com (not www.example.com or beta.example.com) and so on. So long as you have 100 or less DNS names, Let's Encrypt will be happy to let you list all of them in a single certificate, which can make configuration easier and mean less work for you. If alpha.example.com and gamma.example.com are actually very different and you'd rather keep them separate (e.g. one is your cartoons about politics, the other is a blog about fishing), that's fine too, of course but it means you will have to do some extra work for the extra certificates.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you intend to remain behind Cloudflare you can get them to provide you with their own private certificates, this will likely be easier / less work.&lt;/p&gt;\n\n&lt;p&gt;When Cloudflare provides CDN service for HTTPS, the user is talking to Cloudflare over HTTPS (not you) and they&amp;#39;ll get a certificate issued for your DNS names (they have control so they can do that without further steps by you) to make that work. Because they&amp;#39;re providing the CDN, the certificates on your actual site only matter for talking to Cloudflare, not to end users, so you can use ones Cloudflare supplies for that purpose if it makes your life easier.&lt;/p&gt;\n\n&lt;p&gt;You are welcome to use Let&amp;#39;s Encrypt, and it would make sense to do so if you plan to, or think you might, get rid of Cloudflare, since the Cloudflare private certs won&amp;#39;t be trusted by anybody except Cloudflare.&lt;/p&gt;\n\n&lt;p&gt;Yes, you must use Webroot mode to prove control of your site to Let&amp;#39;s Encrypt, this is because the other two modes (DNS and SNI) will be talking to Cloudflare, not you, so you can&amp;#39;t use them to prove you&amp;#39;re in control. The webroot mode works by Let&amp;#39;s Encrypt agreeing with you what should appear in a magic file on your server, then they try to access the file, and it has what they expected in it, so that proves you control the server.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re providing control of alpha.example.com, you will need to arrange for the file to appear on alpha.example.com (not &lt;a href=\"http://www.example.com\"&gt;www.example.com&lt;/a&gt; or beta.example.com) and so on. So long as you have 100 or less DNS names, Let&amp;#39;s Encrypt will be happy to let you list all of them in a single certificate, which can make configuration easier and mean less work for you. If alpha.example.com and gamma.example.com are actually very different and you&amp;#39;d rather keep them separate (e.g. one is your cartoons about politics, the other is a blog about fishing), that&amp;#39;s fine too, of course but it means you will have to do some extra work for the extra certificates.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "webdev", "name": "t1_dgb2cz7", "score_hidden": false, "stickied": false, "created": 1492313742.0, "created_utc": 1492284942.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}]