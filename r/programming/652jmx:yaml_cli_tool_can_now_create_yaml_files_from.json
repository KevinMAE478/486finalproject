[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "652jmx", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 24, "report_reasons": null, "author": "mikefarah", "saved": false, "mod_reports": [], "name": "t3_652jmx", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/652jmx/yaml_cli_tool_can_now_create_yaml_files_from/", "num_reports": null, "locked": false, "stickied": false, "created": 1492076348.0, "url": "https://github.com/mikefarah/yaml", "author_flair_text": null, "quarantine": false, "title": "yaml cli tool can now create yaml files from scratch", "created_utc": 1492047548.0, "distinguished": null, "media": null, "upvote_ratio": 0.74, "num_comments": 14, "visited": false, "subreddit_type": "public", "ups": 24}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg78o5j", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mikefarah", "parent_id": "t1_dg7815u", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "true, it's more handy if you need to make a deeply nested yaml file.\n\n    yaml n a.b.c[0].d value\n\nBut yes, you can totally use cat", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;true, it&amp;#39;s more handy if you need to make a deeply nested yaml file.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;yaml n a.b.c[0].d value\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But yes, you can totally use cat&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg78o5j", "score_hidden": false, "stickied": false, "created": 1492093371.0, "created_utc": 1492064571.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg7jlmm", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "editor_of_the_beast", "parent_id": "t1_dg7815u", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That's like saying \"but I can just write the YAML.\" Yea, you can write assembly too, but as it turns out a shorthand is very convenient.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s like saying &amp;quot;but I can just write the YAML.&amp;quot; Yea, you can write assembly too, but as it turns out a shorthand is very convenient.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7jlmm", "score_hidden": false, "stickied": false, "created": 1492119248.0, "created_utc": 1492090448.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7815u", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "Elavid", "parent_id": "t3_652jmx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Huh, I can do that with cat:\n\n    cat &gt; file.yaml &lt;&lt;YAML\n    reddit: yes\n    YAML\n\nOh, and if I need to make an empty YAML file, I use `touch`.\n", "edited": 1492064048.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Huh, I can do that with cat:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat &amp;gt; file.yaml &amp;lt;&amp;lt;YAML\nreddit: yes\nYAML\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Oh, and if I need to make an empty YAML file, I use &lt;code&gt;touch&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7815u", "score_hidden": false, "stickied": false, "created": 1492091892.0, "created_utc": 1492063092.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg7hn93", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "steamruler", "parent_id": "t1_dg7fe00", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Maybe.\n\nThe syntax have a bunch of exceptions and decisions that complicates writing a parser. The beauty of INI and why it's still around is because it's extremely simple to parse and use. It's also extremely easy to edit, since it doesn't require much knowledge of the syntax. I could, over the phone, walk my grandmother through changing a setting in an INI file.\n\nAnd finally, unpopular opinion incoming - I think the code should dictate what type a field in the config should be interpreted as. Dynamic types like in JSON, YAML and TOML gets awkward to use in more strongly typed languages. I'm not saying there should be another version of the hell that's XSD, but in an overwhelming amount of cases, having a date where you expect a string will break things.\n\nAlso, I'm tired of reinventing ways to store a time with a timezone identifier instead of an UTC offset.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe.&lt;/p&gt;\n\n&lt;p&gt;The syntax have a bunch of exceptions and decisions that complicates writing a parser. The beauty of INI and why it&amp;#39;s still around is because it&amp;#39;s extremely simple to parse and use. It&amp;#39;s also extremely easy to edit, since it doesn&amp;#39;t require much knowledge of the syntax. I could, over the phone, walk my grandmother through changing a setting in an INI file.&lt;/p&gt;\n\n&lt;p&gt;And finally, unpopular opinion incoming - I think the code should dictate what type a field in the config should be interpreted as. Dynamic types like in JSON, YAML and TOML gets awkward to use in more strongly typed languages. I&amp;#39;m not saying there should be another version of the hell that&amp;#39;s XSD, but in an overwhelming amount of cases, having a date where you expect a string will break things.&lt;/p&gt;\n\n&lt;p&gt;Also, I&amp;#39;m tired of reinventing ways to store a time with a timezone identifier instead of an UTC offset.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7hn93", "score_hidden": false, "stickied": false, "created": 1492116407.0, "created_utc": 1492087607.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7fe00", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "AngularBeginner", "parent_id": "t1_dg7fbp1", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "TOML? https://github.com/toml-lang/toml", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TOML? &lt;a href=\"https://github.com/toml-lang/toml\"&gt;https://github.com/toml-lang/toml&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7fe00", "score_hidden": false, "stickied": false, "created": 1492112225.0, "created_utc": 1492083425.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7fbp1", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "steamruler", "parent_id": "t1_dg76pvw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The syntax frustrates me sometimes though. For some reason I can't quite grasp it.\n\nI wonder if we'll get a reasonably simple configuration file format in my lifetime. Something like de-facto INI, but with dictionary/array support and proper syntax to support it. INI-esque configs are great for simple configs though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The syntax frustrates me sometimes though. For some reason I can&amp;#39;t quite grasp it.&lt;/p&gt;\n\n&lt;p&gt;I wonder if we&amp;#39;ll get a reasonably simple configuration file format in my lifetime. Something like de-facto INI, but with dictionary/array support and proper syntax to support it. INI-esque configs are great for simple configs though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7fbp1", "score_hidden": false, "stickied": false, "created": 1492112080.0, "created_utc": 1492083280.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg76pvw", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "AngularBeginner", "parent_id": "t1_dg7607o", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "YAML is indefinitely better as a format for complex configuration files written by humans than JSON, because it allows comments.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;YAML is indefinitely better as a format for complex configuration files written by humans than JSON, because it allows comments.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg76pvw", "score_hidden": false, "stickied": false, "created": 1492089164.0, "created_utc": 1492060364.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg9l4fm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "dunoid", "parent_id": "t1_dg7607o", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "YAML great for data people have to read/write, but it yells at me for using tabs to indent.  I don't need my *data serialization format* to be a pedant about whitespace.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;YAML great for data people have to read/write, but it yells at me for using tabs to indent.  I don&amp;#39;t need my &lt;em&gt;data serialization format&lt;/em&gt; to be a pedant about whitespace.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg9l4fm", "score_hidden": false, "stickied": false, "created": 1492225510.0, "created_utc": 1492196710.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7607o", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Lothrazar", "parent_id": "t3_652jmx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "In before all the JSON is better comments", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In before all the JSON is better comments&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7607o", "score_hidden": false, "stickied": false, "created": 1492087932.0, "created_utc": 1492059132.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg8n82h", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mikefarah", "parent_id": "t1_dg7jpxi", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "yep, see http://mikefarah.github.io/yaml/create/#creating-using-a-create-script", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;yep, see &lt;a href=\"http://mikefarah.github.io/yaml/create/#creating-using-a-create-script\"&gt;http://mikefarah.github.io/yaml/create/#creating-using-a-create-script&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg8n82h", "score_hidden": false, "stickied": false, "created": 1492166520.0, "created_utc": 1492137720.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7jpxi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "editor_of_the_beast", "parent_id": "t3_652jmx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Is there a syntax for creating nested objects rather than just a value at a.b for example? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there a syntax for creating nested objects rather than just a value at a.b for example? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7jpxi", "score_hidden": false, "stickied": false, "created": 1492119409.0, "created_utc": 1492090609.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg7dfkr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mikefarah", "parent_id": "t1_dg7cf8f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yep you can totally do that using good old unix piping, and it's what you'd need to do to use more sophisticated jq functionality. \n\nHowever, you would then need to install jq ;)\n\nOne of the reasons I wrote this in go is to have a portable tool that had no dependencies, and so far the simple functions I've implemented have been enough to avoid installing and piping into jq and back (for me anyway). That and I really wanted to play with Golang :)\n\nConversion wise I would think it's pretty much lossless except for any comments, but I haven't really played around with doing that. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep you can totally do that using good old unix piping, and it&amp;#39;s what you&amp;#39;d need to do to use more sophisticated jq functionality. &lt;/p&gt;\n\n&lt;p&gt;However, you would then need to install jq ;)&lt;/p&gt;\n\n&lt;p&gt;One of the reasons I wrote this in go is to have a portable tool that had no dependencies, and so far the simple functions I&amp;#39;ve implemented have been enough to avoid installing and piping into jq and back (for me anyway). That and I really wanted to play with Golang :)&lt;/p&gt;\n\n&lt;p&gt;Conversion wise I would think it&amp;#39;s pretty much lossless except for any comments, but I haven&amp;#39;t really played around with doing that. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7dfkr", "score_hidden": false, "stickied": false, "created": 1492107077.0, "created_utc": 1492078277.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_652jmx", "likes": null, "replies": "", "user_reports": [], "id": "dg7ffbk", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "AngularBeginner", "parent_id": "t1_dg7cf8f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Converting YAML to JSON and then converting the JSON to YAML is lossy. JSON does not support all the stuff that YAML offers.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Converting YAML to JSON and then converting the JSON to YAML is lossy. JSON does not support all the stuff that YAML offers.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7ffbk", "score_hidden": false, "stickied": false, "created": 1492112304.0, "created_utc": 1492083504.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7cf8f", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "saevarb", "parent_id": "t3_652jmx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Since you can essentially convert between json and yaml, why not write a toll that takes yaml, concerts it to json, pass it to jq along with other arguments and then takes the output and converts it to yaml? Boom, done, pq for yaml. Unless the conversion isn't lossless? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Since you can essentially convert between json and yaml, why not write a toll that takes yaml, concerts it to json, pass it to jq along with other arguments and then takes the output and converts it to yaml? Boom, done, pq for yaml. Unless the conversion isn&amp;#39;t lossless? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7cf8f", "score_hidden": false, "stickied": false, "created": 1492104004.0, "created_utc": 1492075204.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]