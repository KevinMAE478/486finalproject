[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65pbcb", "gilded": 1, "secure_media_embed": {}, "clicked": false, "score": 305, "report_reasons": null, "author": "nonrecursive", "saved": false, "mod_reports": [], "name": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "flyingmachinestudios.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65pbcb/techniques_for_efficiently_learning_programming/", "num_reports": null, "locked": false, "stickied": false, "created": 1492381133.0, "url": "http://www.flyingmachinestudios.com/programming/learn-programming-languages-efficiently/", "author_flair_text": null, "quarantine": false, "title": "Techniques for Efficiently Learning Programming Languages", "created_utc": 1492352333.0, "distinguished": null, "media": null, "upvote_ratio": 0.92, "num_comments": 44, "visited": false, "subreddit_type": "public", "ups": 305}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdeugw", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "enteleform", "parent_id": "t1_dgcna34", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That's my go-to for trying out new languages.  \n\n[**HyperPolyglot**](http://hyperpolyglot.org/) is another good one, it has some pretty useful side-by-side comparisons.  \n\nSomething in-between the two would be ideal, where you could select specific languages to compare.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s my go-to for trying out new languages.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://hyperpolyglot.org/\"&gt;&lt;strong&gt;HyperPolyglot&lt;/strong&gt;&lt;/a&gt; is another good one, it has some pretty useful side-by-side comparisons.  &lt;/p&gt;\n\n&lt;p&gt;Something in-between the two would be ideal, where you could select specific languages to compare.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdeugw", "score_hidden": false, "stickied": false, "created": 1492460497.0, "created_utc": 1492431697.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcna34", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "Regimardyl", "parent_id": "t1_dgc5zz6", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "https://learnxinyminutes.com/ is a great site for quickly checking up on syntax and some basic methods.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://learnxinyminutes.com/\"&gt;https://learnxinyminutes.com/&lt;/a&gt; is a great site for quickly checking up on syntax and some basic methods.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcna34", "score_hidden": false, "stickied": false, "created": 1492408909.0, "created_utc": 1492380109.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdbr9m", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "valenterry", "parent_id": "t1_dgcvrfc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; I think you just reiterated his drawback.\n\nI always read the comments first... :\\^)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I think you just reiterated his drawback.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I always read the comments first... :^)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdbr9m", "score_hidden": false, "stickied": false, "created": 1492452185.0, "created_utc": 1492423385.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcvrfc", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "daerogami", "parent_id": "t1_dgcf72p", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think you just reiterated his drawback.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you just reiterated his drawback.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcvrfc", "score_hidden": false, "stickied": false, "created": 1492420381.0, "created_utc": 1492391581.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 10}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcf72p", "gilded": 0, "archived": false, "score": 25, "report_reasons": null, "author": "valenterry", "parent_id": "t1_dgc5zz6", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; I already know what I want to build and how I want to build it\n\nI don't think it is a good precondition to know *how* to build something when learning a new language. Because the *how* can be such a different beast that it is actually the essence of what you need to learn. Unless your language are really similiar, conceptwise - in this case I agree with your approach.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I already know what I want to build and how I want to build it&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&amp;#39;t think it is a good precondition to know &lt;em&gt;how&lt;/em&gt; to build something when learning a new language. Because the &lt;em&gt;how&lt;/em&gt; can be such a different beast that it is actually the essence of what you need to learn. Unless your language are really similiar, conceptwise - in this case I agree with your approach.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcf72p", "score_hidden": false, "stickied": false, "created": 1492398358.0, "created_utc": 1492369558.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 25}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgcchd1", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "_Mardoxx", "parent_id": "t1_dgc5zz6", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yeah or the good old \"how do i x\" in google", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah or the good old &amp;quot;how do i x&amp;quot; in google&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcchd1", "score_hidden": false, "stickied": false, "created": 1492394709.0, "created_utc": 1492365909.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdjevr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ianff", "parent_id": "t1_dgc5zz6", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That works in your Java/C# and Python/C# examples because those languages are so similar.  Doing that won't help you learn a language that is very different such as a functional one.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That works in your Java/C# and Python/C# examples because those languages are so similar.  Doing that won&amp;#39;t help you learn a language that is very different such as a functional one.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdjevr", "score_hidden": false, "stickied": false, "created": 1492467949.0, "created_utc": 1492439149.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc5zz6", "gilded": 0, "archived": false, "score": 51, "report_reasons": null, "author": "SubmittedBuy", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I learn other languages using google searches. For instance \"Java version of C# DateTime.TryParse\" or \"Python version of C# Task\". \n\nMore often than not I get stack overflow results with exactly what I need. I already know what I want to build and how I want to build it. I just need help with method names and syntax. The drawback is that I may not be learning whatever paradigm the language designers are pushing. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I learn other languages using google searches. For instance &amp;quot;Java version of C# DateTime.TryParse&amp;quot; or &amp;quot;Python version of C# Task&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;More often than not I get stack overflow results with exactly what I need. I already know what I want to build and how I want to build it. I just need help with method names and syntax. The drawback is that I may not be learning whatever paradigm the language designers are pushing. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc5zz6", "score_hidden": false, "stickied": false, "created": 1492386139.0, "created_utc": 1492357339.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 51}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgd0z6d", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "trrSA", "parent_id": "t1_dgcj3o8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That was my thoughts. I may have missed the bit at the top that said 'Here is some general learning techniques where we use *learning a language* as an example of their application'.\n\nVery odd.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That was my thoughts. I may have missed the bit at the top that said &amp;#39;Here is some general learning techniques where we use &lt;em&gt;learning a language&lt;/em&gt; as an example of their application&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;Very odd.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd0z6d", "score_hidden": false, "stickied": false, "created": 1492427545.0, "created_utc": 1492398745.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcj3o8", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "snaftyroot", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "wow. I was expecting an utter garbage clickbait article.  but that's some pretty sound advice. granted, it has little to do specifically with programming, but those are some great strategies that can be applied to most anything.  good job", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;wow. I was expecting an utter garbage clickbait article.  but that&amp;#39;s some pretty sound advice. granted, it has little to do specifically with programming, but those are some great strategies that can be applied to most anything.  good job&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcj3o8", "score_hidden": false, "stickied": false, "created": 1492403436.0, "created_utc": 1492374636.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgcpwq5", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "freydank", "parent_id": "t1_dgcpiof", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "https://www.reddit.com/r/programming/comments/65pbcb/techniques_for_efficiently_learning_programming/dgcna34", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/programming/comments/65pbcb/techniques_for_efficiently_learning_programming/dgcna34\"&gt;https://www.reddit.com/r/programming/comments/65pbcb/techniques_for_efficiently_learning_programming/dgcna34&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcpwq5", "score_hidden": false, "stickied": false, "created": 1492412478.0, "created_utc": 1492383678.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdtkod", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vine-el", "parent_id": "t1_dgdaz6f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "But if they don't make the entire book about FP, people will just write Java code in Scala.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But if they don&amp;#39;t make the entire book about FP, people will just write Java code in Scala.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdtkod", "score_hidden": false, "stickied": false, "created": 1492479756.0, "created_utc": 1492450956.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdaz6f", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "vkgfx", "parent_id": "t1_dgcr577", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Haha, I was going to post the same thing in here. Working through it now.\n\nIt was so annoying when I looked into Scala a while back and every single guide spent tooooons of time telling me how awesome FP was and giving me a background on various FP/OOP patterns that Scala supports. I don't need something to hold my hand through every single way I could use FP to do ___ on a list, or another intro to tail recursion. Just tell me how Scala does shit assuming that I've done almost everything it does in a different language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha, I was going to post the same thing in here. Working through it now.&lt;/p&gt;\n\n&lt;p&gt;It was so annoying when I looked into Scala a while back and every single guide spent tooooons of time telling me how awesome FP was and giving me a background on various FP/OOP patterns that Scala supports. I don&amp;#39;t need something to hold my hand through every single way I could use FP to do ___ on a list, or another intro to tail recursion. Just tell me how Scala does shit assuming that I&amp;#39;ve done almost everything it does in a different language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdaz6f", "score_hidden": false, "stickied": false, "created": 1492449506.0, "created_utc": 1492420706.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdvm6n", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "VeryCoolVeryCool", "parent_id": "t1_dgcr577", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "just started working through this book. Love it.  way better than the Oreilly book ive got. -- I love how everything is explained, coming from Java.  It's nice that they provide context for everything.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;just started working through this book. Love it.  way better than the Oreilly book ive got. -- I love how everything is explained, coming from Java.  It&amp;#39;s nice that they provide context for everything.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdvm6n", "score_hidden": false, "stickied": false, "created": 1492482015.0, "created_utc": 1492453215.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcr577", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "lesstables", "parent_id": "t1_dgcpiof", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "This is why I'm appreciating the book \"Scala For The impatient\". It assumes you already know how to code and just want to learn Scala. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is why I&amp;#39;m appreciating the book &amp;quot;Scala For The impatient&amp;quot;. It assumes you already know how to code and just want to learn Scala. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcr577", "score_hidden": false, "stickied": false, "created": 1492414189.0, "created_utc": 1492385389.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgcwul5", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "SimonGray", "parent_id": "t1_dgcpiof", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can usually find books that are meant for experienced programmers. I find that is even the case with new languages that have few books out. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can usually find books that are meant for experienced programmers. I find that is even the case with new languages that have few books out. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcwul5", "score_hidden": false, "stickied": false, "created": 1492421773.0, "created_utc": 1492392973.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgd52nh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "spacelibby", "parent_id": "t1_dgcpiof", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I mean, you can try the language specification. They're usually pretty boring, but they do a good job of getting to the syntax. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean, you can try the language specification. They&amp;#39;re usually pretty boring, but they do a good job of getting to the syntax. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd52nh", "score_hidden": false, "stickied": false, "created": 1492434263.0, "created_utc": 1492405463.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgcsc94", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "milesrout", "parent_id": "t1_dgcpiof", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Everyone has different experience, though. Even if something isn't written for the absolute beginner, it's probably going to be written for someone unfamiliar with the paradigm if it's not a Java-like language.\n\nA book on Standard ML or Scala or some language I don't know might as well be written for a complete beginner of programming if it doesn't at least assume I know all the languages that I do know. I'd be far more  annoyed by a whole lot of analogies to Java (a language I haven't touched in a decade) than I would be by analogies to real life. \n\nUltimately that means you either get over it, and skip the bits you already know, or you somehow convince someone to make n * 2^n 'Learn language X for {A, B, C, ...} programmers' books where n is the number of programming languages in existence.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Everyone has different experience, though. Even if something isn&amp;#39;t written for the absolute beginner, it&amp;#39;s probably going to be written for someone unfamiliar with the paradigm if it&amp;#39;s not a Java-like language.&lt;/p&gt;\n\n&lt;p&gt;A book on Standard ML or Scala or some language I don&amp;#39;t know might as well be written for a complete beginner of programming if it doesn&amp;#39;t at least assume I know all the languages that I do know. I&amp;#39;d be far more  annoyed by a whole lot of analogies to Java (a language I haven&amp;#39;t touched in a decade) than I would be by analogies to real life. &lt;/p&gt;\n\n&lt;p&gt;Ultimately that means you either get over it, and skip the bits you already know, or you somehow convince someone to make n * 2&lt;sup&gt;n&lt;/sup&gt; &amp;#39;Learn language X for {A, B, C, ...} programmers&amp;#39; books where n is the number of programming languages in existence.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcsc94", "score_hidden": false, "stickied": false, "created": 1492415786.0, "created_utc": 1492386986.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcpiof", "gilded": 0, "archived": false, "score": 27, "report_reasons": null, "author": "asdfkjasdhkasd", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The most annoying thing when trying to learn other languages is that all the tutorials are for absolute beginners. Because everyone is trying to market their programming material towards the larger audience. \n\nI just want to learn the syntax but instead I have to weed through all the bullshit about variables, if statements, for loops, while loop, functions, classes etc. I already understand these things I just want the damn syntax!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The most annoying thing when trying to learn other languages is that all the tutorials are for absolute beginners. Because everyone is trying to market their programming material towards the larger audience. &lt;/p&gt;\n\n&lt;p&gt;I just want to learn the syntax but instead I have to weed through all the bullshit about variables, if statements, for loops, while loop, functions, classes etc. I already understand these things I just want the damn syntax!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcpiof", "score_hidden": false, "stickied": false, "created": 1492411943.0, "created_utc": 1492383143.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 27}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdn8id", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "MagicMurderBagYT", "parent_id": "t1_dgd4e78", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Is the quality of the tooling superb? C#, Java\n\nAlso: Kotlin, Clojure\n\n&gt; Is the breadth of the ecosystem superb?\n\nAlso: Kotlin, Clojure\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Is the quality of the tooling superb? C#, Java&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Also: Kotlin, Clojure&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Is the breadth of the ecosystem superb?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Also: Kotlin, Clojure&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdn8id", "score_hidden": false, "stickied": false, "created": 1492472668.0, "created_utc": 1492443868.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd4e78", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Derpscientist", "parent_id": "t1_dgd233z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I enjoy your breakdown. It is impressive to note that Ada is probably the most widely used language missing. However, is this breakdown useful? From a programming languages marketing perspective we could formulate a different criteria.\n\n* Is the quality of the tooling superb? C#, Java\n* Is the breadth of the ecosystem superb? Ruby, Python, C#, Java\n* Does it get out of the way when I care about cache coherency? C++ , Rust\n* Does the compiler implement algorithms for me? Prolog, Datalog\n* Can I build a temple of abstractions in the language that would make Neo jealous? Haskell, Scheme, F#, OCaml, Scala, Rust\n* Is there some niche use-case for the language that I should learn it for? Assembly, Bash, Perl, Javascript, C++, C, SQL, VHDL\netc...", "edited": 1492405136.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I enjoy your breakdown. It is impressive to note that Ada is probably the most widely used language missing. However, is this breakdown useful? From a programming languages marketing perspective we could formulate a different criteria.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Is the quality of the tooling superb? C#, Java&lt;/li&gt;\n&lt;li&gt;Is the breadth of the ecosystem superb? Ruby, Python, C#, Java&lt;/li&gt;\n&lt;li&gt;Does it get out of the way when I care about cache coherency? C++ , Rust&lt;/li&gt;\n&lt;li&gt;Does the compiler implement algorithms for me? Prolog, Datalog&lt;/li&gt;\n&lt;li&gt;Can I build a temple of abstractions in the language that would make Neo jealous? Haskell, Scheme, F#, OCaml, Scala, Rust&lt;/li&gt;\n&lt;li&gt;Is there some niche use-case for the language that I should learn it for? Assembly, Bash, Perl, Javascript, C++, C, SQL, VHDL\netc...&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd4e78", "score_hidden": false, "stickied": false, "created": 1492432974.0, "created_utc": 1492404174.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dge1uw6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "paholg", "parent_id": "t1_dgdz6zq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "FP snobs do love being lazy.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FP snobs do love being lazy.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dge1uw6", "score_hidden": false, "stickied": false, "created": 1492489067.0, "created_utc": 1492460267.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdz6zq", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "quiteamess", "parent_id": "t1_dgdc27v", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Bullshit. You're just being lazy and use some math words to cover up your FP snobbism!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bullshit. You&amp;#39;re just being lazy and use some math words to cover up your FP snobbism!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdz6zq", "score_hidden": false, "stickied": false, "created": 1492486073.0, "created_utc": 1492457273.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdc27v", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "PM_ME_UR_OBSIDIAN", "parent_id": "t1_dgdbbms", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The idea is that, if two languages are in the same entry, then after learning one you get the gist of the other.\n\nIn order to do better I'd need to turn this into a [partial order](https://en.wikipedia.org/wiki/Partially_ordered_set), with paradigms as [filters](https://en.wikipedia.org/wiki/Filter_(mathematics\\)). This would be hard to express in a reddit comment.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The idea is that, if two languages are in the same entry, then after learning one you get the gist of the other.&lt;/p&gt;\n\n&lt;p&gt;In order to do better I&amp;#39;d need to turn this into a &lt;a href=\"https://en.wikipedia.org/wiki/Partially_ordered_set\"&gt;partial order&lt;/a&gt;, with paradigms as &lt;a href=\"https://en.wikipedia.org/wiki/Filter_(mathematics)\"&gt;filters&lt;/a&gt;. This would be hard to express in a reddit comment.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdc27v", "score_hidden": false, "stickied": false, "created": 1492453178.0, "created_utc": 1492424378.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdbbms", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vkgfx", "parent_id": "t1_dgd9ap9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yeah it's not very relevant to the topic of crosstraining languages...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah it&amp;#39;s not very relevant to the topic of crosstraining languages...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdbbms", "score_hidden": false, "stickied": false, "created": 1492450699.0, "created_utc": 1492421899.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd9ap9", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgd233z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Without the context this list looks like each language has only one paradigm (which is wrong). And not even the major one is shown for each language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Without the context this list looks like each language has only one paradigm (which is wrong). And not even the major one is shown for each language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd9ap9", "score_hidden": false, "stickied": false, "created": 1492443859.0, "created_utc": 1492415059.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd233z", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "PM_ME_UR_OBSIDIAN", "parent_id": "t1_dgcsgeo", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'll define a few paradigms extensionally:\n\n0. CISC assembly: x86, x86_64\n0. RISC assembly: ARM, MIPS, AVR\n1. \"Structured\" imperative programming: C, Pascal\n2. Imperative scripting: Bash, Perl\n2. Enterprise OOP: Java, C#\n3. Systems OOP: C++\n4. Dynamic OOP: Python, Ruby\n4. Prototype OOP: JavaScript\n7. Untyped functional programming: Scheme, Common Lisp\n5. Strict, typed functional programming: Standard ML\n5. Strict, typed object-functional programming: OCaml, F#, Swift, Scala\n6. Non-strict, typed functional programming: Haskell\n8. Dependently-typed functional programming: Agda, Idris\n9. Gradually-typed, structural functional programming: TypeScript\n9. Actor-oriented functional programming: Erlang, Elixir\n10. Systems functional programming: Rust\n11. Inductive logic programming: Prolog, Datalog\n11. Set-algebraic logic programming: SQL\n11. HDL: Verilog, VHDL\n\nThe major paradigms are imperative programming (3-4), object-oriented programming (5-7), typed functional programming (10-16), logic programming (17-18). But the others are also worth knowing.\n\nNotably missing from this lineup:\n\n* PHP: unprincipled garbage\n* Kotlin: no one really knows what it is or how it works\n* Ceylon: beyond mere mortals", "edited": 1492424696.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll define a few paradigms extensionally:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;CISC assembly: x86, x86_64&lt;/li&gt;\n&lt;li&gt;RISC assembly: ARM, MIPS, AVR&lt;/li&gt;\n&lt;li&gt;&amp;quot;Structured&amp;quot; imperative programming: C, Pascal&lt;/li&gt;\n&lt;li&gt;Imperative scripting: Bash, Perl&lt;/li&gt;\n&lt;li&gt;Enterprise OOP: Java, C#&lt;/li&gt;\n&lt;li&gt;Systems OOP: C++&lt;/li&gt;\n&lt;li&gt;Dynamic OOP: Python, Ruby&lt;/li&gt;\n&lt;li&gt;Prototype OOP: JavaScript&lt;/li&gt;\n&lt;li&gt;Untyped functional programming: Scheme, Common Lisp&lt;/li&gt;\n&lt;li&gt;Strict, typed functional programming: Standard ML&lt;/li&gt;\n&lt;li&gt;Strict, typed object-functional programming: OCaml, F#, Swift, Scala&lt;/li&gt;\n&lt;li&gt;Non-strict, typed functional programming: Haskell&lt;/li&gt;\n&lt;li&gt;Dependently-typed functional programming: Agda, Idris&lt;/li&gt;\n&lt;li&gt;Gradually-typed, structural functional programming: TypeScript&lt;/li&gt;\n&lt;li&gt;Actor-oriented functional programming: Erlang, Elixir&lt;/li&gt;\n&lt;li&gt;Systems functional programming: Rust&lt;/li&gt;\n&lt;li&gt;Inductive logic programming: Prolog, Datalog&lt;/li&gt;\n&lt;li&gt;Set-algebraic logic programming: SQL&lt;/li&gt;\n&lt;li&gt;HDL: Verilog, VHDL&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;The major paradigms are imperative programming (3-4), object-oriented programming (5-7), typed functional programming (10-16), logic programming (17-18). But the others are also worth knowing.&lt;/p&gt;\n\n&lt;p&gt;Notably missing from this lineup:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;PHP: unprincipled garbage&lt;/li&gt;\n&lt;li&gt;Kotlin: no one really knows what it is or how it works&lt;/li&gt;\n&lt;li&gt;Ceylon: beyond mere mortals&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd233z", "score_hidden": false, "stickied": false, "created": 1492429161.0, "created_utc": 1492400361.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdb4ia", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "vkgfx", "parent_id": "t1_dgda7db", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It's up there with Python, in which it uses bits of both FP and OOP (particularly in the case of ES6) to manage abstractions. Python tends to eschew FP towards OOP, while JS does the opposite IMO", "edited": 1492421417.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s up there with Python, in which it uses bits of both FP and OOP (particularly in the case of ES6) to manage abstractions. Python tends to eschew FP towards OOP, while JS does the opposite IMO&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdb4ia", "score_hidden": false, "stickied": false, "created": 1492450014.0, "created_utc": 1492421214.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgda7db", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "asdfkjasdhkasd", "parent_id": "t1_dgcz42m", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Where do you think Javascript would go? I'm thinking imperative but with es6 there's classes and with typescript you even have interfaces and decorators. You also have some bits of fp in there with map, filter, reduce. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Where do you think Javascript would go? I&amp;#39;m thinking imperative but with es6 there&amp;#39;s classes and with typescript you even have interfaces and decorators. You also have some bits of fp in there with map, filter, reduce. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgda7db", "score_hidden": false, "stickied": false, "created": 1492446800.0, "created_utc": 1492418000.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdijki", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "phySi0", "parent_id": "t1_dgcz42m", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I would have Smalltalk or Ruby as the quintessential examples for OOP. Python shouldn't be on the list, it's too split between OOP, functional, imperative.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would have Smalltalk or Ruby as the quintessential examples for OOP. Python shouldn&amp;#39;t be on the list, it&amp;#39;s too split between OOP, functional, imperative.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdijki", "score_hidden": false, "stickied": false, "created": 1492466748.0, "created_utc": 1492437948.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcz42m", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "rdnetto", "parent_id": "t1_dgcsgeo", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "* OOP - C#, Java, C++\n* FP - Haskell, Lisp\n* imperative - C, Python\n* declarative - SQL, Prolog\n\nBut all this really demonstrates is that paradigms are an extremely course method for grouping languages, especially when most modern languages are multi-paradigm.\n\nA more useful approach would be considering the conceptual distance between two languages, as determined by the number of different ideas. e.g. C++ is further away from Java than C# is, because it has the additional concepts of metaprogramming (templates) and pointers.\n\nAt that point it's just a matter of picking the smallest number of languages that give you the widest coverage of the concept-space. The only issue is that quantifying the distance between them is likely only possible after gaining some familiarity with the language. e.g. everyone knows that Haskell uses FP, but only someone who's used it in some depth will realise it also pulls in concepts like monads, lenses, etc. There are tools like [this](http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf) which help with that a bit, but the further away a language is from the set of concepts you understand, the harder it's going to be to gauge its distance.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;OOP - C#, Java, C++&lt;/li&gt;\n&lt;li&gt;FP - Haskell, Lisp&lt;/li&gt;\n&lt;li&gt;imperative - C, Python&lt;/li&gt;\n&lt;li&gt;declarative - SQL, Prolog&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;But all this really demonstrates is that paradigms are an extremely course method for grouping languages, especially when most modern languages are multi-paradigm.&lt;/p&gt;\n\n&lt;p&gt;A more useful approach would be considering the conceptual distance between two languages, as determined by the number of different ideas. e.g. C++ is further away from Java than C# is, because it has the additional concepts of metaprogramming (templates) and pointers.&lt;/p&gt;\n\n&lt;p&gt;At that point it&amp;#39;s just a matter of picking the smallest number of languages that give you the widest coverage of the concept-space. The only issue is that quantifying the distance between them is likely only possible after gaining some familiarity with the language. e.g. everyone knows that Haskell uses FP, but only someone who&amp;#39;s used it in some depth will realise it also pulls in concepts like monads, lenses, etc. There are tools like &lt;a href=\"http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf\"&gt;this&lt;/a&gt; which help with that a bit, but the further away a language is from the set of concepts you understand, the harder it&amp;#39;s going to be to gauge its distance.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcz42m", "score_hidden": false, "stickied": false, "created": 1492424919.0, "created_utc": 1492396119.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdrzom", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "wealthy_harpsichord", "parent_id": "t1_dgdqh83", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "For the best learning experience, one should start from learning Racket and then go on to implement every major language in it, a'la [Hackett](https://github.com/lexi-lambda/hackett).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For the best learning experience, one should start from learning Racket and then go on to implement every major language in it, a&amp;#39;la &lt;a href=\"https://github.com/lexi-lambda/hackett\"&gt;Hackett&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdrzom", "score_hidden": false, "stickied": false, "created": 1492478007.0, "created_utc": 1492449207.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdqh83", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "pakoito", "parent_id": "t1_dgdevly", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Racket is fun, specially with Dr. Racket", "edited": 1492454064.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Racket is fun, specially with Dr. Racket&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdqh83", "score_hidden": false, "stickied": false, "created": 1492476324.0, "created_utc": 1492447524.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdevly", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Tarmen", "parent_id": "t1_dgcwew9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think I might recommend scheme as lisp for people who aren't already in the java ecosystem. It probably is less useful in the real world but I think its clearer and stm is already in the mix thanks to haskell.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think I might recommend scheme as lisp for people who aren&amp;#39;t already in the java ecosystem. It probably is less useful in the real world but I think its clearer and stm is already in the mix thanks to haskell.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdevly", "score_hidden": false, "stickied": false, "created": 1492460562.0, "created_utc": 1492431762.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdc2fl", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "PM_ME_UR_OBSIDIAN", "parent_id": "t1_dgcwew9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "\\&gt;pragmatism  \n\\&gt;Haskell\n\nI'd rather something like C, OCaml, Clojure, C#, SQL, JavaScript.\n\nOr you can replace \"pragmatism\" by \"insight\": Rust, Haskell, Scheme, Scala, Prolog. (JavaScript can go fuck itself.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;gt;pragmatism&lt;br/&gt;\n&amp;gt;Haskell&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d rather something like C, OCaml, Clojure, C#, SQL, JavaScript.&lt;/p&gt;\n\n&lt;p&gt;Or you can replace &amp;quot;pragmatism&amp;quot; by &amp;quot;insight&amp;quot;: Rust, Haskell, Scheme, Scala, Prolog. (JavaScript can go fuck itself.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdc2fl", "score_hidden": false, "stickied": false, "created": 1492453198.0, "created_utc": 1492424398.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcwew9", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "pakoito", "parent_id": "t1_dgcsgeo", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Optimizing for pragmatism and variety: C, Haskell, Clojure, C#, Prolog, Javascript.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Optimizing for pragmatism and variety: C, Haskell, Clojure, C#, Prolog, Javascript.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcwew9", "score_hidden": false, "stickied": false, "created": 1492421200.0, "created_utc": 1492392400.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcsgeo", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "manyrobots", "parent_id": "t1_dgcrp1r", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Anyone want to take a stab at identifying the major paradigms and one or two quintessential languages for each?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Anyone want to take a stab at identifying the major paradigms and one or two quintessential languages for each?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcsgeo", "score_hidden": false, "stickied": false, "created": 1492415947.0, "created_utc": 1492387147.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgd987s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgcrp1r", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Not if the language is multi-paradigm.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not if the language is multi-paradigm.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd987s", "score_hidden": false, "stickied": false, "created": 1492443655.0, "created_utc": 1492414855.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcrp1r", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "rdnetto", "parent_id": "t1_dgco3su", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "This only works for languages in the same paradigm - it'll work going from Java to C#, but good luck picking up Haskell or Lisp that way.\n\nNow, if you learn one language for each major paradigm, then that can work...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This only works for languages in the same paradigm - it&amp;#39;ll work going from Java to C#, but good luck picking up Haskell or Lisp that way.&lt;/p&gt;\n\n&lt;p&gt;Now, if you learn one language for each major paradigm, then that can work...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcrp1r", "score_hidden": false, "stickied": false, "created": 1492414918.0, "created_utc": 1492386118.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 10}}], "after": null, "before": null}}, "user_reports": [], "id": "dgco3su", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "devel_watcher", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You just learn one language (you know which). Then, you just skim over an example of the code in the language you wish to learn on wikipedia, After that you can write code while looking up library stuff using google.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You just learn one language (you know which). Then, you just skim over an example of the code in the language you wish to learn on wikipedia, After that you can write code while looking up library stuff using google.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgco3su", "score_hidden": false, "stickied": false, "created": 1492409995.0, "created_utc": 1492381195.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdhxsi", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "darchangel", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Teaching is one of the best ways to learn. Find a place with questions and answer everyone you can. These days, that pretty much means Stack Overflow but there might be other places depending on the language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Teaching is one of the best ways to learn. Find a place with questions and answer everyone you can. These days, that pretty much means Stack Overflow but there might be other places depending on the language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdhxsi", "score_hidden": false, "stickied": false, "created": 1492465855.0, "created_utc": 1492437055.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdko8l", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "PittfaII", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "For me, learning how to use the language is not the hardest part.  What occupies most of my time is doing things correctly and efficiently with the language/framework features.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For me, learning how to use the language is not the hardest part.  What occupies most of my time is doing things correctly and efficiently with the language/framework features.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdko8l", "score_hidden": false, "stickied": false, "created": 1492469600.0, "created_utc": 1492440800.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdo0il", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "digital_cucumber", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I also found out that reading a *style guide* for a new language can be one of the useful things to do.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I also found out that reading a &lt;em&gt;style guide&lt;/em&gt; for a new language can be one of the useful things to do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdo0il", "score_hidden": false, "stickied": false, "created": 1492473558.0, "created_utc": 1492444758.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65pbcb", "likes": null, "replies": "", "user_reports": [], "id": "dgdso8b", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "CookieOfFortune", "parent_id": "t3_65pbcb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The lower case a in Gentium Book Basic looks pretty weird at certain sizes, anyone else notice this?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The lower case a in Gentium Book Basic looks pretty weird at certain sizes, anyone else notice this?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdso8b", "score_hidden": false, "stickied": false, "created": 1492478762.0, "created_utc": 1492449962.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]