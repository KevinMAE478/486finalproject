[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65r5mq", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 82, "report_reasons": null, "author": "aleksabl", "saved": false, "mod_reports": [], "name": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "blog.plan99.net", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65r5mq/is_jigsaw_good_or_is_it_wack_mikes_blog/", "num_reports": null, "locked": false, "stickied": false, "created": 1492402557.0, "url": "https://blog.plan99.net/is-jigsaw-good-or-is-it-wack-ec634d36dd6f", "author_flair_text": null, "quarantine": false, "title": "Is Jigsaw good or is it wack? \u2013 Mike\u2019s blog", "created_utc": 1492373757.0, "distinguished": null, "media": null, "upvote_ratio": 0.76, "num_comments": 18, "visited": false, "subreddit_type": "public", "ups": 82}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdlurq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "TheHobodoc", "parent_id": "t1_dgdfp49", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It does, if you use layers. Its not something you get out of the box which is news to me.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It does, if you use layers. Its not something you get out of the box which is news to me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdlurq", "score_hidden": false, "stickied": false, "created": 1492471061.0, "created_utc": 1492442261.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdfp49", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "sbegaudeau", "parent_id": "t1_dgd7sf8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "OSGi would allow you to use multiple versions of the same HTTP client. Jigsaw does not allow you to have multiple versions of a module. Since it uses only one classloader for all the modules and since a class is identified by its classloader and its qualified name, you cannot have two occurrences of the same class in Jigsaw.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OSGi would allow you to use multiple versions of the same HTTP client. Jigsaw does not allow you to have multiple versions of a module. Since it uses only one classloader for all the modules and since a class is identified by its classloader and its qualified name, you cannot have two occurrences of the same class in Jigsaw.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdfp49", "score_hidden": false, "stickied": false, "created": 1492462157.0, "created_utc": 1492433357.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd7sf8", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "TheHobodoc", "parent_id": "t1_dgd61l5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Its not really about type loading, java already does this. Its about dealing with different versions of the same type and hiding library internals.\n\nLets say you have a project that uses a rest library and a oauth client. Both uses the same http client but different versions. At the moment you can only load one version of that client and hope it works. With jiggsaw they can each depend on their own versions and there wont be any collisions.\n\nHiding module internals stops people from depending on your internal code which makes it possible to change your internals without breaking others code. You only need to provide a stable external interface.\n\nSplitting javas standard library into multiple parts is about speeding up loadtimes", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its not really about type loading, java already does this. Its about dealing with different versions of the same type and hiding library internals.&lt;/p&gt;\n\n&lt;p&gt;Lets say you have a project that uses a rest library and a oauth client. Both uses the same http client but different versions. At the moment you can only load one version of that client and hope it works. With jiggsaw they can each depend on their own versions and there wont be any collisions.&lt;/p&gt;\n\n&lt;p&gt;Hiding module internals stops people from depending on your internal code which makes it possible to change your internals without breaking others code. You only need to provide a stable external interface.&lt;/p&gt;\n\n&lt;p&gt;Splitting javas standard library into multiple parts is about speeding up loadtimes&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd7sf8", "score_hidden": false, "stickied": false, "created": 1492440027.0, "created_utc": 1492411227.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 11}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd61l5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t1_dgcxkhs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "this sounds to me like it isn't a real problem. .net fails to load types if the assembly isn't loaded, and further, will fail to load types if the assembly was loaded explicitly, and *further*, will fail to load types if that assembly was loaded in a way that did not allow for transitive type loading.\n\nat worst this seems to say that reflection loading is harder. good, reflection is basically always bad unless you really have a good reason. i still don't see what the big problem is. not trolling, i just am missing something here.\n\nhows about making stringly typed things less prevalent. ever asked for any sort of crypto thing? it's so generic that is will fail after compile time. solve that shit with modules (existence or not) and I'll be happy.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;this sounds to me like it isn&amp;#39;t a real problem. .net fails to load types if the assembly isn&amp;#39;t loaded, and further, will fail to load types if the assembly was loaded explicitly, and &lt;em&gt;further&lt;/em&gt;, will fail to load types if that assembly was loaded in a way that did not allow for transitive type loading.&lt;/p&gt;\n\n&lt;p&gt;at worst this seems to say that reflection loading is harder. good, reflection is basically always bad unless you really have a good reason. i still don&amp;#39;t see what the big problem is. not trolling, i just am missing something here.&lt;/p&gt;\n\n&lt;p&gt;hows about making stringly typed things less prevalent. ever asked for any sort of crypto thing? it&amp;#39;s so generic that is will fail after compile time. solve that shit with modules (existence or not) and I&amp;#39;ll be happy.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd61l5", "score_hidden": false, "stickied": false, "created": 1492436223.0, "created_utc": 1492407423.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdh32t", "gilded": 0, "archived": false, "score": -11, "report_reasons": null, "author": "throwawayco111", "parent_id": "t1_dgd4yf3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You should follow your own advice.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should follow your own advice.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdh32t", "score_hidden": false, "stickied": false, "created": 1492464517.0, "created_utc": 1492435717.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": -11}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd4yf3", "gilded": 0, "archived": false, "score": 24, "report_reasons": null, "author": "unbounded_recusion", "parent_id": "t1_dgd1o9s", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Come back when you have something useful to say. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Come back when you have something useful to say. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd4yf3", "score_hidden": false, "stickied": false, "created": 1492434039.0, "created_utc": 1492405239.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 24}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd1o9s", "gilded": 0, "archived": false, "score": -60, "report_reasons": null, "author": "throwawayco111", "parent_id": "t1_dgcxkhs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Man. Java is such a joke.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Man. Java is such a joke.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd1o9s", "score_hidden": false, "stickied": false, "created": 1492428551.0, "created_utc": 1492399751.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -60}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcxkhs", "gilded": 0, "archived": false, "score": 23, "report_reasons": null, "author": "pdpi", "parent_id": "t1_dgcrdp7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Java takes dynamic linking to a whole other level, with classes being loaded as needed, typically from .class files. I'm not familiar with how .NET assemblies work, so I can't comment on those, but here's my attempt at explaining Jigsaw modules.\n\nThere's a few problems with this: One is that it's really hard to figure out whether you have everything you need for your app to run. If a class file is missing, your program will run fine \u2014 until it tries to load that class. Another problem is that it's very easy to provide multiple copies of the same class, and the order of preference for which one _actually_ gets loaded is pretty hard to predict. I've previously had issues with having Google Guava in my app together with another Google library that had an embedded version of the Google collections package. Figuring out why I kept getting MethodNotFoundException all over the place was _not_ fun.\n\nEnter Jigsaw:\n\nInstead of jars as undifferentiated bags of classes, you now get to define \"modules\", and those modules specify what's part of their public interface, and what's private, and what other modules they need to import to function. Trying to use classes outside those modules is now a compilation error. Trying to use classes that are private to the modules is now a compilation error. Attempting to provide two different implementations of the same module? Application will refuse to start. Missing a module? Application will refuse to start. Basically, all sorts of runtime errors now trigger much earlier. As the JVM and standard library become themselves more modular, it becomes easier to build slimmer static binaries for your java apps (which is what Mike Hearn was talking about re: `jlink`).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java takes dynamic linking to a whole other level, with classes being loaded as needed, typically from .class files. I&amp;#39;m not familiar with how .NET assemblies work, so I can&amp;#39;t comment on those, but here&amp;#39;s my attempt at explaining Jigsaw modules.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s a few problems with this: One is that it&amp;#39;s really hard to figure out whether you have everything you need for your app to run. If a class file is missing, your program will run fine \u2014 until it tries to load that class. Another problem is that it&amp;#39;s very easy to provide multiple copies of the same class, and the order of preference for which one &lt;em&gt;actually&lt;/em&gt; gets loaded is pretty hard to predict. I&amp;#39;ve previously had issues with having Google Guava in my app together with another Google library that had an embedded version of the Google collections package. Figuring out why I kept getting MethodNotFoundException all over the place was &lt;em&gt;not&lt;/em&gt; fun.&lt;/p&gt;\n\n&lt;p&gt;Enter Jigsaw:&lt;/p&gt;\n\n&lt;p&gt;Instead of jars as undifferentiated bags of classes, you now get to define &amp;quot;modules&amp;quot;, and those modules specify what&amp;#39;s part of their public interface, and what&amp;#39;s private, and what other modules they need to import to function. Trying to use classes outside those modules is now a compilation error. Trying to use classes that are private to the modules is now a compilation error. Attempting to provide two different implementations of the same module? Application will refuse to start. Missing a module? Application will refuse to start. Basically, all sorts of runtime errors now trigger much earlier. As the JVM and standard library become themselves more modular, it becomes easier to build slimmer static binaries for your java apps (which is what Mike Hearn was talking about re: &lt;code&gt;jlink&lt;/code&gt;).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcxkhs", "score_hidden": false, "stickied": false, "created": 1492422763.0, "created_utc": 1492393963.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 23}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdk6c6", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kcuf", "parent_id": "t1_dgd68cn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Java is very restrictive, and it has caused all kinds of huge boilerplate workarounds. I think the committee should have recognized this sooner and adapted the language based on the issues they've seen with how people use the language (they have done this, to an extent, with lambdas). \n\nFor languages that don't take the extremely restrictive approach that Java did, there's less of a need to adapt. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java is very restrictive, and it has caused all kinds of huge boilerplate workarounds. I think the committee should have recognized this sooner and adapted the language based on the issues they&amp;#39;ve seen with how people use the language (they have done this, to an extent, with lambdas). &lt;/p&gt;\n\n&lt;p&gt;For languages that don&amp;#39;t take the extremely restrictive approach that Java did, there&amp;#39;s less of a need to adapt. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdk6c6", "score_hidden": false, "stickied": false, "created": 1492468964.0, "created_utc": 1492440164.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd68cn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t1_dgct5wc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "i don't think the language should have to \"adapt\", at least not to trends. but it should be expressive enough to handle what people want to use it for. java is way behind on this. \n\nc# on the jvm is a dream. but, type erasure.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i don&amp;#39;t think the language should have to &amp;quot;adapt&amp;quot;, at least not to trends. but it should be expressive enough to handle what people want to use it for. java is way behind on this. &lt;/p&gt;\n\n&lt;p&gt;c# on the jvm is a dream. but, type erasure.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd68cn", "score_hidden": false, "stickied": false, "created": 1492436616.0, "created_utc": 1492407816.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgct5wc", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "kcuf", "parent_id": "t1_dgcrdp7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think part of the backwards compat issue comes from modules being a general tool, not just for the standard lib. \n\nHonestly, and this is certainly a rant, I think the Java ecosystem loves to over engineer things (maybe because the language itself is so slow to adapt?), and some of the stuff that is broken by jigsaw was too complex to be worth supporting anyways -- there are probably legitimate use cases for these tools and capabilities, but if Java intends to support all use cases, it won't be worth using for any. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think part of the backwards compat issue comes from modules being a general tool, not just for the standard lib. &lt;/p&gt;\n\n&lt;p&gt;Honestly, and this is certainly a rant, I think the Java ecosystem loves to over engineer things (maybe because the language itself is so slow to adapt?), and some of the stuff that is broken by jigsaw was too complex to be worth supporting anyways -- there are probably legitimate use cases for these tools and capabilities, but if Java intends to support all use cases, it won&amp;#39;t be worth using for any. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgct5wc", "score_hidden": false, "stickied": false, "created": 1492416927.0, "created_utc": 1492388127.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcrdp7", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "can someone eli5 java modules? I'm not a jave expert by any means. jigsaw is to cut up the standard library, no? is that akin to how .net is i different assemblies, and you use have to xplicit reference those assemblies to use them?\n\nI dont understand why module format and back compat are such big problems. why wouldn't they have \"module mode\" and \"entire framework mod\", where the former is the new goodness (for what i assume is deployment size), and the latter solves all back compat issues.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;can someone eli5 java modules? I&amp;#39;m not a jave expert by any means. jigsaw is to cut up the standard library, no? is that akin to how .net is i different assemblies, and you use have to xplicit reference those assemblies to use them?&lt;/p&gt;\n\n&lt;p&gt;I dont understand why module format and back compat are such big problems. why wouldn&amp;#39;t they have &amp;quot;module mode&amp;quot; and &amp;quot;entire framework mod&amp;quot;, where the former is the new goodness (for what i assume is deployment size), and the latter solves all back compat issues.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcrdp7", "score_hidden": false, "stickied": false, "created": 1492414505.0, "created_utc": 1492385705.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdgbna", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "real_jeeger", "parent_id": "t1_dgd7zoz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "But still hard to find documentation for. Most stuff I've used is years-out-of-date blog blog posts, or the 1000-page specification, both not the ideal format for learning something about OSGI. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But still hard to find documentation for. Most stuff I&amp;#39;ve used is years-out-of-date blog blog posts, or the 1000-page specification, both not the ideal format for learning something about OSGI. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdgbna", "score_hidden": false, "stickied": false, "created": 1492463263.0, "created_utc": 1492434463.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdlsaj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "zombifai", "parent_id": "t1_dgd7zoz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "As a long-term Eclipse developer I can honestly say, OSGI package-use conflicts are the stuff of nightmares.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a long-term Eclipse developer I can honestly say, OSGI package-use conflicts are the stuff of nightmares.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdlsaj", "score_hidden": false, "stickied": false, "created": 1492470978.0, "created_utc": 1492442178.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd7zoz", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "kitd", "parent_id": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Re OSGi. I have found it complicated only because it requires external configuration, either of code or of tooling. In its basic form, it is pretty simple conceptually, and would be even more so if the language supported it inherently.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Re OSGi. I have found it complicated only because it requires external configuration, either of code or of tooling. In its basic form, it is pretty simple conceptually, and would be even more so if the language supported it inherently.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd7zoz", "score_hidden": false, "stickied": false, "created": 1492440510.0, "created_utc": 1492411710.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgcv3xw", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "hobbified", "parent_id": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "But is it *wiggity* wack? Our viewers want to know.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But is it &lt;em&gt;wiggity&lt;/em&gt; wack? Our viewers want to know.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcv3xw", "score_hidden": false, "stickied": false, "created": 1492419532.0, "created_utc": 1492390732.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgdyk87", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kimble85", "parent_id": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm really really happy that they didn't bundle osgi into the jdk. I really tried to like osgi a few years back, but it was never meant to be. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m really really happy that they didn&amp;#39;t bundle osgi into the jdk. I really tried to like osgi a few years back, but it was never meant to be. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdyk87", "score_hidden": false, "stickied": false, "created": 1492485348.0, "created_utc": 1492456548.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65r5mq", "likes": null, "replies": "", "user_reports": [], "id": "dgctxrc", "gilded": 0, "archived": false, "score": -23, "report_reasons": null, "author": "geodel", "parent_id": "t3_65r5mq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Who could have thought Oracle and Redhat do not go along? Drama in Javaland never ends. Redhat, the peddler of infamous Java software like Jboss/hibernate etc is pissed off that Oracle didn't like their crap and designed their own system.\n\nAnd this blog has as much useful information as Fizzbuzz enterprise edition.\n\n&gt; \n https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Who could have thought Oracle and Redhat do not go along? Drama in Javaland never ends. Redhat, the peddler of infamous Java software like Jboss/hibernate etc is pissed off that Oracle didn&amp;#39;t like their crap and designed their own system.&lt;/p&gt;\n\n&lt;p&gt;And this blog has as much useful information as Fizzbuzz enterprise edition.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=\"https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition\"&gt;https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgctxrc", "score_hidden": false, "stickied": false, "created": 1492417960.0, "created_utc": 1492389160.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -23}}], "after": null, "before": null}}]