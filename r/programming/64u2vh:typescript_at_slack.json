[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64u2vh", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 93, "report_reasons": null, "author": "frostmatthew", "saved": false, "mod_reports": [], "name": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "slack.engineering", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/64u2vh/typescript_at_slack/", "num_reports": null, "locked": false, "stickied": false, "created": 1491977108.0, "url": "https://slack.engineering/typescript-at-slack-a81307fa288d", "author_flair_text": null, "quarantine": false, "title": "TypeScript at Slack", "created_utc": 1491948308.0, "distinguished": null, "media": null, "upvote_ratio": 0.83, "num_comments": 76, "visited": false, "subreddit_type": "public", "ups": 93}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5m8cn", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "zerexim", "parent_id": "t1_dg5cm5y", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can work on Visual Studio in Visual Studio.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can work on Visual Studio in Visual Studio.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5m8cn", "score_hidden": false, "stickied": false, "created": 1492012100.0, "created_utc": 1491983300.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6n5as", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tecnofauno", "parent_id": "t1_dg5l7e5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Sorry :) now I did", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry :) now I did&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6n5as", "score_hidden": false, "stickied": false, "created": 1492063395.0, "created_utc": 1492034595.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5l7e5", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "okwherearemypants", "parent_id": "t1_dg5kn96", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You're not understanding me right. On Visual Studio, the product itself.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re not understanding me right. On Visual Studio, the product itself.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5l7e5", "score_hidden": false, "stickied": false, "created": 1492009257.0, "created_utc": 1491980457.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5kn96", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tecnofauno", "parent_id": "t1_dg5cm5y", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Visua Studio Code, based on the article's screenshots", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Visua Studio Code, based on the article&amp;#39;s screenshots&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5kn96", "score_hidden": false, "stickied": false, "created": 1492007813.0, "created_utc": 1491979013.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5cm5y", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "okwherearemypants", "parent_id": "t1_dg5cgk8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You might be shocked to hear that these people worked *on* Visual Studio ;-)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might be shocked to hear that these people worked &lt;em&gt;on&lt;/em&gt; Visual Studio ;-)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5cm5y", "score_hidden": false, "stickied": false, "created": 1491993512.0, "created_utc": 1491964712.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5omol", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "sinjp", "parent_id": "t1_dg5jax9", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Dynamic typing has a place, I'm much less a fan of weak typing. JS type coercion=[wat](https://www.destroyallsoftware.com/talks/wat)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dynamic typing has a place, I&amp;#39;m much less a fan of weak typing. JS type coercion=&lt;a href=\"https://www.destroyallsoftware.com/talks/wat\"&gt;wat&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5omol", "score_hidden": false, "stickied": false, "created": 1492019566.0, "created_utc": 1491990766.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5mwou", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "logicalLove", "parent_id": "t1_dg5jax9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Am web dev. Am very into static typing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Am web dev. Am very into static typing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5mwou", "score_hidden": false, "stickied": false, "created": 1492014139.0, "created_utc": 1491985339.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6ygpj", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "tending", "parent_id": "t1_dg66u8y", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;What is a hot new thing is structural typing, and some of the other type tricks typescript uses. Stuff you don't get in Java or C++.\r\r\n\nActually C++ has structural typing, that's what you get when you use templates. A templated function that takes an instance of T works as long as all the members and methods it accesses on T exist. This has been true going all the way back to C++98.\n\nPro tip: C++ does almost every paradigm. If you don't use it regularly, don't assume it doesn't have something.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;What is a hot new thing is structural typing, and some of the other type tricks typescript uses. Stuff you don&amp;#39;t get in Java or C++.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Actually C++ has structural typing, that&amp;#39;s what you get when you use templates. A templated function that takes an instance of T works as long as all the members and methods it accesses on T exist. This has been true going all the way back to C++98.&lt;/p&gt;\n\n&lt;p&gt;Pro tip: C++ does almost every paradigm. If you don&amp;#39;t use it regularly, don&amp;#39;t assume it doesn&amp;#39;t have something.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6ygpj", "score_hidden": false, "stickied": false, "created": 1492077328.0, "created_utc": 1492048528.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg7bpwp", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "jl2352", "parent_id": "t1_dg6psl8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That's not true. TypeScript will tell you at compile time that the structure of the object being used doesn't match the structure required. That it's missing a field.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s not true. TypeScript will tell you at compile time that the structure of the object being used doesn&amp;#39;t match the structure required. That it&amp;#39;s missing a field.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7bpwp", "score_hidden": false, "stickied": false, "created": 1492101841.0, "created_utc": 1492073041.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dgd6yur", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t1_dg7q3ej", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "yes it does. most of us programmers just consume apis. typescript allows you to create a border between typed land and untyped land. interfaces. these are basically promises to the compiler about the data in that interface. that in a nutshell is structural  typing. but tsc cant enforce that binding. it has no idea when the api changes underneath. what you wind up with is a (albeit better than nothing) half baked runtime. typescript. died no magic, it will just deference that missing field, and bam, your program dies. not a flaw in typescript, what else should it do?\n\nstructural typing is apoligism for programmers who like dynamic typing. trying to justify one way based on \"it can be made less shitty!\" rather than acknowledging and just dealing with the original shittiness.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;yes it does. most of us programmers just consume apis. typescript allows you to create a border between typed land and untyped land. interfaces. these are basically promises to the compiler about the data in that interface. that in a nutshell is structural  typing. but tsc cant enforce that binding. it has no idea when the api changes underneath. what you wind up with is a (albeit better than nothing) half baked runtime. typescript. died no magic, it will just deference that missing field, and bam, your program dies. not a flaw in typescript, what else should it do?&lt;/p&gt;\n\n&lt;p&gt;structural typing is apoligism for programmers who like dynamic typing. trying to justify one way based on &amp;quot;it can be made less shitty!&amp;quot; rather than acknowledging and just dealing with the original shittiness.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd6yur", "score_hidden": false, "stickied": false, "created": 1492438183.0, "created_utc": 1492409383.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7q3ej", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "siegfryd", "parent_id": "t1_dg6psl8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That has nothing to do with structural typing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That has nothing to do with structural typing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7q3ej", "score_hidden": false, "stickied": false, "created": 1492126833.0, "created_utc": 1492098033.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6psl8", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t1_dg66u8y", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Structural typing is just putting lipstick on a pig. It is basically documentation. You don't have guarantees that the underlying api didn't change. Let's say the api renamed a field. Typescript interfaces (the structural typing part) will ignore the new field, and the old field is just undefined. And then your code breaks at runtime.\n\nWay better than nothing though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Structural typing is just putting lipstick on a pig. It is basically documentation. You don&amp;#39;t have guarantees that the underlying api didn&amp;#39;t change. Let&amp;#39;s say the api renamed a field. Typescript interfaces (the structural typing part) will ignore the new field, and the old field is just undefined. And then your code breaks at runtime.&lt;/p&gt;\n\n&lt;p&gt;Way better than nothing though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6psl8", "score_hidden": false, "stickied": false, "created": 1492066680.0, "created_utc": 1492037880.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg66u8y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jl2352", "parent_id": "t1_dg5jax9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What is a hot new thing is structural typing, and some of the other type tricks typescript uses. Stuff you don't get in Java or C++.\r\rThat allows APIs built for a dynamic language to be statically typed. It also allows the code to get some of the advantages of dynamic languages, without having to lose out on static types.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is a hot new thing is structural typing, and some of the other type tricks typescript uses. Stuff you don&amp;#39;t get in Java or C++.&lt;/p&gt;\n\n&lt;p&gt;That allows APIs built for a dynamic language to be statically typed. It also allows the code to get some of the advantages of dynamic languages, without having to lose out on static types.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg66u8y", "score_hidden": false, "stickied": false, "created": 1492046159.0, "created_utc": 1492017359.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5jax9", "gilded": 0, "archived": false, "score": 36, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t1_dg5gphg", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "And they seem to be suggesting that static typing is this hot new thing. Nope, it's old. It's proven. It's just that web devs (in my experience) seem to thing dynamic typing is the best thing since sliced bread. Hopefully that is changing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And they seem to be suggesting that static typing is this hot new thing. Nope, it&amp;#39;s old. It&amp;#39;s proven. It&amp;#39;s just that web devs (in my experience) seem to thing dynamic typing is the best thing since sliced bread. Hopefully that is changing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5jax9", "score_hidden": false, "stickied": false, "created": 1492004676.0, "created_utc": 1491975876.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 36}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5gphg", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "sinjp", "parent_id": "t1_dg5cgk8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That threw me too, it reads like they've never used an IDE before...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That threw me too, it reads like they&amp;#39;ve never used an IDE before...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5gphg", "score_hidden": false, "stickied": false, "created": 1491999763.0, "created_utc": 1491970963.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5kos0", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "tecnofauno", "parent_id": "t1_dg5cgk8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It's not that they didn't work with an ide, but that their ide won't autocomplete javascript. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not that they didn&amp;#39;t work with an ide, but that their ide won&amp;#39;t autocomplete javascript. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5kos0", "score_hidden": false, "stickied": false, "created": 1492007915.0, "created_utc": 1491979115.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5oujy", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dg5cgk8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Alice Pascal provided autocomplete in 1985. http://www.templetons.com/brad/alice.html ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Alice Pascal provided autocomplete in 1985. &lt;a href=\"http://www.templetons.com/brad/alice.html\"&gt;http://www.templetons.com/brad/alice.html&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5oujy", "score_hidden": false, "stickied": false, "created": 1492020246.0, "created_utc": 1491991446.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5cgk8", "gilded": 0, "archived": false, "score": 36, "report_reasons": null, "author": "ferrx", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; An autocomplete system that only uses words in the current document feels barbaric afterward\n\nThis person never wrote code in VS in the past 15 years, I guess.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;An autocomplete system that only uses words in the current document feels barbaric afterward&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This person never wrote code in VS in the past 15 years, I guess.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5cgk8", "score_hidden": false, "stickied": false, "created": 1491993294.0, "created_utc": 1491964494.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 36}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5767k", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "Antrikshy", "parent_id": "t1_dg574ib", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yeah, both make completely valid points IMO.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, both make completely valid points IMO.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5767k", "score_hidden": false, "stickied": false, "created": 1491986318.0, "created_utc": 1491957518.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 14}}], "after": null, "before": null}}, "user_reports": [], "id": "dg574ib", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "Gbyrd99", "parent_id": "t1_dg53ya2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I mean it's not like there's any bias or anything. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean it&amp;#39;s not like there&amp;#39;s any bias or anything. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg574ib", "score_hidden": false, "stickied": false, "created": 1491986257.0, "created_utc": 1491957457.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5j57e", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "Antrikshy", "parent_id": "t1_dg5ipxu", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I didn't have a point. I just found it amusing. Both articles *are* indeed valid.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I didn&amp;#39;t have a point. I just found it amusing. Both articles &lt;em&gt;are&lt;/em&gt; indeed valid.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5j57e", "score_hidden": false, "stickied": false, "created": 1492004353.0, "created_utc": 1491975553.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ipxu", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "kernelman", "parent_id": "t1_dg53ya2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What's your point ??\nThe article you are referring to is pointing out issue with embedding chrome and this post is pointing out the advantages of using typescript. Both are valid and orthogonal aspects of the product.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s your point ??\nThe article you are referring to is pointing out issue with embedding chrome and this post is pointing out the advantages of using typescript. Both are valid and orthogonal aspects of the product.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ipxu", "score_hidden": false, "stickied": false, "created": 1492003486.0, "created_utc": 1491974686.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5a4le", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "geodel", "parent_id": "t1_dg53ya2", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Not making fun. Just stating some plain facts about that terrible and lazy piece of software.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not making fun. Just stating some plain facts about that terrible and lazy piece of software.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5a4le", "score_hidden": false, "stickied": false, "created": 1491990136.0, "created_utc": 1491961336.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg53ya2", "gilded": 0, "archived": false, "score": 36, "report_reasons": null, "author": "Antrikshy", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Hah, r/programming has a post making fun of Slack's app, and another one explaining how it's built well.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hah, &lt;a href=\"/r/programming\"&gt;r/programming&lt;/a&gt; has a post making fun of Slack&amp;#39;s app, and another one explaining how it&amp;#39;s built well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg53ya2", "score_hidden": false, "stickied": false, "created": 1491982003.0, "created_utc": 1491953203.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 36}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5vlb7", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg5j75s", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Web developers are just finally realizing that dynamic typing sucks, and are joining the static typing camp.\n\nIt's because the war of static vs dynamic wasn't just static vs dynamic. It was also nominal vs structural typing. Turns out it was structural typing that dynamic typing advocates really loved, and TypeScript is one of the few mainstream statically typed languages that support that.\n\nAdd to that the type inference and you're left with a language that's a bit of the best of both worlds when you look at java/C#'s advantages and javascipt's advantages.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Web developers are just finally realizing that dynamic typing sucks, and are joining the static typing camp.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s because the war of static vs dynamic wasn&amp;#39;t just static vs dynamic. It was also nominal vs structural typing. Turns out it was structural typing that dynamic typing advocates really loved, and TypeScript is one of the few mainstream statically typed languages that support that.&lt;/p&gt;\n\n&lt;p&gt;Add to that the type inference and you&amp;#39;re left with a language that&amp;#39;s a bit of the best of both worlds when you look at java/C#&amp;#39;s advantages and javascipt&amp;#39;s advantages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5vlb7", "score_hidden": false, "stickied": false, "created": 1492033647.0, "created_utc": 1492004847.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6525q", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pm-me-your-keyboard", "parent_id": "t1_dg5j75s", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "All the cool kids are using [Haxe](http://Haxe.org) these days anyways.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;All the cool kids are using &lt;a href=\"http://Haxe.org\"&gt;Haxe&lt;/a&gt; these days anyways.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6525q", "score_hidden": false, "stickied": false, "created": 1492044328.0, "created_utc": 1492015528.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5j75s", "gilded": 0, "archived": false, "score": 39, "report_reasons": null, "author": "cat_in_the_wall", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;  Given how quickly static type checking is gaining traction, we wanted to share our experiences and practices.\n\nHave the developers of slack been living in a hole? have they never heard of java? C++? C#? Swift? Dare I say Haskell? Static typing isn't \"gaining traction\", it already is the norm for basically everybody who doesn't write scripts (python) or do web programming (js, php). Web developers are just finally realizing that dynamic typing sucks, and are joining the static typing camp.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Given how quickly static type checking is gaining traction, we wanted to share our experiences and practices.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Have the developers of slack been living in a hole? have they never heard of java? C++? C#? Swift? Dare I say Haskell? Static typing isn&amp;#39;t &amp;quot;gaining traction&amp;quot;, it already is the norm for basically everybody who doesn&amp;#39;t write scripts (python) or do web programming (js, php). Web developers are just finally realizing that dynamic typing sucks, and are joining the static typing camp.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5j75s", "score_hidden": false, "stickied": false, "created": 1492004465.0, "created_utc": 1491975665.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 39}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6fyoj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jyper", "parent_id": "t1_dg5hyyw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It's not even that much I think about $200k", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not even that much I think about $200k&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6fyoj", "score_hidden": false, "stickied": false, "created": 1492055475.0, "created_utc": 1492026675.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5hyyw", "gilded": 0, "archived": false, "score": 23, "report_reasons": null, "author": "mishugashu", "parent_id": "t1_dg58u9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "ICANN doesn't give a shit anymore. If you pay them enough money, you can name your gTLD anything you want. \"Donuts Inc.\" is the company who thought of and paid for this gTLD.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ICANN doesn&amp;#39;t give a shit anymore. If you pay them enough money, you can name your gTLD anything you want. &amp;quot;Donuts Inc.&amp;quot; is the company who thought of and paid for this gTLD.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5hyyw", "score_hidden": false, "stickied": false, "created": 1492002051.0, "created_utc": 1491973251.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 23}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5ar7b", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "here-to-jerk-off", "parent_id": "t1_dg58u9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "$$$", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;$$$&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ar7b", "score_hidden": false, "stickied": false, "created": 1491990975.0, "created_utc": 1491962175.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5vppr", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg58u9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The problem is that those country codes weren't being used for denoting countries, it was being used to get cool domains for http://start.up. \n\nThe `.com`, `.org`, `.biz` etc names were also being similarly misused. \n\nOnce you reach this point you might as well just give up and let people do whatever the hell they want.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The problem is that those country codes weren&amp;#39;t being used for denoting countries, it was being used to get cool domains for &lt;a href=\"http://start.up\"&gt;http://start.up&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;.com&lt;/code&gt;, &lt;code&gt;.org&lt;/code&gt;, &lt;code&gt;.biz&lt;/code&gt; etc names were also being similarly misused. &lt;/p&gt;\n\n&lt;p&gt;Once you reach this point you might as well just give up and let people do whatever the hell they want.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5vppr", "score_hidden": false, "stickied": false, "created": 1492033809.0, "created_utc": 1492005009.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg58u9f", "gilded": 0, "archived": false, "score": 15, "report_reasons": null, "author": "turismofive", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Someone at ICANN thought \".engineering\" would be a great gTLD? It's not that bad like some of the other ones they've made but damn I wish we could go back and stick to logical 2/3 letter TLDs and country codes only.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Someone at ICANN thought &amp;quot;.engineering&amp;quot; would be a great gTLD? It&amp;#39;s not that bad like some of the other ones they&amp;#39;ve made but damn I wish we could go back and stick to logical 2/3 letter TLDs and country codes only.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg58u9f", "score_hidden": false, "stickied": false, "created": 1491988483.0, "created_utc": 1491959683.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 15}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5j3gh", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "Lanza21", "parent_id": "t1_dg59zxr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Shouldn't they just rewrite git in Rust with an Electron GUI app?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Shouldn&amp;#39;t they just rewrite git in Rust with an Electron GUI app?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5j3gh", "score_hidden": false, "stickied": false, "created": 1492004252.0, "created_utc": 1491975452.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5c8d8", "gilded": 0, "archived": false, "score": 25, "report_reasons": null, "author": "idle_zealot", "parent_id": "t1_dg59zxr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Might want to include an /s so that you don't get downvoted by people who can't infer sarcasm.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Might want to include an /s so that you don&amp;#39;t get downvoted by people who can&amp;#39;t infer sarcasm.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5c8d8", "score_hidden": false, "stickied": false, "created": 1491992979.0, "created_utc": 1491964179.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 25}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5pkmj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "geodel", "parent_id": "t1_dg5n4rk", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It would mean they can get 100 million or whatever funding and make their app 10 times heavier and slower if they want to.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would mean they can get 100 million or whatever funding and make their app 10 times heavier and slower if they want to.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5pkmj", "score_hidden": false, "stickied": false, "created": 1492022413.0, "created_utc": 1491993613.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5n4rk", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "cypressious", "parent_id": "t1_dg5mvu2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "According to gitkraken, gitkraken is \"The most popular Git GUI for Windows, Mac AND Linux\", so it'd better be good.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;According to gitkraken, gitkraken is &amp;quot;The most popular Git GUI for Windows, Mac AND Linux&amp;quot;, so it&amp;#39;d better be good.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5n4rk", "score_hidden": false, "stickied": false, "created": 1492014826.0, "created_utc": 1491986026.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg9i0ie", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Wispborne", "parent_id": "t1_dg5mvu2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Unfortunately, it's a $60/yr subscription to use it commercially. \n\nIt is a great client, though. Love it for personal projects, it'd be great if there was a flat fee to buy it outright.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unfortunately, it&amp;#39;s a $60/yr subscription to use it commercially. &lt;/p&gt;\n\n&lt;p&gt;It is a great client, though. Love it for personal projects, it&amp;#39;d be great if there was a flat fee to buy it outright.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg9i0ie", "score_hidden": false, "stickied": false, "created": 1492221786.0, "created_utc": 1492192986.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5mvu2", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "logicalLove", "parent_id": "t1_dg5m54m", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Which is actually pretty good I might add.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which is actually pretty good I might add.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5mvu2", "score_hidden": false, "stickied": false, "created": 1492014064.0, "created_utc": 1491985264.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5m54m", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cypressious", "parent_id": "t1_dg59zxr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Don't know about electron based git _alternatives_, but sure enough there's an electron based git _client_ https://www.gitkraken.com/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t know about electron based git &lt;em&gt;alternatives&lt;/em&gt;, but sure enough there&amp;#39;s an electron based git &lt;em&gt;client&lt;/em&gt; &lt;a href=\"https://www.gitkraken.com/\"&gt;https://www.gitkraken.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5m54m", "score_hidden": false, "stickied": false, "created": 1492011839.0, "created_utc": 1491983039.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5wd50", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "geodel", "parent_id": "t1_dg5ved7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Fossil has bunch of C files which is so old and memory unsafe. I has to be rewritten in some state of the art technology like typescript or rectangularJS  or something I don't know. \n\nMaybe I should show up at door of fossil project and request(demand?) that all C code must be thrown away and replaced with something else.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fossil has bunch of C files which is so old and memory unsafe. I has to be rewritten in some state of the art technology like typescript or rectangularJS  or something I don&amp;#39;t know. &lt;/p&gt;\n\n&lt;p&gt;Maybe I should show up at door of fossil project and request(demand?) that all C code must be thrown away and replaced with something else.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5wd50", "score_hidden": false, "stickied": false, "created": 1492034650.0, "created_utc": 1492005850.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ved7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "notthattall", "parent_id": "t1_dg59zxr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That could be [Fossil](https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki) packaged as an electron app... ugh, even the thought of it feels dirty.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That could be &lt;a href=\"https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki\"&gt;Fossil&lt;/a&gt; packaged as an electron app... ugh, even the thought of it feels dirty.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ved7", "score_hidden": false, "stickied": false, "created": 1492033387.0, "created_utc": 1492004587.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5bqrh", "gilded": 0, "archived": false, "score": 19, "report_reasons": null, "author": "lucy_in_the_skyDrive", "parent_id": "t1_dg5bj9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think they were making a joke. At least I read it that way... ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think they were making a joke. At least I read it that way... &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5bqrh", "score_hidden": false, "stickied": false, "created": 1491992309.0, "created_utc": 1491963509.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 19}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5f41p", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "scorcher24", "parent_id": "t1_dg5bj9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That is why it needs to be rewritten in Rust, to be safer. ^^^^^^^^/s", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That is why it needs to be rewritten in Rust, to be safer. &lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;/s&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5f41p", "score_hidden": false, "stickied": false, "created": 1491997146.0, "created_utc": 1491968346.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5h3th", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "zip117", "parent_id": "t1_dg5bj9f", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You never know when that will change. At one point everyone was happy with all of the free and low cost text editors painstakingly written over many years in C and C++, many of them with nice plugin architectures. Apparently that was not adequate: Atom was built from the ground up and Microsoft developed VSCode on the same framework. In some circles those are now industry standard.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You never know when that will change. At one point everyone was happy with all of the free and low cost text editors painstakingly written over many years in C and C++, many of them with nice plugin architectures. Apparently that was not adequate: Atom was built from the ground up and Microsoft developed VSCode on the same framework. In some circles those are now industry standard.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5h3th", "score_hidden": false, "stickied": false, "created": 1492000461.0, "created_utc": 1491971661.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5bj9f", "gilded": 0, "archived": false, "score": -9, "report_reasons": null, "author": "fimiak", "parent_id": "t1_dg59zxr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Git is practically an industry standard with the companies I see.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Git is practically an industry standard with the companies I see.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5bj9f", "score_hidden": false, "stickied": false, "created": 1491992016.0, "created_utc": 1491963216.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -9}}], "after": null, "before": null}}, "user_reports": [], "id": "dg59zxr", "gilded": 0, "archived": false, "score": 70, "report_reasons": null, "author": "geodel", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It is horrible they are still using git. Isn't some nice electron/nodeJS/typescript based git alternative available?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is horrible they are still using git. Isn&amp;#39;t some nice electron/nodeJS/typescript based git alternative available?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg59zxr", "score_hidden": false, "stickied": false, "created": 1491989962.0, "created_utc": 1491961162.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 70}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5qjpl", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "editor_of_the_beast", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "A broader point here is how bifurcated web dev tools   and native tools have always been. Visual Studio is actually very powerful and has been providing autocomplete and finding references to specific symbols for 20 years (released in 1997). If you've built executables vs. web apps, this is how you've developed in the past couple decades. I only mention this to paint a picture of our entire industry, as many of us can fall into silos and assume that's just what programming is.\n\nI am surprised at how much I enjoy Typescript, it didn't appeal to me at all at first and I assumed it would be half baked. But after writing it, it feels like quite a natural development. Some web front ends are large these days. Adding some assertions that the compiler can help you out with just feels nice, even if you don't buy in 100% to the promise of static typing, which you don't have to. It doesn't penalize you for not typing everything.\n\nEdit: typo ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A broader point here is how bifurcated web dev tools   and native tools have always been. Visual Studio is actually very powerful and has been providing autocomplete and finding references to specific symbols for 20 years (released in 1997). If you&amp;#39;ve built executables vs. web apps, this is how you&amp;#39;ve developed in the past couple decades. I only mention this to paint a picture of our entire industry, as many of us can fall into silos and assume that&amp;#39;s just what programming is.&lt;/p&gt;\n\n&lt;p&gt;I am surprised at how much I enjoy Typescript, it didn&amp;#39;t appeal to me at all at first and I assumed it would be half baked. But after writing it, it feels like quite a natural development. Some web front ends are large these days. Adding some assertions that the compiler can help you out with just feels nice, even if you don&amp;#39;t buy in 100% to the promise of static typing, which you don&amp;#39;t have to. It doesn&amp;#39;t penalize you for not typing everything.&lt;/p&gt;\n\n&lt;p&gt;Edit: typo &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qjpl", "score_hidden": false, "stickied": false, "created": 1492024960.0, "created_utc": 1491996160.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6b1q4", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jocull", "parent_id": "t1_dg657h5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Totally. I wasn't downplaying the power of TS, there's just things to be aware of :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Totally. I wasn&amp;#39;t downplaying the power of TS, there&amp;#39;s just things to be aware of :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6b1q4", "score_hidden": false, "stickied": false, "created": 1492050419.0, "created_utc": 1492021619.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg657h5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "pm-me-your-keyboard", "parent_id": "t1_dg5gwff", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "An interface is a powerful thing even if it's only at compile time. Large scale js projects are hard even with a team full of highly experienced JS devs and all the best practices that are currently popular.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;An interface is a powerful thing even if it&amp;#39;s only at compile time. Large scale js projects are hard even with a team full of highly experienced JS devs and all the best practices that are currently popular.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg657h5", "score_hidden": false, "stickied": false, "created": 1492044484.0, "created_utc": 1492015684.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5gwff", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "jocull", "parent_id": "t1_dg5e843", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "tl;dr version: TypeScript lets you tell yourself sweet, sweet static typing lies \ud83d\ude09", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;tl;dr version: TypeScript lets you tell yourself sweet, sweet static typing lies \ud83d\ude09&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5gwff", "score_hidden": false, "stickied": false, "created": 1492000098.0, "created_utc": 1491971298.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg73m80", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ckfinite", "parent_id": "t1_dg72n5h", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can absolutely have theorems about executions of programs, and, in fact, the typical definition of type soundness is one of them. The standard type soundness definition goes that if your program is well typed, then it won't get stuck (i.e. get to a nonsensical state), and will evaluate to a value of the same type as the program as a whole.\n\nIf your type system is sound, then you can use that soundness theorem, in combination with the knowledge that a program is well typed, to know something about the execution of that program. Likewise, if your type system is unsound, then knowing that a program is well typed is meaningless with respect to its execution. This is why type soundness of a type system is dependent on the dynamics, because it's making assertions about what the dynamics will do.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can absolutely have theorems about executions of programs, and, in fact, the typical definition of type soundness is one of them. The standard type soundness definition goes that if your program is well typed, then it won&amp;#39;t get stuck (i.e. get to a nonsensical state), and will evaluate to a value of the same type as the program as a whole.&lt;/p&gt;\n\n&lt;p&gt;If your type system is sound, then you can use that soundness theorem, in combination with the knowledge that a program is well typed, to know something about the execution of that program. Likewise, if your type system is unsound, then knowing that a program is well typed is meaningless with respect to its execution. This is why type soundness of a type system is dependent on the dynamics, because it&amp;#39;s making assertions about what the dynamics will do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg73m80", "score_hidden": false, "stickied": false, "created": 1492084168.0, "created_utc": 1492055368.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg72n5h", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "m50d", "parent_id": "t1_dg68is4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; You may be able to conclude judgments about terms, but there's no theorem you can get out of that.\n\nThat's the only level at which you have theorems at all, isn't it? What is soundness supposed to mean \"dynamically\"?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;You may be able to conclude judgments about terms, but there&amp;#39;s no theorem you can get out of that.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s the only level at which you have theorems at all, isn&amp;#39;t it? What is soundness supposed to mean &amp;quot;dynamically&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg72n5h", "score_hidden": false, "stickied": false, "created": 1492082746.0, "created_utc": 1492053946.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg68is4", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ckfinite", "parent_id": "t1_dg67owr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; [...] the types are about the semantics, not about the behaviour.\n\nI'm not sure what you mean by this. The semantics of a language proscribes its behaviour, and as a result, the type system gives you properties about a program's behaviour\n\nBugs can, of course, break type system soundness. However, in your example, the bug has to be part of the language's semantics in order for the program's behaviour to be altered, and as a result, the type system no longer has any meaning. You may be able to conclude judgments about terms, but there's no theorem you can get out of that.\n\n&gt; I think this equates to: runtime type checks are orthogonal to soundness and correctness.\n\nI'm saying that you can have type systems that must use dynamic type-driven features (e.g. casts) to achieve soundness (I refer you to Siek &amp; Taha 2010 as just one example), and also have type systems which have no runtime component while still being sound. However, if you consider either type system with different dynamic semantics, it no longer has any meaning.\n\nType system soundness, as a whole, is independent of if the dynamics knows about types. However, for a specific type system, you cannot talk about the type system's properties without understanding the dynamic semantics of the programming language - otherwise soundness has no meaning.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;[...] the types are about the semantics, not about the behaviour.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m not sure what you mean by this. The semantics of a language proscribes its behaviour, and as a result, the type system gives you properties about a program&amp;#39;s behaviour&lt;/p&gt;\n\n&lt;p&gt;Bugs can, of course, break type system soundness. However, in your example, the bug has to be part of the language&amp;#39;s semantics in order for the program&amp;#39;s behaviour to be altered, and as a result, the type system no longer has any meaning. You may be able to conclude judgments about terms, but there&amp;#39;s no theorem you can get out of that.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I think this equates to: runtime type checks are orthogonal to soundness and correctness.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m saying that you can have type systems that must use dynamic type-driven features (e.g. casts) to achieve soundness (I refer you to Siek &amp;amp; Taha 2010 as just one example), and also have type systems which have no runtime component while still being sound. However, if you consider either type system with different dynamic semantics, it no longer has any meaning.&lt;/p&gt;\n\n&lt;p&gt;Type system soundness, as a whole, is independent of if the dynamics knows about types. However, for a specific type system, you cannot talk about the type system&amp;#39;s properties without understanding the dynamic semantics of the programming language - otherwise soundness has no meaning.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg68is4", "score_hidden": false, "stickied": false, "created": 1492047840.0, "created_utc": 1492019040.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg67owr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "m50d", "parent_id": "t1_dg5wisb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; This is the reason why typescript is not sound; its type system has no runtime ability to enforce types at boundaries between typed and untyped code.\n\nFor the record typescript's approach to variance makes it unsound even if all your code is typed.\n\n&gt; Types are inexorably linked to the dynamics, as they are only sound if the dynamics respects the invariants they describe.\n\nHuh? A typed program continues to be well-typed even if there is a bug in the implementation; the types are about the semantics, not about the behaviour.\n\n&gt;  Restricting your dynamics to be ignorant of the types is an orthogonal issue to that of soundness and correctness\n\nI think this equates to: runtime type checks are orthogonal to soundness and correctness. Which I agree with, but seems to completely contradict your previous statement.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;This is the reason why typescript is not sound; its type system has no runtime ability to enforce types at boundaries between typed and untyped code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;For the record typescript&amp;#39;s approach to variance makes it unsound even if all your code is typed.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Types are inexorably linked to the dynamics, as they are only sound if the dynamics respects the invariants they describe.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Huh? A typed program continues to be well-typed even if there is a bug in the implementation; the types are about the semantics, not about the behaviour.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Restricting your dynamics to be ignorant of the types is an orthogonal issue to that of soundness and correctness&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I think this equates to: runtime type checks are orthogonal to soundness and correctness. Which I agree with, but seems to completely contradict your previous statement.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg67owr", "score_hidden": false, "stickied": false, "created": 1492047007.0, "created_utc": 1492018207.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5wisb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ckfinite", "parent_id": "t1_dg5nh2e", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "At least in the context of mixing typed and untyped code, the runtime effects of a type system really do become very important, as they allow you to be sound. This is the reason why typescript is not sound; its type system has no runtime ability to enforce types at boundaries between typed and untyped code. If you allow the type system to insert checks, like the DLR in C# or contracts in typed racket, you can have a sound system, at the cost of other effects.\n\nOn parametricity, I don't think that it should be treated as the end all be all of higher rank polymorphism that it so frequently is, especially in the context of memory. While I do see the theoretical attractiveness, in practice I'm not convinced that it's that useful of an attraction. On actual machines, the representation of values depends on their type, and if you cling to parametricity, you're stuck with indirection everywhere. Moreover, in real uses of these features, parametricity is generally respected as a result of the implementation, up to memory representation.\n\nLastly, decoupling types and dynamic semantics is misunderstanding how type systems work. Types are inexorably linked to the dynamics, as they are only sound if the dynamics respects the invariants they describe. Restricting your dynamics to be ignorant of the types is an orthogonal issue to that of soundness and correctness, and, as the examples above illustrate, makes writing a sound type system impossible in several applications.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;At least in the context of mixing typed and untyped code, the runtime effects of a type system really do become very important, as they allow you to be sound. This is the reason why typescript is not sound; its type system has no runtime ability to enforce types at boundaries between typed and untyped code. If you allow the type system to insert checks, like the DLR in C# or contracts in typed racket, you can have a sound system, at the cost of other effects.&lt;/p&gt;\n\n&lt;p&gt;On parametricity, I don&amp;#39;t think that it should be treated as the end all be all of higher rank polymorphism that it so frequently is, especially in the context of memory. While I do see the theoretical attractiveness, in practice I&amp;#39;m not convinced that it&amp;#39;s that useful of an attraction. On actual machines, the representation of values depends on their type, and if you cling to parametricity, you&amp;#39;re stuck with indirection everywhere. Moreover, in real uses of these features, parametricity is generally respected as a result of the implementation, up to memory representation.&lt;/p&gt;\n\n&lt;p&gt;Lastly, decoupling types and dynamic semantics is misunderstanding how type systems work. Types are inexorably linked to the dynamics, as they are only sound if the dynamics respects the invariants they describe. Restricting your dynamics to be ignorant of the types is an orthogonal issue to that of soundness and correctness, and, as the examples above illustrate, makes writing a sound type system impossible in several applications.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5wisb", "score_hidden": false, "stickied": false, "created": 1492034848.0, "created_utc": 1492006048.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5nh2e", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "m50d", "parent_id": "t1_dg5e843", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; C#, for example, has a static type system that also has runtime effects, both through its reified generics and through the DLR/the dynamic keyword.\n\nWhich mainly serve to allow you to write awful parametricity-violating functions. It's possible to bolt runtime effects onto a static type system in the same way that it's possible to put wheels on a desk, but I'd argue that those effects are not really part of the type system proper (which is fundamentally about terms in the language, not about operational semantics), and in any case almost always a bad idea.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;C#, for example, has a static type system that also has runtime effects, both through its reified generics and through the DLR/the dynamic keyword.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Which mainly serve to allow you to write awful parametricity-violating functions. It&amp;#39;s possible to bolt runtime effects onto a static type system in the same way that it&amp;#39;s possible to put wheels on a desk, but I&amp;#39;d argue that those effects are not really part of the type system proper (which is fundamentally about terms in the language, not about operational semantics), and in any case almost always a bad idea.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5nh2e", "score_hidden": false, "stickied": false, "created": 1492015896.0, "created_utc": 1491987096.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5j37o", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "ckfinite", "parent_id": "t1_dg5ie5q", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The compilation target really doesn't matter that much. Take, for example, .NET CIL itself. The CLR JIT compiles CIL down into untyped x86-64 assembly, inserting runtime checks where approperiate. Similarly, Scala compiles onto the JVM by encoding its types into Java, and Scala.js compiles (sound) Scala into untyped JS in much the same way. The only impact that the target language has is how much work your compiler has to do to translate into it.\n\nIt isn't hard to do this. Encoding types is not hugely difficult, and dynamic behaviour of types can be taken care of by whatever runtime library your language has, with the compiler simply emitting calls into the runtime. However, for sound, fully statically typed languages, these checks only need to happen at FFI boundaries, because the type system rules them out internally.\n\n&gt; The type system in Typescript is merely syntactic sugar and affects very little in the generated code.\n\nIt actually doesn't show up in the generated code at all, since Typescript is pretty much a pure application of Bracha's pluggable type system idea to Javascript. While sound gradual typing is probably not a good idea (see Takikawa et al in POPL 2016 for just one aspect of this), Typescript's type system does leave something to be desired, in my opinion.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The compilation target really doesn&amp;#39;t matter that much. Take, for example, .NET CIL itself. The CLR JIT compiles CIL down into untyped x86-64 assembly, inserting runtime checks where approperiate. Similarly, Scala compiles onto the JVM by encoding its types into Java, and Scala.js compiles (sound) Scala into untyped JS in much the same way. The only impact that the target language has is how much work your compiler has to do to translate into it.&lt;/p&gt;\n\n&lt;p&gt;It isn&amp;#39;t hard to do this. Encoding types is not hugely difficult, and dynamic behaviour of types can be taken care of by whatever runtime library your language has, with the compiler simply emitting calls into the runtime. However, for sound, fully statically typed languages, these checks only need to happen at FFI boundaries, because the type system rules them out internally.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The type system in Typescript is merely syntactic sugar and affects very little in the generated code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It actually doesn&amp;#39;t show up in the generated code at all, since Typescript is pretty much a pure application of Bracha&amp;#39;s pluggable type system idea to Javascript. While sound gradual typing is probably not a good idea (see Takikawa et al in POPL 2016 for just one aspect of this), Typescript&amp;#39;s type system does leave something to be desired, in my opinion.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5j37o", "score_hidden": false, "stickied": false, "created": 1492004239.0, "created_utc": 1491975439.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ie5q", "gilded": 0, "archived": false, "score": -8, "report_reasons": null, "author": "kernelman", "parent_id": "t1_dg5e843", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "IMO it doesn't have anything to do with the type system. It all depends on what it compiles (transiples) to. Typescript eventually ends up being Javascript which is not strongly typed, while on the other hand, .NET ends up in IL which is a strongly typed system.\n\nThe type system in Typescript is merely syntactic sugar and affects very little in the generated code.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IMO it doesn&amp;#39;t have anything to do with the type system. It all depends on what it compiles (transiples) to. Typescript eventually ends up being Javascript which is not strongly typed, while on the other hand, .NET ends up in IL which is a strongly typed system.&lt;/p&gt;\n\n&lt;p&gt;The type system in Typescript is merely syntactic sugar and affects very little in the generated code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ie5q", "score_hidden": false, "stickied": false, "created": 1492002852.0, "created_utc": 1491974052.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -8}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5e843", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "ckfinite", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "As a programming languages researcher working on gradual typing, the introduction doesn't really introduce TypeScript well. My main objection to it is the description of TypeScript's type system as a *static type system*, then going on to say things like\n\n&gt; A static type checker does not modify how your code behaves at runtime [...]\n\nWhile TypeScript's type system is a static type system, *not all static type systems have no runtime effects*. C#, for example, has a static type system that also has runtime effects, both through its reified generics and through the DLR/the dynamic keyword.\n\nInstead, what the author means is that TypeScript has an *optional* static type system. Optional type systems have no runtime impact, meaning that while you don't know your types are respected (e.g. an int parameter can be passed a string by untyped code and TypeScript won't notice). This means that TypeScript can't trust its own types - and you can't either - but it avoids many issues that arise when you try to combine sound (i.e. meaningful) type systems and untyped code, such as absolutely awful performance or having to type hundreds of files at once.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a programming languages researcher working on gradual typing, the introduction doesn&amp;#39;t really introduce TypeScript well. My main objection to it is the description of TypeScript&amp;#39;s type system as a &lt;em&gt;static type system&lt;/em&gt;, then going on to say things like&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;A static type checker does not modify how your code behaves at runtime [...]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;While TypeScript&amp;#39;s type system is a static type system, &lt;em&gt;not all static type systems have no runtime effects&lt;/em&gt;. C#, for example, has a static type system that also has runtime effects, both through its reified generics and through the DLR/the dynamic keyword.&lt;/p&gt;\n\n&lt;p&gt;Instead, what the author means is that TypeScript has an &lt;em&gt;optional&lt;/em&gt; static type system. Optional type systems have no runtime impact, meaning that while you don&amp;#39;t know your types are respected (e.g. an int parameter can be passed a string by untyped code and TypeScript won&amp;#39;t notice). This means that TypeScript can&amp;#39;t trust its own types - and you can&amp;#39;t either - but it avoids many issues that arise when you try to combine sound (i.e. meaningful) type systems and untyped code, such as absolutely awful performance or having to type hundreds of files at once.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5e843", "score_hidden": false, "stickied": false, "created": 1491995800.0, "created_utc": 1491967000.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6kp03", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "OCELOT525", "parent_id": "t1_dg5zca0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Too late, just made a HtmlFactoryVisitorDecorator which is instantiated by Spring.JS.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Too late, just made a HtmlFactoryVisitorDecorator which is instantiated by Spring.JS.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6kp03", "score_hidden": false, "stickied": false, "created": 1492060480.0, "created_utc": 1492031680.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg6y46s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg6tkra", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Good, yeah I just always like to give that warning. Too many people try to fit JavaScript into an OOP workflow but it just doesn't mesh well with the language or the libraries", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good, yeah I just always like to give that warning. Too many people try to fit JavaScript into an OOP workflow but it just doesn&amp;#39;t mesh well with the language or the libraries&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6y46s", "score_hidden": false, "stickied": false, "created": 1492076890.0, "created_utc": 1492048090.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6tkra", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "dpash", "parent_id": "t1_dg5zca0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "We write Java in a functional nature now :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We write Java in a functional nature now :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6tkra", "score_hidden": false, "stickied": false, "created": 1492071384.0, "created_utc": 1492042584.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5zca0", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg5xli2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Be very careful though. Don't code in TypeScript like you would in Java, that's a huge anti-pattern.\n\nEmbrace the functional nature and the structural types.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Be very careful though. Don&amp;#39;t code in TypeScript like you would in Java, that&amp;#39;s a huge anti-pattern.&lt;/p&gt;\n\n&lt;p&gt;Embrace the functional nature and the structural types.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5zca0", "score_hidden": false, "stickied": false, "created": 1492038154.0, "created_utc": 1492009354.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5xli2", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "bubbleguuum", "parent_id": "t1_dg5vs8g", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "As a Java programmer since forever contemplating using JS and related technologies for client-side web dev, I concur. TS is a godsend vs plain JS. The more I read about TS, the more I like it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a Java programmer since forever contemplating using JS and related technologies for client-side web dev, I concur. TS is a godsend vs plain JS. The more I read about TS, the more I like it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5xli2", "score_hidden": false, "stickied": false, "created": 1492036153.0, "created_utc": 1492007353.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg727fk", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "GSV_Little_Rascal", "parent_id": "t1_dg715v7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "No need to minify on the backend (node.js).\n\nAlso I've seen plenty of web apps without minification or any other build chain. Benefit of minification in most small/medium apps (&lt;= 100 KB of JS code) isn't that big ...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No need to minify on the backend (node.js).&lt;/p&gt;\n\n&lt;p&gt;Also I&amp;#39;ve seen plenty of web apps without minification or any other build chain. Benefit of minification in most small/medium apps (&amp;lt;= 100 KB of JS code) isn&amp;#39;t that big ...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg727fk", "score_hidden": false, "stickied": false, "created": 1492082135.0, "created_utc": 1492053335.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg715v7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg70rvc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "But if you're making a web app you most likely already have the overhead of a build chain. I assume at the least you're going to be minifying. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But if you&amp;#39;re making a web app you most likely already have the overhead of a build chain. I assume at the least you&amp;#39;re going to be minifying. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg715v7", "score_hidden": false, "stickied": false, "created": 1492080737.0, "created_utc": 1492051937.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg70rvc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "GSV_Little_Rascal", "parent_id": "t1_dg5vs8g", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; There's basically no reason not to use it\n\nTranspiling", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;There&amp;#39;s basically no reason not to use it&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Transpiling&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg70rvc", "score_hidden": false, "stickied": false, "created": 1492080226.0, "created_utc": 1492051426.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5vs8g", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg5uth9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "And yet this is something that many people still need to learn.\n\nIf you're just using a sprinkling of javascript then it's fine to use javascript. But if you're making a full on web application then it's irresponsible to not use typescript. There's basically no reason not to use it", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And yet this is something that many people still need to learn.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re just using a sprinkling of javascript then it&amp;#39;s fine to use javascript. But if you&amp;#39;re making a full on web application then it&amp;#39;s irresponsible to not use typescript. There&amp;#39;s basically no reason not to use it&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5vs8g", "score_hidden": false, "stickied": false, "created": 1492033901.0, "created_utc": 1492005101.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5uth9", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "bubbleguuum", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "tl;dr: Slack developers just discovered that statically typed languages are cool to avoid programming errors.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;tl;dr: Slack developers just discovered that statically typed languages are cool to avoid programming errors.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5uth9", "score_hidden": false, "stickied": false, "created": 1492032588.0, "created_utc": 1492003788.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5ref6", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "JW_00000", "parent_id": "t1_dg59t23", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Isn't part of engineering about making trade-offs, especially taking into account economics?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Isn&amp;#39;t part of engineering about making trade-offs, especially taking into account economics?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ref6", "score_hidden": false, "stickied": false, "created": 1492026838.0, "created_utc": 1491998038.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5e6bl", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "BufferUnderpants", "parent_id": "t1_dg5dxp6", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "No? They are being judged for using the latest and least optimized technology, instead of the older and more efficient one.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No? They are being judged for using the latest and least optimized technology, instead of the older and more efficient one.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5e6bl", "score_hidden": false, "stickied": false, "created": 1491995727.0, "created_utc": 1491966927.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5ea1j", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "EveningNewbs", "parent_id": "t1_dg5dxp6", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Found the Slack employee.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Found the Slack employee.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ea1j", "score_hidden": false, "stickied": false, "created": 1491995879.0, "created_utc": 1491967079.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5dxp6", "gilded": 0, "archived": false, "score": -19, "report_reasons": null, "author": "uw_NB", "parent_id": "t1_dg5dua4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "you guys a bunch of Nazi... if a tech firm isnt using the latest and most optimized technology/code, you immediately judged them as worst shit ever.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;you guys a bunch of Nazi... if a tech firm isnt using the latest and most optimized technology/code, you immediately judged them as worst shit ever.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5dxp6", "score_hidden": false, "stickied": false, "created": 1491995381.0, "created_utc": 1491966581.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -19}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5dua4", "gilded": 0, "archived": false, "score": -4, "report_reasons": null, "author": "EveningNewbs", "parent_id": "t1_dg59t23", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Yep. I can't take anything they say seriously since that post about how proud they were of their clever trick to get RAM usage below a gig for a glorified IRC client. At least a few sensible people reamed them in the comments.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep. I can&amp;#39;t take anything they say seriously since that post about how proud they were of their clever trick to get RAM usage below a gig for a glorified IRC client. At least a few sensible people reamed them in the comments.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5dua4", "score_hidden": false, "stickied": false, "created": 1491995242.0, "created_utc": 1491966442.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg59t23", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "JWooferZ", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "I'd probably care more if it wasn't because their definition of \"engineering\" is an app on top of chromium.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d probably care more if it wasn&amp;#39;t because their definition of &amp;quot;engineering&amp;quot; is an app on top of chromium.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg59t23", "score_hidden": false, "stickied": false, "created": 1491989718.0, "created_utc": 1491960918.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64u2vh", "likes": null, "replies": "", "user_reports": [], "id": "dg5lci2", "gilded": 0, "archived": false, "score": -6, "report_reasons": null, "author": "Eirenarch", "parent_id": "t3_64u2vh", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "When you work for a company that web developers hate and your tool comes late to the party but you still manage to change the way the world writes JavaScript because you are Anders Motherfucking Hejlsberg", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When you work for a company that web developers hate and your tool comes late to the party but you still manage to change the way the world writes JavaScript because you are Anders Motherfucking Hejlsberg&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5lci2", "score_hidden": false, "stickied": false, "created": 1492009624.0, "created_utc": 1491980824.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -6}}], "after": null, "before": null}}]