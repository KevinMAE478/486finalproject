[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64zozg", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 37, "report_reasons": null, "author": "hypersistence", "saved": false, "mod_reports": [], "name": "t3_64zozg", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "mysqlserverteam.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/64zozg/mysql_801_introduces_skip_locked_and_nowait_lock/", "num_reports": null, "locked": false, "stickied": false, "created": 1492047582.0, "url": "http://mysqlserverteam.com/mysql-8-0-1-using-skip-locked-and-nowait-to-handle-hot-rows/", "author_flair_text": null, "quarantine": false, "title": "MySQL 8.0.1 introduces SKIP LOCKED and NOWAIT lock modes", "created_utc": 1492018782.0, "distinguished": null, "media": null, "upvote_ratio": 0.72, "num_comments": 9, "visited": false, "subreddit_type": "public", "ups": 37}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": "", "user_reports": [], "id": "dg7mbb0", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "CoreParad0x", "parent_id": "t1_dg7lj3r", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "This makes a lot more sense. We've been using MySql 8 internally for a few things, but we're going to switch to SQL Server 2016. \n\nStill, it's nice to see Oracle is at least doing something with it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This makes a lot more sense. We&amp;#39;ve been using MySql 8 internally for a few things, but we&amp;#39;re going to switch to SQL Server 2016. &lt;/p&gt;\n\n&lt;p&gt;Still, it&amp;#39;s nice to see Oracle is at least doing something with it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7mbb0", "score_hidden": false, "stickied": false, "created": 1492122646.0, "created_utc": 1492093846.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": "", "user_reports": [], "id": "dg7lxnw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "slipszenko", "parent_id": "t1_dg7lj3r", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Thanks!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7lxnw", "score_hidden": false, "stickied": false, "created": 1492122202.0, "created_utc": 1492093402.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7lj3r", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "hypersistence", "parent_id": "t1_dg7k6vp", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "5.5 is considered the last minor version in the 5.x branch since both 5.6 and 5.7 have added significant changes.\n\nTherefore, this is how the versions were supposed to be named:\n\n- 5.6 -&gt; 6\n- 5.7 -&gt; 7\n- 8.0", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;5.5 is considered the last minor version in the 5.x branch since both 5.6 and 5.7 have added significant changes.&lt;/p&gt;\n\n&lt;p&gt;Therefore, this is how the versions were supposed to be named:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;5.6 -&amp;gt; 6&lt;/li&gt;\n&lt;li&gt;5.7 -&amp;gt; 7&lt;/li&gt;\n&lt;li&gt;8.0&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7lj3r", "score_hidden": false, "stickied": false, "created": 1492121725.0, "created_utc": 1492092925.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7k6vp", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "slipszenko", "parent_id": "t3_64zozg", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Sorry if this is a stupid question, but what is the reason for the version jump from 5.7 to 8? How comes there's no 6 or 7? Or have there been but they're not in such active use for whatever reason?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry if this is a stupid question, but what is the reason for the version jump from 5.7 to 8? How comes there&amp;#39;s no 6 or 7? Or have there been but they&amp;#39;re not in such active use for whatever reason?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7k6vp", "score_hidden": false, "stickied": false, "created": 1492120026.0, "created_utc": 1492091226.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": "", "user_reports": [], "id": "dg7dr5o", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "masklinn", "parent_id": "t1_dg6tgtc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Exactly. SKIP LOCKED is also in SQLS (though it's called READPAST)\n\n`SKIP LOCKED` and `NOWAIT` are *locking clauses*, they are used specifically in \"locking\" selects (`SELECT \u2026 FOR (UPDATE | [[NO] KEY] SHARE) [OF &lt;tables&gt;]`).\n\nBy default `SELECT \u2026 FOR \u2026` will wait on all currently locked rows (of the selected tables) and only execute the actual query once it can get all the locks. `NOWAIT` will error if it can't acquire the locks immediately, and `SKIP LOCKED` will restrict its selection to the unlocked rows.\n\nThe latter is really useful for multi-consumer work queues, otherwise as soon as a consumer locks a row the others will start waiting on that row instead of going on with their work and you need to use either higher levels of isolation (which lower concurrency) or explicit locks from procedural extensions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Exactly. SKIP LOCKED is also in SQLS (though it&amp;#39;s called READPAST)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;SKIP LOCKED&lt;/code&gt; and &lt;code&gt;NOWAIT&lt;/code&gt; are &lt;em&gt;locking clauses&lt;/em&gt;, they are used specifically in &amp;quot;locking&amp;quot; selects (&lt;code&gt;SELECT \u2026 FOR (UPDATE | [[NO] KEY] SHARE) [OF &amp;lt;tables&amp;gt;]&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;By default &lt;code&gt;SELECT \u2026 FOR \u2026&lt;/code&gt; will wait on all currently locked rows (of the selected tables) and only execute the actual query once it can get all the locks. &lt;code&gt;NOWAIT&lt;/code&gt; will error if it can&amp;#39;t acquire the locks immediately, and &lt;code&gt;SKIP LOCKED&lt;/code&gt; will restrict its selection to the unlocked rows.&lt;/p&gt;\n\n&lt;p&gt;The latter is really useful for multi-consumer work queues, otherwise as soon as a consumer locks a row the others will start waiting on that row instead of going on with their work and you need to use either higher levels of isolation (which lower concurrency) or explicit locks from procedural extensions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7dr5o", "score_hidden": false, "stickied": false, "created": 1492108035.0, "created_utc": 1492079235.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6tgtc", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "doublehyphen", "parent_id": "t1_dg6mbqr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Both Oracle and PostgreSQL have supported this feature for a while, and it is very useful if you for some reason want to implement a message queue or work queue in your database.\n\nThis article explains the feature pretty poorly though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Both Oracle and PostgreSQL have supported this feature for a while, and it is very useful if you for some reason want to implement a message queue or work queue in your database.&lt;/p&gt;\n\n&lt;p&gt;This article explains the feature pretty poorly though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6tgtc", "score_hidden": false, "stickied": false, "created": 1492071249.0, "created_utc": 1492042449.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": "", "user_reports": [], "id": "dg7yo5s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Ironfist", "parent_id": "t1_dg7kibn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Ain't nobody got time for that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ain&amp;#39;t nobody got time for that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7yo5s", "score_hidden": false, "stickied": false, "created": 1492135957.0, "created_utc": 1492107157.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64zozg", "likes": null, "replies": "", "user_reports": [], "id": "dg825s7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "doublehyphen", "parent_id": "t1_dg7kibn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "To be fair the article explains the feature pretty poorly and the example of booking seats is probably not a good use case for the feature. The obvious use case is work queues with multiple consumers where this feature is a huge improvement.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To be fair the article explains the feature pretty poorly and the example of booking seats is probably not a good use case for the feature. The obvious use case is work queues with multiple consumers where this feature is a huge improvement.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg825s7", "score_hidden": false, "stickied": false, "created": 1492139703.0, "created_utc": 1492110903.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7kibn", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Jautenim", "parent_id": "t1_dg6mbqr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Or you could, y'know, read the article.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Or you could, y&amp;#39;know, read the article.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7kibn", "score_hidden": false, "stickied": false, "created": 1492120437.0, "created_utc": 1492091637.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6mbqr", "gilded": 0, "archived": false, "score": -2, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_64zozg", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6mbqr", "score_hidden": false, "stickied": false, "created": 1492062407.0, "created_utc": 1492033607.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -2}}], "after": null, "before": null}}]