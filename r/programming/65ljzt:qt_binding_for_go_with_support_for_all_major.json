[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ljzt", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 398, "report_reasons": null, "author": "the_recipe", "saved": false, "mod_reports": [], "name": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "therecipe.github.io", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65ljzt/qt_binding_for_go_with_support_for_all_major/", "num_reports": null, "locked": false, "stickied": false, "created": 1492320617.0, "url": "https://therecipe.github.io/qt/", "author_flair_text": null, "quarantine": false, "title": "Qt binding for Go with support for all major operating systems", "created_utc": 1492291817.0, "distinguished": null, "media": null, "upvote_ratio": 0.88, "num_comments": 95, "visited": false, "subreddit_type": "public", "ups": 398}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbyh8x", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbvayu", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm glad they've finally gotten their shit together. My experience was from 2010 to 2015.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m glad they&amp;#39;ve finally gotten their shit together. My experience was from 2010 to 2015.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyh8x", "score_hidden": false, "stickied": false, "created": 1492372652.0, "created_utc": 1492343852.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgcao8m", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mrexodia", "parent_id": "t1_dgc71x7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Nah, just on Windows with the official Qt installer :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nah, just on Windows with the official Qt installer :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcao8m", "score_hidden": false, "stickied": false, "created": 1492392327.0, "created_utc": 1492363527.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc71x7", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgc34iz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": ".. mhh ? on windows with a custom Qt installation maybe (but that's the case for any use of CMake or other build system there), but on sane systems which put stuff in /usr/lib/cmake or /usr/local/lib/cmake you're good. \n\nAnd even then, if you use QtCreator, it adds the current Qt version used to the CMake variables (but this is a relatively recent addition if I am not mistaken).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;.. mhh ? on windows with a custom Qt installation maybe (but that&amp;#39;s the case for any use of CMake or other build system there), but on sane systems which put stuff in /usr/lib/cmake or /usr/local/lib/cmake you&amp;#39;re good. &lt;/p&gt;\n\n&lt;p&gt;And even then, if you use QtCreator, it adds the current Qt version used to the CMake variables (but this is a relatively recent addition if I am not mistaken).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc71x7", "score_hidden": false, "stickied": false, "created": 1492387579.0, "created_utc": 1492358779.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": -3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc34iz", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "mrexodia", "parent_id": "t1_dgbvayu", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "But if you don't know to set the module path before running CMake nothing will work at all...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But if you don&amp;#39;t know to set the module path before running CMake nothing will work at all...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc34iz", "score_hidden": false, "stickied": false, "created": 1492381958.0, "created_utc": 1492353158.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvayu", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgbnayn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; only to find that CMake breaks compat with each release\n\nuh..? \n\n    project(foo)\n\n    set(CMAKE_AUTOMOC ON)\n    find_package(Qt5 COMPONENTS Widgets)\n\n    add_executable(mySoftware main.cpp)\n    target_link_libraries(mySoftware PRIVATE Qt5::Widgets)\n\nhas been working for years without breakage.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;only to find that CMake breaks compat with each release&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;uh..? &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;project(foo)\n\nset(CMAKE_AUTOMOC ON)\nfind_package(Qt5 COMPONENTS Widgets)\n\nadd_executable(mySoftware main.cpp)\ntarget_link_libraries(mySoftware PRIVATE Qt5::Widgets)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;has been working for years without breakage.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvayu", "score_hidden": false, "stickied": false, "created": 1492362254.0, "created_utc": 1492333454.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgcvcvl", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgch0tx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Its only sane if you want to clean up the whole tree all at once every time. I often preferred to keep the controls and indicators bound to the system into which they integrated. It seems strange that by default, their lifetime was determined by where they were placed in the layout instead of the lifetimes of the systems in which they participated. In this way, the controls were allocated directly into the structure of the subsystem they belonged to, forming a different (but arguably more important) tree--and one which precludes double frees, etc (or would do so if I didn't have to take care to avoid accidentally parenting something). My way isn't probably appropriate for all cases, but I think it is generally better. You're free of course to disagree.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its only sane if you want to clean up the whole tree all at once every time. I often preferred to keep the controls and indicators bound to the system into which they integrated. It seems strange that by default, their lifetime was determined by where they were placed in the layout instead of the lifetimes of the systems in which they participated. In this way, the controls were allocated directly into the structure of the subsystem they belonged to, forming a different (but arguably more important) tree--and one which precludes double frees, etc (or would do so if I didn&amp;#39;t have to take care to avoid accidentally parenting something). My way isn&amp;#39;t probably appropriate for all cases, but I think it is generally better. You&amp;#39;re free of course to disagree.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcvcvl", "score_hidden": false, "stickied": false, "created": 1492419856.0, "created_utc": 1492391056.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgch0tx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tecnofauno", "parent_id": "t1_dgc8uzp", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "About the memory management issue, I would argue that the Qt approach is the sanest. There is not much choice when you need to manage the lifetime of a view tree. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;About the memory management issue, I would argue that the Qt approach is the sanest. There is not much choice when you need to manage the lifetime of a view tree. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgch0tx", "score_hidden": false, "stickied": false, "created": 1492400757.0, "created_utc": 1492371957.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc8uzp", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbzvfc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Passing around stl containers, permitting the construction of generic qobjects, first class stl smart pointers, removing the parenting memory managenent system, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Passing around stl containers, permitting the construction of generic qobjects, first class stl smart pointers, removing the parenting memory managenent system, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc8uzp", "score_hidden": false, "stickied": false, "created": 1492389977.0, "created_utc": 1492361177.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbzvfc", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "qx7xbku", "parent_id": "t1_dgbyc91", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What exactly is \"c++14 API\" though? Qt5 does use new c++11 features to greatly simplify work with signals.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What exactly is &amp;quot;c++14 API&amp;quot; though? Qt5 does use new c++11 features to greatly simplify work with signals.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbzvfc", "score_hidden": false, "stickied": false, "created": 1492376077.0, "created_utc": 1492347277.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc8osb", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgc7yn9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Qmoc prevents you from making generic QObjects, and using STL containers means converting between them and Q* containers all the time. Similarly managing your own memory means you need to take care to avoid parenting or you'll get multifree crashe's. There's also something to be said for consistency within the environment or broader ecosystem.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qmoc prevents you from making generic QObjects, and using STL containers means converting between them and Q* containers all the time. Similarly managing your own memory means you need to take care to avoid parenting or you&amp;#39;ll get multifree crashe&amp;#39;s. There&amp;#39;s also something to be said for consistency within the environment or broader ecosystem.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc8osb", "score_hidden": false, "stickied": false, "created": 1492389747.0, "created_utc": 1492360947.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc7yn9", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgc7ekc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; I want to use templates, idiomatic memory management, first class support for STL containers, etc. \n\nand.. what prevents you exactly from doing this ? for instance storing your objects into *_ptr instead of new'ing them and leaving them as member of your classes  (you'll lose at least 16 bytes per object vs letting QObjects manage themselves, but well...).\n\nI generally use std containers for all my Qt code, I don't really see what I am missing.\n\nedit: here is an example of \"modern C++\" qt code: https://github.com/paceholder/nodeeditor/blob/master/src/FlowScene.cpp#L76", "edited": 1492360258.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I want to use templates, idiomatic memory management, first class support for STL containers, etc. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;and.. what prevents you exactly from doing this ? for instance storing your objects into *_ptr instead of new&amp;#39;ing them and leaving them as member of your classes  (you&amp;#39;ll lose at least 16 bytes per object vs letting QObjects manage themselves, but well...).&lt;/p&gt;\n\n&lt;p&gt;I generally use std containers for all my Qt code, I don&amp;#39;t really see what I am missing.&lt;/p&gt;\n\n&lt;p&gt;edit: here is an example of &amp;quot;modern C++&amp;quot; qt code: &lt;a href=\"https://github.com/paceholder/nodeeditor/blob/master/src/FlowScene.cpp#L76\"&gt;https://github.com/paceholder/nodeeditor/blob/master/src/FlowScene.cpp#L76&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc7yn9", "score_hidden": false, "stickied": false, "created": 1492388794.0, "created_utc": 1492359994.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc7ekc", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgc22p1", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I want to use templates, idiomatic memory management, first class support for STL containers, etc. These aren't C++14 features, but my point is that Qt looks very different than most C++14.", "edited": 1492359469.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I want to use templates, idiomatic memory management, first class support for STL containers, etc. These aren&amp;#39;t C++14 features, but my point is that Qt looks very different than most C++14.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc7ekc", "score_hidden": false, "stickied": false, "created": 1492388044.0, "created_utc": 1492359244.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc22p1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgbyc91", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; it doesn't have a C++14 API,\n\nwhy not everything is \"modern C++\" in Qt, it still supports lambdas, has move constructors / copy constructors, supports shared pointers, std::u16string, range-based for loops, has many constexpr functions... what C++14 feature would you like to see it use ?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;it doesn&amp;#39;t have a C++14 API,&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;why not everything is &amp;quot;modern C++&amp;quot; in Qt, it still supports lambdas, has move constructors / copy constructors, supports shared pointers, std::u16string, range-based for loops, has many constexpr functions... what C++14 feature would you like to see it use ?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc22p1", "score_hidden": false, "stickied": false, "created": 1492380283.0, "created_utc": 1492351483.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbyc91", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbxsuu", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Nothing (well, a few things, but my point wasn't to pick on Qt), but it doesn't have a C++14 API, which the OP cited as a perk of doing Qt/C++ development.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nothing (well, a few things, but my point wasn&amp;#39;t to pick on Qt), but it doesn&amp;#39;t have a C++14 API, which the OP cited as a perk of doing Qt/C++ development.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyc91", "score_hidden": false, "stickied": false, "created": 1492372282.0, "created_utc": 1492343482.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbxsuu", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "qx7xbku", "parent_id": "t1_dgbnayn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What is wrong with Qt API?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is wrong with Qt API?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxsuu", "score_hidden": false, "stickied": false, "created": 1492370716.0, "created_utc": 1492341916.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc7mkj", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgc0zqq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Its no worse than C++, I just already put in the time to learn it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its no worse than C++, I just already put in the time to learn it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc7mkj", "score_hidden": false, "stickied": false, "created": 1492388344.0, "created_utc": 1492359544.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc0zqq", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "lastethere", "parent_id": "t1_dgbnayn", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Rust is to programming languages what legal jargon is to the common language: not for the smartest, for the most secretives.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust is to programming languages what legal jargon is to the common language: not for the smartest, for the most secretives.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc0zqq", "score_hidden": false, "stickied": false, "created": 1492378331.0, "created_utc": 1492349531.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbyiko", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AllGood0nesAreGone", "parent_id": "t1_dgbyf8d", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I've never facing this problem. What kind of features are you using that breaks with every update.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve never facing this problem. What kind of features are you using that breaks with every update.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyiko", "score_hidden": false, "stickied": false, "created": 1492372752.0, "created_utc": 1492343952.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbyf8d", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbtlam", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Once in a while I update my Linux OS and it has a different version of CMake in its repository than the prior iteration. Other times I want to try a new feature in some new version of CMake only to find it breaks compat. Still other times it's colleagues who have the wrong version.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Once in a while I update my Linux OS and it has a different version of CMake in its repository than the prior iteration. Other times I want to try a new feature in some new version of CMake only to find it breaks compat. Still other times it&amp;#39;s colleagues who have the wrong version.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyf8d", "score_hidden": false, "stickied": false, "created": 1492372505.0, "created_utc": 1492343705.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbtlam", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AllGood0nesAreGone", "parent_id": "t1_dgbnayn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "If cmake keeps breaking why do you keep updating?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If cmake keeps breaking why do you keep updating?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbtlam", "score_hidden": false, "stickied": false, "created": 1492356872.0, "created_utc": 1492328072.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgd9j82", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgcvyts", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; system package manager,,, reproducible builds\n\nOkay, yes, using heterogeneous software is hard. It's not fitting 100% perfectly.\n\n&gt; Google around for \"CMake broken compatibility\". This is a well known criticism.\n\n2005-2006, that's like way back in the past.\n\n&gt; I'm not sure, but I can probably\n\nSo nothing specific or confirmed to worry about.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;system package manager,,, reproducible builds&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Okay, yes, using heterogeneous software is hard. It&amp;#39;s not fitting 100% perfectly.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Google around for &amp;quot;CMake broken compatibility&amp;quot;. This is a well known criticism.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;2005-2006, that&amp;#39;s like way back in the past.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m not sure, but I can probably&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So nothing specific or confirmed to worry about.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd9j82", "score_hidden": false, "stickied": false, "created": 1492444588.0, "created_utc": 1492415788.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgdafzk", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgcvyts", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Google around for \"CMake broken compatibility\". This is a well known criticism.\n\n\nI hope you aren't serious. I did the search and the most recent results are from 2006. From this search it really seems to be not common at all. And even then when there is a behaviour change you can *always* restore the prvious behaviour through policies.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Google around for &amp;quot;CMake broken compatibility&amp;quot;. This is a well known criticism.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I hope you aren&amp;#39;t serious. I did the search and the most recent results are from 2006. From this search it really seems to be not common at all. And even then when there is a behaviour change you can &lt;em&gt;always&lt;/em&gt; restore the prvious behaviour through policies.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdafzk", "score_hidden": false, "stickied": false, "created": 1492447626.0, "created_utc": 1492418826.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcvyts", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgcbly4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Using a system package manager to build software precludes reproducible builds. Much has already been written about this so I won't repeat it.\n\nGoogle around for \"CMake broken compatibility\". This is a well known criticism.\n\nPython isn't written in a slow language either, yet it's very slow. Not sure what your point is here, but CMake is crazy slow and it's just building makefiles; this isn't counting the time required for make to run. I'm guessing there isn't a ticket for it because the source code is a clusterfuck that no one can safely touch; I can't think of another reason--its certainly not concern over compatibility. I'm not sure, but I can probably fully compile a Go program in the time it takes the equivalent C++ program's CMake to run.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using a system package manager to build software precludes reproducible builds. Much has already been written about this so I won&amp;#39;t repeat it.&lt;/p&gt;\n\n&lt;p&gt;Google around for &amp;quot;CMake broken compatibility&amp;quot;. This is a well known criticism.&lt;/p&gt;\n\n&lt;p&gt;Python isn&amp;#39;t written in a slow language either, yet it&amp;#39;s very slow. Not sure what your point is here, but CMake is crazy slow and it&amp;#39;s just building makefiles; this isn&amp;#39;t counting the time required for make to run. I&amp;#39;m guessing there isn&amp;#39;t a ticket for it because the source code is a clusterfuck that no one can safely touch; I can&amp;#39;t think of another reason--its certainly not concern over compatibility. I&amp;#39;m not sure, but I can probably fully compile a Go program in the time it takes the equivalent C++ program&amp;#39;s CMake to run.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcvyts", "score_hidden": false, "stickied": false, "created": 1492420643.0, "created_utc": 1492391843.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcbly4", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgc9t80", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Don't understand any of that except for the 'no real dependency management', 'compativility breaks' and 'slow'.\n\nFor dependency management I was already relying on the package manager, so when CMake came along, it wasn't a problem. People talk about the dependency management a lot. Apparently they care.\n\nAFAIK, nothing breaks.\n\nSlow? No idea. I mean, it's not written in a slow language, there are no pull requests to fix some fatal performance flaw hanging out there...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t understand any of that except for the &amp;#39;no real dependency management&amp;#39;, &amp;#39;compativility breaks&amp;#39; and &amp;#39;slow&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;For dependency management I was already relying on the package manager, so when CMake came along, it wasn&amp;#39;t a problem. People talk about the dependency management a lot. Apparently they care.&lt;/p&gt;\n\n&lt;p&gt;AFAIK, nothing breaks.&lt;/p&gt;\n\n&lt;p&gt;Slow? No idea. I mean, it&amp;#39;s not written in a slow language, there are no pull requests to fix some fatal performance flaw hanging out there...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcbly4", "score_hidden": false, "stickied": false, "created": 1492393566.0, "created_utc": 1492364766.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc9t80", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbylyn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Its a Turing complete, stringly typed programming language with arbitrary import rules and no real dependency management. You have to invoke the compiler and linker explicitly, compativility breaks regularly, and it's slow. By comparison, Rust's cargo requires little more than a list of imports, and Go doesn't even require that. Its been a couple years since I last used it, so I'm probably wrong about a detail or two, but that doesn't detract from my overall point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its a Turing complete, stringly typed programming language with arbitrary import rules and no real dependency management. You have to invoke the compiler and linker explicitly, compativility breaks regularly, and it&amp;#39;s slow. By comparison, Rust&amp;#39;s cargo requires little more than a list of imports, and Go doesn&amp;#39;t even require that. Its been a couple years since I last used it, so I&amp;#39;m probably wrong about a detail or two, but that doesn&amp;#39;t detract from my overall point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc9t80", "score_hidden": false, "stickied": false, "created": 1492391188.0, "created_utc": 1492362388.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbylyn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgbya86", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What are you doing with it? Maybe I'm not doing anything complex enough with it?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What are you doing with it? Maybe I&amp;#39;m not doing anything complex enough with it?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbylyn", "score_hidden": false, "stickied": false, "created": 1492373004.0, "created_utc": 1492344204.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbya86", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbv8vn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Its not just Windows, its Linux too. CMake and it's ilk are awful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its not just Windows, its Linux too. CMake and it&amp;#39;s ilk are awful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbya86", "score_hidden": false, "stickied": false, "created": 1492372127.0, "created_utc": 1492343327.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc4tuk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgc36b9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Are you even reading the post I'm answering to? Grep for keywords like 'Visual Studio' and 'Qt' in that post.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you even reading the post I&amp;#39;m answering to? Grep for keywords like &amp;#39;Visual Studio&amp;#39; and &amp;#39;Qt&amp;#39; in that post.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc4tuk", "score_hidden": false, "stickied": false, "created": 1492384524.0, "created_utc": 1492355724.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc36b9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mrexodia", "parent_id": "t1_dgbv8vn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Just curious, did you ever hear of Visual Studio? It works great with Qt...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just curious, did you ever hear of Visual Studio? It works great with Qt...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc36b9", "score_hidden": false, "stickied": false, "created": 1492382034.0, "created_utc": 1492353234.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbv8vn", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgbnayn", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "&gt; I like writing C++, but it's entire tooling story is a dumpster fire\n\nIt's a problem of the Windows OS. On it you have no sane tools except for the visual debugger.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I like writing C++, but it&amp;#39;s entire tooling story is a dumpster fire&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s a problem of the Windows OS. On it you have no sane tools except for the visual debugger.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbv8vn", "score_hidden": false, "stickied": false, "created": 1492362060.0, "created_utc": 1492333260.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbnayn", "gilded": 0, "archived": false, "score": 64, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbkhz8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm a former Qt/C++ dev and I would pick Go for the build system alone (\"go build\" vs \"writing a qmake file, realizing you can't build any non-Qt dependency from source, trying out CMake, cargo culting the Qt recipe, finding out it doesn't apply to your patch version of Qt, finding the right CMake file, tweaking it so it will build sane Visual Studio files for your Windows colleagues, using it for a couple of weeks until you get a bug report that the build doesnt work on another dev's box only to find that CMake breaks compat with each release, rewrite in Go, go build\"). Go isn't slow (certainly not for UI dev) and Qt's APIs are not nice, new C++, but rather old, pass-around-raw-pointers C++. Certainly there is no electron comparison to be made (I think we can agree that native code invoking a native UI library is characteristically different than embedding a full web browser). I like *writing* C++, but it's entire tooling story is a dumpster fire, and indeed the very thing that pushed me to Go in the first place (I also tried Rust, and Cargo is great, but the safety guarantees aren't making up for the slow pace if application development; it's entirely plausible that Rust is simply meant for smarter humans than me).", "edited": 1492343737.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a former Qt/C++ dev and I would pick Go for the build system alone (&amp;quot;go build&amp;quot; vs &amp;quot;writing a qmake file, realizing you can&amp;#39;t build any non-Qt dependency from source, trying out CMake, cargo culting the Qt recipe, finding out it doesn&amp;#39;t apply to your patch version of Qt, finding the right CMake file, tweaking it so it will build sane Visual Studio files for your Windows colleagues, using it for a couple of weeks until you get a bug report that the build doesnt work on another dev&amp;#39;s box only to find that CMake breaks compat with each release, rewrite in Go, go build&amp;quot;). Go isn&amp;#39;t slow (certainly not for UI dev) and Qt&amp;#39;s APIs are not nice, new C++, but rather old, pass-around-raw-pointers C++. Certainly there is no electron comparison to be made (I think we can agree that native code invoking a native UI library is characteristically different than embedding a full web browser). I like &lt;em&gt;writing&lt;/em&gt; C++, but it&amp;#39;s entire tooling story is a dumpster fire, and indeed the very thing that pushed me to Go in the first place (I also tried Rust, and Cargo is great, but the safety guarantees aren&amp;#39;t making up for the slow pace if application development; it&amp;#39;s entirely plausible that Rust is simply meant for smarter humans than me).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbnayn", "score_hidden": false, "stickied": false, "created": 1492343707.0, "created_utc": 1492314907.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 64}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbl5sr", "gilded": 0, "archived": false, "score": 40, "report_reasons": null, "author": "gnx76", "parent_id": "t1_dgbkoew", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Moreover, that's  a logarithmic scale.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Moreover, that&amp;#39;s  a logarithmic scale.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbl5sr", "score_hidden": false, "stickied": false, "created": 1492340412.0, "created_utc": 1492311612.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 40}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbzj3h", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "__crackers__", "parent_id": "t1_dgbvadn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; I don't know where the people who talk about electron as an easier/faster way to get a desktop app running come from\n\nFrom webdev.\n\nIt's easier/faster because they only know HTML, CSS &amp; JavaScript, and learning a real GUI toolkit and its paradigms is *way* too much work.\n\nThey already have their hammer. To them, writing desktop apps is just a weird-looking nail.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I don&amp;#39;t know where the people who talk about electron as an easier/faster way to get a desktop app running come from&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;From webdev.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s easier/faster because they only know HTML, CSS &amp;amp; JavaScript, and learning a real GUI toolkit and its paradigms is &lt;em&gt;way&lt;/em&gt; too much work.&lt;/p&gt;\n\n&lt;p&gt;They already have their hammer. To them, writing desktop apps is just a weird-looking nail.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbzj3h", "score_hidden": false, "stickied": false, "created": 1492375320.0, "created_utc": 1492346520.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgcrk5y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "GrandMasterSpaceBat", "parent_id": "t1_dgbvadn", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;Hopefully webassembly will finally mature to something we can use to just throw away that crappy stack and just paint everything on a canvas with an actual toolkit, with actual tooling. \n\nI'd be interested to know what toolkit you'd have in mind. QT has a huge codebase that would basically have to be rebuilt to be efficient in the browser. There are other, more efficient toolkits, but they're very bare-bones and someone will have to build tooling for webgl. \n\nEdit: I don't mean this in a bad way, rather just in terms of natural selection in software, this is probably what's going to happen.", "edited": 1492386736.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Hopefully webassembly will finally mature to something we can use to just throw away that crappy stack and just paint everything on a canvas with an actual toolkit, with actual tooling. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;d be interested to know what toolkit you&amp;#39;d have in mind. QT has a huge codebase that would basically have to be rebuilt to be efficient in the browser. There are other, more efficient toolkits, but they&amp;#39;re very bare-bones and someone will have to build tooling for webgl. &lt;/p&gt;\n\n&lt;p&gt;Edit: I don&amp;#39;t mean this in a bad way, rather just in terms of natural selection in software, this is probably what&amp;#39;s going to happen.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcrk5y", "score_hidden": false, "stickied": false, "created": 1492414740.0, "created_utc": 1492385940.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvadn", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "Joan0fArc", "parent_id": "t1_dgbsx41", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;  There's a lot of information out there about anything you want to do.\n\nA lot of crappy information and not much high quality documentation. Constant API churn, shitty \"build\" systems, lack of tooling, terrifying amount of dependencies you have to juggle on npm which is the worst package management I've ever witnessed. Qt is far better documented, is far more stable API wise (it does break APIs from time to time, but nothing like the terror of JS frameworks), has amazing tooling support, particularly [WYSIWYG tools](http://doc.qt.io/qt-5/designer-layouts.html) that allow you to very [quickly prototype a UI](http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html). WYSIWYG tools for the web have always been terrible for actually building anything, there never was anything comparable to Qt Designer or MacOS Interface Builder. [GWT designer](https://4.bp.blogspot.com/_HrTFtSYIY_8/TJI51hat_zI/AAAAAAAAABM/lEhElpZTeEA/s1600/Picture+3+10-39-12.png) is the closest we've ever got but it's extremely hacky due to the brittle nature of the web stack. \n\nI don't know where the people who talk about electron as an easier/faster way to get a desktop app running come from. Did these people never hear about Qt Designer, Glade, Delphi, VB, Interface Builder? The web stack is a massive regression in every single way compared to what used to be mainstream. Heck, even VB for all its faults was a better way to quickly throw random stuff together. I'm almost missing the days when it was popular and the web was not.\n\nHopefully webassembly will finally mature to something we can use to just throw away that crappy stack and just paint everything on a canvas with an actual toolkit, with actual tooling. ", "edited": 1492333929.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;There&amp;#39;s a lot of information out there about anything you want to do.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;A lot of crappy information and not much high quality documentation. Constant API churn, shitty &amp;quot;build&amp;quot; systems, lack of tooling, terrifying amount of dependencies you have to juggle on npm which is the worst package management I&amp;#39;ve ever witnessed. Qt is far better documented, is far more stable API wise (it does break APIs from time to time, but nothing like the terror of JS frameworks), has amazing tooling support, particularly &lt;a href=\"http://doc.qt.io/qt-5/designer-layouts.html\"&gt;WYSIWYG tools&lt;/a&gt; that allow you to very &lt;a href=\"http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html\"&gt;quickly prototype a UI&lt;/a&gt;. WYSIWYG tools for the web have always been terrible for actually building anything, there never was anything comparable to Qt Designer or MacOS Interface Builder. &lt;a href=\"https://4.bp.blogspot.com/_HrTFtSYIY_8/TJI51hat_zI/AAAAAAAAABM/lEhElpZTeEA/s1600/Picture+3+10-39-12.png\"&gt;GWT designer&lt;/a&gt; is the closest we&amp;#39;ve ever got but it&amp;#39;s extremely hacky due to the brittle nature of the web stack. &lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t know where the people who talk about electron as an easier/faster way to get a desktop app running come from. Did these people never hear about Qt Designer, Glade, Delphi, VB, Interface Builder? The web stack is a massive regression in every single way compared to what used to be mainstream. Heck, even VB for all its faults was a better way to quickly throw random stuff together. I&amp;#39;m almost missing the days when it was popular and the web was not.&lt;/p&gt;\n\n&lt;p&gt;Hopefully webassembly will finally mature to something we can use to just throw away that crappy stack and just paint everything on a canvas with an actual toolkit, with actual tooling. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvadn", "score_hidden": false, "stickied": false, "created": 1492362201.0, "created_utc": 1492333401.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbsx41", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "GrandMasterSpaceBat", "parent_id": "t1_dgbnzcs", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "HTML/CSS might suck, but they're a common platform that most UI/UX designers have to know anyway. There's a lot of information out there about anything you want to do.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;HTML/CSS might suck, but they&amp;#39;re a common platform that most UI/UX designers have to know anyway. There&amp;#39;s a lot of information out there about anything you want to do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbsx41", "score_hidden": false, "stickied": false, "created": 1492355041.0, "created_utc": 1492326241.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbnzcs", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "Joan0fArc", "parent_id": "t1_dgbn84h", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;  lots of the implementations are not always idiomatic\n\nWell, duh. In the case of electron apps it is far, far, far worse than using javascript with a native toolkit. Dom manipulation and CSS sucks. Remember the talk of VS Code using 10% cpu for blinking a cursor? That's CSS's fault.  \n\nJavascript is only one of the reasons web apps suck. Electron apps are far, far worse than if you were writing a JS app with a native toolkit. The biggest cost in electron/web apps is all the crutches you have to use to simulate concepts like widgets and fluid layouts on a web browser engine.\n\nUltimately for most cases the programming language isn't a problem. Python is a lot slower than Javascript. But I know plenty of apps written in Python that work well, because most of the sensitive codepaths are in native libraries. Quodlibet is a good example. It uses PyGTK to draw the UI and Gstreamer as the audio backend and it's a pretty nice mp3 player with a lot of convenient mass tag editing power. Doing the same thing on Electron would be slower because you would replace GTK with crappy React, Bootstrap shit to generate a single page app.", "edited": 1492316329.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;lots of the implementations are not always idiomatic&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Well, duh. In the case of electron apps it is far, far, far worse than using javascript with a native toolkit. Dom manipulation and CSS sucks. Remember the talk of VS Code using 10% cpu for blinking a cursor? That&amp;#39;s CSS&amp;#39;s fault.  &lt;/p&gt;\n\n&lt;p&gt;Javascript is only one of the reasons web apps suck. Electron apps are far, far worse than if you were writing a JS app with a native toolkit. The biggest cost in electron/web apps is all the crutches you have to use to simulate concepts like widgets and fluid layouts on a web browser engine.&lt;/p&gt;\n\n&lt;p&gt;Ultimately for most cases the programming language isn&amp;#39;t a problem. Python is a lot slower than Javascript. But I know plenty of apps written in Python that work well, because most of the sensitive codepaths are in native libraries. Quodlibet is a good example. It uses PyGTK to draw the UI and Gstreamer as the audio backend and it&amp;#39;s a pretty nice mp3 player with a lot of convenient mass tag editing power. Doing the same thing on Electron would be slower because you would replace GTK with crappy React, Bootstrap shit to generate a single page app.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbnzcs", "score_hidden": false, "stickied": false, "created": 1492344841.0, "created_utc": 1492316041.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbs01y", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "geeky_username", "parent_id": "t1_dgbntqh", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Except when you throw some big data at it and watch your very real time waste away", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Except when you throw some big data at it and watch your very real time waste away&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbs01y", "score_hidden": false, "stickied": false, "created": 1492352729.0, "created_utc": 1492323929.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbntqh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "btreecat", "parent_id": "t1_dgbn84h", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "But none of these compare what it might take an average human to do the work \"by hand.\"\n\nWhich if we are honest, is the actual real world metric. \n\nIf go, python, nodejs, Lua, php, Scala, etc are all multiple times faster than by hand, we are really only squabbling over minor performance percentages.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;But none of these compare what it might take an average human to do the work &amp;quot;by hand.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Which if we are honest, is the actual real world metric. &lt;/p&gt;\n\n&lt;p&gt;If go, python, nodejs, Lua, php, Scala, etc are all multiple times faster than by hand, we are really only squabbling over minor performance percentages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbntqh", "score_hidden": false, "stickied": false, "created": 1492344565.0, "created_utc": 1492315765.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbn84h", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "pixel4", "parent_id": "t1_dgbkoew", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "lol - [here's a real chart](\nhttp://benchmarksgame.alioth.debian.org/u64q/which-programs-are-fastest-firstlast.svgz) - of course benchmarks like this are shitty since lots of the implementations are not always idiomatic", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;lol - &lt;a href=\"http://benchmarksgame.alioth.debian.org/u64q/which-programs-are-fastest-firstlast.svgz\"&gt;here&amp;#39;s a real chart&lt;/a&gt; - of course benchmarks like this are shitty since lots of the implementations are not always idiomatic&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbn84h", "score_hidden": false, "stickied": false, "created": 1492343579.0, "created_utc": 1492314779.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 8}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbkoew", "gilded": 0, "archived": false, "score": 44, "report_reasons": null, "author": "jackmott2", "parent_id": "t1_dgbkhz8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "If we sort of characterize the relative performance potential in terms of a crudge graph it would be something like\n\n[----------------------------------------------------------------------------]\n\nelectron ------------------------------------------------------ Go/Qt ---  C++", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If we sort of characterize the relative performance potential in terms of a crudge graph it would be something like&lt;/p&gt;\n\n&lt;p&gt;[----------------------------------------------------------------------------]&lt;/p&gt;\n\n&lt;p&gt;electron ------------------------------------------------------ Go/Qt ---  C++&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbkoew", "score_hidden": false, "stickied": false, "created": 1492339711.0, "created_utc": 1492310911.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 44}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbkhz8", "gilded": 0, "archived": false, "score": -14, "report_reasons": null, "author": "pixel4", "parent_id": "t1_dgbf4h6", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "I guess you could argue that Go is still much slower than C++ and the same electron argument could apply here.   C++14 (and beyond) is pretty rad - and the Qt lib has tons on convenience features - I don't know why you'd pick Go over it.  *shrug*", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I guess you could argue that Go is still much slower than C++ and the same electron argument could apply here.   C++14 (and beyond) is pretty rad - and the Qt lib has tons on convenience features - I don&amp;#39;t know why you&amp;#39;d pick Go over it.  &lt;em&gt;shrug&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbkhz8", "score_hidden": false, "stickied": false, "created": 1492339452.0, "created_utc": 1492310652.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -14}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbf4h6", "gilded": 0, "archived": false, "score": 79, "report_reasons": null, "author": "jackmott2", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "relevant to all of the electron talk lately!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;relevant to all of the electron talk lately!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbf4h6", "score_hidden": false, "stickied": false, "created": 1492331658.0, "created_utc": 1492302858.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 79}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbpai1", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "riking27", "parent_id": "t1_dgbhcaa", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Looks like the project forks the compiler toolchain to get it working nicely with Qt.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Looks like the project forks the compiler toolchain to get it working nicely with Qt.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbpai1", "score_hidden": false, "stickied": false, "created": 1492347139.0, "created_utc": 1492318339.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbyq1u", "gilded": 0, "archived": false, "score": -2, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgbhcaa", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Yes, different languages. The good thing here on desktop is that you can make progress: you're not locked to js.", "edited": 1492345508.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, different languages. The good thing here on desktop is that you can make progress: you&amp;#39;re not locked to js.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyq1u", "score_hidden": false, "stickied": false, "created": 1492373314.0, "created_utc": 1492344514.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbhcaa", "gilded": 0, "archived": false, "score": 80, "report_reasons": null, "author": "crewshin", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Ok, now I'm officially interested in golang. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ok, now I&amp;#39;m officially interested in golang. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbhcaa", "score_hidden": false, "stickied": false, "created": 1492334810.0, "created_utc": 1492306010.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 80}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbwn2z", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "RogerLeigh", "parent_id": "t1_dgbqxlt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I develop cross-platform software with Qt5 and OpenGL.  I have nicely accelerated OpenGL rendering on FreeBSD 11 with AMD Radeon graphics, and I understand it's even better with the nVidia drivers.  While it might not be quite as polished as other platforms, I don't think it's fair to dismiss it so casually just because a few minor things like bluetooth audio weren't supported--it's a perfectly capable system.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I develop cross-platform software with Qt5 and OpenGL.  I have nicely accelerated OpenGL rendering on FreeBSD 11 with AMD Radeon graphics, and I understand it&amp;#39;s even better with the nVidia drivers.  While it might not be quite as polished as other platforms, I don&amp;#39;t think it&amp;#39;s fair to dismiss it so casually just because a few minor things like bluetooth audio weren&amp;#39;t supported--it&amp;#39;s a perfectly capable system.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbwn2z", "score_hidden": false, "stickied": false, "created": 1492366899.0, "created_utc": 1492338099.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbwvx5", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Slavik81", "parent_id": "t1_dgbvlbm", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I was going to say that Qt Widgets haven't changed that much since 4.6, but nearly all the negatives in that article are extremely specific bugs. This article was written about Qt 4.6.0 and was probably outdated by the time Qt 4.6.4 released.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was going to say that Qt Widgets haven&amp;#39;t changed that much since 4.6, but nearly all the negatives in that article are extremely specific bugs. This article was written about Qt 4.6.0 and was probably outdated by the time Qt 4.6.4 released.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbwvx5", "score_hidden": false, "stickied": false, "created": 1492367735.0, "created_utc": 1492338935.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvlbm", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "AllGood0nesAreGone", "parent_id": "t1_dgbu1fr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;Byuu said it well in 2010\nThat's a 7 year old article, talking about Qt 4.6\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Byuu said it well in 2010\nThat&amp;#39;s a 7 year old article, talking about Qt 4.6&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvlbm", "score_hidden": false, "stickied": false, "created": 1492363236.0, "created_utc": 1492334436.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc7sq6", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgc33xj", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Code written with Qt cannot be compiled before running a moc pass.\n\nHow so ? \n\nIf I have \n\n    #include &lt;QtCore/QObject&gt;\n    class Foo : public QObject { Q_OBJECT signals: void foo(); };\n\nin foo.cpp, then the following compiles just fine: \n\n    g++ -c foo.cpp -fPIC -I /usr/include/qt\n\nYou can use moc to generate the missing functions, but you can also generate write them by hand (or better, use other macros that generate the whole code, see [1]) without problems, it's just metadata fetched from your code.\n\n&gt; moc does not handle all of C++. The main problem is that class templates cannot have the Q_OBJECT macro. \n\nThat's fair. Thankfully there is an alternative approach that works only with macros and support class templates without requiring any moc pass: [verdigris[1]](https://github.com/woboq/verdigris)\n\n&gt; That approach isn't even necessary in C++ as shown by gtkmm doing signal slots the right way.\n\nI *really* disagree with libsigc++ being the right way. As the gtkmm docs says: \n\n&gt;  sigc::signal object should be regarded as owned by the thread which created it. Only that thread should connect a sigc::slot object to the signal object, and only that thread should emit() or call operator()() on the signal, or null any connected sigc::slot object. It follows (amongst other things) that any signal object provided by a gtkmm widget should only be operated on in the main GUI thread and any object deriving from sigc::trackable having its non-static methods referenced by slots connected to the signal object should only be destroyed in that thread. \n\nIn comparison, Qt signals / slots can be emitted from any thread without problems; Qt has internal machinery to detect whether the signal call should happen as a direct, plain function call, or be put into the event loop of the object in which the object with the slot lives.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Code written with Qt cannot be compiled before running a moc pass.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;How so ? &lt;/p&gt;\n\n&lt;p&gt;If I have &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;QtCore/QObject&amp;gt;\nclass Foo : public QObject { Q_OBJECT signals: void foo(); };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in foo.cpp, then the following compiles just fine: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;g++ -c foo.cpp -fPIC -I /usr/include/qt\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can use moc to generate the missing functions, but you can also generate write them by hand (or better, use other macros that generate the whole code, see [1]) without problems, it&amp;#39;s just metadata fetched from your code.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;moc does not handle all of C++. The main problem is that class templates cannot have the Q_OBJECT macro. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s fair. Thankfully there is an alternative approach that works only with macros and support class templates without requiring any moc pass: &lt;a href=\"https://github.com/woboq/verdigris\"&gt;verdigris[1]&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;That approach isn&amp;#39;t even necessary in C++ as shown by gtkmm doing signal slots the right way.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I &lt;em&gt;really&lt;/em&gt; disagree with libsigc++ being the right way. As the gtkmm docs says: &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;sigc::signal object should be regarded as owned by the thread which created it. Only that thread should connect a sigc::slot object to the signal object, and only that thread should emit() or call operator()() on the signal, or null any connected sigc::slot object. It follows (amongst other things) that any signal object provided by a gtkmm widget should only be operated on in the main GUI thread and any object deriving from sigc::trackable having its non-static methods referenced by slots connected to the signal object should only be destroyed in that thread. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In comparison, Qt signals / slots can be emitted from any thread without problems; Qt has internal machinery to detect whether the signal call should happen as a direct, plain function call, or be put into the event loop of the object in which the object with the slot lives.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc7sq6", "score_hidden": false, "stickied": false, "created": 1492388574.0, "created_utc": 1492359774.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc33xj", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Joan0fArc", "parent_id": "t1_dgbvdft", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The moc is a non standard external preprocessor. Code written with Qt cannot be compiled before running a moc pass.\n\nIt also leads to limitations like these :\nhttp://doc.qt.io/qt-5/moc.html\n\n&gt; moc does not handle all of C++. The main problem is that class templates cannot have the Q_OBJECT macro. \n\nWhat part of this :\nhttp://doc.qt.io/qt-5/metaobjects.html\n&gt; he moc tool reads a C++ source file. If it finds one or more class declarations that contain the Q_OBJECT macro, it produces another C++ source file which contains the meta-object code for each of those classes. This generated source file is either #include'd into the class's source file or, more usually, compiled and linked with the class's implementation.\n\nIs standard C++?\n\nIf this is standard C++ then CoffeeScript and Typescript are standard Javascript.\nThat approach isn't even necessary in C++ as shown by [gtkmm doing signal slots the right way.](http://libsigc.sourceforge.net/)", "edited": 1492353319.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The moc is a non standard external preprocessor. Code written with Qt cannot be compiled before running a moc pass.&lt;/p&gt;\n\n&lt;p&gt;It also leads to limitations like these :\n&lt;a href=\"http://doc.qt.io/qt-5/moc.html\"&gt;http://doc.qt.io/qt-5/moc.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;moc does not handle all of C++. The main problem is that class templates cannot have the Q_OBJECT macro. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;What part of this :\n&lt;a href=\"http://doc.qt.io/qt-5/metaobjects.html\"&gt;http://doc.qt.io/qt-5/metaobjects.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;he moc tool reads a C++ source file. If it finds one or more class declarations that contain the Q_OBJECT macro, it produces another C++ source file which contains the meta-object code for each of those classes. This generated source file is either #include&amp;#39;d into the class&amp;#39;s source file or, more usually, compiled and linked with the class&amp;#39;s implementation.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Is standard C++?&lt;/p&gt;\n\n&lt;p&gt;If this is standard C++ then CoffeeScript and Typescript are standard Javascript.\nThat approach isn&amp;#39;t even necessary in C++ as shown by &lt;a href=\"http://libsigc.sourceforge.net/\"&gt;gtkmm doing signal slots the right way.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc33xj", "score_hidden": false, "stickied": false, "created": 1492381933.0, "created_utc": 1492353133.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvdft", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgbu1fr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; uses a preprocessor that extends the language so stuff written in Qt is not standard C++ \n\nuh... no. any code you write with Qt is just plain C++ code. `signals`, `slots`, etc., are juste defined as : \n\n    #define signals Q_SIGNALS\n    #define slots Q_SLOTS\n\nand\n\n    \n    #define Q_SIGNALS public\n    #define Q_SLOTS\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;uses a preprocessor that extends the language so stuff written in Qt is not standard C++ &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;uh... no. any code you write with Qt is just plain C++ code. &lt;code&gt;signals&lt;/code&gt;, &lt;code&gt;slots&lt;/code&gt;, etc., are juste defined as : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#define signals Q_SIGNALS\n#define slots Q_SLOTS\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#define Q_SIGNALS public\n#define Q_SLOTS\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvdft", "score_hidden": false, "stickied": false, "created": 1492362490.0, "created_utc": 1492333690.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbvdqb", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgbu1fr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "QWidgets are not the API that is updated. It's for the compatibility. That article should stop pointing to QWidgets when trying to prove something about Qt.\n\nThere is no reflection in C++, so the reflection that Qt does is justified.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;QWidgets are not the API that is updated. It&amp;#39;s for the compatibility. That article should stop pointing to QWidgets when trying to prove something about Qt.&lt;/p&gt;\n\n&lt;p&gt;There is no reflection in C++, so the reflection that Qt does is justified.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvdqb", "score_hidden": false, "stickied": false, "created": 1492362516.0, "created_utc": 1492333716.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbu1fr", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Joan0fArc", "parent_id": "t1_dgbtnd3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Just because you can, doesn't mean you should. Most of the non-UI stuff in Qt was made for C++ in a time when C++ had an even more non existent standard library, plus issues with cross platform STL support. Go has excellent libraries for building console and server side software, no one is going to bring qt as a dependency for a console Go app. Using Qt solely for the Network or container classes would make no sense in Go. \n\nQt's only real strength is UI. And even so, it's only accepted because we don't have better alternatives (rule of Least Worst). It's written in archaic C with Classes style, uses a preprocessor that extends the language so stuff written in Qt is not standard C++ (MOC) and the libraries have become a kitchen sink of epic proportions.\n\nByuu said it well in 2010:\n\nhttps://web-beta.archive.org/web/20101012145533/https://byuu.org/articles/qt\n\nAnd it hasn't ever gotten better with time.", "edited": 1492329978.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just because you can, doesn&amp;#39;t mean you should. Most of the non-UI stuff in Qt was made for C++ in a time when C++ had an even more non existent standard library, plus issues with cross platform STL support. Go has excellent libraries for building console and server side software, no one is going to bring qt as a dependency for a console Go app. Using Qt solely for the Network or container classes would make no sense in Go. &lt;/p&gt;\n\n&lt;p&gt;Qt&amp;#39;s only real strength is UI. And even so, it&amp;#39;s only accepted because we don&amp;#39;t have better alternatives (rule of Least Worst). It&amp;#39;s written in archaic C with Classes style, uses a preprocessor that extends the language so stuff written in Qt is not standard C++ (MOC) and the libraries have become a kitchen sink of epic proportions.&lt;/p&gt;\n\n&lt;p&gt;Byuu said it well in 2010:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://web-beta.archive.org/web/20101012145533/https://byuu.org/articles/qt\"&gt;https://web-beta.archive.org/web/20101012145533/https://byuu.org/articles/qt&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And it hasn&amp;#39;t ever gotten better with time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbu1fr", "score_hidden": false, "stickied": false, "created": 1492358170.0, "created_utc": 1492329370.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbtnd3", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "AllGood0nesAreGone", "parent_id": "t1_dgbqxlt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Qt can be used for console apps as well.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qt can be used for console apps as well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbtnd3", "score_hidden": false, "stickied": false, "created": 1492357034.0, "created_utc": 1492328234.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbxwoy", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "qx7xbku", "parent_id": "t1_dgbteni", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It is more fault of iOS than At though. iOS makes dynamic linking problematic and thus LGPL can not be satisfied. Platform forcing some kind of license on developers is pretty stupid platform.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is more fault of iOS than At though. iOS makes dynamic linking problematic and thus LGPL can not be satisfied. Platform forcing some kind of license on developers is pretty stupid platform.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxwoy", "score_hidden": false, "stickied": false, "created": 1492371035.0, "created_utc": 1492342235.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbteni", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "jyper", "parent_id": "t1_dgbqxlt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Qt supports Android and iOS\n\nAlthough I think iOS support is only\u200b commercial/non free", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qt supports Android and iOS&lt;/p&gt;\n\n&lt;p&gt;Although I think iOS support is only\u200b commercial/non free&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbteni", "score_hidden": false, "stickied": false, "created": 1492356369.0, "created_utc": 1492327569.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbsz9o", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "oridb", "parent_id": "t1_dgbqxlt", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "I'm  a desktop BSD user.\n\n&gt; Last time I checked BSDs their modern desktop hardware support was appalling and even simple things like using bluetooth audio was just impossible, unsupported.\n&gt; \n\nGlad this project is helping improve the situation.", "edited": 1492330975.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m  a desktop BSD user.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Last time I checked BSDs their modern desktop hardware support was appalling and even simple things like using bluetooth audio was just impossible, unsupported.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Glad this project is helping improve the situation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbsz9o", "score_hidden": false, "stickied": false, "created": 1492355200.0, "created_utc": 1492326400.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbx1ok", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "shevegen", "parent_id": "t1_dgbqxlt", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Qt works perfectly well on BSD.\n\nAnything else would be illogical considering that Qt works on Linux too. And the differences between the BSDs and Linux is, quite frankly, fairly negligible.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qt works perfectly well on BSD.&lt;/p&gt;\n\n&lt;p&gt;Anything else would be illogical considering that Qt works on Linux too. And the differences between the BSDs and Linux is, quite frankly, fairly negligible.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbx1ok", "score_hidden": false, "stickied": false, "created": 1492368277.0, "created_utc": 1492339477.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbqxlt", "gilded": 0, "archived": false, "score": 42, "report_reasons": null, "author": "Joan0fArc", "parent_id": "t1_dgbn8xw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "No one cares about the BSD on desktops, which is what most people use Qt for. Last time I checked BSDs their modern desktop hardware support was appalling and even simple things like using bluetooth audio was just impossible, unsupported.\n\nMaking sure desktop apps build and run bug-free on BSDs is just a colossal waste of time. I'm sure all 0.001% people in the world care.\n\nAs for mobile UI use, iOS and Android are the only game in town.", "edited": 1492321691.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No one cares about the BSD on desktops, which is what most people use Qt for. Last time I checked BSDs their modern desktop hardware support was appalling and even simple things like using bluetooth audio was just impossible, unsupported.&lt;/p&gt;\n\n&lt;p&gt;Making sure desktop apps build and run bug-free on BSDs is just a colossal waste of time. I&amp;#39;m sure all 0.001% people in the world care.&lt;/p&gt;\n\n&lt;p&gt;As for mobile UI use, iOS and Android are the only game in town.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbqxlt", "score_hidden": false, "stickied": false, "created": 1492350273.0, "created_utc": 1492321473.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 42}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbn8xw", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "probably-poop", "parent_id": "t1_dgbj1ie", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It doesn't even cover any of the BSDs...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It doesn&amp;#39;t even cover any of the BSDs...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbn8xw", "score_hidden": false, "stickied": false, "created": 1492343616.0, "created_utc": 1492314816.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 13}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbj1ie", "gilded": 0, "archived": false, "score": 26, "report_reasons": null, "author": "ROFLLOLSTER", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; all major operating systems\n\nYou weren't kidding...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;all major operating systems&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You weren&amp;#39;t kidding...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbj1ie", "score_hidden": false, "stickied": false, "created": 1492337298.0, "created_utc": 1492308498.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 26}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc6o5g", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Mandack", "parent_id": "t1_dgc5oag", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That's assuming complete API coverage by a language-binding, which is rarely the case i.e. many do not work on iOS/Android.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s assuming complete API coverage by a language-binding, which is rarely the case i.e. many do not work on iOS/Android.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc6o5g", "score_hidden": false, "stickied": false, "created": 1492387048.0, "created_utc": 1492358248.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc5oag", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgc56va", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I mean, it's cross-platform by default. Regardless of the language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean, it&amp;#39;s cross-platform by default. Regardless of the language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc5oag", "score_hidden": false, "stickied": false, "created": 1492385693.0, "created_utc": 1492356893.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc56va", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Mandack", "parent_id": "t1_dgbweco", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Some people don't want to use C++ and the only real alternative until now was Python, which is dynamic and interpreted. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some people don&amp;#39;t want to use C++ and the only real alternative until now was Python, which is dynamic and interpreted. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc56va", "score_hidden": false, "stickied": false, "created": 1492385029.0, "created_utc": 1492356229.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbweco", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "devel_watcher", "parent_id": "t1_dgbd77m", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Qt is more multiplatform with C++.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qt is more multiplatform with C++.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbweco", "score_hidden": false, "stickied": false, "created": 1492366069.0, "created_utc": 1492337269.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 10}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbd77m", "gilded": 0, "archived": false, "score": 28, "report_reasons": null, "author": "we-all-haul", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'd love to see this be successful. Go + Qt allowing targeting for multi platforms. Powerful stuff!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d love to see this be successful. Go + Qt allowing targeting for multi platforms. Powerful stuff!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbd77m", "score_hidden": false, "stickied": false, "created": 1492328924.0, "created_utc": 1492300124.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 28}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbp9l2", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "riking27", "parent_id": "t1_dgbjq3s", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Looking at line 47, that's pretty much a straight copy of the go tool.\n\nI think what this means is they needed to fork the compiler to support Qt. Which is the vibe I got from the linked page.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Looking at line 47, that&amp;#39;s pretty much a straight copy of the go tool.&lt;/p&gt;\n\n&lt;p&gt;I think what this means is they needed to fork the compiler to support Qt. Which is the vibe I got from the linked page.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbp9l2", "score_hidden": false, "stickied": false, "created": 1492347091.0, "created_utc": 1492318291.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbjq3s", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "tv64738", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I wonder why it's reimplementing the go tool dependency logic: https://github.com/therecipe/qt/blob/8d9fc2cc2f5d14c4ceca0d19cd7be1b7ba3e5000/internal/cmd/setup/install.go#L54-L82", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wonder why it&amp;#39;s reimplementing the go tool dependency logic: &lt;a href=\"https://github.com/therecipe/qt/blob/8d9fc2cc2f5d14c4ceca0d19cd7be1b7ba3e5000/internal/cmd/setup/install.go#L54-L82\"&gt;https://github.com/therecipe/qt/blob/8d9fc2cc2f5d14c4ceca0d19cd7be1b7ba3e5000/internal/cmd/setup/install.go#L54-L82&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbjq3s", "score_hidden": false, "stickied": false, "created": 1492338303.0, "created_utc": 1492309503.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbyksx", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "wfpoulet", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "WOW. This is what was missing in Go. A GUI toolkit. Yes!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;WOW. This is what was missing in Go. A GUI toolkit. Yes!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbyksx", "score_hidden": false, "stickied": false, "created": 1492372920.0, "created_utc": 1492344120.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc01vi", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Mandack", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "One thing that I am concerned about, starting a fairly large project, is that the bindings have a single maintainer right now. I don't have a problem with donating on regular basis, but am not sure if it would meaningfully contribute to the long-term health of the project.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One thing that I am concerned about, starting a fairly large project, is that the bindings have a single maintainer right now. I don&amp;#39;t have a problem with donating on regular basis, but am not sure if it would meaningfully contribute to the long-term health of the project.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc01vi", "score_hidden": false, "stickied": false, "created": 1492376473.0, "created_utc": 1492347673.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbnjfy", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "weberc2", "parent_id": "t1_dgbckzw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I don't know how this lib works, but Go doesn't try to collect references from C by default (though you can wrap them in a Go pointer and ask the runtime to C.free() them when the Go pointer is collected). This is good because Qt will try to free it's own stuff, at least on the UI side.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know how this lib works, but Go doesn&amp;#39;t try to collect references from C by default (though you can wrap them in a Go pointer and ask the runtime to C.free() them when the Go pointer is collected). This is good because Qt will try to free it&amp;#39;s own stuff, at least on the UI side.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbnjfy", "score_hidden": false, "stickied": false, "created": 1492344089.0, "created_utc": 1492315289.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc38hb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mrexodia", "parent_id": "t1_dgbrfcq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think Qt doesn't use C++ exceptions for historical reasons so that shouldn't be a problem...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think Qt doesn&amp;#39;t use C++ exceptions for historical reasons so that shouldn&amp;#39;t be a problem...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc38hb", "score_hidden": false, "stickied": false, "created": 1492382131.0, "created_utc": 1492353331.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbrfcq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "jeremiahs_bullfrog", "parent_id": "t1_dgbckzw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The last time I tried integrating C into Go (Lua), the GC had issues because the C lib used SIGABRT to signal exceptions. I'm not sure if this is a common thing in C++ (the lib might have been compiled for C++, didn't check), but that caused some headaches.\n\nAs for other GC issues, I'm sure they're not a problem, though perhaps there's a leak or something.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The last time I tried integrating C into Go (Lua), the GC had issues because the C lib used SIGABRT to signal exceptions. I&amp;#39;m not sure if this is a common thing in C++ (the lib might have been compiled for C++, didn&amp;#39;t check), but that caused some headaches.&lt;/p&gt;\n\n&lt;p&gt;As for other GC issues, I&amp;#39;m sure they&amp;#39;re not a problem, though perhaps there&amp;#39;s a leak or something.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbrfcq", "score_hidden": false, "stickied": false, "created": 1492351363.0, "created_utc": 1492322563.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbckzw", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "TwoSpoonsJohnson", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Sounds fun! Does anyone know if Go's GC would cause any problems with Qt? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds fun! Does anyone know if Go&amp;#39;s GC would cause any problems with Qt? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbckzw", "score_hidden": false, "stickied": false, "created": 1492328066.0, "created_utc": 1492299266.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc471c", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "RemindMeBot", "parent_id": "t1_dgc46tp", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I will be messaging you on [**2017-05-16 14:59:51 UTC**](http://www.wolframalpha.com/input/?i=2017-05-16 14:59:51 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/programming/comments/65ljzt/qt_binding_for_go_with_support_for_all_major/dgc46tp)\n\n[**3 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/programming/comments/65ljzt/qt_binding_for_go_with_support_for_all_major/dgc46tp]%0A%0ARemindMe!  1month) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dgc471c)\n\n_____\n\n|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)\n|-|-|-|-|-|-|", "edited": 1492441204.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I will be messaging you on &lt;a href=\"http://www.wolframalpha.com/input/?i=2017-05-16%2014:59:51%20UTC%20To%20Local%20Time\"&gt;&lt;strong&gt;2017-05-16 14:59:51 UTC&lt;/strong&gt;&lt;/a&gt; to remind you of &lt;a href=\"https://www.reddit.com/r/programming/comments/65ljzt/qt_binding_for_go_with_support_for_all_major/dgc46tp\"&gt;&lt;strong&gt;this link.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://np.reddit.com/message/compose/?to=RemindMeBot&amp;amp;subject=Reminder&amp;amp;message=%5Bhttps://www.reddit.com/r/programming/comments/65ljzt/qt_binding_for_go_with_support_for_all_major/dgc46tp%5D%0A%0ARemindMe!%20%201month\"&gt;&lt;strong&gt;3 OTHERS CLICKED THIS LINK&lt;/strong&gt;&lt;/a&gt; to send a PM to also be reminded and to reduce spam.&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Parent commenter can &lt;/sup&gt; &lt;a href=\"http://np.reddit.com/message/compose/?to=RemindMeBot&amp;amp;subject=Delete%20Comment&amp;amp;message=Delete!%20dgc471c\"&gt;&lt;sup&gt;delete this message to hide from others.&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;&lt;a href=\"http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/\"&gt;&lt;sup&gt;FAQs&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;th&gt;&lt;a href=\"http://np.reddit.com/message/compose/?to=RemindMeBot&amp;amp;subject=Reminder&amp;amp;message=%5BLINK%20INSIDE%20SQUARE%20BRACKETS%20else%20default%20to%20FAQs%5D%0A%0ANOTE:%20Don&amp;#x27;t%20forget%20to%20add%20the%20time%20options%20after%20the%20command.%0A%0ARemindMe!\"&gt;&lt;sup&gt;Custom&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;th&gt;&lt;a href=\"http://np.reddit.com/message/compose/?to=RemindMeBot&amp;amp;subject=List%20Of%20Reminders&amp;amp;message=MyReminders!\"&gt;&lt;sup&gt;Your Reminders&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;th&gt;&lt;a href=\"http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;amp;subject=Feedback\"&gt;&lt;sup&gt;Feedback&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;th&gt;&lt;a href=\"https://github.com/SIlver--/remindmebot-reddit\"&gt;&lt;sup&gt;Code&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;th&gt;&lt;a href=\"https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/\"&gt;&lt;sup&gt;Browser Extensions&lt;/sup&gt;&lt;/a&gt;&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc471c", "score_hidden": false, "stickied": false, "created": 1492383596.0, "created_utc": 1492354796.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc46tp", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "progfu", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "!RemindMe 1month", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;!RemindMe 1month&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc46tp", "score_hidden": false, "stickied": false, "created": 1492383587.0, "created_utc": 1492354787.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgdkjat", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "DavidBittner", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Me and a friend are actually writing a VoIP platform with these bindings. The bindings work pretty fantastic, building is a breeze. The only issue is getting it configured on Windows (just because I haven't really tried it yet).\n\nThe one problem that I've had with it, is very obviously the names within Go are slightly different than the ones defined in C++ so it can be a pain in the ass to find what they decided to name a function considering the only form of documentation is the godocs.\n\nAdditionally, considering you are unable to use the Qt Creator (maybe you can, I didn't want to use qml) there is unfortunately a lot of repetitive code that is normally automated by Qt Creator.\n\nOther than that though, the use has been pretty great.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Me and a friend are actually writing a VoIP platform with these bindings. The bindings work pretty fantastic, building is a breeze. The only issue is getting it configured on Windows (just because I haven&amp;#39;t really tried it yet).&lt;/p&gt;\n\n&lt;p&gt;The one problem that I&amp;#39;ve had with it, is very obviously the names within Go are slightly different than the ones defined in C++ so it can be a pain in the ass to find what they decided to name a function considering the only form of documentation is the godocs.&lt;/p&gt;\n\n&lt;p&gt;Additionally, considering you are unable to use the Qt Creator (maybe you can, I didn&amp;#39;t want to use qml) there is unfortunately a lot of repetitive code that is normally automated by Qt Creator.&lt;/p&gt;\n\n&lt;p&gt;Other than that though, the use has been pretty great.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdkjat", "score_hidden": false, "stickied": false, "created": 1492469426.0, "created_utc": 1492440626.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbx17z", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "shevegen", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Well that is nice - now Qt needs to only improve their ruby support.\n\nBut Qt traditionally does not care much at all about \"scripting\" programming languages. These have always been treated as second class citizens.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well that is nice - now Qt needs to only improve their ruby support.&lt;/p&gt;\n\n&lt;p&gt;But Qt traditionally does not care much at all about &amp;quot;scripting&amp;quot; programming languages. These have always been treated as second class citizens.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbx17z", "score_hidden": false, "stickied": false, "created": 1492368235.0, "created_utc": 1492339435.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc1xf9", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Mandack", "parent_id": "t1_dgc1gh5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Well, as long as it is an official, Rust Evangelism Task Force project, I'm fine with it :-) ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, as long as it is an official, Rust Evangelism Task Force project, I&amp;#39;m fine with it :-) &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc1xf9", "score_hidden": false, "stickied": false, "created": 1492380034.0, "created_utc": 1492351234.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc1gh5", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "Elavid", "parent_id": "t1_dgbxs0h", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "The joke went over your head.  RIIR is a meme now:  https://transitiontech.ca/random/RIIR", "edited": 1492358638.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The joke went over your head.  RIIR is a meme now:  &lt;a href=\"https://transitiontech.ca/random/RIIR\"&gt;https://transitiontech.ca/random/RIIR&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc1gh5", "score_hidden": false, "stickied": false, "created": 1492379194.0, "created_utc": 1492350394.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbxs0h", "gilded": 0, "archived": false, "score": 20, "report_reasons": null, "author": "Mandack", "parent_id": "t1_dgbto82", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "As a Rust enthusiast, this kind of thing doesn't help and in fact becomes annoying.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a Rust enthusiast, this kind of thing doesn&amp;#39;t help and in fact becomes annoying.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxs0h", "score_hidden": false, "stickied": false, "created": 1492370641.0, "created_utc": 1492341841.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 20}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc6crr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "steveklabnik1", "parent_id": "t1_dgbx2e5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "https://www.rust-lang.org/en-US/friends.html\n\n(I think bringing Rust up in this thread is counter-productive FWIW)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.rust-lang.org/en-US/friends.html\"&gt;https://www.rust-lang.org/en-US/friends.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(I think bringing Rust up in this thread is counter-productive FWIW)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc6crr", "score_hidden": false, "stickied": false, "created": 1492386624.0, "created_utc": 1492357824.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbx2e5", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "shevegen", "parent_id": "t1_dgbto82", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Perhaps they can add support for rust but ...\n\nDoes anyone really use Rust?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps they can add support for rust but ...&lt;/p&gt;\n\n&lt;p&gt;Does anyone really use Rust?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbx2e5", "score_hidden": false, "stickied": false, "created": 1492368341.0, "created_utc": 1492339541.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbto82", "gilded": 0, "archived": false, "score": -9, "report_reasons": null, "author": "LovecraftsDeath", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Can you rewrite that in Rust?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can you rewrite that in Rust?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbto82", "score_hidden": false, "stickied": false, "created": 1492357104.0, "created_utc": 1492328304.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgcul5h", "gilded": 0, "archived": false, "score": -2, "report_reasons": null, "author": "JohnFrum", "parent_id": "t1_dgbzqvy", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "QT, flash, Java... we don't need them to improve. We need them to go away.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;QT, flash, Java... we don&amp;#39;t need them to improve. We need them to go away.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcul5h", "score_hidden": false, "stickied": false, "created": 1492418835.0, "created_utc": 1492390035.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbzqvy", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "TheRPiGuy", "parent_id": "t1_dgbmq6k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can't expect software to improve if no-one uses it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can&amp;#39;t expect software to improve if no-one uses it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbzqvy", "score_hidden": false, "stickied": false, "created": 1492375803.0, "created_utc": 1492347003.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbmq6k", "gilded": 0, "archived": false, "score": -22, "report_reasons": null, "author": "JohnFrum", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Can we please just stop with QT until it transitions to different resolutions smoothly? Seapine surround is painful to use because of QT.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can we please just stop with QT until it transitions to different resolutions smoothly? Seapine surround is painful to use because of QT.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbmq6k", "score_hidden": false, "stickied": false, "created": 1492342790.0, "created_utc": 1492313990.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -22}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbxlv7", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dgbxcn0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "because.. it has changed quite a lot since 2009 ? https://en.wikipedia.org/wiki/QML . However, having worked with VTK, it sure is archaic and bug-ridden.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;because.. it has changed quite a lot since 2009 ? &lt;a href=\"https://en.wikipedia.org/wiki/QML\"&gt;https://en.wikipedia.org/wiki/QML&lt;/a&gt; . However, having worked with VTK, it sure is archaic and bug-ridden.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxlv7", "score_hidden": false, "stickied": false, "created": 1492370106.0, "created_utc": 1492341306.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgczelu", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "DarkLordAzrael", "parent_id": "t1_dgbxcn0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Qt solves a problem in a way that is easy to use and works well. There really isn't a better toolkit for cross-platform development. What exactly is archaic about Qt?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Qt solves a problem in a way that is easy to use and works well. There really isn&amp;#39;t a better toolkit for cross-platform development. What exactly is archaic about Qt?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgczelu", "score_hidden": false, "stickied": false, "created": 1492425331.0, "created_utc": 1492396531.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgc6z66", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "wealthy_harpsichord", "parent_id": "t1_dgbxcn0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; I guess it's because of the electron backlash?\n\nYes. Basically, Electron somehow managed to make the 8MLOC and 1GB download of Qt sound reasonable.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I guess it&amp;#39;s because of the electron backlash?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes. Basically, Electron somehow managed to make the 8MLOC and 1GB download of Qt sound reasonable.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc6z66", "score_hidden": false, "stickied": false, "created": 1492387473.0, "created_utc": 1492358673.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbxcn0", "gilded": 0, "archived": false, "score": -9, "report_reasons": null, "author": "ferrx", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "why is Qt suddenly popular on reddit? I used it in like 2009 with Qt/Vtk for C++ and it felt like I was using an archaic tool even then..\n\nedit: I guess it's because of the electron backlash? sounds like reddit is just desperate for an electron alternative.", "edited": 1492340788.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;why is Qt suddenly popular on reddit? I used it in like 2009 with Qt/Vtk for C++ and it felt like I was using an archaic tool even then..&lt;/p&gt;\n\n&lt;p&gt;edit: I guess it&amp;#39;s because of the electron backlash? sounds like reddit is just desperate for an electron alternative.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxcn0", "score_hidden": false, "stickied": false, "created": 1492369285.0, "created_utc": 1492340485.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65ljzt", "likes": null, "replies": "", "user_reports": [], "id": "dgbxzi0", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "qx7xbku", "parent_id": "t1_dgbw535", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You do realize Qt follows looks of the platform right? Their job is to make a tool, not to make a design that will fit all use cases. It is not even possible. Besides there already are frameworks implementing material design.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You do realize Qt follows looks of the platform right? Their job is to make a tool, not to make a design that will fit all use cases. It is not even possible. Besides there already are frameworks implementing material design.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbxzi0", "score_hidden": false, "stickied": false, "created": 1492371265.0, "created_utc": 1492342465.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbw535", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "semstr", "parent_id": "t3_65ljzt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Good to see this happened. But still some really ui issue on Qt. If they will reveal a good UI/UX design rules like material design i think i can use it for IOS/Android. C++ already has many library/framework/api, so Qt doesn't need Go, it needs new design tools. PyQt is good alternative for C++ you can use PyQt if C++ is hard for you. So Go is a good option but they need to focus design i think.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good to see this happened. But still some really ui issue on Qt. If they will reveal a good UI/UX design rules like material design i think i can use it for IOS/Android. C++ already has many library/framework/api, so Qt doesn&amp;#39;t need Go, it needs new design tools. PyQt is good alternative for C++ you can use PyQt if C++ is hard for you. So Go is a good option but they need to focus design i think.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbw535", "score_hidden": false, "stickied": false, "created": 1492365150.0, "created_utc": 1492336350.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -3}}], "after": null, "before": null}}]