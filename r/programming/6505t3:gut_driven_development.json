[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6505t3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 47, "report_reasons": null, "author": "speckz", "saved": false, "mod_reports": [], "name": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "kevinmahoney.co.uk", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/6505t3/gut_driven_development/", "num_reports": null, "locked": false, "stickied": false, "created": 1492051935.0, "url": "http://kevinmahoney.co.uk/articles/gut-driven-development/", "author_flair_text": null, "quarantine": false, "title": "Gut Driven Development", "created_utc": 1492023135.0, "distinguished": null, "media": null, "upvote_ratio": 0.77, "num_comments": 33, "visited": false, "subreddit_type": "public", "ups": 47}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dgbjhf2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "GhostBond", "parent_id": "t1_dg90ypb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; It is better to say that you \"need hibernate in case you need to change the database\" than you \"need hibernate because I feel like it is the right choice.\" You can argue against the first position, like you did, but not the second.  \n\nActually I don't agree. They really mean the same thing, but the second is more of a trick - first they get the boss onboard to be enthusiastic about it, then arguing against it makes the boss feel like you're arguing against them. It's worse than just admitting it's because they want to.  \n\n&gt; Unfortunately in this case they didn't see reason. I think either because you didn't express it with enough tact, or maybe because they had too much ego invested in their choice, or maybe a very common one: the developer feels insecure moving away from technologies they know because they are 'an expert' in those technologies. The only way to win here is to tactfully and politely find a way to make them aware of their own irrationality.  \n\nI'm honestly bordering on that you're just being rediculous deliberately.  \n\nHave you had to argue with any of these people? They don't actually care. They joined a circlejerk, it feels good to remote the circlejerk's mantras, and that's it. They don't care if they're being irrational or not, they do care about not backing down and looking foolish in a \"I admit I was wrong\" way, they really don't want to do that.  \n\nIt's like arguing with a religious zealot, they are way past caring about whether their logic makes any sense. You're not going to convince them.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;It is better to say that you &amp;quot;need hibernate in case you need to change the database&amp;quot; than you &amp;quot;need hibernate because I feel like it is the right choice.&amp;quot; You can argue against the first position, like you did, but not the second.  &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Actually I don&amp;#39;t agree. They really mean the same thing, but the second is more of a trick - first they get the boss onboard to be enthusiastic about it, then arguing against it makes the boss feel like you&amp;#39;re arguing against them. It&amp;#39;s worse than just admitting it&amp;#39;s because they want to.  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Unfortunately in this case they didn&amp;#39;t see reason. I think either because you didn&amp;#39;t express it with enough tact, or maybe because they had too much ego invested in their choice, or maybe a very common one: the developer feels insecure moving away from technologies they know because they are &amp;#39;an expert&amp;#39; in those technologies. The only way to win here is to tactfully and politely find a way to make them aware of their own irrationality.  &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m honestly bordering on that you&amp;#39;re just being rediculous deliberately.  &lt;/p&gt;\n\n&lt;p&gt;Have you had to argue with any of these people? They don&amp;#39;t actually care. They joined a circlejerk, it feels good to remote the circlejerk&amp;#39;s mantras, and that&amp;#39;s it. They don&amp;#39;t care if they&amp;#39;re being irrational or not, they do care about not backing down and looking foolish in a &amp;quot;I admit I was wrong&amp;quot; way, they really don&amp;#39;t want to do that.  &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s like arguing with a religious zealot, they are way past caring about whether their logic makes any sense. You&amp;#39;re not going to convince them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbjhf2", "score_hidden": false, "stickied": false, "created": 1492337945.0, "created_utc": 1492309145.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg90ypb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kpmah", "parent_id": "t1_dg8ivsk", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It is better to say that you \"need hibernate in case you need to change the database\" than you \"need hibernate because I feel like it is the right choice.\" You can argue against the first position, like you did, but not the second.\n\nUnfortunately in this case they didn't see reason. I think either because you didn't express it with enough tact, or maybe because they had too much ego invested in their choice, or maybe a very common one: the developer feels insecure moving away from technologies they know because they are 'an expert' in those technologies. The only way to win here is to tactfully and politely find a way to make them aware of their own irrationality.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is better to say that you &amp;quot;need hibernate in case you need to change the database&amp;quot; than you &amp;quot;need hibernate because I feel like it is the right choice.&amp;quot; You can argue against the first position, like you did, but not the second.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately in this case they didn&amp;#39;t see reason. I think either because you didn&amp;#39;t express it with enough tact, or maybe because they had too much ego invested in their choice, or maybe a very common one: the developer feels insecure moving away from technologies they know because they are &amp;#39;an expert&amp;#39; in those technologies. The only way to win here is to tactfully and politely find a way to make them aware of their own irrationality.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg90ypb", "score_hidden": false, "stickied": false, "created": 1492198340.0, "created_utc": 1492169540.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8ivsk", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "GhostBond", "parent_id": "t1_dg77tfa", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Do I agree with the idea that I'd like to get rid of \"I feel like we should do it this way so we'll go toe to toe angrily back and forth\"? Absolutely.  \n\nProblem is, sometimes what replaces that is even worse - the \"I'll regurgitate marketing b.s.\" response instead. I was in an interview recently where they were writing an app for internal employees and one person claims they \"needed\" to use hibernate \"in case we change the database\". I asked if they had a company-mandated db - yes they did, they didn't have a choice in what db to use. I said that I've never seen a company change their internal db system, they went hysterical \"well it could happen and we wouldn't be able to handle it without hibernate!\". (I didn't get the job, but their response was the final straw convincing me I had no interest in working there).  \n\nHow do you handle the marketing bullshit in a real discussion? It ends up being that the most stubborn person wins, and that very often is someone who just read some marketing fluff that's basically a lie and is repeating it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do I agree with the idea that I&amp;#39;d like to get rid of &amp;quot;I feel like we should do it this way so we&amp;#39;ll go toe to toe angrily back and forth&amp;quot;? Absolutely.  &lt;/p&gt;\n\n&lt;p&gt;Problem is, sometimes what replaces that is even worse - the &amp;quot;I&amp;#39;ll regurgitate marketing b.s.&amp;quot; response instead. I was in an interview recently where they were writing an app for internal employees and one person claims they &amp;quot;needed&amp;quot; to use hibernate &amp;quot;in case we change the database&amp;quot;. I asked if they had a company-mandated db - yes they did, they didn&amp;#39;t have a choice in what db to use. I said that I&amp;#39;ve never seen a company change their internal db system, they went hysterical &amp;quot;well it could happen and we wouldn&amp;#39;t be able to handle it without hibernate!&amp;quot;. (I didn&amp;#39;t get the job, but their response was the final straw convincing me I had no interest in working there).  &lt;/p&gt;\n\n&lt;p&gt;How do you handle the marketing bullshit in a real discussion? It ends up being that the most stubborn person wins, and that very often is someone who just read some marketing fluff that&amp;#39;s basically a lie and is repeating it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg8ivsk", "score_hidden": false, "stickied": false, "created": 1492160447.0, "created_utc": 1492131647.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg77tfa", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "kpmah", "parent_id": "t1_dg6erb9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think it's ok to follow your gut as long as you acknowledge that's what you're doing. If you understand you don't have a good objective reason for what you're doing it is easier to leave yourself open to constructive criticism without bruising your ego.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s ok to follow your gut as long as you acknowledge that&amp;#39;s what you&amp;#39;re doing. If you understand you don&amp;#39;t have a good objective reason for what you&amp;#39;re doing it is easier to leave yourself open to constructive criticism without bruising your ego.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg77tfa", "score_hidden": false, "stickied": false, "created": 1492091410.0, "created_utc": 1492062610.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6erb9", "gilded": 0, "archived": false, "score": 18, "report_reasons": null, "author": "bandarlandabad", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Well written.\n\nIt is also important sometimes to \"follow\" your gut feelings because this is where your experience builds up, sometimes you have a gut feeling that tells you how to do something because the last time you did it the other way it didn't go well, or if you did do that the same way and it went well, why not use that experience to avoid making unnecessary mistakes?\n\nBut your point is valid and important, I always try to criticize myself when doing code review to other developers, always keep in mind that they aren't familiar with what i'm familiar with and perhaps they can show me new ways of thinking, because i'm used to doing stuff in certain ways and other people can enrich your knowledge with new methods and new ways of thinking.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well written.&lt;/p&gt;\n\n&lt;p&gt;It is also important sometimes to &amp;quot;follow&amp;quot; your gut feelings because this is where your experience builds up, sometimes you have a gut feeling that tells you how to do something because the last time you did it the other way it didn&amp;#39;t go well, or if you did do that the same way and it went well, why not use that experience to avoid making unnecessary mistakes?&lt;/p&gt;\n\n&lt;p&gt;But your point is valid and important, I always try to criticize myself when doing code review to other developers, always keep in mind that they aren&amp;#39;t familiar with what i&amp;#39;m familiar with and perhaps they can show me new ways of thinking, because i&amp;#39;m used to doing stuff in certain ways and other people can enrich your knowledge with new methods and new ways of thinking.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6erb9", "score_hidden": false, "stickied": false, "created": 1492054249.0, "created_utc": 1492025449.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 18}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg77z8g", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "kpmah", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'd put it like this: if one style is objectively more readable than another, then use it. If one style is subjectively more readable, consistency is more important.\n\nAn example of an objective reason might be that people use 80 column terminals, so line lengths should be limited to 80 characters. Everything else can be handled by a style guide or auto formatter, which often make arbitrary decisions, but that doesn't matter if it's consistent.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d put it like this: if one style is objectively more readable than another, then use it. If one style is subjectively more readable, consistency is more important.&lt;/p&gt;\n\n&lt;p&gt;An example of an objective reason might be that people use 80 column terminals, so line lengths should be limited to 80 characters. Everything else can be handled by a style guide or auto formatter, which often make arbitrary decisions, but that doesn&amp;#39;t matter if it&amp;#39;s consistent.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg77z8g", "score_hidden": false, "stickied": false, "created": 1492091770.0, "created_utc": 1492062970.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg738sx", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "iconoclaus", "parent_id": "t1_dg6zmee", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "to the loudest voice in the room.  i kid, but that's why a community style guide or a standard practice is a helpful starting point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;to the loudest voice in the room.  i kid, but that&amp;#39;s why a community style guide or a standard practice is a helpful starting point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg738sx", "score_hidden": false, "stickied": false, "created": 1492083615.0, "created_utc": 1492054815.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6zmee", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Most readable to whom?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most readable to whom?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6zmee", "score_hidden": false, "stickied": false, "created": 1492078774.0, "created_utc": 1492049974.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7cyth", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "CODESIGN2", "parent_id": "t1_dg6qj1k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Why?\n\nI think you mean you'd rather only have to deal with a single language yourself, which has it's merits, but single language across a team could be losing out for the sake of homogeneity.\n\nIt's difficult for-sure to have multiple languages (maybe a C++ engine with LUA or JS bindings), but it can be of benefit, especially where you can glue together those technologies it can act like a prism on a bulb amplifying the brilliance of the core to shine for longer (apologies I recently visited a lighthouse).\n\nI was saying to my brother-in-law last night. I'd rather never have to program a set of components ever again. I'd rather my skills were put to use solely assembling or maintaining existing components because I feel that is the best way to unlock full-potential. A Narrow focus, a well-defined remit to force managers and co-workers to not overload creating SPOF's. He's an electro-mechanical engineer and he agree'd that his current role is easier maintaining and operating a machine manufactured elsewhere. It means less chasing down the rabbit-hole.", "edited": 1492077065.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why?&lt;/p&gt;\n\n&lt;p&gt;I think you mean you&amp;#39;d rather only have to deal with a single language yourself, which has it&amp;#39;s merits, but single language across a team could be losing out for the sake of homogeneity.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s difficult for-sure to have multiple languages (maybe a C++ engine with LUA or JS bindings), but it can be of benefit, especially where you can glue together those technologies it can act like a prism on a bulb amplifying the brilliance of the core to shine for longer (apologies I recently visited a lighthouse).&lt;/p&gt;\n\n&lt;p&gt;I was saying to my brother-in-law last night. I&amp;#39;d rather never have to program a set of components ever again. I&amp;#39;d rather my skills were put to use solely assembling or maintaining existing components because I feel that is the best way to unlock full-potential. A Narrow focus, a well-defined remit to force managers and co-workers to not overload creating SPOF&amp;#39;s. He&amp;#39;s an electro-mechanical engineer and he agree&amp;#39;d that his current role is easier maintaining and operating a machine manufactured elsewhere. It means less chasing down the rabbit-hole.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7cyth", "score_hidden": false, "stickied": false, "created": 1492105671.0, "created_utc": 1492076871.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7dad1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Fisher9001", "parent_id": "t1_dg6qj1k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I agree that there shouldn't be two languages in single _area_ of codebase, but sometimes it's simply reasonable to implement parts of the system in different languages. Just because your data mining service is written in C++/F# doesn't mean you can't write backend for you website in C#.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree that there shouldn&amp;#39;t be two languages in single &lt;em&gt;area&lt;/em&gt; of codebase, but sometimes it&amp;#39;s simply reasonable to implement parts of the system in different languages. Just because your data mining service is written in C++/F# doesn&amp;#39;t mean you can&amp;#39;t write backend for you website in C#.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7dad1", "score_hidden": false, "stickied": false, "created": 1492106645.0, "created_utc": 1492077845.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7fl0g", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "twiggy99999", "parent_id": "t1_dg6qj1k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Javascript. Javascript every where /s", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript. Javascript every where /s&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7fl0g", "score_hidden": false, "stickied": false, "created": 1492112650.0, "created_utc": 1492083850.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6qj1k", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "BlueRenner", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'd settle for a single language in the codebase.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d settle for a single language in the codebase.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6qj1k", "score_hidden": false, "stickied": false, "created": 1492067610.0, "created_utc": 1492038810.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7idbz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "loup-vaillant", "parent_id": "t1_dg7e79y", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Then there are the\u2026 less widely accepted styles.\n\n    if\n        ( lLocalvar EQ pParameter )\n    {\n        setFoo( mMemberVariable );\n    }\n    else\n    {\n        // etc...\n    }\n\nWhoever invented this must have wanted breathing room.\n\n    \t/**************************************************************************\n    \t **************************** PROTECTED SECTION ***************************\n    \t **************************************************************************/\n    protected:\n\t\n    \t/******************************* ATTRIBUTES *******************************/\n    \t/******************************** METHODS *********************************/\n    \n    \t/**************************************************************************\n    \t ***************************** PRIVATE SECTION ****************************\n    \t **************************************************************************/\n\nSo you don't miss the fact the `prodected` section is empty.\n\n    \t/**\n    \t * Get fooBar\n    \t *\n    \t * @return the fooBar\n    \t */\n    \tFooBar getFooBar() const;\n\n    \t/**\n    \t * Set fooBar\n    \t *\n    \t * @param pFooBar The new FooBar\n    \t */\n    \tsetFooBar(FooBar pFoobar);\n\nGood comments make good documentation. Including redundant comments, apparently. No you can't  omit redundant comments. No, you can't use `///`, let alone `///&lt;`.\n", "edited": 1492089033.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Then there are the\u2026 less widely accepted styles.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if\n    ( lLocalvar EQ pParameter )\n{\n    setFoo( mMemberVariable );\n}\nelse\n{\n    // etc...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Whoever invented this must have wanted breathing room.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    /**************************************************************************\n     **************************** PROTECTED SECTION ***************************\n     **************************************************************************/\nprotected:\n\n    /******************************* ATTRIBUTES *******************************/\n    /******************************** METHODS *********************************/\n\n    /**************************************************************************\n     ***************************** PRIVATE SECTION ****************************\n     **************************************************************************/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you don&amp;#39;t miss the fact the &lt;code&gt;prodected&lt;/code&gt; section is empty.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    /**\n     * Get fooBar\n     *\n     * @return the fooBar\n     */\n    FooBar getFooBar() const;\n\n    /**\n     * Set fooBar\n     *\n     * @param pFooBar The new FooBar\n     */\n    setFooBar(FooBar pFoobar);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Good comments make good documentation. Including redundant comments, apparently. No you can&amp;#39;t  omit redundant comments. No, you can&amp;#39;t use &lt;code&gt;///&lt;/code&gt;, let alone &lt;code&gt;///&amp;lt;&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7idbz", "score_hidden": false, "stickied": false, "created": 1492117513.0, "created_utc": 1492088713.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7e79y", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Gotebe", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;  The best way to format code is however is most readable. \n\nTherein lies the problem.\n\n**Any** of the widely accepted styles are a-ok. It's better to roll a dice between them than argue.\n\nBut here, it's not even that, it's that the code under review isn't using the otherwise applied style.\n\ntl;dr : go away, nobody should care.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;The best way to format code is however is most readable. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Therein lies the problem.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Any&lt;/strong&gt; of the widely accepted styles are a-ok. It&amp;#39;s better to roll a dice between them than argue.&lt;/p&gt;\n\n&lt;p&gt;But here, it&amp;#39;s not even that, it&amp;#39;s that the code under review isn&amp;#39;t using the otherwise applied style.&lt;/p&gt;\n\n&lt;p&gt;tl;dr : go away, nobody should care.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7e79y", "score_hidden": false, "stickied": false, "created": 1492109302.0, "created_utc": 1492080502.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7fvw2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Beckneard", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; The best way to format code is however is most readable.\n\nMe and my colleagues have wildly different ideas for what constitutes as 'readable'.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;The best way to format code is however is most readable.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Me and my colleagues have wildly different ideas for what constitutes as &amp;#39;readable&amp;#39;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7fvw2", "score_hidden": false, "stickied": false, "created": 1492113280.0, "created_utc": 1492084480.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7akcu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ksion", "parent_id": "t1_dg6q11z", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Completely agree. This is also why I'm skeptical of automatic steamrollers like `go fmt`.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Completely agree. This is also why I&amp;#39;m skeptical of automatic steamrollers like &lt;code&gt;go fmt&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7akcu", "score_hidden": false, "stickied": false, "created": 1492098418.0, "created_utc": 1492069618.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6q11z", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "acwaters", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;Isn\u2019t it actually more important that the formatting is simply consistent with the rest of the code?\n\n*No no no no no no!* I agree with the actual point this article is making, but we need to stop spreading this myth. The best way to format code is however is most readable. Consistency in style is important, but it has to be a secondary concern to readability and maintainability; consistency for its own sake is harmful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Isn\u2019t it actually more important that the formatting is simply consistent with the rest of the code?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;No no no no no no!&lt;/em&gt; I agree with the actual point this article is making, but we need to stop spreading this myth. The best way to format code is however is most readable. Consistency in style is important, but it has to be a secondary concern to readability and maintainability; consistency for its own sake is harmful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6q11z", "score_hidden": false, "stickied": false, "created": 1492066977.0, "created_utc": 1492038177.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg76q0p", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "jpfed", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I have to admit that much of the time when I'm writing code, I'm not thinking very explicitly about tradeoffs; I'm just doing what intuitively \"feels right\".  Hopefully it's enough that I'm also trying to hone those intuitions...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have to admit that much of the time when I&amp;#39;m writing code, I&amp;#39;m not thinking very explicitly about tradeoffs; I&amp;#39;m just doing what intuitively &amp;quot;feels right&amp;quot;.  Hopefully it&amp;#39;s enough that I&amp;#39;m also trying to hone those intuitions...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg76q0p", "score_hidden": false, "stickied": false, "created": 1492089170.0, "created_utc": 1492060370.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7h1iq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Beckneard", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "An even bigger problem is even most of the \"best practices\" and technologies we use could be considered \"gut development\". There is very little scientific method applied to anything regarding software engineering. Scrum, OOP, the majority of architecture design patterns, everything is \"gut driven\".", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;An even bigger problem is even most of the &amp;quot;best practices&amp;quot; and technologies we use could be considered &amp;quot;gut development&amp;quot;. There is very little scientific method applied to anything regarding software engineering. Scrum, OOP, the majority of architecture design patterns, everything is &amp;quot;gut driven&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7h1iq", "score_hidden": false, "stickied": false, "created": 1492115418.0, "created_utc": 1492086618.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7cvyl", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "CODESIGN2", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Short, to the point, no dilly-dallying, fantastic! (oh I agree which helps I suppose)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Short, to the point, no dilly-dallying, fantastic! (oh I agree which helps I suppose)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7cvyl", "score_hidden": false, "stickied": false, "created": 1492105433.0, "created_utc": 1492076633.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg6x81l", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "Shautieh", "parent_id": "t1_dg6r7iz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "And a pair of fresh eyes can spot things the original person couldn't because his mind assumes too many things already.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And a pair of fresh eyes can spot things the original person couldn&amp;#39;t because his mind assumes too many things already.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6x81l", "score_hidden": false, "stickied": false, "created": 1492075797.0, "created_utc": 1492046997.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7d2e2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "CODESIGN2", "parent_id": "t1_dg710hr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Then you are describing an organisational failure not a process failure. That's like me saying when I play soccer my team loses. It says nothing about the team or the sport to have a person or person(s) do it badly.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Then you are describing an organisational failure not a process failure. That&amp;#39;s like me saying when I play soccer my team loses. It says nothing about the team or the sport to have a person or person(s) do it badly.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7d2e2", "score_hidden": false, "stickied": false, "created": 1492105976.0, "created_utc": 1492077176.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg710hr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dg700rw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I have \"Code Complete\" rather than \"Code Complete 2\" myself, so I can't speak to the second edition, but the code reviews I actually see happen in companies don't actually rise to even the least of the reviews types described in first edition.\n\nI don't currently have access to any of the referenced studies, so I can't speak to those, but from the descriptions in \"Code Complete\" it doesn't look like they are comparing code review to static analysis tools, which isn't surprising given the state of static analysis tools at the time of the studies.  Also I get the impression that the 'testing' they are comparing to manual software testing (i.e. it compares the effectiveness of hours of reviews vs hours of testing) rather than creating automated tests.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have &amp;quot;Code Complete&amp;quot; rather than &amp;quot;Code Complete 2&amp;quot; myself, so I can&amp;#39;t speak to the second edition, but the code reviews I actually see happen in companies don&amp;#39;t actually rise to even the least of the reviews types described in first edition.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t currently have access to any of the referenced studies, so I can&amp;#39;t speak to those, but from the descriptions in &amp;quot;Code Complete&amp;quot; it doesn&amp;#39;t look like they are comparing code review to static analysis tools, which isn&amp;#39;t surprising given the state of static analysis tools at the time of the studies.  Also I get the impression that the &amp;#39;testing&amp;#39; they are comparing to manual software testing (i.e. it compares the effectiveness of hours of reviews vs hours of testing) rather than creating automated tests.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg710hr", "score_hidden": false, "stickied": false, "created": 1492080540.0, "created_utc": 1492051740.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg700rw", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "sebaest", "parent_id": "t1_dg6z8gb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Chapter 20 and 21 of \"Code Complete 2\" has a few sources, in particular: Programming Productivity (Jones 1986a), \u201cSoftware Defect-Removal Efficiency\u201d (Jones 1996), and \u201cWhat We Have Learned About Fighting Defects\u201d (Shull et al. 2002).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Chapter 20 and 21 of &amp;quot;Code Complete 2&amp;quot; has a few sources, in particular: Programming Productivity (Jones 1986a), \u201cSoftware Defect-Removal Efficiency\u201d (Jones 1996), and \u201cWhat We Have Learned About Fighting Defects\u201d (Shull et al. 2002).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg700rw", "score_hidden": false, "stickied": false, "created": 1492079270.0, "created_utc": 1492050470.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg7bdwh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ForeverAlot", "parent_id": "t1_dg6z8gb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Care to provide a link to that conclusive data?\n\nWhere is the line between conclusive and inconclusive (see also: [non-formal sciences](https://en.wikipedia.org/wiki/Formal_science#Differences_from_other_forms_of_science))?\n\nSmartBear published a survey article of code review that covers the field much better than Code Complete does. It's gratis and *probably* still available on their Web site (which has become impossible to navigate in the last couple of years). I think there's also a dead-tree version of it. They provide [an easily accessible summary of the key take-aways](https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/) but you would have to accept that at face value (which is both disappointing and embarrassing considering their background). Alternatively, [Making the Case for Review](https://www.infoq.com/presentations/reviews-quality-roi) is a talk that walks through those exact same points to convince management of the financial benefits of code review.\n\nSmartBear is obviously unbiased but you would have to review their source research articles to disprove their survey. Admittedly I only read a couple of those. FWIW, IBM was first to conclude that performing code review saves money.\n\nIt is absolutely not a fact that\n\n&gt; What is objective can be caught by tests and analysis tools\n\nand that is irrespective of the value of code review.\n\nHowever, I don't contend that\n\n&gt; code reviews are largely a waste of time\n\n\"largely\" being an operative word, at least when looking at the micro-scale of teams rather than the macro-scale of the industry. I firmly believe code review to be a valuable tool and I refuse to not do it, but I also acknowledge that it is easy to do badly and then much of it really is a waste of time. Like everything else, doing it well requires training, because it's a lot more complex than just skimming over a 1000 LoC patch. Although GitHub succeeded in popularising up-front code review, their tool failed to communicate much of the nuance of practice.\n\nI also objectively spend a fair amount of my time in code review dealing with things I wish I did not have to (e.g. unnecessarily noisy diffs). I do that for two reasons: the first is that it's my responsibility to teach untrained people that some of their practices are wasting reviewers' time. The second is that they persist doing it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Care to provide a link to that conclusive data?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Where is the line between conclusive and inconclusive (see also: &lt;a href=\"https://en.wikipedia.org/wiki/Formal_science#Differences_from_other_forms_of_science\"&gt;non-formal sciences&lt;/a&gt;)?&lt;/p&gt;\n\n&lt;p&gt;SmartBear published a survey article of code review that covers the field much better than Code Complete does. It&amp;#39;s gratis and &lt;em&gt;probably&lt;/em&gt; still available on their Web site (which has become impossible to navigate in the last couple of years). I think there&amp;#39;s also a dead-tree version of it. They provide &lt;a href=\"https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/\"&gt;an easily accessible summary of the key take-aways&lt;/a&gt; but you would have to accept that at face value (which is both disappointing and embarrassing considering their background). Alternatively, &lt;a href=\"https://www.infoq.com/presentations/reviews-quality-roi\"&gt;Making the Case for Review&lt;/a&gt; is a talk that walks through those exact same points to convince management of the financial benefits of code review.&lt;/p&gt;\n\n&lt;p&gt;SmartBear is obviously unbiased but you would have to review their source research articles to disprove their survey. Admittedly I only read a couple of those. FWIW, IBM was first to conclude that performing code review saves money.&lt;/p&gt;\n\n&lt;p&gt;It is absolutely not a fact that&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;What is objective can be caught by tests and analysis tools&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;and that is irrespective of the value of code review.&lt;/p&gt;\n\n&lt;p&gt;However, I don&amp;#39;t contend that&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;code reviews are largely a waste of time&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;quot;largely&amp;quot; being an operative word, at least when looking at the micro-scale of teams rather than the macro-scale of the industry. I firmly believe code review to be a valuable tool and I refuse to not do it, but I also acknowledge that it is easy to do badly and then much of it really is a waste of time. Like everything else, doing it well requires training, because it&amp;#39;s a lot more complex than just skimming over a 1000 LoC patch. Although GitHub succeeded in popularising up-front code review, their tool failed to communicate much of the nuance of practice.&lt;/p&gt;\n\n&lt;p&gt;I also objectively spend a fair amount of my time in code review dealing with things I wish I did not have to (e.g. unnecessarily noisy diffs). I do that for two reasons: the first is that it&amp;#39;s my responsibility to teach untrained people that some of their practices are wasting reviewers&amp;#39; time. The second is that they persist doing it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7bdwh", "score_hidden": false, "stickied": false, "created": 1492100824.0, "created_utc": 1492072024.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6z8gb", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dg6r7iz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Care to provide a link to that conclusive data?\n\nI've seen studies on the subject, but from what I recall they were too specific to generalize (i.e. the data was not conclusive).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Care to provide a link to that conclusive data?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve seen studies on the subject, but from what I recall they were too specific to generalize (i.e. the data was not conclusive).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6z8gb", "score_hidden": false, "stickied": false, "created": 1492078295.0, "created_utc": 1492049495.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg6zfuk", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dg6tpbt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Thorough code review usually takes a lot more man hours, especially if done redundantly.\n\nAnd it takes people who are competent at doing code reviews as well.\n\n&gt; Typical code review stops at coding style, compiler warnings and internal security (reviewer is higher in the pecking order than implementer).\n\nExactly.\n\nIf the resources aren't going to be committed to do reviews well, better to skip it and utilize those resources in a more effective way.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Thorough code review usually takes a lot more man hours, especially if done redundantly.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;And it takes people who are competent at doing code reviews as well.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Typical code review stops at coding style, compiler warnings and internal security (reviewer is higher in the pecking order than implementer).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Exactly.&lt;/p&gt;\n\n&lt;p&gt;If the resources aren&amp;#39;t going to be committed to do reviews well, better to skip it and utilize those resources in a more effective way.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6zfuk", "score_hidden": false, "stickied": false, "created": 1492078547.0, "created_utc": 1492049747.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6tpbt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pm_plz_im_lonely", "parent_id": "t1_dg6r7iz", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Given a problem to solve: Understand it, provide a solution.\n\nGiven a solution to verify: Understand the problem, understand the solution, recursively bust all problems with the solution and provide solutions to those.\n\nTypical code review stops at coding style, compiler warnings and internal security (reviewer is higher in the pecking order than implementer).\n\nThorough code review usually takes a lot more man hours, especially if done redundantly. Not worth it for many businesses. Necessary if lives depend on it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Given a problem to solve: Understand it, provide a solution.&lt;/p&gt;\n\n&lt;p&gt;Given a solution to verify: Understand the problem, understand the solution, recursively bust all problems with the solution and provide solutions to those.&lt;/p&gt;\n\n&lt;p&gt;Typical code review stops at coding style, compiler warnings and internal security (reviewer is higher in the pecking order than implementer).&lt;/p&gt;\n\n&lt;p&gt;Thorough code review usually takes a lot more man hours, especially if done redundantly. Not worth it for many businesses. Necessary if lives depend on it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6tpbt", "score_hidden": false, "stickied": false, "created": 1492071535.0, "created_utc": 1492042735.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6r7iz", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "sebaest", "parent_id": "t1_dg6n77k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I don't know man. There is conclusive data saying that code reviews (as well as architecture and design reviews) are quite effective. Different people find different kinds of bugs.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know man. There is conclusive data saying that code reviews (as well as architecture and design reviews) are quite effective. Different people find different kinds of bugs.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6r7iz", "score_hidden": false, "stickied": false, "created": 1492068448.0, "created_utc": 1492039648.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg79qrh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dg77pyt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Agreed.  I've generally found it useful to distinguish between code reviews and design/architecture reviews due to the superficiality of what passes for code reviews these days.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Agreed.  I&amp;#39;ve generally found it useful to distinguish between code reviews and design/architecture reviews due to the superficiality of what passes for code reviews these days.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg79qrh", "score_hidden": false, "stickied": false, "created": 1492096139.0, "created_utc": 1492067339.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg77pyt", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kpmah", "parent_id": "t1_dg6n77k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think what you're saying is that shallow 30 minute code reviews are useless, and I agree. That kind of review is performed better by automated tools. Really digging in to the design/architecture of the code is what I mean when I talk about code reviews, it's not something separate for me. They should take about 30-50% of the time it took to write the code in the first place.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think what you&amp;#39;re saying is that shallow 30 minute code reviews are useless, and I agree. That kind of review is performed better by automated tools. Really digging in to the design/architecture of the code is what I mean when I talk about code reviews, it&amp;#39;s not something separate for me. They should take about 30-50% of the time it took to write the code in the first place.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg77pyt", "score_hidden": false, "stickied": false, "created": 1492091206.0, "created_utc": 1492062406.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_6505t3", "likes": null, "replies": "", "user_reports": [], "id": "dg73kdy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "i_do_floss", "parent_id": "t1_dg6n77k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I usually find bugs when I do code reviews. Maybe you work with a team that does a better job of testing stuff, because I'm positive that my code reviews have prevented some catastrophes.\n\nUsually I find bugs, or bad decision making (blatant bad decisions, not subjective)\n\nI work in a team that has low quality standards though. I don't like it. But I don't think the team I work in is the only one like it.", "edited": 1492055654.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I usually find bugs when I do code reviews. Maybe you work with a team that does a better job of testing stuff, because I&amp;#39;m positive that my code reviews have prevented some catastrophes.&lt;/p&gt;\n\n&lt;p&gt;Usually I find bugs, or bad decision making (blatant bad decisions, not subjective)&lt;/p&gt;\n\n&lt;p&gt;I work in a team that has low quality standards though. I don&amp;#39;t like it. But I don&amp;#39;t think the team I work in is the only one like it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg73kdy", "score_hidden": false, "stickied": false, "created": 1492084093.0, "created_utc": 1492055293.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6n77k", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t3_6505t3", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "The example given in the article is exemplifies why code reviews are largely a waste of time, in that most of what of what is raised is subjective and highly debatable rather than objective.  What is objective can be caught by tests and analysis tools and those are better investment than code reviews.  That isn't to say reviews are bad, for example architecture and design reviews are highly valuable, but they should be separate from code reviews (i.e. even if the architecture or design review is done on the code keep the comments focused on the appropriate level).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The example given in the article is exemplifies why code reviews are largely a waste of time, in that most of what of what is raised is subjective and highly debatable rather than objective.  What is objective can be caught by tests and analysis tools and those are better investment than code reviews.  That isn&amp;#39;t to say reviews are bad, for example architecture and design reviews are highly valuable, but they should be separate from code reviews (i.e. even if the architecture or design review is done on the code keep the comments focused on the appropriate level).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6n77k", "score_hidden": false, "stickied": false, "created": 1492063460.0, "created_utc": 1492034660.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}]