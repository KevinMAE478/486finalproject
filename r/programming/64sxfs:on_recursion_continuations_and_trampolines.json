[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64sxfs", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 47, "report_reasons": null, "author": "benhoyt", "saved": false, "mod_reports": [], "name": "t3_64sxfs", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "eli.thegreenplace.net", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/64sxfs/on_recursion_continuations_and_trampolines/", "num_reports": null, "locked": false, "stickied": false, "created": 1491966146.0, "url": "http://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/", "author_flair_text": null, "quarantine": false, "title": "On Recursion, Continuations and Trampolines", "created_utc": 1491937346.0, "distinguished": null, "media": null, "upvote_ratio": 0.87, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 47}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": "", "user_reports": [], "id": "dg5h03d", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "hackerfoo", "parent_id": "t1_dg5dfo7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Also note that the accumulator based conversions to tail recursion only work because addition and multiplication are associative (the operands are reduced in reverse), and so will not work for general expressions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Also note that the accumulator based conversions to tail recursion only work because addition and multiplication are associative (the operands are reduced in reverse), and so will not work for general expressions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5h03d", "score_hidden": false, "stickied": false, "created": 1492000281.0, "created_utc": 1491971481.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": "", "user_reports": [], "id": "dg5qvgs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "hackerfoo", "parent_id": "t1_dg5kmzs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Sure, but what's the point? It's still going to be less efficient (because of bad locality) than just using the call stack as intended.\n\nThe stack is just [another representation for a continuation](https://github.com/HackerFoo/contr) anyway. CPS lets the caller modify the continuation more easily, but I don't think this justifies the cost.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sure, but what&amp;#39;s the point? It&amp;#39;s still going to be less efficient (because of bad locality) than just using the call stack as intended.&lt;/p&gt;\n\n&lt;p&gt;The stack is just &lt;a href=\"https://github.com/HackerFoo/contr\"&gt;another representation for a continuation&lt;/a&gt; anyway. CPS lets the caller modify the continuation more easily, but I don&amp;#39;t think this justifies the cost.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qvgs", "score_hidden": false, "stickied": false, "created": 1492025710.0, "created_utc": 1491996910.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": "", "user_reports": [], "id": "dg76qtx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "jms_nh", "parent_id": "t1_dg5kmzs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "[Charlie on the MTA](https://www.youtube.com/watch?v=S7Jw_v3F_Q0)?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=S7Jw_v3F_Q0\"&gt;Charlie on the MTA&lt;/a&gt;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg76qtx", "score_hidden": false, "stickied": false, "created": 1492089213.0, "created_utc": 1492060413.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5kmzs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "GaAlAs", "parent_id": "t1_dg5dfo7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "since after the cps conversion you usually end up stringing together a sequence of non-returning function calls you can use the stack as a fast heap (see Cheney on the MTA) and get a good discount on your lunch.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;since after the cps conversion you usually end up stringing together a sequence of non-returning function calls you can use the stack as a fast heap (see Cheney on the MTA) and get a good discount on your lunch.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5kmzs", "score_hidden": false, "stickied": false, "created": 1492007793.0, "created_utc": 1491978993.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5dfo7", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "hackerfoo", "parent_id": "t3_64sxfs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "There's no free lunch, though. Non-tail call recursion converted to CPS just builds up a string of heap allocated closures instead of filling up the stack.\n\nStack overflow could be solved more efficiently with a segmented stack, if necessary.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s no free lunch, though. Non-tail call recursion converted to CPS just builds up a string of heap allocated closures instead of filling up the stack.&lt;/p&gt;\n\n&lt;p&gt;Stack overflow could be solved more efficiently with a segmented stack, if necessary.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5dfo7", "score_hidden": false, "stickied": false, "created": 1491994659.0, "created_utc": 1491965859.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": "", "user_reports": [], "id": "dg5d10t", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "pinano", "parent_id": "t3_64sxfs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I wrote a silly post about [using `try/catch` as the trampoline in JS](http://jacob.jkrall.net/js-tco).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a silly post about &lt;a href=\"http://jacob.jkrall.net/js-tco\"&gt;using &lt;code&gt;try/catch&lt;/code&gt; as the trampoline in JS&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5d10t", "score_hidden": false, "stickied": false, "created": 1491994091.0, "created_utc": 1491965291.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64sxfs", "likes": null, "replies": "", "user_reports": [], "id": "dg51jef", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "eluusive", "parent_id": "t3_64sxfs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Python generators and coroutines as an alternative\n\nThis is a better alternative, the code ends up much more legible.  The D frontend project SDC uses this to greatly reduce the amount of code required in the frontend: http://github.com/sdc-developers/sdc\n\nIt's pretty neat, and fast.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Python generators and coroutines as an alternative&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is a better alternative, the code ends up much more legible.  The D frontend project SDC uses this to greatly reduce the amount of code required in the frontend: &lt;a href=\"http://github.com/sdc-developers/sdc\"&gt;http://github.com/sdc-developers/sdc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s pretty neat, and fast.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg51jef", "score_hidden": false, "stickied": false, "created": 1491978795.0, "created_utc": 1491949995.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]