[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64p5rs", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 20, "report_reasons": null, "author": "dhruvrajvanshi", "saved": false, "mod_reports": [], "name": "t3_64p5rs", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/64p5rs/crystalparsec_parser_combinators_for_the_crystal/", "num_reports": null, "locked": false, "stickied": false, "created": 1491920241.0, "url": "https://github.com/dhruvrajvanshi/crystal-parsec", "author_flair_text": null, "quarantine": false, "title": "crystal-parsec: Parser combinators for the Crystal language", "created_utc": 1491891441.0, "distinguished": null, "media": null, "upvote_ratio": 0.83, "num_comments": 2, "visited": false, "subreddit_type": "public", "ups": 20}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64p5rs", "likes": null, "replies": "", "user_reports": [], "id": "dg3yqp7", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "ve42", "parent_id": "t3_64p5rs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Crystal stands on a nice middle ground between ergonomics and safety. For instance, handling nulls via  if expressions is brilliant:\n\n    # bar might be nil\n    bar # bar's possible nil type was ignored =&gt; compile error\n    if bar\n        bar.foo # success because bar cannot be nil here\n    end\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Crystal stands on a nice middle ground between ergonomics and safety. For instance, handling nulls via  if expressions is brilliant:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# bar might be nil\nbar # bar&amp;#39;s possible nil type was ignored =&amp;gt; compile error\nif bar\n    bar.foo # success because bar cannot be nil here\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg3yqp7", "score_hidden": false, "stickied": false, "created": 1491921703.0, "created_utc": 1491892903.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64p5rs", "likes": null, "replies": "", "user_reports": [], "id": "dg43df4", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "antrn11", "parent_id": "t3_64p5rs", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Parser combinators seem to be a very nice way to create parsers.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Parser combinators seem to be a very nice way to create parsers.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg43df4", "score_hidden": false, "stickied": false, "created": 1491935389.0, "created_utc": 1491906589.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}]