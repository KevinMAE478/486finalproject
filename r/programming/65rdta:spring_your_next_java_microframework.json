[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65rdta", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 59, "report_reasons": null, "author": "alek_sys", "saved": false, "mod_reports": [], "name": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "blog.alexnesterov.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65rdta/spring_your_next_java_microframework/", "num_reports": null, "locked": false, "stickied": false, "created": 1492405203.0, "url": "http://blog.alexnesterov.com/post/spring-your-next-microframework/", "author_flair_text": null, "quarantine": false, "title": "Spring: your next Java microframework", "created_utc": 1492376403.0, "distinguished": null, "media": null, "upvote_ratio": 0.68, "num_comments": 52, "visited": false, "subreddit_type": "public", "ups": 59}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgddtq0", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "dpash", "parent_id": "t1_dgcsa5t", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Spring is micro in the same way that LDAP is lightweight. It is compared to the alternative when it was first created. Compare Spring 1 and J2EE in 2004 (J2EE 1.4).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring is micro in the same way that LDAP is lightweight. It is compared to the alternative when it was first created. Compare Spring 1 and J2EE in 2004 (J2EE 1.4).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgddtq0", "score_hidden": false, "stickied": false, "created": 1492458202.0, "created_utc": 1492429402.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgde7su", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "geodel", "parent_id": "t1_dgd1o9e", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "I agree. Mainly because it is few 1000 classes in few 100 directories.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree. Mainly because it is few 1000 classes in few 100 directories.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgde7su", "score_hidden": false, "stickied": false, "created": 1492459126.0, "created_utc": 1492430326.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd1o9e", "gilded": 0, "archived": false, "score": 22, "report_reasons": null, "author": "jnordwick", "parent_id": "t1_dgcuru7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Spring still doesn't fit the definition.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring still doesn&amp;#39;t fit the definition.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd1o9e", "score_hidden": false, "stickied": false, "created": 1492428551.0, "created_utc": 1492399751.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 22}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd1ebg", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "joequin", "parent_id": "t1_dgcuru7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Would spring be a micro framework by that definition?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Would spring be a micro framework by that definition?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd1ebg", "score_hidden": false, "stickied": false, "created": 1492428149.0, "created_utc": 1492399349.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdz7zh", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "geodel", "parent_id": "t1_dgdxsxj", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It is just an AbstractProxySingletonFactory talk.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is just an AbstractProxySingletonFactory talk.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdz7zh", "score_hidden": false, "stickied": false, "created": 1492486104.0, "created_utc": 1492457304.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdxsxj", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "rockum", "parent_id": "t1_dgcuru7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Spring is what gave Java that reputation.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring is what gave Java that reputation.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdxsxj", "score_hidden": false, "stickied": false, "created": 1492484486.0, "created_utc": 1492455686.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcuru7", "gilded": 0, "archived": false, "score": 26, "report_reasons": null, "author": "geodel", "parent_id": "t1_dgcsa5t", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Well in Java world anything less than few hundred useless classes buried under 20 level deep folder hierarchy is micro.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well in Java world anything less than few hundred useless classes buried under 20 level deep folder hierarchy is micro.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcuru7", "score_hidden": false, "stickied": false, "created": 1492419084.0, "created_utc": 1492390284.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 26}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd7p5i", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "kazagistar", "parent_id": "t1_dgcsa5t", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I am [Aware](http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/beans/factory/Aware.html) of this fact.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am &lt;a href=\"http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/beans/factory/Aware.html\"&gt;Aware&lt;/a&gt; of this fact.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd7p5i", "score_hidden": false, "stickied": false, "created": 1492439812.0, "created_utc": 1492411012.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcsa5t", "gilded": 0, "archived": false, "score": 78, "report_reasons": null, "author": "vansterdam_city", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Aint nothing micro about Spring", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aint nothing micro about Spring&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcsa5t", "score_hidden": false, "stickied": false, "created": 1492415707.0, "created_utc": 1492386907.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 78}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgcptp3", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "darkean", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Very interesting. I will definitely keep an eye on it.\n\nIt looks good for side projects and simple stuff, but I usually go with node for those.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very interesting. I will definitely keep an eye on it.&lt;/p&gt;\n\n&lt;p&gt;It looks good for side projects and simple stuff, but I usually go with node for those.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcptp3", "score_hidden": false, "stickied": false, "created": 1492412361.0, "created_utc": 1492383561.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdnj58", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "derekmckinnon", "parent_id": "t1_dgdmt9u", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I would argue that ok() is more readable than the ones you mentioned. Yours are more informative, yes, but if I was writing lots of code all the time, I think I'd prefer the shorter version. The first time you encounter the code, you might need to read the docs, but after that you should be fine. Good? Bad? I don't know :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would argue that ok() is more readable than the ones you mentioned. Yours are more informative, yes, but if I was writing lots of code all the time, I think I&amp;#39;d prefer the shorter version. The first time you encounter the code, you might need to read the docs, but after that you should be fine. Good? Bad? I don&amp;#39;t know :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdnj58", "score_hidden": false, "stickied": false, "created": 1492473009.0, "created_utc": 1492444209.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdmt9u", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "cantwedronethatguy", "parent_id": "t1_dgdjdyt", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; ok() is to start building a 200 response.\n\nThe article states \n\n&gt;In our case we use ok() which automatically sets return code to HTTP 200\n\nMeaning you'd have to learn what ok() does or check the Java docs, setHttpStatusOK() or even setReturnCode(HttpStatus.SC_OK) or something of the sorts would make it more readable.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;ok() is to start building a 200 response.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The article states &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;In our case we use ok() which automatically sets return code to HTTP 200&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Meaning you&amp;#39;d have to learn what ok() does or check the Java docs, setHttpStatusOK() or even setReturnCode(HttpStatus.SC_OK) or something of the sorts would make it more readable.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdmt9u", "score_hidden": false, "stickied": false, "created": 1492472182.0, "created_utc": 1492443382.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdjdyt", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "derekmckinnon", "parent_id": "t1_dgdhti4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "A lot of the noise can be attributed to Java just being Java, but I'm not sure I see the issue with the ok() function. ServerResponse class must follow the builder pattern, ok() is to start building a 200 response. \n\nAs for the Mono class, I don't know what that is, but it seems to me that you could probably do without it...especially if you are just returning a string. The String.class reference is most likely there to help establish the generic type of the method...because Java is dumb and doesn't have reified generics like a normal language should. :)\n\nFurthermore, I think Java 8 lambdas would probably go a long way in reducing the noise in this snippet.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A lot of the noise can be attributed to Java just being Java, but I&amp;#39;m not sure I see the issue with the ok() function. ServerResponse class must follow the builder pattern, ok() is to start building a 200 response. &lt;/p&gt;\n\n&lt;p&gt;As for the Mono class, I don&amp;#39;t know what that is, but it seems to me that you could probably do without it...especially if you are just returning a string. The String.class reference is most likely there to help establish the generic type of the method...because Java is dumb and doesn&amp;#39;t have reified generics like a normal language should. :)&lt;/p&gt;\n\n&lt;p&gt;Furthermore, I think Java 8 lambdas would probably go a long way in reducing the noise in this snippet.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdjdyt", "score_hidden": false, "stickied": false, "created": 1492467916.0, "created_utc": 1492439116.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dge2b1k", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "frugalmail", "parent_id": "t1_dgdw5ok", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Hey Drama Queen, you know that this is a REST service right?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey Drama Queen, you know that this is a REST service right?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dge2b1k", "score_hidden": false, "stickied": false, "created": 1492489564.0, "created_utc": 1492460764.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdw5ok", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "sfsdfd", "parent_id": "t1_dgdv75i", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "The only problem that that refactoring eliminates is the precompiler directive. Everything else I listed is still there. And in its place, you have a lambda expression that raises additional questions.\n\nThe purpose of Hello World is to inspire confidence - to give you something simple that works, that you can intuitively understand, and that you can tweak in small ways to achieve other results without breaking it. For example, here's \"Hello, World!\" in C:\n\n    #include&lt;stdio.h&gt;\n\n    main() {\n        printf(\"Hello World\");\n    }\n\nThe point is to show the most basic syntax that will actually achieve a meaningful result. There are a couple of things I might not understand here at first glance, but not enough to create anxiety about the environment.\n\nThe rewritten line of Spring above fails at that objective. Even as an experienced developer, I'm not completely sure I know what that statement is doing:\n\n* What in the world are \"ok()\" and \"just()\" doing?\n\n* Does the body() statement simply use the parameters to set some properties of an object instance? Or does it send, as a response, a message with these data points, and then return a status code? Or does it simply inform the platform of the type of response that should be sent whenever it gets a message? Or... what?\n\n* If I were to incorporate some aspect of the request in this code - such as making the handler echo back the contents of the request - do I do that in ok(), or in body(), or in just(), or... what?\n\nSee what I mean? This squib of code is ambiguous. It doesn't instill confidence; it doesn't make me confident I can use it without breaking it, or running into weird syntax or type errors.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The only problem that that refactoring eliminates is the precompiler directive. Everything else I listed is still there. And in its place, you have a lambda expression that raises additional questions.&lt;/p&gt;\n\n&lt;p&gt;The purpose of Hello World is to inspire confidence - to give you something simple that works, that you can intuitively understand, and that you can tweak in small ways to achieve other results without breaking it. For example, here&amp;#39;s &amp;quot;Hello, World!&amp;quot; in C:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\n\nmain() {\n    printf(&amp;quot;Hello World&amp;quot;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The point is to show the most basic syntax that will actually achieve a meaningful result. There are a couple of things I might not understand here at first glance, but not enough to create anxiety about the environment.&lt;/p&gt;\n\n&lt;p&gt;The rewritten line of Spring above fails at that objective. Even as an experienced developer, I&amp;#39;m not completely sure I know what that statement is doing:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;What in the world are &amp;quot;ok()&amp;quot; and &amp;quot;just()&amp;quot; doing?&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Does the body() statement simply use the parameters to set some properties of an object instance? Or does it send, as a response, a message with these data points, and then return a status code? Or does it simply inform the platform of the type of response that should be sent whenever it gets a message? Or... what?&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If I were to incorporate some aspect of the request in this code - such as making the handler echo back the contents of the request - do I do that in ok(), or in body(), or in just(), or... what?&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;See what I mean? This squib of code is ambiguous. It doesn&amp;#39;t instill confidence; it doesn&amp;#39;t make me confident I can use it without breaking it, or running into weird syntax or type errors.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdw5ok", "score_hidden": false, "stickied": false, "created": 1492482623.0, "created_utc": 1492453823.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdv75i", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "alek_sys", "parent_id": "t1_dgdhti4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "...and that is why in the next paragraph it is re-written as\n\n    HandlerFunction hello = request -&gt; ServerResponse.ok().body(Mono.just(\"Hello\"), String.class);\n\nWhich is still imperfect, I agree, but not bad. Also, the whole 'builder' pattern here is to avoid manual creation of ServerResponse - which is still an option. Reference to a String class is a shame, but I doubt anyone from Java community will stand for generics implementation via type erasure here. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;...and that is why in the next paragraph it is re-written as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;HandlerFunction hello = request -&amp;gt; ServerResponse.ok().body(Mono.just(&amp;quot;Hello&amp;quot;), String.class);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which is still imperfect, I agree, but not bad. Also, the whole &amp;#39;builder&amp;#39; pattern here is to avoid manual creation of ServerResponse - which is still an option. Reference to a String class is a shame, but I doubt anyone from Java community will stand for generics implementation via type erasure here. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdv75i", "score_hidden": false, "stickied": false, "created": 1492481546.0, "created_utc": 1492452746.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdhti4", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "sfsdfd", "parent_id": "t1_dgcwme5", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Really? Here's the Hello World:\n\n    HandlerFunction hello = new HandlerFunction() {\n      @Override\n      public Mono handle(ServerRequest request) {\n          return ServerResponse.ok().body(Mono.just(\"Hello\"), String.class);\n      }\n    };\n\nYou really think that \"reads very nicely?\" This is a syntactic trainwreck. You've got: a compiler directive, references to two classes (ServerResponse and Mono), a random function called \"ok()\" and another one called \"just()\", and then - to top it off - a totally random reference to the String class.\n\nThe more you look, the worse it gets.\n\nI don't know what ok() does, but what if it doesn't return something that has a .body? And what does the body() function do?\n\nWhat does this function returning from this sequence of operations - can you identify its purpose, or even its type?\n\nAnd wouldn't it be better if the function actually did something, anything, with request? Rather than accepting it and then totally ignoring it? Yes, I understand it's there because the function is overriding a request handler that would typically make some use of it, but the dangling parameter makes this a bad example.\n\nI'm sure this example is much better than many even-more-poorly-designed frameworks, but that just demonstrates the poor readability standards in web programming.", "edited": 1492437826.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Really? Here&amp;#39;s the Hello World:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;HandlerFunction hello = new HandlerFunction() {\n  @Override\n  public Mono handle(ServerRequest request) {\n      return ServerResponse.ok().body(Mono.just(&amp;quot;Hello&amp;quot;), String.class);\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You really think that &amp;quot;reads very nicely?&amp;quot; This is a syntactic trainwreck. You&amp;#39;ve got: a compiler directive, references to two classes (ServerResponse and Mono), a random function called &amp;quot;ok()&amp;quot; and another one called &amp;quot;just()&amp;quot;, and then - to top it off - a totally random reference to the String class.&lt;/p&gt;\n\n&lt;p&gt;The more you look, the worse it gets.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t know what ok() does, but what if it doesn&amp;#39;t return something that has a .body? And what does the body() function do?&lt;/p&gt;\n\n&lt;p&gt;What does this function returning from this sequence of operations - can you identify its purpose, or even its type?&lt;/p&gt;\n\n&lt;p&gt;And wouldn&amp;#39;t it be better if the function actually did something, anything, with request? Rather than accepting it and then totally ignoring it? Yes, I understand it&amp;#39;s there because the function is overriding a request handler that would typically make some use of it, but the dangling parameter makes this a bad example.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m sure this example is much better than many even-more-poorly-designed frameworks, but that just demonstrates the poor readability standards in web programming.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdhti4", "score_hidden": false, "stickied": false, "created": 1492465669.0, "created_utc": 1492436869.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdxzmn", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rockum", "parent_id": "t1_dgcwme5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Sure the example looks clean, but how much code has to be read to figure out how to produce that example?  Do I need extensive knowledge of Spring?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sure the example looks clean, but how much code has to be read to figure out how to produce that example?  Do I need extensive knowledge of Spring?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdxzmn", "score_hidden": false, "stickied": false, "created": 1492484696.0, "created_utc": 1492455896.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcwme5", "gilded": 0, "archived": false, "score": 16, "report_reasons": null, "author": "Midnightblues", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "All kidding aside this looks very nice. Reads very nicely, very little magic. Similar to Go's `net/http` package, which I love.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;All kidding aside this looks very nice. Reads very nicely, very little magic. Similar to Go&amp;#39;s &lt;code&gt;net/http&lt;/code&gt; package, which I love.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcwme5", "score_hidden": false, "stickied": false, "created": 1492421470.0, "created_utc": 1492392670.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 16}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd3odo", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Furyhunter", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "this headline is bait lmao\n\n_(it is a good article)_", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;this headline is bait lmao&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;(it is a good article)&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd3odo", "score_hidden": false, "stickied": false, "created": 1492431729.0, "created_utc": 1492402929.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdcwnv", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "alek_sys", "parent_id": "t1_dgctbxc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Well, good thing is that Spring is not bound to Java - there is good support of Kotlin which is a very nice and concise JVM language. Spring 5 (and Functional Web) adds a lot of Kotlin helpers to make code look nice.\n ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, good thing is that Spring is not bound to Java - there is good support of Kotlin which is a very nice and concise JVM language. Spring 5 (and Functional Web) adds a lot of Kotlin helpers to make code look nice.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdcwnv", "score_hidden": false, "stickied": false, "created": 1492455797.0, "created_utc": 1492426997.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dgctbxc", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "Paradox", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Concise and Java are like oil and water", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Concise and Java are like oil and water&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgctbxc", "score_hidden": false, "stickied": false, "created": 1492417150.0, "created_utc": 1492388350.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd9n3u", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "philipwhiuk", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It's not bad. It looks a little Finagle esc.\n\nI reckon i still prefer Scala Play Framework on balance though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not bad. It looks a little Finagle esc.&lt;/p&gt;\n\n&lt;p&gt;I reckon i still prefer Scala Play Framework on balance though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd9n3u", "score_hidden": false, "stickied": false, "created": 1492444931.0, "created_utc": 1492416131.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgcy84e", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "davidk01", "parent_id": "t1_dgcx03h", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Ya I did. Even the author is kinda incredulous about the title. That's always a good sign.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ya I did. Even the author is kinda incredulous about the title. That&amp;#39;s always a good sign.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcy84e", "score_hidden": false, "stickied": false, "created": 1492423684.0, "created_utc": 1492394884.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdce0l", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "4vfz2ps34j", "parent_id": "t1_dgdc5pj", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Wait, you expect ??? on /r/programming?\n\nfish?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Wait, you expect ??? on &lt;a href=\"/r/programming\"&gt;/r/programming&lt;/a&gt;?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;fish?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdce0l", "score_hidden": false, "stickied": false, "created": 1492454230.0, "created_utc": 1492425430.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdc5pj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cenanozen", "parent_id": "t1_dgdans9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Which word did he?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which word did he?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdc5pj", "score_hidden": false, "stickied": false, "created": 1492453491.0, "created_utc": 1492424691.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdans9", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "4vfz2ps34j", "parent_id": "t1_dgcywk0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think you a whole word", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you a whole word&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdans9", "score_hidden": false, "stickied": false, "created": 1492448396.0, "created_utc": 1492419596.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdc25k", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "rghd", "parent_id": "t1_dgcywk0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Given that it Java and Spring, both of which are on the nerdrage list of this sub, I mostly expected a bunch of shitposting off-hand insults  from subpar programmers who don't actually know anything about them but want to virtue signal by repeated bandwagon positions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Given that it Java and Spring, both of which are on the nerdrage list of this sub, I mostly expected a bunch of shitposting off-hand insults  from subpar programmers who don&amp;#39;t actually know anything about them but want to virtue signal by repeated bandwagon positions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdc25k", "score_hidden": false, "stickied": false, "created": 1492453173.0, "created_utc": 1492424373.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcywk0", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "myringotomy", "parent_id": "t1_dgcx03h", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Wait, you expect on /r/programming?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wait, you expect on &lt;a href=\"/r/programming\"&gt;/r/programming&lt;/a&gt;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcywk0", "score_hidden": false, "stickied": false, "created": 1492424629.0, "created_utc": 1492395829.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcx03h", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "SimonGray", "parent_id": "t1_dgctgxg", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Did you even open the article? They address this right in the beginning. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did you even open the article? They address this right in the beginning. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcx03h", "score_hidden": false, "stickied": false, "created": 1492421979.0, "created_utc": 1492393179.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 17}}], "after": null, "before": null}}, "user_reports": [], "id": "dgctgxg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "davidk01", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Spring? Microframework? What?!?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring? Microframework? What?!?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgctgxg", "score_hidden": false, "stickied": false, "created": 1492417330.0, "created_utc": 1492388530.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdva0x", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "paul_h", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "My last Java microframework was SparkJava, my next one is [Jooby](https://github.com/jooby-project/jooby). Other than the Java8 syntax, this main-method embracing way should have been the way it was in 1997, when I first clapped eyes on Servlets/JSP. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My last Java microframework was SparkJava, my next one is &lt;a href=\"https://github.com/jooby-project/jooby\"&gt;Jooby&lt;/a&gt;. Other than the Java8 syntax, this main-method embracing way should have been the way it was in 1997, when I first clapped eyes on Servlets/JSP. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdva0x", "score_hidden": false, "stickied": false, "created": 1492481637.0, "created_utc": 1492452837.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dge0bbn", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tonywestonuk", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I made some code, using dependency injection, and a templating engine.  I deployed it in 2 seconds to a server, by copying a war file to a deployment directory.\n\nThis simple bit of code can handle 1800 requests / second.\n\nIt was deployed to a Raspberry Pi, running Apache TomEE.  If I deployed it to a 'real' server, it could probably do 10x as much.\n\nRemind me exactly why I need this?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I made some code, using dependency injection, and a templating engine.  I deployed it in 2 seconds to a server, by copying a war file to a deployment directory.&lt;/p&gt;\n\n&lt;p&gt;This simple bit of code can handle 1800 requests / second.&lt;/p&gt;\n\n&lt;p&gt;It was deployed to a Raspberry Pi, running Apache TomEE.  If I deployed it to a &amp;#39;real&amp;#39; server, it could probably do 10x as much.&lt;/p&gt;\n\n&lt;p&gt;Remind me exactly why I need this?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dge0bbn", "score_hidden": false, "stickied": false, "created": 1492487336.0, "created_utc": 1492458536.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd5ift", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "yogthos", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "lim (micro) \u2192 \u221e", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;lim (micro) \u2192 \u221e&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd5ift", "score_hidden": false, "stickied": false, "created": 1492435139.0, "created_utc": 1492406339.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdf6ri", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "alek_sys", "parent_id": "t1_dgddilw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Spring Boot is not really a *prior version*, it is here to stay. Spring Boot 2.0 based on Spring 5. Also, Spring Boot is not another framework, it is just a set of tools to help configure and run Spring apps easily and with minimum setup.\n\n384 Mb of RAM could be the case - but it all depends from the libraries and the application code - Java is hungry for memory. However Spring itself can run with just 32Mb of memory and it doesn't add massive overhead - there is a nice article from Dave Syer about [Spring memory usage](https://github.com/dsyer/spring-boot-memory-blog). The same is true for fat jar - there is a reason for 20 Mb JAR (again, 80Mb is not for Spring, it most likely because of libraries). And the reason is to have single deployment artefact - you don't even need a web-server to run it, it is executable by itself! So the only dependency is JRE which is quite good. However, if you not a fan of fat JARs - there is a solution for this as well. Besides 3rd party solutions (like Capsule) there is a Spring native option now - [Spring Thin Launcher](https://github.com/dsyer/spring-boot-thin-launcher)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring Boot is not really a &lt;em&gt;prior version&lt;/em&gt;, it is here to stay. Spring Boot 2.0 based on Spring 5. Also, Spring Boot is not another framework, it is just a set of tools to help configure and run Spring apps easily and with minimum setup.&lt;/p&gt;\n\n&lt;p&gt;384 Mb of RAM could be the case - but it all depends from the libraries and the application code - Java is hungry for memory. However Spring itself can run with just 32Mb of memory and it doesn&amp;#39;t add massive overhead - there is a nice article from Dave Syer about &lt;a href=\"https://github.com/dsyer/spring-boot-memory-blog\"&gt;Spring memory usage&lt;/a&gt;. The same is true for fat jar - there is a reason for 20 Mb JAR (again, 80Mb is not for Spring, it most likely because of libraries). And the reason is to have single deployment artefact - you don&amp;#39;t even need a web-server to run it, it is executable by itself! So the only dependency is JRE which is quite good. However, if you not a fan of fat JARs - there is a solution for this as well. Besides 3rd party solutions (like Capsule) there is a Spring native option now - &lt;a href=\"https://github.com/dsyer/spring-boot-thin-launcher\"&gt;Spring Thin Launcher&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdf6ri", "score_hidden": false, "stickied": false, "created": 1492461176.0, "created_utc": 1492432376.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgde5go", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Sun_Kami", "parent_id": "t1_dgddilw", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Why is that the wrong approach? Spring has a lot of features because it's supposed to do a lot, and support a lot.\n\nIf you want something light that just gives you routing and http, use Sparkjava or something.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why is that the wrong approach? Spring has a lot of features because it&amp;#39;s supposed to do a lot, and support a lot.&lt;/p&gt;\n\n&lt;p&gt;If you want something light that just gives you routing and http, use Sparkjava or something.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgde5go", "score_hidden": false, "stickied": false, "created": 1492458974.0, "created_utc": 1492430174.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgddilw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "BrightCandle", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Spring boot, there prior version of making a simple service requires 384MB of RAM to run an API that returns some basic JSON. It produces a fat jar that is at least 80MB. Spring roo required their IDE and it crashed repeatedly and was a disaster to work with, way too much magic in both.\n\nSo I hope they get this right but honestly there have been better options out there to spring for 10 years. Its still trying to be an all emcompassing solution rather than a library you use and that is the wrong approach. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Spring boot, there prior version of making a simple service requires 384MB of RAM to run an API that returns some basic JSON. It produces a fat jar that is at least 80MB. Spring roo required their IDE and it crashed repeatedly and was a disaster to work with, way too much magic in both.&lt;/p&gt;\n\n&lt;p&gt;So I hope they get this right but honestly there have been better options out there to spring for 10 years. Its still trying to be an all emcompassing solution rather than a library you use and that is the wrong approach. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgddilw", "score_hidden": false, "stickied": false, "created": 1492457433.0, "created_utc": 1492428633.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd1qnz", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "joequin", "parent_id": "t1_dgcyzk5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Not nearly so well. Go can scale down so much better because it uses aggregate types and can easily and store and operate on utf8 and ASCII strings. Java can't use aggregate types  or store utf8 or ASCII strings without manually writing functions around byte arrays. And that's just not reasonable the vast majority of times. ", "edited": 1492427788.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not nearly so well. Go can scale down so much better because it uses aggregate types and can easily and store and operate on utf8 and ASCII strings. Java can&amp;#39;t use aggregate types  or store utf8 or ASCII strings without manually writing functions around byte arrays. And that&amp;#39;s just not reasonable the vast majority of times. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd1qnz", "score_hidden": false, "stickied": false, "created": 1492428646.0, "created_utc": 1492399846.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdgabh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Sphax", "parent_id": "t1_dgddb2o", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Not the same JVM ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not the same JVM &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdgabh", "score_hidden": false, "stickied": false, "created": 1492463198.0, "created_utc": 1492434398.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgddb2o", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgcyzk5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgddb2o", "score_hidden": false, "stickied": false, "created": 1492456896.0, "created_utc": 1492428096.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcyzk5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "xymor", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "   I'm curious how small can a JVM process be? \n\n   Compared to go, you can build a service that fetches a record in a database and renders a json with 5-8mb of ram. How much can the JVM scale down? \n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious how small can a JVM process be? &lt;/p&gt;\n\n&lt;p&gt;Compared to go, you can build a service that fetches a record in a database and renders a json with 5-8mb of ram. How much can the JVM scale down? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcyzk5", "score_hidden": false, "stickied": false, "created": 1492424743.0, "created_utc": 1492395943.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdwvko", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "iszlail", "parent_id": "t1_dgdbuem", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Could you please expand a bit on this? seems intriguing \u263a\ufe0f", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Could you please expand a bit on this? seems intriguing \u263a\ufe0f&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdwvko", "score_hidden": false, "stickied": false, "created": 1492483437.0, "created_utc": 1492454637.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdbuem", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joequin", "parent_id": "t1_dgd4zqp", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It's route handlers don't pass in an object that you call to respond to a request. You respond to requests by returning from the route\u200b handling function. Because if that, you can't make asynchronous calls to databases or other services.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s route handlers don&amp;#39;t pass in an object that you call to respond to a request. You respond to requests by returning from the route\u200b handling function. Because if that, you can&amp;#39;t make asynchronous calls to databases or other services.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdbuem", "score_hidden": false, "stickied": false, "created": 1492452476.0, "created_utc": 1492423676.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd4zqp", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "eckyp", "parent_id": "t1_dgd07af", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What do you mean by Spark being \"synchronous only\"?\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean by Spark being &amp;quot;synchronous only&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd4zqp", "score_hidden": false, "stickied": false, "created": 1492434112.0, "created_utc": 1492405312.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd07af", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "joequin", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Vertx feels much more like a micro framework. It's the nice part of JavaScript/express with java's better performance, multithreading, better libraries, and static typing. It feels light weight and *non-magical*. Spring has its place, but if you don't need transactions, then I find vertx to be much nicer for rest services.\n\nSpark is also nice, but it's synchronous only. That's a deal breaker for my work. ", "edited": 1492397824.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Vertx feels much more like a micro framework. It&amp;#39;s the nice part of JavaScript/express with java&amp;#39;s better performance, multithreading, better libraries, and static typing. It feels light weight and &lt;em&gt;non-magical&lt;/em&gt;. Spring has its place, but if you don&amp;#39;t need transactions, then I find vertx to be much nicer for rest services.&lt;/p&gt;\n\n&lt;p&gt;Spark is also nice, but it&amp;#39;s synchronous only. That&amp;#39;s a deal breaker for my work. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd07af", "score_hidden": false, "stickied": false, "created": 1492426439.0, "created_utc": 1492397639.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgd4oe2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rydan", "parent_id": "t1_dgd0ql4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It does mention boot in the article.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It does mention boot in the article.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd4oe2", "score_hidden": false, "stickied": false, "created": 1492433502.0, "created_utc": 1492404702.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd0ql4", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "virtyx", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "How is this any better than Spring Roo or Spring Boot or the other seemingly dozens of attempts to make Spring not shitty? Even if it works, at some level you're going to have to get familiar with the Spring legacy cruft if you expect to be employable, or probably even just to do anything advanced.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How is this any better than Spring Roo or Spring Boot or the other seemingly dozens of attempts to make Spring not shitty? Even if it works, at some level you&amp;#39;re going to have to get familiar with the Spring legacy cruft if you expect to be employable, or probably even just to do anything advanced.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd0ql4", "score_hidden": false, "stickied": false, "created": 1492427196.0, "created_utc": 1492398396.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdcv44", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kersurk", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I've used pippo for my hobby project:\nhttp://www.pippo.ro/\n\nWith pebble templates (nothing to do with the watch) http://www.mitchellbosecke.com/pebble/home\n\nWith jOOQ for DB management.\n\nWith guice for dependency injection.\n\nWorked quite well so far, much lighter than Spring family.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve used pippo for my hobby project:\n&lt;a href=\"http://www.pippo.ro/\"&gt;http://www.pippo.ro/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;With pebble templates (nothing to do with the watch) &lt;a href=\"http://www.mitchellbosecke.com/pebble/home\"&gt;http://www.mitchellbosecke.com/pebble/home&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;With jOOQ for DB management.&lt;/p&gt;\n\n&lt;p&gt;With guice for dependency injection.&lt;/p&gt;\n\n&lt;p&gt;Worked quite well so far, much lighter than Spring family.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdcv44", "score_hidden": false, "stickied": false, "created": 1492455670.0, "created_utc": 1492426870.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdgu37", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kitd", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think Spring were caught cold by Vert.x and Ratpack. Node-esque async libraries are a much better fit for Java  microservices. Looks like this is their go at catching up.\n\nInteresting that they're all based on Netty. Netty is a pretty good basis for a microservice by itself. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think Spring were caught cold by Vert.x and Ratpack. Node-esque async libraries are a much better fit for Java  microservices. Looks like this is their go at catching up.&lt;/p&gt;\n\n&lt;p&gt;Interesting that they&amp;#39;re all based on Netty. Netty is a pretty good basis for a microservice by itself. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdgu37", "score_hidden": false, "stickied": false, "created": 1492464118.0, "created_utc": 1492435318.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgcy4xc", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "geodel", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "&gt; Spring team introduced a concept called Functional Web Framework \n\nHuh, I thought in Java world folks like only Dysfunctional Web Frameworks.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Spring team introduced a concept called Functional Web Framework &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Huh, I thought in Java world folks like only Dysfunctional Web Frameworks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcy4xc", "score_hidden": false, "stickied": false, "created": 1492423559.0, "created_utc": 1492394759.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65rdta", "likes": null, "replies": "", "user_reports": [], "id": "dgdztnw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "tonywestonuk", "parent_id": "t1_dgdyci0", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "And.... Here we are. In 2017, comming up with things like Ratpack and  Vert.x....\n\nIts not to say they are bad, they're great frameworks, small, lightweight, innovative.... But, I am sure the only reason they exists is because, of Pivotal. They dropped the ball, Newer lightweight frameworks needed to fill the void that was left after the rot set in.\n \nBut, its worse than that, they convinced everyone that JavaEE was rubbish, and then came out with crap like Spring....   And now springs trying to catch up, and prevent above frameworks getting anywhere because enterprises using spring will use what they know.   Pivotal, cutting off air supply of competitors.  Where have I heard this before....\n\nPivotal has done more to damage the java ecosystem than anyone else.....\n\n", "edited": 1492458244.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And.... Here we are. In 2017, comming up with things like Ratpack and  Vert.x....&lt;/p&gt;\n\n&lt;p&gt;Its not to say they are bad, they&amp;#39;re great frameworks, small, lightweight, innovative.... But, I am sure the only reason they exists is because, of Pivotal. They dropped the ball, Newer lightweight frameworks needed to fill the void that was left after the rot set in.&lt;/p&gt;\n\n&lt;p&gt;But, its worse than that, they convinced everyone that JavaEE was rubbish, and then came out with crap like Spring....   And now springs trying to catch up, and prevent above frameworks getting anywhere because enterprises using spring will use what they know.   Pivotal, cutting off air supply of competitors.  Where have I heard this before....&lt;/p&gt;\n\n&lt;p&gt;Pivotal has done more to damage the java ecosystem than anyone else.....&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdztnw", "score_hidden": false, "stickied": false, "created": 1492486786.0, "created_utc": 1492457986.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdyci0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rockum", "parent_id": "t1_dgdc9zo", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Don't you dare bad talk Spring.  Some developers have spent years learning it's in and outs, they are exhausted now, and you'll have to pry Spring from their cold dead code.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t you dare bad talk Spring.  Some developers have spent years learning it&amp;#39;s in and outs, they are exhausted now, and you&amp;#39;ll have to pry Spring from their cold dead code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdyci0", "score_hidden": false, "stickied": false, "created": 1492485104.0, "created_utc": 1492456304.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdc9zo", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "tonywestonuk", "parent_id": "t3_65rdta", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Oh gawd.... I read this article with a feeling I might vomit.  Pivotal, just fuck off... you've caused more problems with Java than anything.... YOU are the reason many people in /r/programming hate java, and consider it to be clunky and heavyweight..... the new COBOL.  You have done this.\n\nDouglas Adams once said:\n\n\u201cThe idea that Bill Gates has appeared like a knight in shining armor to lead all customers out of a mire of technological chaos neatly ignores the fact that it was he who, by peddling second-rate technology, led them into it in the first place.\u201d\n\n\nReplace 'Bill Gates' with 'Pivotal'.....and that is pretty much accurate. \n\n\nSpring has grown into the kind of monstrosity that it aimed to replace... J2EE.But, with JavaEE so much streamlined and easier to use and deploy, Spring is now a solution to a problem that no longer exists.", "edited": 1492425353.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh gawd.... I read this article with a feeling I might vomit.  Pivotal, just fuck off... you&amp;#39;ve caused more problems with Java than anything.... YOU are the reason many people in &lt;a href=\"/r/programming\"&gt;/r/programming&lt;/a&gt; hate java, and consider it to be clunky and heavyweight..... the new COBOL.  You have done this.&lt;/p&gt;\n\n&lt;p&gt;Douglas Adams once said:&lt;/p&gt;\n\n&lt;p&gt;\u201cThe idea that Bill Gates has appeared like a knight in shining armor to lead all customers out of a mire of technological chaos neatly ignores the fact that it was he who, by peddling second-rate technology, led them into it in the first place.\u201d&lt;/p&gt;\n\n&lt;p&gt;Replace &amp;#39;Bill Gates&amp;#39; with &amp;#39;Pivotal&amp;#39;.....and that is pretty much accurate. &lt;/p&gt;\n\n&lt;p&gt;Spring has grown into the kind of monstrosity that it aimed to replace... J2EE.But, with JavaEE so much streamlined and easier to use and deploy, Spring is now a solution to a problem that no longer exists.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdc9zo", "score_hidden": false, "stickied": false, "created": 1492453875.0, "created_utc": 1492425075.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}]