[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64w526", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 75, "report_reasons": null, "author": "michalg82", "saved": false, "mod_reports": [], "name": "t3_64w526", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/64w526/nidium_general_purpose_rendering_engine_for/", "num_reports": null, "locked": false, "stickied": false, "created": 1492001293.0, "url": "https://github.com/nidium/Nidium", "author_flair_text": null, "quarantine": false, "title": "Nidium - general purpose rendering engine for desktop apps and games written in JS, designed from scratch and has a small codebase written in C++", "created_utc": 1491972493.0, "distinguished": null, "media": null, "upvote_ratio": 0.83, "num_comments": 54, "visited": false, "subreddit_type": "public", "ups": 75}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5o5v8", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "cookiengineer", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "FUCK. Nidium is exactly what I need. Thanks so much, OP!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FUCK. Nidium is exactly what I need. Thanks so much, OP!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5o5v8", "score_hidden": false, "stickied": false, "created": 1492018102.0, "created_utc": 1491989302.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg79my2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg6f4op", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I like how it integrates with GTK and Cocoa nicely. I like that it supports simple networking. I like pretty much anything in it &lt;3", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like how it integrates with GTK and Cocoa nicely. I like that it supports simple networking. I like pretty much anything in it &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg79my2", "score_hidden": false, "stickied": false, "created": 1492095856.0, "created_utc": 1492067056.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6f4op", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "pnpbios", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I like the part about not needing node or npm to run things with it. Also having a smaller footprint than electron. I like how it's not HTML, it's something more focused for media. I like how it has threads. I like how it has a built in key value store database.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like the part about not needing node or npm to run things with it. Also having a smaller footprint than electron. I like how it&amp;#39;s not HTML, it&amp;#39;s something more focused for media. I like how it has threads. I like how it has a built in key value store database.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6f4op", "score_hidden": false, "stickied": false, "created": 1492054622.0, "created_utc": 1492025822.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg79w55", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg6r5u7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; this is not something (...) to deploy games for the browser\n\nTechnically it's a runtime that has a strong opinion on why DOM is bad from a performance standpoint (and I agree with them). They support canvas and webgl without DOM, CSS and neither HTML. So you can see it as an alternative (download exe here) to a game already developed for the browser - given it uses canvas or webgl.\n\nHowever, most libraries have some default algorithms in place to do some minor DOM work to get canvas to run, this is all in their [html5 shim(?)](https://github.com/nidium/Nidium/blob/f5de9d809d01c40b669a05eca78a8b151a2fbc87/src/Embed/html5.js) that just has some dummy methods to have 1:1 integration for phaser and the like. Stuff like XmlHttpRequest and document.createElement('canvas') are implemented there to keep compatibility, but they are all mostly single-liner wrapper methods.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;this is not something (...) to deploy games for the browser&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Technically it&amp;#39;s a runtime that has a strong opinion on why DOM is bad from a performance standpoint (and I agree with them). They support canvas and webgl without DOM, CSS and neither HTML. So you can see it as an alternative (download exe here) to a game already developed for the browser - given it uses canvas or webgl.&lt;/p&gt;\n\n&lt;p&gt;However, most libraries have some default algorithms in place to do some minor DOM work to get canvas to run, this is all in their &lt;a href=\"https://github.com/nidium/Nidium/blob/f5de9d809d01c40b669a05eca78a8b151a2fbc87/src/Embed/html5.js\"&gt;html5 shim(?)&lt;/a&gt; that just has some dummy methods to have 1:1 integration for phaser and the like. Stuff like XmlHttpRequest and document.createElement(&amp;#39;canvas&amp;#39;) are implemented there to keep compatibility, but they are all mostly single-liner wrapper methods.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg79w55", "score_hidden": false, "stickied": false, "created": 1492096538.0, "created_utc": 1492067738.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6r5u7", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "TheHillwoodMonkey", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Mmmmm, Skia! How much of its capability is exposed? I'm not familiar with the canvas API, but most canvas demos I've seen don't really achieve the sort of smooth vector goodness that skia is capable of.\n\nAlso, am I correct in thinking that this is *not* something that can be used to write and deploy games for the browser?\n\nPeople are fussing over Electron, but this looks more like a competitor for things like [luapower](https://luapower.com/) and [kha](http://kha.tech/).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mmmmm, Skia! How much of its capability is exposed? I&amp;#39;m not familiar with the canvas API, but most canvas demos I&amp;#39;ve seen don&amp;#39;t really achieve the sort of smooth vector goodness that skia is capable of.&lt;/p&gt;\n\n&lt;p&gt;Also, am I correct in thinking that this is &lt;em&gt;not&lt;/em&gt; something that can be used to write and deploy games for the browser?&lt;/p&gt;\n\n&lt;p&gt;People are fussing over Electron, but this looks more like a competitor for things like &lt;a href=\"https://luapower.com/\"&gt;luapower&lt;/a&gt; and &lt;a href=\"http://kha.tech/\"&gt;kha&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6r5u7", "score_hidden": false, "stickied": false, "created": 1492068389.0, "created_utc": 1492039589.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5mafy", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Chief_slapah0", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "LONG.LIVE.JAVASCRIPT", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;LONG.LIVE.JAVASCRIPT&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5mafy", "score_hidden": false, "stickied": false, "created": 1492012274.0, "created_utc": 1491983474.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg71t41", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg71nvx", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "For sure. I think react made a very positive contribution. But react itself likely won't last.\n\nI'm not confident that a WASM language would be worth the overhead, but I'm excited to see if it does or not", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For sure. I think react made a very positive contribution. But react itself likely won&amp;#39;t last.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not confident that a WASM language would be worth the overhead, but I&amp;#39;m excited to see if it does or not&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg71t41", "score_hidden": false, "stickied": false, "created": 1492081593.0, "created_utc": 1492052793.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg71nvx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg6y198", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Perhaps, although I suspect React-like architecture will have staying power. Javascript and the typed compile-to languages will be advancing in that time as well, and the node ecosystem will continue to grow and mature.\n\nI'm not saying it's impossible that a WASM language can challenge JS, but it seems very unlikely to me. It will need to have excellent, friction-free interop with existing codebases.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps, although I suspect React-like architecture will have staying power. Javascript and the typed compile-to languages will be advancing in that time as well, and the node ecosystem will continue to grow and mature.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not saying it&amp;#39;s impossible that a WASM language can challenge JS, but it seems very unlikely to me. It will need to have excellent, friction-free interop with existing codebases.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg71nvx", "score_hidden": false, "stickied": false, "created": 1492081399.0, "created_utc": 1492052599.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6y198", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg6std2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I mean yeah of course. But web assembly is still going to be half a decade before mainstream usage at least. The current generation of frameworks will be quite dated by then.\n\nSomeone is going to be working on a framework for web assembly within the next few years and that will mature and become popular in 5 years much like react took the same amount of time.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mean yeah of course. But web assembly is still going to be half a decade before mainstream usage at least. The current generation of frameworks will be quite dated by then.&lt;/p&gt;\n\n&lt;p&gt;Someone is going to be working on a framework for web assembly within the next few years and that will mature and become popular in 5 years much like react took the same amount of time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6y198", "score_hidden": false, "stickied": false, "created": 1492076791.0, "created_utc": 1492047991.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6std2", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg5uc2t", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; They die. They all die after about a year regardless.\n\nlol, no. All the mainstream frameworks have been around for years at this point. React may sound shiny and new to you but it's been around for half a decade now.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;They die. They all die after about a year regardless.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;lol, no. All the mainstream frameworks have been around for years at this point. React may sound shiny and new to you but it&amp;#39;s been around for half a decade now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6std2", "score_hidden": false, "stickied": false, "created": 1492070430.0, "created_utc": 1492041630.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5uc2t", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg5pqlf", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; What happens to all the web frontend frameworks we have?\n\nThey die. They all die after about a year regardless.\n\n&gt; Will the frameworks just be shipped as wasm precompiled \"blobs\"? But in that case isn't a crapload more difficult to debug problems and errors requiring you still have the overhead to have a js/wasm expert on the team?\n\nDo you need to have an assembly expert on your team now when writing C# applications? No because the debug symbols match to the source code allowing you to step through the source code. Considering this already works today with typescript etc I imagine we'll get the same for other languages too.\n\nA typical website should not take advantage of WASM. But we've been making more and more web applications instead of websites, with heavy load times being exchanged for reduced interaction with the server. WASM is a logical extension of that, where I could load an entire application within the browser. \n\nLanguages are going to have to be a bit careful about executable size, but considering blogs are about 5MB nowadays they don't even have to get that crazy. And CDNs for the framework itself will help reduce the impact even farther.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;What happens to all the web frontend frameworks we have?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;They die. They all die after about a year regardless.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Will the frameworks just be shipped as wasm precompiled &amp;quot;blobs&amp;quot;? But in that case isn&amp;#39;t a crapload more difficult to debug problems and errors requiring you still have the overhead to have a js/wasm expert on the team?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Do you need to have an assembly expert on your team now when writing C# applications? No because the debug symbols match to the source code allowing you to step through the source code. Considering this already works today with typescript etc I imagine we&amp;#39;ll get the same for other languages too.&lt;/p&gt;\n\n&lt;p&gt;A typical website should not take advantage of WASM. But we&amp;#39;ve been making more and more web applications instead of websites, with heavy load times being exchanged for reduced interaction with the server. WASM is a logical extension of that, where I could load an entire application within the browser. &lt;/p&gt;\n\n&lt;p&gt;Languages are going to have to be a bit careful about executable size, but considering blogs are about 5MB nowadays they don&amp;#39;t even have to get that crazy. And CDNs for the framework itself will help reduce the impact even farther.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5uc2t", "score_hidden": false, "stickied": false, "created": 1492031894.0, "created_utc": 1492003094.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pqlf", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "The_yulaow", "parent_id": "t1_dg5pbqm", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I don't really understand this. Let's say wasm gains traction and gets the DOM api, becoming a sort of low level language for browser as target compilation. What happens to all the web frontend frameworks we have? \n\nDo they get various version rewritten in every single language someone want to use (C#, Java, python, etc...)? If yes, well, it is a shitshow of duplication, let's ignore this solution.\n\nDoes everyone who want to use a specific language create a framework on purpose of it respecting the properties of that language (eg a F# framework for sure will have a different structure from a Java one)?\n\nWill the frameworks just be shipped as wasm precompiled \"blobs\"? But in that case isn't a crapload more difficult to debug problems and errors requiring you still have the overhead to have a js/wasm expert on the team?\n\n And also if they use typical js workflow for apis what happens when you want to interact with them with a language who doesn't (eg java classes to js first class functions?)", "edited": 1491994470.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t really understand this. Let&amp;#39;s say wasm gains traction and gets the DOM api, becoming a sort of low level language for browser as target compilation. What happens to all the web frontend frameworks we have? &lt;/p&gt;\n\n&lt;p&gt;Do they get various version rewritten in every single language someone want to use (C#, Java, python, etc...)? If yes, well, it is a shitshow of duplication, let&amp;#39;s ignore this solution.&lt;/p&gt;\n\n&lt;p&gt;Does everyone who want to use a specific language create a framework on purpose of it respecting the properties of that language (eg a F# framework for sure will have a different structure from a Java one)?&lt;/p&gt;\n\n&lt;p&gt;Will the frameworks just be shipped as wasm precompiled &amp;quot;blobs&amp;quot;? But in that case isn&amp;#39;t a crapload more difficult to debug problems and errors requiring you still have the overhead to have a js/wasm expert on the team?&lt;/p&gt;\n\n&lt;p&gt;And also if they use typical js workflow for apis what happens when you want to interact with them with a language who doesn&amp;#39;t (eg java classes to js first class functions?)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5pqlf", "score_hidden": false, "stickied": false, "created": 1492022877.0, "created_utc": 1491994077.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg6sgq7", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "spacejack2114", "parent_id": "t1_dg6bphz", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Javascript + types is already displacing Javascript, and that puts it on par with any other mainstream language. No one's going to switch from JS to Python.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript + types is already displacing Javascript, and that puts it on par with any other mainstream language. No one&amp;#39;s going to switch from JS to Python.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6sgq7", "score_hidden": false, "stickied": false, "created": 1492069984.0, "created_utc": 1492041184.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg6bphz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "celerym", "parent_id": "t1_dg5s26n", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I know there's a lot of JavaScript developers who would hate JavaScript to get displaced, but it will happen eventually. It is a matter of time. wasm wont have DOM access right away, but even that will be circumvented by just jumping back out to the JS layer (you can call JS functions from wasm). First it will be direct but extended CoffeScript to wasm or something like that, I imagine. After that people will naturally drop JS for the sheer convenience of using some syntax sugar. It just won't happen with people coding Python or something to wasm on day one as everyone imagines it. Thought who knows? The standard python modules are about 2MB when compiled into bytecode, the size of your average web page. You could cache that on people's browsers. So you could reasonably have some form of a Python to wasm compiler with a standard library even.", "edited": 1492023739.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know there&amp;#39;s a lot of JavaScript developers who would hate JavaScript to get displaced, but it will happen eventually. It is a matter of time. wasm wont have DOM access right away, but even that will be circumvented by just jumping back out to the JS layer (you can call JS functions from wasm). First it will be direct but extended CoffeScript to wasm or something like that, I imagine. After that people will naturally drop JS for the sheer convenience of using some syntax sugar. It just won&amp;#39;t happen with people coding Python or something to wasm on day one as everyone imagines it. Thought who knows? The standard python modules are about 2MB when compiled into bytecode, the size of your average web page. You could cache that on people&amp;#39;s browsers. So you could reasonably have some form of a Python to wasm compiler with a standard library even.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6bphz", "score_hidden": false, "stickied": false, "created": 1492051089.0, "created_utc": 1492022289.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg6z6mj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "wrosecrans", "parent_id": "t1_dg5s26n", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "JavaScript is popular in the way that a prison cafeteria is popular.  Sure, everybody eats there, but that doesn't automatically mean it has great food.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript is popular in the way that a prison cafeteria is popular.  Sure, everybody eats there, but that doesn&amp;#39;t automatically mean it has great food.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6z6mj", "score_hidden": false, "stickied": false, "created": 1492078233.0, "created_utc": 1492049433.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5s26n", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "ietsrondsofzo", "parent_id": "t1_dg5pbqm", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Javascript most likely won't lose its position anytime soon. The language is way too popular, and wasm will most likely be mostly used as a bytecode for languages such as C++.\n\nI seriously, highly doubt anyone will use wasm (or C for that matter) to scroll in a div fluently.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript most likely won&amp;#39;t lose its position anytime soon. The language is way too popular, and wasm will most likely be mostly used as a bytecode for languages such as C++.&lt;/p&gt;\n\n&lt;p&gt;I seriously, highly doubt anyone will use wasm (or C for that matter) to scroll in a div fluently.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5s26n", "score_hidden": false, "stickied": false, "created": 1492028153.0, "created_utc": 1491999353.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg75b1p", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheHeretic", "parent_id": "t1_dg64xpf", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I agree, JavaScript isn't going to go away in 5-10 years. It seems many people here are failing to realize that Javascript is evolving at a more rapid pace, ES9 or ES10 could reasonably be mainstream by the time WebASM gets native DOM support...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree, JavaScript isn&amp;#39;t going to go away in 5-10 years. It seems many people here are failing to realize that Javascript is evolving at a more rapid pace, ES9 or ES10 could reasonably be mainstream by the time WebASM gets native DOM support...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg75b1p", "score_hidden": false, "stickied": false, "created": 1492086763.0, "created_utc": 1492057963.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg64xpf", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "imhotap", "parent_id": "t1_dg5pbqm", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I don't believe JavaScript is going anywhere anytime soon, because of the *massive* investments into it in the last ten years (V8, Chakra, SpiderMonkey or whatever FF's latest engine is called), and its prevalence on the web, obviously. In fact, JavaScript is one of the most portable language of all times.\n\nHowever, I agree that web app frameworks have gone out of control lately. For its original use case (like a little interactivity here and a little bit of browser shimming there in an otherwise mostly static DOM), JavaScript works very well IMHO.\n\nJavaScript can even help to go back to a mostly-static web if desired, by implementing the original, declarative (yet syntactical) vision of a web of hyperlinked documents, however with client-side and injection-free content transclusion facilities that doesn't put such an approach at a disadvantage to AJAX in that no full-page reloads are needed (my project at http://sgmljs.net/docs/sgmlweb.html does exactly that).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t believe JavaScript is going anywhere anytime soon, because of the &lt;em&gt;massive&lt;/em&gt; investments into it in the last ten years (V8, Chakra, SpiderMonkey or whatever FF&amp;#39;s latest engine is called), and its prevalence on the web, obviously. In fact, JavaScript is one of the most portable language of all times.&lt;/p&gt;\n\n&lt;p&gt;However, I agree that web app frameworks have gone out of control lately. For its original use case (like a little interactivity here and a little bit of browser shimming there in an otherwise mostly static DOM), JavaScript works very well IMHO.&lt;/p&gt;\n\n&lt;p&gt;JavaScript can even help to go back to a mostly-static web if desired, by implementing the original, declarative (yet syntactical) vision of a web of hyperlinked documents, however with client-side and injection-free content transclusion facilities that doesn&amp;#39;t put such an approach at a disadvantage to AJAX in that no full-page reloads are needed (my project at &lt;a href=\"http://sgmljs.net/docs/sgmlweb.html\"&gt;http://sgmljs.net/docs/sgmlweb.html&lt;/a&gt; does exactly that).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg64xpf", "score_hidden": false, "stickied": false, "created": 1492044198.0, "created_utc": 1492015398.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg60lvj", "gilded": 0, "archived": false, "score": 19, "report_reasons": null, "author": "doom_Oo7", "parent_id": "t1_dg5qqi8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "it's because JS == Lua. or \"JS\" === \"Lua\". Or !\"JS\" !== !\"Lua\". I don't know.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;it&amp;#39;s because JS == Lua. or &amp;quot;JS&amp;quot; === &amp;quot;Lua&amp;quot;. Or !&amp;quot;JS&amp;quot; !== !&amp;quot;Lua&amp;quot;. I don&amp;#39;t know.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg60lvj", "score_hidden": false, "stickied": false, "created": 1492039558.0, "created_utc": 1492010758.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 19}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qqi8", "gilded": 0, "archived": false, "score": 15, "report_reasons": null, "author": "shevegen", "parent_id": "t1_dg5pltc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "\"[...] If you hate JS, then you must also hate Lua [...]\"\n\nCome again?\n\nWhere is the logic?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;[...] If you hate JS, then you must also hate Lua [...]&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Come again?&lt;/p&gt;\n\n&lt;p&gt;Where is the logic?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qqi8", "score_hidden": false, "stickied": false, "created": 1492025403.0, "created_utc": 1491996603.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 15}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5tpjn", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "mirhagk", "parent_id": "t1_dg5pltc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; other embedded scripting engine efforts.\n\nThis is the point right here. Javascript is a great embedded scripting language. It's a terrible application development language.\n\nBack when our websites were HTML with a bit of javascript for a tiny bit of interaction it was great. Now that people develop entire applications on the client side with complex MVVM frameworks javascript has outgrown it's usefulness. \n\nTypescript fixes a lot of javascript's problems, but it's still far from perfect.\n\nI actually think the HTML/CSS/DOM APIs are pretty good. They have lots of weird corner cases and missing features but all-in-all they are pretty well designed.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;other embedded scripting engine efforts.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is the point right here. Javascript is a great embedded scripting language. It&amp;#39;s a terrible application development language.&lt;/p&gt;\n\n&lt;p&gt;Back when our websites were HTML with a bit of javascript for a tiny bit of interaction it was great. Now that people develop entire applications on the client side with complex MVVM frameworks javascript has outgrown it&amp;#39;s usefulness. &lt;/p&gt;\n\n&lt;p&gt;Typescript fixes a lot of javascript&amp;#39;s problems, but it&amp;#39;s still far from perfect.&lt;/p&gt;\n\n&lt;p&gt;I actually think the HTML/CSS/DOM APIs are pretty good. They have lots of weird corner cases and missing features but all-in-all they are pretty well designed.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5tpjn", "score_hidden": false, "stickied": false, "created": 1492030941.0, "created_utc": 1492002141.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5u396", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "ozzeh", "parent_id": "t1_dg5qftq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt;\"Lua\" (pronounced LOO-ah) means \"Moon\" in Portuguese. As such, it is neither an acronym nor an abbreviation, but a noun. More specifically, \"Lua\" is a name, the name of the Earth's moon and the name of the language. Like most names, it should be written in lower case with an initial capital, that is, \"Lua\". Please do not write it as \"LUA\", which is both ugly and confusing, because then it becomes an acronym with different meanings for different people. So, please, write \"Lua\" right!\n\nhttps://www.lua.org/about.html", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&amp;quot;Lua&amp;quot; (pronounced LOO-ah) means &amp;quot;Moon&amp;quot; in Portuguese. As such, it is neither an acronym nor an abbreviation, but a noun. More specifically, &amp;quot;Lua&amp;quot; is a name, the name of the Earth&amp;#39;s moon and the name of the language. Like most names, it should be written in lower case with an initial capital, that is, &amp;quot;Lua&amp;quot;. Please do not write it as &amp;quot;LUA&amp;quot;, which is both ugly and confusing, because then it becomes an acronym with different meanings for different people. So, please, write &amp;quot;Lua&amp;quot; right!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.lua.org/about.html\"&gt;https://www.lua.org/about.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5u396", "score_hidden": false, "stickied": false, "created": 1492031532.0, "created_utc": 1492002732.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5raft", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Futakitty", "parent_id": "t1_dg5qftq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; LUA is made specifically for game scripting\n\nI think you'll need a source on that, because [Lua history](https://www.lua.org/history.html) doesn't seem to agree.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;LUA is made specifically for game scripting&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I think you&amp;#39;ll need a source on that, because &lt;a href=\"https://www.lua.org/history.html\"&gt;Lua history&lt;/a&gt; doesn&amp;#39;t seem to agree.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5raft", "score_hidden": false, "stickied": false, "created": 1492026609.0, "created_utc": 1491997809.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg6n0np", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg5qx77", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "There's also jerryscript, but that does not mean it will be performant code. U know.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s also jerryscript, but that does not mean it will be performant code. U know.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6n0np", "score_hidden": false, "stickied": false, "created": 1492063237.0, "created_utc": 1492034437.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qx77", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "CptCap", "parent_id": "t1_dg5qftq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can also find full Lua implementations for less than 100k LoC. This is a big advantage when embedding, especially over JS.", "edited": 1492039278.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can also find full Lua implementations for less than 100k LoC. This is a big advantage when embedding, especially over JS.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qx77", "score_hidden": false, "stickied": false, "created": 1492025818.0, "created_utc": 1491997018.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg62adn", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kralyk", "parent_id": "t1_dg5ztol", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yeah, well, I'm not saying TS is the grand solution to all the problems. I see it as a bit of a step forwards from JS, even if it's just a small-ish improvement.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, well, I&amp;#39;m not saying TS is the grand solution to all the problems. I see it as a bit of a step forwards from JS, even if it&amp;#39;s just a small-ish improvement.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg62adn", "score_hidden": false, "stickied": false, "created": 1492041401.0, "created_utc": 1492012601.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ztol", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Uncaffeinated", "parent_id": "t1_dg5yr4k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "TypeScript is just JS with an unsound static type checker bolted on top. It's more like a linter than a new language.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TypeScript is just JS with an unsound static type checker bolted on top. It&amp;#39;s more like a linter than a new language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ztol", "score_hidden": false, "stickied": false, "created": 1492038695.0, "created_utc": 1492009895.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg635dl", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "kralyk", "parent_id": "t1_dg604fo", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; It's bad, it's worse, but WHY do you not agree?\n\nI disagreed mainly with the assumption that if someone doesn't like `this` it's because they don't understand how it works in JS.\n\n&gt; Just stay in C++ or whatever you like if you don't like the language\n\nI can actually code in JS just fine, thank you very much. I'm just not in denial about it. It's a mediocre language that has gotten very popular due to its support by browsers, that's all, nothing else to it.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;It&amp;#39;s bad, it&amp;#39;s worse, but WHY do you not agree?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I disagreed mainly with the assumption that if someone doesn&amp;#39;t like &lt;code&gt;this&lt;/code&gt; it&amp;#39;s because they don&amp;#39;t understand how it works in JS.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Just stay in C++ or whatever you like if you don&amp;#39;t like the language&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I can actually code in JS just fine, thank you very much. I&amp;#39;m just not in denial about it. It&amp;#39;s a mediocre language that has gotten very popular due to its support by browsers, that&amp;#39;s all, nothing else to it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg635dl", "score_hidden": false, "stickied": false, "created": 1492042331.0, "created_utc": 1492013531.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg604fo", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg5yr4k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Ask yourself why.\n\nI also heard that 99% of programmers on the planet can write Java. So why bother inventing other ideas when we have C and Java to get the job done?\n\nThat statement is just as far fetched as yours while being probably true because both languages are taught on every single University on the planet as an entry language.\n\n&gt; This could more or less be said of any language.\n\nC'mon man, stay objective. This is getting ridiculously subjective and counterproductive to the discussion. What's to argue against in your comment? It's bad, it's worse, but WHY do you not agree? Do you want templates and types because you like C++ or what's the point? Just stay in C++ or whatever you like if you don't like the language and can't make productive suggestions.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Ask yourself why.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I also heard that 99% of programmers on the planet can write Java. So why bother inventing other ideas when we have C and Java to get the job done?&lt;/p&gt;\n\n&lt;p&gt;That statement is just as far fetched as yours while being probably true because both languages are taught on every single University on the planet as an entry language.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;This could more or less be said of any language.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;C&amp;#39;mon man, stay objective. This is getting ridiculously subjective and counterproductive to the discussion. What&amp;#39;s to argue against in your comment? It&amp;#39;s bad, it&amp;#39;s worse, but WHY do you not agree? Do you want templates and types because you like C++ or what&amp;#39;s the point? Just stay in C++ or whatever you like if you don&amp;#39;t like the language and can&amp;#39;t make productive suggestions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg604fo", "score_hidden": false, "stickied": false, "created": 1492039027.0, "created_utc": 1492010227.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5yr4k", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "kralyk", "parent_id": "t1_dg5qmfb", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; bind/call/apply are the fundamentals of the ES language. If you don't know what you are doing or if you think you need only block scope and arrow functions; you probably haven't understood how ES works in the first place.\n\nThis is brilliant. _You don't like JavaScript? Then clearly you don't understand how it works._\n\nThe concetps of JavaScript's this/bind/call/apply are not hard to understand and looking at some code it's always possible to figure out what `this` is in a certain function and when. It's just an _incredibly_ pointless exercise. Having to go through the exercise of figuring out `this` every now and then is just a huge waste of cycles of everyone involved.\n\n&gt; JS is a superb language when you use a proper composite pattern, as it's made for that. It can be clear, readable, and IS made for game scripting if you use it the right way.\n\nThis could more or less be said of any language. This is usually a typical defence for PHP, that the language is great, you just need to use it correctly. It is usually true, but it says nothing of quality of the language. Heck, you could probably develop good coding standards, patterns, linters and whatnot for Brainfuck and it could make programming in it feasible.\n\nMeanwhile, people have been looking for _years_ to replace JS with something more sane. Ask yourself why. Recently TypeScript seems to be gettin traction, and that's a good thing.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;bind/call/apply are the fundamentals of the ES language. If you don&amp;#39;t know what you are doing or if you think you need only block scope and arrow functions; you probably haven&amp;#39;t understood how ES works in the first place.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is brilliant. &lt;em&gt;You don&amp;#39;t like JavaScript? Then clearly you don&amp;#39;t understand how it works.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;The concetps of JavaScript&amp;#39;s this/bind/call/apply are not hard to understand and looking at some code it&amp;#39;s always possible to figure out what &lt;code&gt;this&lt;/code&gt; is in a certain function and when. It&amp;#39;s just an &lt;em&gt;incredibly&lt;/em&gt; pointless exercise. Having to go through the exercise of figuring out &lt;code&gt;this&lt;/code&gt; every now and then is just a huge waste of cycles of everyone involved.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;JS is a superb language when you use a proper composite pattern, as it&amp;#39;s made for that. It can be clear, readable, and IS made for game scripting if you use it the right way.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This could more or less be said of any language. This is usually a typical defence for PHP, that the language is great, you just need to use it correctly. It is usually true, but it says nothing of quality of the language. Heck, you could probably develop good coding standards, patterns, linters and whatnot for Brainfuck and it could make programming in it feasible.&lt;/p&gt;\n\n&lt;p&gt;Meanwhile, people have been looking for &lt;em&gt;years&lt;/em&gt; to replace JS with something more sane. Ask yourself why. Recently TypeScript seems to be gettin traction, and that&amp;#39;s a good thing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5yr4k", "score_hidden": false, "stickied": false, "created": 1492037487.0, "created_utc": 1492008687.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg7a204", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg79wps", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "From my point of view, Go makes totally sense for all things backend and webservers. The Go libraries are very strong and automated when it comes to REST. Rust is for me mostly the replacement for C-type development when I need to build something locally as a system-integrated app or library.\n\nWhat I kind of don't like at the moment is that you pretty much always end up writing a lil wrapper library in Rust for something that is implemented in C - which is kind of a bit suboptimal :D", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From my point of view, Go makes totally sense for all things backend and webservers. The Go libraries are very strong and automated when it comes to REST. Rust is for me mostly the replacement for C-type development when I need to build something locally as a system-integrated app or library.&lt;/p&gt;\n\n&lt;p&gt;What I kind of don&amp;#39;t like at the moment is that you pretty much always end up writing a lil wrapper library in Rust for something that is implemented in C - which is kind of a bit suboptimal :D&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg7a204", "score_hidden": false, "stickied": false, "created": 1492096987.0, "created_utc": 1492068187.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg79wps", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "repeatedly_once", "parent_id": "t1_dg79r9r", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; ES20xx\n\nI do love the type inference in Rust. I might give it a go. I was town between that and Go. \nI've fallen in love with ES2016 and Rambda.js - big fan of the functional style.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;ES20xx&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I do love the type inference in Rust. I might give it a go. I was town between that and Go. \nI&amp;#39;ve fallen in love with ES2016 and Rambda.js - big fan of the functional style.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg79wps", "score_hidden": false, "stickied": false, "created": 1492096581.0, "created_utc": 1492067781.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg79r9r", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg5tn4k", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "ES20xx is probably my favorite language together with Rust for native stuff. They are a hell of a combination that can get pretty much any job done in a quick and reliable manner.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ES20xx is probably my favorite language together with Rust for native stuff. They are a hell of a combination that can get pretty much any job done in a quick and reliable manner.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg79r9r", "score_hidden": false, "stickied": false, "created": 1492096175.0, "created_utc": 1492067375.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5tn4k", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "repeatedly_once", "parent_id": "t1_dg5tl0v", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Haha, it's probably one of, if not, my favourite language. I must have some very serious problems.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha, it&amp;#39;s probably one of, if not, my favourite language. I must have some very serious problems.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5tn4k", "score_hidden": false, "stickied": false, "created": 1492030835.0, "created_utc": 1492002035.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5zpki", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Uncaffeinated", "parent_id": "t1_dg5tl0v", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "JS has its share of problems, but it also has nice features. For example, function definitions are an expression, unlike in Python.\n\nAnyway, once you learn which features to avoid, it's actually not that bad.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JS has its share of problems, but it also has nice features. For example, function definitions are an expression, unlike in Python.&lt;/p&gt;\n\n&lt;p&gt;Anyway, once you learn which features to avoid, it&amp;#39;s actually not that bad.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5zpki", "score_hidden": false, "stickied": false, "created": 1492038569.0, "created_utc": 1492009769.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5tl0v", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "Sarcastinator", "parent_id": "t1_dg5quo5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm not confused by JavaScript. I just think it's a terrible language. You need to be seriously scarred to enjoy it. It's downright painful to work with.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not confused by JavaScript. I just think it&amp;#39;s a terrible language. You need to be seriously scarred to enjoy it. It&amp;#39;s downright painful to work with.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5tl0v", "score_hidden": false, "stickied": false, "created": 1492030742.0, "created_utc": 1492001942.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5r5fr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "thank_mr_skeltal_bot", "parent_id": "t1_dg5r5ee", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "yo get the updoots[^*](https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;yo get the updoots&lt;a href=\"https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/\"&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5r5fr", "score_hidden": false, "stickied": false, "created": 1492026316.0, "created_utc": 1491997516.0, "depth": 9, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5r5ee", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dg5r3yg", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5r5ee", "score_hidden": false, "stickied": false, "created": 1492026314.0, "created_utc": 1491997514.0, "depth": 8, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5r3yg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "thank_mr_skeltal_bot", "parent_id": "t1_dg5r3x8", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "doot doot[^*](https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;doot doot&lt;a href=\"https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/\"&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5r3yg", "score_hidden": false, "stickied": false, "created": 1492026228.0, "created_utc": 1491997428.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5r3x8", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dg5qur9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5r3x8", "score_hidden": false, "stickied": false, "created": 1492026226.0, "created_utc": 1491997426.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qur9", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "thank_mr_skeltal_bot", "parent_id": "t1_dg5quo5", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "also thank mr skeltal for good bones and calcium[^*](https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;also thank mr skeltal for good bones and calcium&lt;a href=\"https://www.reddit.com/r/tmsbmeta/comments/5xnirl/about_thankmrskeltalbot/\"&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qur9", "score_hidden": false, "stickied": false, "created": 1492025668.0, "created_utc": 1491996868.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5quo5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "repeatedly_once", "parent_id": "t1_dg5qmfb", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Thank for you for saying this. I get frustrated with the hate for JS from people who don't know how to use it properly. They say it's full of quirks etc. When they say that what I translate it to is : 'I don't know the fundamentals of JS'. \n\nI used to be confused by it but since I took the time to learn it, I've not come across anything that I've thought 'WTF is happening here, I have no idea'. I still get WTF moments but I usually have an idea exactly what's going on.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank for you for saying this. I get frustrated with the hate for JS from people who don&amp;#39;t know how to use it properly. They say it&amp;#39;s full of quirks etc. When they say that what I translate it to is : &amp;#39;I don&amp;#39;t know the fundamentals of JS&amp;#39;. &lt;/p&gt;\n\n&lt;p&gt;I used to be confused by it but since I took the time to learn it, I&amp;#39;ve not come across anything that I&amp;#39;ve thought &amp;#39;WTF is happening here, I have no idea&amp;#39;. I still get WTF moments but I usually have an idea exactly what&amp;#39;s going on.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5quo5", "score_hidden": false, "stickied": false, "created": 1492025663.0, "created_utc": 1491996863.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qmfb", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cookiengineer", "parent_id": "t1_dg5qftq", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "&gt; what the hell does this mean in this context?\n\nbind/call/apply are the fundamentals of the ES language. If you don't know what you are doing or if you think you need only block scope and arrow functions; you probably haven't understood how ES works in the first place.\n\nI don't want to rage about LUA, I can only fundamentally speak for JS. JS is a superb language when you use a proper composite pattern, as it's made for that. It can be clear, readable, and IS made for game scripting if you use it the right way. I'm not talking about NPM-style development here.\n\nSource: I was a core dev of the engine at STG, we built a JS engine and cross-compiled it to all other platforms back in the days at Zynga. It had support for native OpenGL, Flash (with stage3d), WebGL, cocos-2d(x) and many more platforms, all delivered to by a single codebase in JS. Before that we tried pretty much all there is from C# to Haxe. All didn't get the job done properly and were limited in either featureset or language.\n", "edited": 1491998663.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;what the hell does this mean in this context?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;bind/call/apply are the fundamentals of the ES language. If you don&amp;#39;t know what you are doing or if you think you need only block scope and arrow functions; you probably haven&amp;#39;t understood how ES works in the first place.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t want to rage about LUA, I can only fundamentally speak for JS. JS is a superb language when you use a proper composite pattern, as it&amp;#39;s made for that. It can be clear, readable, and IS made for game scripting if you use it the right way. I&amp;#39;m not talking about NPM-style development here.&lt;/p&gt;\n\n&lt;p&gt;Source: I was a core dev of the engine at STG, we built a JS engine and cross-compiled it to all other platforms back in the days at Zynga. It had support for native OpenGL, Flash (with stage3d), WebGL, cocos-2d(x) and many more platforms, all delivered to by a single codebase in JS. Before that we tried pretty much all there is from C# to Haxe. All didn&amp;#39;t get the job done properly and were limited in either featureset or language.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qmfb", "score_hidden": false, "stickied": false, "created": 1492025138.0, "created_utc": 1491996338.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5zt9y", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "papers_", "parent_id": "t1_dg5zfnf", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Fair enough.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fair enough.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5zt9y", "score_hidden": false, "stickied": false, "created": 1492038683.0, "created_utc": 1492009883.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5zfnf", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "Sarcastinator", "parent_id": "t1_dg5ypd7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I used `this` as an example of poor design in JavaScript. I could also point to the fact that `\"1\" + 2 === \"12\"` but `\"1\" - 2 === -1` or the fact that many operations on `undefined` will propagate rather than fail. Or that `typeof` is a completely broken concept. `for...in` and `for...of` is pants-on-head. For a language designed for UI work it is astonishingly bad at string manipulation. There is a separate keyword to remove elements from an object, but not for arrays. You can only remove items by index which makes it very awkward to use without supporting libraries. Also `slice` and `splice`? What the hell?\n\nThe designers of JavaScript thought it necessary to make the Date class non-Y2K compliant in 1995 which I think tells a lot.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I used &lt;code&gt;this&lt;/code&gt; as an example of poor design in JavaScript. I could also point to the fact that &lt;code&gt;&amp;quot;1&amp;quot; + 2 === &amp;quot;12&amp;quot;&lt;/code&gt; but &lt;code&gt;&amp;quot;1&amp;quot; - 2 === -1&lt;/code&gt; or the fact that many operations on &lt;code&gt;undefined&lt;/code&gt; will propagate rather than fail. Or that &lt;code&gt;typeof&lt;/code&gt; is a completely broken concept. &lt;code&gt;for...in&lt;/code&gt; and &lt;code&gt;for...of&lt;/code&gt; is pants-on-head. For a language designed for UI work it is astonishingly bad at string manipulation. There is a separate keyword to remove elements from an object, but not for arrays. You can only remove items by index which makes it very awkward to use without supporting libraries. Also &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;splice&lt;/code&gt;? What the hell?&lt;/p&gt;\n\n&lt;p&gt;The designers of JavaScript thought it necessary to make the Date class non-Y2K compliant in 1995 which I think tells a lot.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5zfnf", "score_hidden": false, "stickied": false, "created": 1492038260.0, "created_utc": 1492009460.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5ypd7", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "papers_", "parent_id": "t1_dg5qftq", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You don't have to use `this`\n\n    class Foo {\n        constructor(props) {\n            this.name = props.name\n        }\n    }\n\n    const Foo = (props) =&gt; {\n        const { name } = props\n        return Object.freeze({ name })\n    }\n\nNo `this` no problem.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t have to use &lt;code&gt;this&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Foo {\n    constructor(props) {\n        this.name = props.name\n    }\n}\n\nconst Foo = (props) =&amp;gt; {\n    const { name } = props\n    return Object.freeze({ name })\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No &lt;code&gt;this&lt;/code&gt; no problem.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5ypd7", "score_hidden": false, "stickied": false, "created": 1492037431.0, "created_utc": 1492008631.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5qftq", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "Sarcastinator", "parent_id": "t1_dg5pltc", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "LUA has coroutines and there is no \"what the hell does `this` mean in this context?\". It also has supports tuples and deconstruction since forever.\n\nLUA is made specifically for game scripting. JavaScript is not.\n\nI'm not a particularly huge fan of LUA, but I've wrangled enough JS to say that it's a broken language. It's only popular because we've been forced to use it, and now lots of developers doesn't know anything else.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;LUA has coroutines and there is no &amp;quot;what the hell does &lt;code&gt;this&lt;/code&gt; mean in this context?&amp;quot;. It also has supports tuples and deconstruction since forever.&lt;/p&gt;\n\n&lt;p&gt;LUA is made specifically for game scripting. JavaScript is not.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not a particularly huge fan of LUA, but I&amp;#39;ve wrangled enough JS to say that it&amp;#39;s a broken language. It&amp;#39;s only popular because we&amp;#39;ve been forced to use it, and now lots of developers doesn&amp;#39;t know anything else.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qftq", "score_hidden": false, "stickied": false, "created": 1492024703.0, "created_utc": 1491995903.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 11}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pltc", "gilded": 0, "archived": false, "score": -5, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dg5pbqm", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "[deleted]", "edited": 1492067171.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5pltc", "score_hidden": false, "stickied": false, "created": 1492022508.0, "created_utc": 1491993708.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5pbqm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "peolorat", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Let's keep javascript on the web please. It's gonna be dead soon anyways when wasm gains traction. Man I wish we could go back to the time browsers and browser engines were for reading formatted text and not the crazy monstrosities they are now.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s keep javascript on the web please. It&amp;#39;s gonna be dead soon anyways when wasm gains traction. Man I wish we could go back to the time browsers and browser engines were for reading formatted text and not the crazy monstrosities they are now.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5pbqm", "score_hidden": false, "stickied": false, "created": 1492021692.0, "created_utc": 1491992892.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5k1v8", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "michalg82", "parent_id": "t1_dg5jmfr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I think it's dedicated only for canvas / webgl apps / games. Not apps using HTML / DOM / Css. Too much problems porting them.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s dedicated only for canvas / webgl apps / games. Not apps using HTML / DOM / Css. Too much problems porting them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5k1v8", "score_hidden": false, "stickied": false, "created": 1492006366.0, "created_utc": 1491977566.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg61jmu", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "SaikoGekido", "parent_id": "t1_dg5jmfr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.\n\nWhich browser? One of the big problems with web development is that each browser has special rules for various CSS and DOM elements. There are quite a lot of cases in normal web development where you'll run into a situation with one of these and have to make a decision. Although, the only way you'll know is by testing against the various browser engines. Since Nidium is just one browser engine, that's actually a lot easier to work with. You only test against Nidium.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Which browser? One of the big problems with web development is that each browser has special rules for various CSS and DOM elements. There are quite a lot of cases in normal web development where you&amp;#39;ll run into a situation with one of these and have to make a decision. Although, the only way you&amp;#39;ll know is by testing against the various browser engines. Since Nidium is just one browser engine, that&amp;#39;s actually a lot easier to work with. You only test against Nidium.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg61jmu", "score_hidden": false, "stickied": false, "created": 1492040591.0, "created_utc": 1492011791.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5n0rz", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "diggr-roguelike", "parent_id": "t1_dg5jmfr", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.\n\nMaybe you should have read the FA, because behaving differently than a browser is their whole shtick.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Maybe you should have read the FA, because behaving differently than a browser is their whole shtick.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5n0rz", "score_hidden": false, "stickied": false, "created": 1492014485.0, "created_utc": 1491985685.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 9}}], "after": null, "before": null}}, "user_reports": [], "id": "dg5jmfr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "maxxi123", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "That's a lot of work just be slightly different/smaller from Electron tbh. Can't I just use WebGL and Canvas in Electron too? Same with c++ access.\nThen having a custom html hybrid seems really weird. I mean I understand the decision and I'm sure it helps but you probably have to document really really really well what it supports and how exactly, because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s a lot of work just be slightly different/smaller from Electron tbh. Can&amp;#39;t I just use WebGL and Canvas in Electron too? Same with c++ access.\nThen having a custom html hybrid seems really weird. I mean I understand the decision and I&amp;#39;m sure it helps but you probably have to document really really really well what it supports and how exactly, because if I ever try Nidium and I run into some CSS or HTML that behaves differently than on a browser I think I would drop this like a hot potato.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5jmfr", "score_hidden": false, "stickied": false, "created": 1492005365.0, "created_utc": 1491976565.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5wwzb", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "NeedAWaifu", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "woah, its like dream come true. No need to use electron to package javascript game again. Sadly, no windows version...", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;woah, its like dream come true. No need to use electron to package javascript game again. Sadly, no windows version...&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5wwzb", "score_hidden": false, "stickied": false, "created": 1492035339.0, "created_utc": 1492006539.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg70zhp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kwh71787", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Wow I've been looking for something like this. TY", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow I&amp;#39;ve been looking for something like this. TY&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg70zhp", "score_hidden": false, "stickied": false, "created": 1492080504.0, "created_utc": 1492051704.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg5qq0m", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "shevegen", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "Omg ... now javascript in non-browser games ...\n\nWill this insanity never stop?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Omg ... now javascript in non-browser games ...&lt;/p&gt;\n\n&lt;p&gt;Will this insanity never stop?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg5qq0m", "score_hidden": false, "stickied": false, "created": 1492025370.0, "created_utc": 1491996570.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_64w526", "likes": null, "replies": "", "user_reports": [], "id": "dg6dq9w", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "paul_h", "parent_id": "t3_64w526", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "No screenshots on www.nidium.com or in the GH readme. A curious \"5 second rule\" violation for a tech that creates UIs.  I can't click through to the video, as I'm in work and that domain is blocked. Will check it out later, of course.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No screenshots on &lt;a href=\"http://www.nidium.com\"&gt;www.nidium.com&lt;/a&gt; or in the GH readme. A curious &amp;quot;5 second rule&amp;quot; violation for a tech that creates UIs.  I can&amp;#39;t click through to the video, as I&amp;#39;m in work and that domain is blocked. Will check it out later, of course.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dg6dq9w", "score_hidden": false, "stickied": false, "created": 1492053184.0, "created_utc": 1492024384.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}]