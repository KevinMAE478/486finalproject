[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65jol7", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 31, "report_reasons": null, "author": "bik1230", "saved": false, "mod_reports": [], "name": "t3_65jol7", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65jol7/iota_common_lispemitting_backend_for_llvm_xpost/", "num_reports": null, "locked": false, "stickied": false, "created": 1492299524.0, "url": "https://github.com/froggey/Iota", "author_flair_text": null, "quarantine": false, "title": "Iota - Common Lisp-emitting backend for LLVM [x-post r/lisp]", "created_utc": 1492270724.0, "distinguished": null, "media": null, "upvote_ratio": 0.74, "num_comments": 12, "visited": false, "subreddit_type": "public", "ups": 31}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": "", "user_reports": [], "id": "dgbbw4f", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "whence", "parent_id": "t1_dgatxhp", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "That is equal parts impressive and horrifying.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That is equal parts impressive and horrifying.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbbw4f", "score_hidden": false, "stickied": false, "created": 1492327072.0, "created_utc": 1492298272.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}], "after": null, "before": null}}, "user_reports": [], "id": "dgatxhp", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "flaming_bird", "parent_id": "t3_65jol7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "It was used to compile Quake and Doom to run on Mezzano, a Common Lisp operating system.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It was used to compile Quake and Doom to run on Mezzano, a Common Lisp operating system.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgatxhp", "score_hidden": false, "stickied": false, "created": 1492302259.0, "created_utc": 1492273459.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": "", "user_reports": [], "id": "dgcumwy", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "combinatorylogic", "parent_id": "t1_dgcugja", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Luckily, you don't need to do it for the LLVM bindings, it's a plain C API.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Luckily, you don&amp;#39;t need to do it for the LLVM bindings, it&amp;#39;s a plain C API.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcumwy", "score_hidden": false, "stickied": false, "created": 1492418897.0, "created_utc": 1492390097.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcugja", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "snookums", "parent_id": "t1_dgca4gj", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yeah, but going back to what I was saying, I doubt that'd be easy to automate. Translating data types for headers would be pretty trivial. Recognizing a C macro and translating its entire contents to another language would be much more difficult.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, but going back to what I was saying, I doubt that&amp;#39;d be easy to automate. Translating data types for headers would be pretty trivial. Recognizing a C macro and translating its entire contents to another language would be much more difficult.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcugja", "score_hidden": false, "stickied": false, "created": 1492418662.0, "created_utc": 1492389862.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgca4gj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "combinatorylogic", "parent_id": "t1_dgc7d2h", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "You can generate a wrapper function around a macro.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can generate a wrapper function around a macro.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgca4gj", "score_hidden": false, "stickied": false, "created": 1492391605.0, "created_utc": 1492362805.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc7d2h", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "snookums", "parent_id": "t1_dgbvhbv", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm surprised. A lot of large c projects use macros for common tasks, instead of functions. You can't generate an ffi binding for a macro.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m surprised. A lot of large c projects use macros for common tasks, instead of functions. You can&amp;#39;t generate an ffi binding for a macro.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc7d2h", "score_hidden": false, "stickied": false, "created": 1492387989.0, "created_utc": 1492359189.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbvhbv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "combinatorylogic", "parent_id": "t1_dgboin4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I am generating LLVM bindings for .net using libclang, no manual tweaking required.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am generating LLVM bindings for .net using libclang, no manual tweaking required.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvhbv", "score_hidden": false, "stickied": false, "created": 1492362850.0, "created_utc": 1492334050.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": "", "user_reports": [], "id": "dgbqiw4", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Vyse007", "parent_id": "t1_dgboin4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I would guess that you can have a customizable set of scripts that would then generate bindings based on the parameters you set. So yeah, some manual tweaking on a case-by-case basis is most likely necessary.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would guess that you can have a customizable set of scripts that would then generate bindings based on the parameters you set. So yeah, some manual tweaking on a case-by-case basis is most likely necessary.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbqiw4", "score_hidden": false, "stickied": false, "created": 1492349426.0, "created_utc": 1492320626.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgboin4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "snookums", "parent_id": "t1_dgbo9y9", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I was looking at libclang today and thinking about it, but I suspect any large code base would be essentially impossible without some manual tweaking.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was looking at libclang today and thinking about it, but I suspect any large code base would be essentially impossible without some manual tweaking.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgboin4", "score_hidden": false, "stickied": false, "created": 1492345761.0, "created_utc": 1492316961.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbo9y9", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Vyse007", "parent_id": "t1_dgbk2g2", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "As someone who has very recently fallen in love with Racket, I really hope someone takes this up. It would be amazing to just have it work with any C library out there.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As someone who has very recently fallen in love with Racket, I really hope someone takes this up. It would be amazing to just have it work with any C library out there.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbo9y9", "score_hidden": false, "stickied": false, "created": 1492345341.0, "created_utc": 1492316541.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbk2g2", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "snookums", "parent_id": "t3_65jol7", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What I'd like to see is an LLVM backend that takes C header files and spits out Racket bindings. I mean like something where you could just toss GTK+ headers into it and have perfect bindings with almost zero manual effort.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What I&amp;#39;d like to see is an LLVM backend that takes C header files and spits out Racket bindings. I mean like something where you could just toss GTK+ headers into it and have perfect bindings with almost zero manual effort.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbk2g2", "score_hidden": false, "stickied": false, "created": 1492338820.0, "created_utc": 1492310020.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65jol7", "likes": null, "replies": "", "user_reports": [], "id": "dgasmko", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "bik1230", "parent_id": "t3_65jol7", "subreddit_name_prefixed": "r/programming", "controversiality": 1, "body": "[Discussion on r/lisp](https://www.reddit.com/r/lisp/comments/65jqhc/iota_common_lispemitting_backend_for_llvm_xpost/)  \n[Discussion on Hacker News](https://news.ycombinator.com/item?id=14120802)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/lisp/comments/65jqhc/iota_common_lispemitting_backend_for_llvm_xpost/\"&gt;Discussion on r/lisp&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://news.ycombinator.com/item?id=14120802\"&gt;Discussion on Hacker News&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgasmko", "score_hidden": false, "stickied": false, "created": 1492300446.0, "created_utc": 1492271646.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}]