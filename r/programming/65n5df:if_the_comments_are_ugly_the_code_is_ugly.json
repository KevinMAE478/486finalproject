[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "programming", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65n5df", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 21, "report_reasons": null, "author": "reselbob", "saved": false, "mod_reports": [], "name": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "approved_by": null, "over_18": false, "domain": "itworld.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2fwo", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/programming/comments/65n5df/if_the_comments_are_ugly_the_code_is_ugly/", "num_reports": null, "locked": false, "stickied": false, "created": 1492341435.0, "url": "http://www.itworld.com/article/2764888/development/if-the-comments-are-ugly--the-code-is-ugly.html", "author_flair_text": null, "quarantine": false, "title": "If the comments are ugly, the code is ugly", "created_utc": 1492312635.0, "distinguished": null, "media": null, "upvote_ratio": 0.64, "num_comments": 12, "visited": false, "subreddit_type": "public", "ups": 21}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgbvhyx", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "ItzWarty", "parent_id": "t1_dgbrqi3", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Enums, even, if language supports them, because that promotes easier discovery and type-checking for accidental misuse.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Enums, even, if language supports them, because that promotes easier discovery and type-checking for accidental misuse.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbvhyx", "score_hidden": false, "stickied": false, "created": 1492362914.0, "created_utc": 1492334114.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbrqi3", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "mike12489", "parent_id": "t1_dgbr6ga", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Misspelled \"finsihed\". Also, according to article, the value shouldn't have even been \"finished\" -- it should have been \"complete\", which leads to the other ugly part: these kinds of values should (generally) be externed to constants to avoid misspellings and other incorrect comparisons.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Misspelled &amp;quot;finsihed&amp;quot;. Also, according to article, the value shouldn&amp;#39;t have even been &amp;quot;finished&amp;quot; -- it should have been &amp;quot;complete&amp;quot;, which leads to the other ugly part: these kinds of values should (generally) be externed to constants to avoid misspellings and other incorrect comparisons.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbrqi3", "score_hidden": false, "stickied": false, "created": 1492352088.0, "created_utc": 1492323288.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbr6ga", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "HobbeScotch", "parent_id": "t1_dgbohk4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I'm still learning and I'm curious why you would say that the snippet you pasted above is ugly code?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m still learning and I&amp;#39;m curious why you would say that the snippet you pasted above is ugly code?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbr6ga", "score_hidden": false, "stickied": false, "created": 1492350812.0, "created_utc": 1492322012.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgd4rso", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t1_dgbx377", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Personally, I'd rather have no documentation than significantly wrong documentation.  There's a lot of information contained in working code.  Even it isn't the most efficient way to get it, I'd rather spend my doing that then first spending time getting the wrong idea in my head and then having to sort out the reality in an adhoc fashion while I'm trying to get something fixed or delivered.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Personally, I&amp;#39;d rather have no documentation than significantly wrong documentation.  There&amp;#39;s a lot of information contained in working code.  Even it isn&amp;#39;t the most efficient way to get it, I&amp;#39;d rather spend my doing that then first spending time getting the wrong idea in my head and then having to sort out the reality in an adhoc fashion while I&amp;#39;m trying to get something fixed or delivered.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgd4rso", "score_hidden": false, "stickied": false, "created": 1492433679.0, "created_utc": 1492404879.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbx377", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "shevegen", "parent_id": "t1_dgbohk4", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Still the last comment that any documentation may be better than no documentation is true.\n\nI don't take any documentation at face-value either, I just use it as an ADDITIONAL cue for the code in use.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Still the last comment that any documentation may be better than no documentation is true.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t take any documentation at face-value either, I just use it as an ADDITIONAL cue for the code in use.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbx377", "score_hidden": false, "stickied": false, "created": 1492368415.0, "created_utc": 1492339615.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbohk4", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "funkinaround", "parent_id": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Posted November 15, 2009\n\nI wish the author would have included more examples of both ugly comments and ugly code. The one concrete example is:\n\n    if item.getState() == 'finsihed': #is this correct?\n\nOf course this code is ugly, but the comment isn't, at least no more ugly to me than having \"TODO\" comments in code. I think the author could extend her argument to be that a lack of documentation/comments strongly implies ugly code. If I am using a system with great documentation, I shouldn't even need to consult the actual code, so I don't even see if it's \"ugly\". If I am using a system with zero documentation/comments, I need to read the actual code and any ugliness is instantly exposed. Besides,\n\n&gt; Documentation is like sex. When it's good, it's really good. When it's bad, it's still better than nothing.\n\nThe top of the article links to another article titled, \"[30 years of C](http://www.dadhacker.com/blog/?p=1132),\" which is a more interested read, in my opinion.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Posted November 15, 2009&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I wish the author would have included more examples of both ugly comments and ugly code. The one concrete example is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if item.getState() == &amp;#39;finsihed&amp;#39;: #is this correct?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course this code is ugly, but the comment isn&amp;#39;t, at least no more ugly to me than having &amp;quot;TODO&amp;quot; comments in code. I think the author could extend her argument to be that a lack of documentation/comments strongly implies ugly code. If I am using a system with great documentation, I shouldn&amp;#39;t even need to consult the actual code, so I don&amp;#39;t even see if it&amp;#39;s &amp;quot;ugly&amp;quot;. If I am using a system with zero documentation/comments, I need to read the actual code and any ugliness is instantly exposed. Besides,&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Documentation is like sex. When it&amp;#39;s good, it&amp;#39;s really good. When it&amp;#39;s bad, it&amp;#39;s still better than nothing.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The top of the article links to another article titled, &amp;quot;&lt;a href=\"http://www.dadhacker.com/blog/?p=1132\"&gt;30 years of C&lt;/a&gt;,&amp;quot; which is a more interested read, in my opinion.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgbohk4", "score_hidden": false, "stickied": false, "created": 1492345711.0, "created_utc": 1492316911.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgcika5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "reselbob", "parent_id": "t1_dgcgu3t", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I like your assertions. Me? Typically for complex computing I write out my thinking in the function as pseudo code in comments. The I write out the actual code to support my pseudo code. Of course, for production level code I provide a comment section before each function (method) describing the purpose of the function. Same at the class level. I comply with commenting standards so that my writing will show up in the IDE, e.g Eclipse for Java, Visual Studio for .NET. At the component level I always provide a comprehensive readme. I want others to use my code, not fight with it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like your assertions. Me? Typically for complex computing I write out my thinking in the function as pseudo code in comments. The I write out the actual code to support my pseudo code. Of course, for production level code I provide a comment section before each function (method) describing the purpose of the function. Same at the class level. I comply with commenting standards so that my writing will show up in the IDE, e.g Eclipse for Java, Visual Studio for .NET. At the component level I always provide a comprehensive readme. I want others to use my code, not fight with it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcika5", "score_hidden": false, "stickied": false, "created": 1492402739.0, "created_utc": 1492373939.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcgu3t", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "AmalgamDragon", "parent_id": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "&gt; Your comments are the only way you have to speak to the next person looking at this software (that may be you) about the larger scope of the software, not just this line-or-two.\n\nAs code comments are embedded in the code they are one of the poorest ways to capture information about the larger scope of the software and they are certainly not the only way.  By definition information about the larger scope of the software is going to span many areas of the code (i.e. multiple files), but any given comment has to be in a single file, so the discoverability of comments about the larger scope is low.\n\nInformation can be captured in many forms of documentation external to the code that includes the diagrams that typically the most concise way to express many aspects of the larger scope.  That said, having the documentation separate from the code or in version control with the code but in non-mergeable format carries a number of problems with it, so its ideal to use mergeable formats that reside in version control.  Unfortunately all of the easiest to author documentation formations, especially with respect to diagrams, seem to be of the non-mergeable format.\n\nUnit tests can also do a good job of capturing information about the production code, in that unit test captures what the developer thinks the production code is supposed to do.\n\n&gt; Yes, \"self-documenting code\" is a goal, but it's arrogant to assume that you've achieved it\n\nAs with anything there are degrees of achievement, and its not at all arrogant to think that code is good enough with respect to self-documentation.  Perfect is the enemy of good.  No matter what form information about the code is captured in, someone is always going to say it isn't sufficient.\n\nThere is useful discussion to be had about capturing information about code, but this article doesn't add anything of value to that discussion.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Your comments are the only way you have to speak to the next person looking at this software (that may be you) about the larger scope of the software, not just this line-or-two.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;As code comments are embedded in the code they are one of the poorest ways to capture information about the larger scope of the software and they are certainly not the only way.  By definition information about the larger scope of the software is going to span many areas of the code (i.e. multiple files), but any given comment has to be in a single file, so the discoverability of comments about the larger scope is low.&lt;/p&gt;\n\n&lt;p&gt;Information can be captured in many forms of documentation external to the code that includes the diagrams that typically the most concise way to express many aspects of the larger scope.  That said, having the documentation separate from the code or in version control with the code but in non-mergeable format carries a number of problems with it, so its ideal to use mergeable formats that reside in version control.  Unfortunately all of the easiest to author documentation formations, especially with respect to diagrams, seem to be of the non-mergeable format.&lt;/p&gt;\n\n&lt;p&gt;Unit tests can also do a good job of capturing information about the production code, in that unit test captures what the developer thinks the production code is supposed to do.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Yes, &amp;quot;self-documenting code&amp;quot; is a goal, but it&amp;#39;s arrogant to assume that you&amp;#39;ve achieved it&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;As with anything there are degrees of achievement, and its not at all arrogant to think that code is good enough with respect to self-documentation.  Perfect is the enemy of good.  No matter what form information about the code is captured in, someone is always going to say it isn&amp;#39;t sufficient.&lt;/p&gt;\n\n&lt;p&gt;There is useful discussion to be had about capturing information about code, but this article doesn&amp;#39;t add anything of value to that discussion.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgcgu3t", "score_hidden": false, "stickied": false, "created": 1492400512.0, "created_utc": 1492371712.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgdisgl", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Telexen1", "parent_id": "t1_dgco3be", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "Yup. As long as you stick to the \"Comments explain WHY\" rule, I'd rather have commented code than \"self-documenting\" code.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yup. As long as you stick to the &amp;quot;Comments explain WHY&amp;quot; rule, I&amp;#39;d rather have commented code than &amp;quot;self-documenting&amp;quot; code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdisgl", "score_hidden": false, "stickied": false, "created": 1492467092.0, "created_utc": 1492438292.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgco3be", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "i8beef", "parent_id": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "I don't get why so many people think code should be self documenting, or hate seeing inline comments. It's quicker to scan, clearer in meaning, and can provide structure that regular code structures don't easily lend themselves to (e.g., \"this section of 10 lines do X\").\n\nThe only thing I've ever heard is \"but sometimes people forget to update the comments\", and I look at you in haughty derision if you say this. You're right, sometimes people forget things. You should verify when necessary. But it is your JOB to keep them correct as much as it is your job to keep the rest of the code base healthy. Incorrect comments and incorrect code are BOTH bugs. Shut up and fix them.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t get why so many people think code should be self documenting, or hate seeing inline comments. It&amp;#39;s quicker to scan, clearer in meaning, and can provide structure that regular code structures don&amp;#39;t easily lend themselves to (e.g., &amp;quot;this section of 10 lines do X&amp;quot;).&lt;/p&gt;\n\n&lt;p&gt;The only thing I&amp;#39;ve ever heard is &amp;quot;but sometimes people forget to update the comments&amp;quot;, and I look at you in haughty derision if you say this. You&amp;#39;re right, sometimes people forget things. You should verify when necessary. But it is your JOB to keep them correct as much as it is your job to keep the rest of the code base healthy. Incorrect comments and incorrect code are BOTH bugs. Shut up and fix them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgco3be", "score_hidden": false, "stickied": false, "created": 1492409977.0, "created_utc": 1492381177.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgc765u", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Berberberber", "parent_id": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "What if the constants are ugly?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What if the constants are ugly?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgc765u", "score_hidden": false, "stickied": false, "created": 1492387735.0, "created_utc": 1492358935.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "removal_reason": null, "link_id": "t3_65n5df", "likes": null, "replies": "", "user_reports": [], "id": "dgdqre3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "metamatic", "parent_id": "t3_65n5df", "subreddit_name_prefixed": "r/programming", "controversiality": 0, "body": "If the documentation is bad, the code is bad.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the documentation is bad, the code is bad.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "programming", "name": "t1_dgdqre3", "score_hidden": false, "stickied": false, "created": 1492476632.0, "created_utc": 1492447832.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]