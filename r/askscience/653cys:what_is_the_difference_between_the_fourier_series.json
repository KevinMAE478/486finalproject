[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "askscience", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Mathematics", "id": "653cys", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 22, "report_reasons": null, "author": "lettuceconquer", "saved": false, "mod_reports": [], "name": "t3_653cys", "subreddit_name_prefixed": "r/askscience", "approved_by": null, "over_18": false, "domain": "self.askscience", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qm4e", "edited": false, "link_flair_css_class": "maths", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/askscience/comments/653cys/what_is_the_difference_between_the_fourier_series/", "num_reports": null, "locked": false, "stickied": false, "created": 1492086412.0, "url": "https://www.reddit.com/r/askscience/comments/653cys/what_is_the_difference_between_the_fourier_series/", "author_flair_text": null, "quarantine": false, "title": "What is the difference between the Fourier series and the Fourier transform?", "created_utc": 1492057612.0, "distinguished": null, "media": null, "upvote_ratio": 0.72, "num_comments": 10, "visited": false, "subreddit_type": "public", "ups": 22}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": "", "user_reports": [], "id": "dga6i6g", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "yjfs", "parent_id": "t1_dg7d83h", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "http://www.maths.ed.ac.uk/~jmf/Teaching/Projects/Poincare/S0273-0979-1980-14783-7.pdf is the ultimate (though very lengthy) discussion of the Fourier transform", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.maths.ed.ac.uk/%7Ejmf/Teaching/Projects/Poincare/S0273-0979-1980-14783-7.pdf\"&gt;http://www.maths.ed.ac.uk/~jmf/Teaching/Projects/Poincare/S0273-0979-1980-14783-7.pdf&lt;/a&gt; is the ultimate (though very lengthy) discussion of the Fourier transform&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dga6i6g", "score_hidden": false, "stickied": false, "created": 1492253483.0, "created_utc": 1492224683.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7d83h", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "DustRainbow", "parent_id": "t1_dg790vl", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "As a physics grad  I seriously lack any intuition in Fourier transforms and always postponed digging further into it. This looks really promising, I might ask follow up questions if you don't mind?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a physics grad  I seriously lack any intuition in Fourier transforms and always postponed digging further into it. This looks really promising, I might ask follow up questions if you don&amp;#39;t mind?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dg7d83h", "score_hidden": false, "stickied": false, "created": 1492106458.0, "created_utc": 1492077658.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": "", "user_reports": [], "id": "dg7911r", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "functor7", "parent_id": "t1_dg790vl", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "Overall, if you have any \"nice\" domain (aka \"Locally Compact Group\"), then you can look at all the \"standard\" functions on it. The collection of all these \"standard\" functions will, again, make a \"nice\" domain that we can have functions on called the \"[Pontryagin Dual](https://en.wikipedia.org/wiki/Pontryagin_duality)\".  If we then find the Pontryagin Dual of the Pontryagin Dual, then we get the original domain back. This means we get pairs of domains that interact with one another in a really nice way. If the domain is the circle, then the dual is the integers. The dual of the Real Line is again the Real Line, and the dual of the integers 0,1,2,...,N-1 is again the integers 0,1,2,...,N-1. The Fourier Transform takes a function on the original domain and uses integral to turn it into a function whose domain is the corresponding Pontryagin Dual. This transformation does many things for us. For one, because the dual of the dual is the original domain, we can apply two Fourier Transforms in succession and we'll always get back the original function. This allows us to do things like write a periodic function as an infinite sum of trigonometric functions, or use Fourier Transforms to transform differential equations into algebraic equations, solve the algebraic equation, and then transform it back to get a solution to the differential equation. It also has nice functional properties. If we know we can write a function as a Fourier Transform, then we can extract some really nice information about the function. Moreover, in these simple cases, there are many cases where we can extract and modify information about what these functions *represent* (sound files, quantum systems, waves, etc) using Fourier transforms and the natural interpretations these \"standard\" functions have.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Overall, if you have any &amp;quot;nice&amp;quot; domain (aka &amp;quot;Locally Compact Group&amp;quot;), then you can look at all the &amp;quot;standard&amp;quot; functions on it. The collection of all these &amp;quot;standard&amp;quot; functions will, again, make a &amp;quot;nice&amp;quot; domain that we can have functions on called the &amp;quot;&lt;a href=\"https://en.wikipedia.org/wiki/Pontryagin_duality\"&gt;Pontryagin Dual&lt;/a&gt;&amp;quot;.  If we then find the Pontryagin Dual of the Pontryagin Dual, then we get the original domain back. This means we get pairs of domains that interact with one another in a really nice way. If the domain is the circle, then the dual is the integers. The dual of the Real Line is again the Real Line, and the dual of the integers 0,1,2,...,N-1 is again the integers 0,1,2,...,N-1. The Fourier Transform takes a function on the original domain and uses integral to turn it into a function whose domain is the corresponding Pontryagin Dual. This transformation does many things for us. For one, because the dual of the dual is the original domain, we can apply two Fourier Transforms in succession and we&amp;#39;ll always get back the original function. This allows us to do things like write a periodic function as an infinite sum of trigonometric functions, or use Fourier Transforms to transform differential equations into algebraic equations, solve the algebraic equation, and then transform it back to get a solution to the differential equation. It also has nice functional properties. If we know we can write a function as a Fourier Transform, then we can extract some really nice information about the function. Moreover, in these simple cases, there are many cases where we can extract and modify information about what these functions &lt;em&gt;represent&lt;/em&gt; (sound files, quantum systems, waves, etc) using Fourier transforms and the natural interpretations these &amp;quot;standard&amp;quot; functions have.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dg7911r", "score_hidden": false, "stickied": false, "created": 1492094272.0, "created_utc": 1492065472.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": "", "user_reports": [], "id": "dg7d8iv", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "lettuceconquer", "parent_id": "t1_dg790vl", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "Wow! Thanks for the detailed reply!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow! Thanks for the detailed reply!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dg7d8iv", "score_hidden": false, "stickied": false, "created": 1492106494.0, "created_utc": 1492077694.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg790vl", "gilded": 0, "archived": false, "score": 14, "report_reasons": null, "author": "functor7", "parent_id": "t3_653cys", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "I'm going to give the \"I've worked with Fourier Series and Fourier Transforms in classes before, and have heard all the standard interpretations of them as extracting frequencies and related visualizations, but find them unsatisfactory\"-explanation. If you are not yet there, I encourage you to read on anyways because the best way to learn math is to get really confused and then move on just to have it \"click\" when you're getting confused by even more complicated stuff. There are also all kinds of [pictures](http://hikkyz.net/void/img/fouriertransformexplained.png) and visualizations of [Fourier Series](https://upload.wikimedia.org/wikipedia/commons/5/50/Fourier_transform_time_and_frequency_domains.gif), visualizations of [Fourier Transforms](http://i.imgur.com/dWvT2m8.gif) and [explanations](https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/) of them [all around](https://www.reddit.com/r/math/comments/3cazk9/can_anyone_conceptually_explain_fourier_transform/?st=j1g0zbfd&amp;sh=1c9c018a) that you can look at to get a better idea.\n\nBut the **TL;DR** is that Fourier Series and Fourier Transforms are basically the same, the only difference is the domain that you're working with.\n\n----------------------------------------------------\n\nAll of the Fourier-things are essentially the same thing, the only question is where you're doing the work.\n\nIf we have two functions f(x) and g(x), then we can compare then using an integral. In particular, the integral of f(x)g(x)dx over some domain is a comparison of these two functions on this interval, and it can behave a lot like a dot product. The general idea of a Fourier Transform is to take a function and compare it to other functions that we know well, and the type of Fourier transform you have depends on the domain of the functions.\n\nIf you have a periodic function, or a function on a finite interval, then you can imagine them as being functions whose domain is a circle. If a function is periodic, then one period of the function is like one revolution around the circle, and if the function is on a finite interval, you can just wrap the interval up into a circle. We can then compare a function like this to the \"standard functions on the circle\". These are the functions e*_n_*(x)=e^(-inx), where x goes from 0 to 2pi. This is the standard function that repeats itself n times over the circle, and comparing f(x) to it will tell us how much f(x) behaves like something that is n-times periodic over the circle. The integral of f(x)e*_n_*(x)dx over x=0 to x=2pi then gives us the nth Fourier coefficient. So, given an integer, n, we can find a value that relates f(x) to a standard periodic function. This turns the function f(x), whose domain is the circle, into a function f^(*)(n) whose domain is the integers and these values are the Fourier coefficients. So the Fourier coefficients are the Fourier Transform on the domain of the circle.\n\nRelated, we can have a function g(n) that takes in integers and outputs real (or complex) numbers. There is a collection of \"standard functions\"  whose domain is the integers that we can compare g(n) to. For any angle t on the circle, we can get the function E*_t_*(n)=e^(itn). The variable of this function has domain that is the integers. We can compare our function g(n)  to these functions. That is, we can consider the integral of g(n)E*_t_*(n)dn where n goes over all the integers. In this context, it's not actually an integral, it is the infinite sum of g(n)E*_t_*(n) over all the integers. So, for every angle t=0 to t=2pi, we can get the sum g(n)E*_t_*(n) over all the integers, so we have a function g^(*)(t), whose value at any given t is such an infinite sum. This is the [Fourier Series](https://en.wikipedia.org/wiki/Fourier_series) of g(n), this takes a function g(n) whose domain is the integers and turns it into a function whose domain is the circle. \n\nThe Fourier Coefficients and the Fourier Series work opposite each other, and are inverses of each other. That is, if you have a function f(x), find its Fourier Coefficients f^(*)(n), and then find the Fourier Series of *that*, then you get the original function back. That is f^(**)(x)=f(x). This is generally what the Fourier Series does in applications. It also works the other way, if you have the function g(n), find it's corresponding Fourier Series on the circle g^(*)(x), and then find the Fourier Coefficients of *that*, then you get g(n) back. That is g^(**)(n)=g(n). This is advantageous because it gives us a way to change the domain of a function. It might be hard to manipulate or analyze a periodic function, but we can turn it into a function with a discrete domain where it can be easier to work with. It is also helpful that the Fourier coefficients have a nice interpretation as the amplitude of a particular frequency in the function (via f^(**)(x)=f(x)), so this lets us do things like high-pass or low-pass filters and other analysis techniques.\n\nNow, if we next have a function f(x) on the entire real line, that is not periodic, but decays quickly to zero at infinity, then we can talk about the [Fourier Transform](https://en.wikipedia.org/wiki/Fourier_transform), which is the Fourier-thing for the real line. The standard functions are the functions of the form e*_t_*(x)=e^(-ixt), for any real number t. These input the number x, and output the number e^(-ixt). For every t, we can then compare f(x) to e*_t_*(x) as the integral of f(x)e*_t_*(x)dx over the entire real line. So for every t, we get the value f^(*)(t) that is equal to the integral f(x)e*_t_*(x)dx over the entire real line. This takes a function on the real line and turns it into another function on the real line. Unlike the above case, it doesn't change the domain, but it does behave like the above transformations do, and it has similar interpretations. We can also undo this, there are reverse standard functions E*_x_*(t)=e^(ixt), and if g(t) is a function on the real line, we can do the reverse Fourier Transform as the integral of g(t)E*_x_*(t)dt over the entire real line. This gives an alternative way to transform a function on the entire real line that undoes the first one. That is, if f(x) is a function with Fourier Transform f^(*)(t), and we find the reverse Fourier Transform of this, then we get f(x) back. That is f^(**)(x)=f(x). Conversely, if g(t) is a function with reverse Fourier Transform g^(*)(x), and we apply the Fourier Transform to this, then we get g(t) back. That is, g^(**)(t)=g(t). This works very similarly to the previous ones, and interacts *very* nicely with differential equations and the Fourier Transform, Reverse Fourier Transform and the Fourier Coefficients and Fourier Series pop up very frequently in differential equations.\n\nThere is one last type of common Fourier Transform. If our domain is, instead of all the integers, just the integers 0,1,2,...,N-1 (like we have a sample of size N, or a sound file with N samples or whatever), then we can create the [Discrete Fourier Transform](https://en.wikipedia.org/wiki/Discrete_Fourier_transform). This is just the Fourier Transform on the domain 0,1,2,...,N-1. The standard functions here are the functions e*_k_*(n)=e^(-2pi ikn/N). On the complex plane, this is a point on the N-gon on the unit circle. This inputs a number 0,1,2,...,N-1 and outputs one of the N points on the N-gon. If f(n) is a function that inputs n=0,1,2,...,N-1, then we can compare f(n) to these standard functions as the integral of f(n)e*_k_*(n)dn over n=0,1,...,N-1. But this is discrete so the integral is actually the sum of f(n)e*_k_*(n) over n=0,1,2,...,N-1. So for every k=0,1,2,...,N-1, we get a the number that is the sum of f(n)e*_k_*(n) over n=0,1,2,...,N-1. That is, we have the function f^(*)(k), equal to this sum. As with the real-line Fourier Transform, this doesn't switch the domain, so we construct the Reverse Discrete Fourier Transform using the function E*_n_*(k)=e^(-2pi ikn/N). This takes a function g(k) that inputs numbers k=0,1,2,...,N-1 and outputs the function g^(*)(n) that is equal to the sum of g(k)E*_n_*(k) over k=0,1,2,...,N-1. These transforms are inverses of each other. If we have f(n), find its Discrete Fourier Transform f^(*)(k), and find the Reverse Fourier Transform of that, then we get f(n) back. That is, f^(**)(n)=f(n). If we have g(k), find the Reverse Fourier Transform g^(*)(n), and find the Fourier Transform of that, then we get g(k) back. That is, g^(**)(k)=g(k).\n\nYou can also do these in higher dimensions using multiple integrals. For instance, doing a 2-dimensional Discrete Fourier Transform allows you to do Fourier Analysis on pictures. But the gist of all this is that you create Fourier transforms all in the same manner, and how they look just depend on the domain you're working with.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m going to give the &amp;quot;I&amp;#39;ve worked with Fourier Series and Fourier Transforms in classes before, and have heard all the standard interpretations of them as extracting frequencies and related visualizations, but find them unsatisfactory&amp;quot;-explanation. If you are not yet there, I encourage you to read on anyways because the best way to learn math is to get really confused and then move on just to have it &amp;quot;click&amp;quot; when you&amp;#39;re getting confused by even more complicated stuff. There are also all kinds of &lt;a href=\"http://hikkyz.net/void/img/fouriertransformexplained.png\"&gt;pictures&lt;/a&gt; and visualizations of &lt;a href=\"https://upload.wikimedia.org/wikipedia/commons/5/50/Fourier_transform_time_and_frequency_domains.gif\"&gt;Fourier Series&lt;/a&gt;, visualizations of &lt;a href=\"http://i.imgur.com/dWvT2m8.gif\"&gt;Fourier Transforms&lt;/a&gt; and &lt;a href=\"https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/\"&gt;explanations&lt;/a&gt; of them &lt;a href=\"https://www.reddit.com/r/math/comments/3cazk9/can_anyone_conceptually_explain_fourier_transform/?st=j1g0zbfd&amp;amp;sh=1c9c018a\"&gt;all around&lt;/a&gt; that you can look at to get a better idea.&lt;/p&gt;\n\n&lt;p&gt;But the &lt;strong&gt;TL;DR&lt;/strong&gt; is that Fourier Series and Fourier Transforms are basically the same, the only difference is the domain that you&amp;#39;re working with.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;All of the Fourier-things are essentially the same thing, the only question is where you&amp;#39;re doing the work.&lt;/p&gt;\n\n&lt;p&gt;If we have two functions f(x) and g(x), then we can compare then using an integral. In particular, the integral of f(x)g(x)dx over some domain is a comparison of these two functions on this interval, and it can behave a lot like a dot product. The general idea of a Fourier Transform is to take a function and compare it to other functions that we know well, and the type of Fourier transform you have depends on the domain of the functions.&lt;/p&gt;\n\n&lt;p&gt;If you have a periodic function, or a function on a finite interval, then you can imagine them as being functions whose domain is a circle. If a function is periodic, then one period of the function is like one revolution around the circle, and if the function is on a finite interval, you can just wrap the interval up into a circle. We can then compare a function like this to the &amp;quot;standard functions on the circle&amp;quot;. These are the functions e&lt;em&gt;&lt;em&gt;n&lt;/em&gt;&lt;/em&gt;(x)=e&lt;sup&gt;-inx&lt;/sup&gt;, where x goes from 0 to 2pi. This is the standard function that repeats itself n times over the circle, and comparing f(x) to it will tell us how much f(x) behaves like something that is n-times periodic over the circle. The integral of f(x)e&lt;em&gt;&lt;em&gt;n&lt;/em&gt;&lt;/em&gt;(x)dx over x=0 to x=2pi then gives us the nth Fourier coefficient. So, given an integer, n, we can find a value that relates f(x) to a standard periodic function. This turns the function f(x), whose domain is the circle, into a function f&lt;sup&gt;*&lt;/sup&gt;(n) whose domain is the integers and these values are the Fourier coefficients. So the Fourier coefficients are the Fourier Transform on the domain of the circle.&lt;/p&gt;\n\n&lt;p&gt;Related, we can have a function g(n) that takes in integers and outputs real (or complex) numbers. There is a collection of &amp;quot;standard functions&amp;quot;  whose domain is the integers that we can compare g(n) to. For any angle t on the circle, we can get the function E&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(n)=e&lt;sup&gt;itn&lt;/sup&gt;. The variable of this function has domain that is the integers. We can compare our function g(n)  to these functions. That is, we can consider the integral of g(n)E&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(n)dn where n goes over all the integers. In this context, it&amp;#39;s not actually an integral, it is the infinite sum of g(n)E&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(n) over all the integers. So, for every angle t=0 to t=2pi, we can get the sum g(n)E&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(n) over all the integers, so we have a function g&lt;sup&gt;*&lt;/sup&gt;(t), whose value at any given t is such an infinite sum. This is the &lt;a href=\"https://en.wikipedia.org/wiki/Fourier_series\"&gt;Fourier Series&lt;/a&gt; of g(n), this takes a function g(n) whose domain is the integers and turns it into a function whose domain is the circle. &lt;/p&gt;\n\n&lt;p&gt;The Fourier Coefficients and the Fourier Series work opposite each other, and are inverses of each other. That is, if you have a function f(x), find its Fourier Coefficients f&lt;sup&gt;*&lt;/sup&gt;(n), and then find the Fourier Series of &lt;em&gt;that&lt;/em&gt;, then you get the original function back. That is f&lt;sup&gt;**&lt;/sup&gt;(x)=f(x). This is generally what the Fourier Series does in applications. It also works the other way, if you have the function g(n), find it&amp;#39;s corresponding Fourier Series on the circle g&lt;sup&gt;*&lt;/sup&gt;(x), and then find the Fourier Coefficients of &lt;em&gt;that&lt;/em&gt;, then you get g(n) back. That is g&lt;sup&gt;**&lt;/sup&gt;(n)=g(n). This is advantageous because it gives us a way to change the domain of a function. It might be hard to manipulate or analyze a periodic function, but we can turn it into a function with a discrete domain where it can be easier to work with. It is also helpful that the Fourier coefficients have a nice interpretation as the amplitude of a particular frequency in the function (via f&lt;sup&gt;**&lt;/sup&gt;(x)=f(x)), so this lets us do things like high-pass or low-pass filters and other analysis techniques.&lt;/p&gt;\n\n&lt;p&gt;Now, if we next have a function f(x) on the entire real line, that is not periodic, but decays quickly to zero at infinity, then we can talk about the &lt;a href=\"https://en.wikipedia.org/wiki/Fourier_transform\"&gt;Fourier Transform&lt;/a&gt;, which is the Fourier-thing for the real line. The standard functions are the functions of the form e&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(x)=e&lt;sup&gt;-ixt&lt;/sup&gt;, for any real number t. These input the number x, and output the number e&lt;sup&gt;-ixt&lt;/sup&gt;. For every t, we can then compare f(x) to e&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(x) as the integral of f(x)e&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(x)dx over the entire real line. So for every t, we get the value f&lt;sup&gt;*&lt;/sup&gt;(t) that is equal to the integral f(x)e&lt;em&gt;&lt;em&gt;t&lt;/em&gt;&lt;/em&gt;(x)dx over the entire real line. This takes a function on the real line and turns it into another function on the real line. Unlike the above case, it doesn&amp;#39;t change the domain, but it does behave like the above transformations do, and it has similar interpretations. We can also undo this, there are reverse standard functions E&lt;em&gt;&lt;em&gt;x&lt;/em&gt;&lt;/em&gt;(t)=e&lt;sup&gt;ixt&lt;/sup&gt;, and if g(t) is a function on the real line, we can do the reverse Fourier Transform as the integral of g(t)E&lt;em&gt;&lt;em&gt;x&lt;/em&gt;&lt;/em&gt;(t)dt over the entire real line. This gives an alternative way to transform a function on the entire real line that undoes the first one. That is, if f(x) is a function with Fourier Transform f&lt;sup&gt;*&lt;/sup&gt;(t), and we find the reverse Fourier Transform of this, then we get f(x) back. That is f&lt;sup&gt;**&lt;/sup&gt;(x)=f(x). Conversely, if g(t) is a function with reverse Fourier Transform g&lt;sup&gt;*&lt;/sup&gt;(x), and we apply the Fourier Transform to this, then we get g(t) back. That is, g&lt;sup&gt;**&lt;/sup&gt;(t)=g(t). This works very similarly to the previous ones, and interacts &lt;em&gt;very&lt;/em&gt; nicely with differential equations and the Fourier Transform, Reverse Fourier Transform and the Fourier Coefficients and Fourier Series pop up very frequently in differential equations.&lt;/p&gt;\n\n&lt;p&gt;There is one last type of common Fourier Transform. If our domain is, instead of all the integers, just the integers 0,1,2,...,N-1 (like we have a sample of size N, or a sound file with N samples or whatever), then we can create the &lt;a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform\"&gt;Discrete Fourier Transform&lt;/a&gt;. This is just the Fourier Transform on the domain 0,1,2,...,N-1. The standard functions here are the functions e&lt;em&gt;&lt;em&gt;k&lt;/em&gt;&lt;/em&gt;(n)=e&lt;sup&gt;-2pi ikn/N&lt;/sup&gt;. On the complex plane, this is a point on the N-gon on the unit circle. This inputs a number 0,1,2,...,N-1 and outputs one of the N points on the N-gon. If f(n) is a function that inputs n=0,1,2,...,N-1, then we can compare f(n) to these standard functions as the integral of f(n)e&lt;em&gt;&lt;em&gt;k&lt;/em&gt;&lt;/em&gt;(n)dn over n=0,1,...,N-1. But this is discrete so the integral is actually the sum of f(n)e&lt;em&gt;&lt;em&gt;k&lt;/em&gt;&lt;/em&gt;(n) over n=0,1,2,...,N-1. So for every k=0,1,2,...,N-1, we get a the number that is the sum of f(n)e&lt;em&gt;&lt;em&gt;k&lt;/em&gt;&lt;/em&gt;(n) over n=0,1,2,...,N-1. That is, we have the function f&lt;sup&gt;*&lt;/sup&gt;(k), equal to this sum. As with the real-line Fourier Transform, this doesn&amp;#39;t switch the domain, so we construct the Reverse Discrete Fourier Transform using the function E&lt;em&gt;&lt;em&gt;n&lt;/em&gt;&lt;/em&gt;(k)=e&lt;sup&gt;-2pi ikn/N&lt;/sup&gt;. This takes a function g(k) that inputs numbers k=0,1,2,...,N-1 and outputs the function g&lt;sup&gt;*&lt;/sup&gt;(n) that is equal to the sum of g(k)E&lt;em&gt;&lt;em&gt;n&lt;/em&gt;&lt;/em&gt;(k) over k=0,1,2,...,N-1. These transforms are inverses of each other. If we have f(n), find its Discrete Fourier Transform f&lt;sup&gt;*&lt;/sup&gt;(k), and find the Reverse Fourier Transform of that, then we get f(n) back. That is, f&lt;sup&gt;**&lt;/sup&gt;(n)=f(n). If we have g(k), find the Reverse Fourier Transform g&lt;sup&gt;*&lt;/sup&gt;(n), and find the Fourier Transform of that, then we get g(k) back. That is, g&lt;sup&gt;**&lt;/sup&gt;(k)=g(k).&lt;/p&gt;\n\n&lt;p&gt;You can also do these in higher dimensions using multiple integrals. For instance, doing a 2-dimensional Discrete Fourier Transform allows you to do Fourier Analysis on pictures. But the gist of all this is that you create Fourier transforms all in the same manner, and how they look just depend on the domain you&amp;#39;re working with.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dg790vl", "score_hidden": false, "stickied": false, "created": 1492094259.0, "created_utc": 1492065459.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 14}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qm4e", "removal_reason": null, "link_id": "t3_653cys", "likes": null, "replies": "", "user_reports": [], "id": "dg7m0lw", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "cantgetno197", "parent_id": "t3_653cys", "subreddit_name_prefixed": "r/askscience", "controversiality": 0, "body": "A very succinct response would be that Fourier series are discrete sums and thus can only produce waveforms that are ultimately periodic.  Fourier transforms are continuous integrals and thus don't require the shape to have some periodicity.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A very succinct response would be that Fourier series are discrete sums and thus can only produce waveforms that are ultimately periodic.  Fourier transforms are continuous integrals and thus don&amp;#39;t require the shape to have some periodicity.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "askscience", "name": "t1_dg7m0lw", "score_hidden": false, "stickied": false, "created": 1492122295.0, "created_utc": 1492093495.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}]