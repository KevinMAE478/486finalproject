[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey all, &lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t worry, this isn&amp;#39;t a please do my project for me post. So in one of my classes, our final project is to create our own MLS DBMS using a language of our choice and we only need to implement SELECT, FROM, WHERE, and JOIN. A lot of students from previous semesters suggest learning Python and using that because it makes it easier. Is this true? I have been dabbling with the code academy tutorials on Python and it seems powerful, I just wanted to see other takes on it. (i.e. does python have great libraries to accomplish this? Does python have built-ins that make it easier for Cartesian products etc?). Any help is appreciated! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey all, \n\nDon't worry, this isn't a please do my project for me post. So in one of my classes, our final project is to create our own MLS DBMS using a language of our choice and we only need to implement SELECT, FROM, WHERE, and JOIN. A lot of students from previous semesters suggest learning Python and using that because it makes it easier. Is this true? I have been dabbling with the code academy tutorials on Python and it seems powerful, I just wanted to see other takes on it. (i.e. does python have great libraries to accomplish this? Does python have built-ins that make it easier for Cartesian products etc?). Any help is appreciated! \n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ebxr", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 5, "report_reasons": null, "author": "BluCrayons", "saved": false, "mod_reports": [], "name": "t3_65ebxr", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65ebxr/creating_a_dbms_from_ground_up/", "num_reports": null, "locked": false, "stickied": false, "created": 1492223825.0, "url": "https://www.reddit.com/r/Python/comments/65ebxr/creating_a_dbms_from_ground_up/", "author_flair_text": null, "quarantine": false, "title": "Creating a DBMS from ground up?", "created_utc": 1492195025.0, "distinguished": null, "media": null, "upvote_ratio": 0.86, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": "", "user_reports": [], "id": "dg9v2a4", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BluCrayons", "parent_id": "t1_dg9syzt", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I'll look into these tools for the project. It is a very simple DBMS all things considered, only working on 3 Tables with like 5 tuples each, so I hopefully won't need to worry about it not being fast enough, but we will see.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll look into these tools for the project. It is a very simple DBMS all things considered, only working on 3 Tables with like 5 tuples each, so I hopefully won&amp;#39;t need to worry about it not being fast enough, but we will see.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9v2a4", "score_hidden": false, "stickied": false, "created": 1492237867.0, "created_utc": 1492209067.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9syzt", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "desmoulinmichel", "parent_id": "t3_65ebxr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Like always for those questions, \"it depends\".\n\nNow, is Python easy to use and learn ? Yes. It's the official teaching languages in many universities. Actually it's the official language for all high scools in my country.\n\nIs Python powerful ? Yes. If it's good enough for Youtube, Facebook, Instagram and NASA, it should be ok for students.\n\nCan Python let you code a DBMS. Yes. It's a turing complete language.\n\nDoes Python has built-ins that make it easier ? It has a huge set on tools in the stdlib that you could leverage. E.G:\n\n    &gt;&gt;&gt; import itertools\n    &gt;&gt;&gt; list(itertools.product([1, 2], ['a', 'b']))\n    [(1, 'a'), (1, 'b'), (2, 'a'), (2, 'b')]\n\nWould I use Python to learn how to code a DBMS ? Yes. It's a fantastic language for prototyping.\n\nWould I use Python to actually code a DBMS that I intent to use in production later ? No. Python is slow, you need you DB to be fast. Plus Python comes with sqlite3, which is already a full featured bullet proof fast DBMS.\n\nSome tips:\n\n- Python distinguish bytes from text, unlike many languages. You'll need to get intimate with this is you deal with a DBMS.\n- The struct package can help you with packing and unpacking bytes.\n- the nmap package can help you with mapping a file inmemory to gain some perf.\n- the asyncio module can help you make your database non IO blocking even with a lot of readers.\n- the threading module can help you make your database non blocking for CPU, but you will pay some performance penalty (threads are not increasing performances under Python). The threading.Pool is a convenient interface for it.\n- the multiprocessing module could help you improve CPU perfs, but require serialization.\n- the array module can help you save memory on big typed arrays\n\nGood luck with your project\n", "edited": 1492206644.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Like always for those questions, &amp;quot;it depends&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Now, is Python easy to use and learn ? Yes. It&amp;#39;s the official teaching languages in many universities. Actually it&amp;#39;s the official language for all high scools in my country.&lt;/p&gt;\n\n&lt;p&gt;Is Python powerful ? Yes. If it&amp;#39;s good enough for Youtube, Facebook, Instagram and NASA, it should be ok for students.&lt;/p&gt;\n\n&lt;p&gt;Can Python let you code a DBMS. Yes. It&amp;#39;s a turing complete language.&lt;/p&gt;\n\n&lt;p&gt;Does Python has built-ins that make it easier ? It has a huge set on tools in the stdlib that you could leverage. E.G:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import itertools\n&amp;gt;&amp;gt;&amp;gt; list(itertools.product([1, 2], [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;]))\n[(1, &amp;#39;a&amp;#39;), (1, &amp;#39;b&amp;#39;), (2, &amp;#39;a&amp;#39;), (2, &amp;#39;b&amp;#39;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Would I use Python to learn how to code a DBMS ? Yes. It&amp;#39;s a fantastic language for prototyping.&lt;/p&gt;\n\n&lt;p&gt;Would I use Python to actually code a DBMS that I intent to use in production later ? No. Python is slow, you need you DB to be fast. Plus Python comes with sqlite3, which is already a full featured bullet proof fast DBMS.&lt;/p&gt;\n\n&lt;p&gt;Some tips:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Python distinguish bytes from text, unlike many languages. You&amp;#39;ll need to get intimate with this is you deal with a DBMS.&lt;/li&gt;\n&lt;li&gt;The struct package can help you with packing and unpacking bytes.&lt;/li&gt;\n&lt;li&gt;the nmap package can help you with mapping a file inmemory to gain some perf.&lt;/li&gt;\n&lt;li&gt;the asyncio module can help you make your database non IO blocking even with a lot of readers.&lt;/li&gt;\n&lt;li&gt;the threading module can help you make your database non blocking for CPU, but you will pay some performance penalty (threads are not increasing performances under Python). The threading.Pool is a convenient interface for it.&lt;/li&gt;\n&lt;li&gt;the multiprocessing module could help you improve CPU perfs, but require serialization.&lt;/li&gt;\n&lt;li&gt;the array module can help you save memory on big typed arrays&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Good luck with your project&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9syzt", "score_hidden": false, "stickied": false, "created": 1492235121.0, "created_utc": 1492206321.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": "", "user_reports": [], "id": "dga0c44", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BluCrayons", "parent_id": "t1_dg9zris", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yea, I've done all of the code academy tutorial and will probably watch another video on it today. I really liked that python has basically built in cartesian products which saves a lot of time.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yea, I&amp;#39;ve done all of the code academy tutorial and will probably watch another video on it today. I really liked that python has basically built in cartesian products which saves a lot of time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga0c44", "score_hidden": false, "stickied": false, "created": 1492244895.0, "created_utc": 1492216095.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9zris", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "samtregar", "parent_id": "t1_dg9xutw", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Feels weird to tell someone not to learn Python in /r/python, so sure, go right ahead!  It's pretty different from the other languages you know so I'd say you should be prepared for a bit of a learning curve here.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Feels weird to tell someone not to learn Python in &lt;a href=\"/r/python\"&gt;/r/python&lt;/a&gt;, so sure, go right ahead!  It&amp;#39;s pretty different from the other languages you know so I&amp;#39;d say you should be prepared for a bit of a learning curve here.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9zris", "score_hidden": false, "stickied": false, "created": 1492244142.0, "created_utc": 1492215342.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9xutw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "BluCrayons", "parent_id": "t1_dg9woyz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I know C, C++, Prolog, Haskell, Smalltalk, a tiny bit of Java, but I've just heard it is much easier with Python. I'm also not saying I am a master at any of these languages either. I can list the specs of the project if you'd like. We really aren't doing much which is why I thought just learning what I needed to know for python wasn't too hard.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know C, C++, Prolog, Haskell, Smalltalk, a tiny bit of Java, but I&amp;#39;ve just heard it is much easier with Python. I&amp;#39;m also not saying I am a master at any of these languages either. I can list the specs of the project if you&amp;#39;d like. We really aren&amp;#39;t doing much which is why I thought just learning what I needed to know for python wasn&amp;#39;t too hard.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9xutw", "score_hidden": false, "stickied": false, "created": 1492241601.0, "created_utc": 1492212801.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9woyz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "samtregar", "parent_id": "t3_65ebxr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This sounds like such a fun project!  Do you already know a different programming language?  I don't think it makes sense to learn a new programming language to do a final project.  More likely you should do this project in a language you're more comfortable with.  This really not a good first project in Python!\n\nBut since you asked, sure, I think Python would work fine to do a simple DBMS as a class assignment.  It has all the libraries you could need to do this and more.  That's certainly true for pretty much any mainstream programming language though!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like such a fun project!  Do you already know a different programming language?  I don&amp;#39;t think it makes sense to learn a new programming language to do a final project.  More likely you should do this project in a language you&amp;#39;re more comfortable with.  This really not a good first project in Python!&lt;/p&gt;\n\n&lt;p&gt;But since you asked, sure, I think Python would work fine to do a simple DBMS as a class assignment.  It has all the libraries you could need to do this and more.  That&amp;#39;s certainly true for pretty much any mainstream programming language though!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9woyz", "score_hidden": false, "stickied": false, "created": 1492240064.0, "created_utc": 1492211264.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65ebxr", "likes": null, "replies": "", "user_reports": [], "id": "dgd126j", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "blacwidonsfw", "parent_id": "t3_65ebxr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I wanna do this for fun ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wanna do this for fun &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd126j", "score_hidden": false, "stickied": false, "created": 1492427664.0, "created_utc": 1492398864.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]