[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65oqrh", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 34, "report_reasons": null, "author": "stanislavb", "saved": false, "mod_reports": [], "name": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "blog.brianz.bz", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65oqrh/elixir_for_pythonistas_part_i/", "num_reports": null, "locked": false, "stickied": false, "created": 1492372189.0, "url": "http://blog.brianz.bz/post/elixir-for-pythonistas-i/", "author_flair_text": null, "quarantine": false, "title": "Elixir for Pythonistas: part I", "created_utc": 1492343389.0, "distinguished": null, "media": null, "upvote_ratio": 0.86, "num_comments": 5, "visited": false, "subreddit_type": "public", "ups": 34}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65oqrh", "likes": null, "replies": "", "user_reports": [], "id": "dgc9g5z", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "Topper_123", "parent_id": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt;  In Elixir, all of these conditionals could be handled with pattern matching, resulting in multiple functions that handle some specific part of our domain logic. The code above becomes very very hard to reason about, test and debug. Sure, this can be refactored, but to my previous points because it\u2019s possible to write code like this, it\u2019s inevitable that people will.\n\nCould you show how this could be improved by Elixir/ pattern matching?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;In Elixir, all of these conditionals could be handled with pattern matching, resulting in multiple functions that handle some specific part of our domain logic. The code above becomes very very hard to reason about, test and debug. Sure, this can be refactored, but to my previous points because it\u2019s possible to write code like this, it\u2019s inevitable that people will.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Could you show how this could be improved by Elixir/ pattern matching?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgc9g5z", "score_hidden": false, "stickied": false, "created": 1492390720.0, "created_utc": 1492361920.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65oqrh", "likes": null, "replies": "", "user_reports": [], "id": "dgcl1un", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "baubleglue", "parent_id": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "So far it looks like \"I am ready to tolerate that weird syntax for possible benefits of using concurrency, actor model, no GIL, hot-loading ... \"\n\nPython's dictionary syntax clearer. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So far it looks like &amp;quot;I am ready to tolerate that weird syntax for possible benefits of using concurrency, actor model, no GIL, hot-loading ... &amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Python&amp;#39;s dictionary syntax clearer. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgcl1un", "score_hidden": false, "stickied": false, "created": 1492405985.0, "created_utc": 1492377185.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65oqrh", "likes": null, "replies": "", "user_reports": [], "id": "dgbygcm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rainlife", "parent_id": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks for posting - Elixir is one of the languages I wanted to dive into next, nice to have a starting point.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for posting - Elixir is one of the languages I wanted to dive into next, nice to have a starting point.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgbygcm", "score_hidden": false, "stickied": false, "created": 1492372588.0, "created_utc": 1492343788.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65oqrh", "likes": null, "replies": "", "user_reports": [], "id": "dgc3ok2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "reIuctant", "parent_id": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Good article, elixir is one of those languages I've been looking at. Can't wait for the next.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good article, elixir is one of those languages I&amp;#39;ve been looking at. Can&amp;#39;t wait for the next.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgc3ok2", "score_hidden": false, "stickied": false, "created": 1492382819.0, "created_utc": 1492354019.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65oqrh", "likes": null, "replies": "", "user_reports": [], "id": "dgco1yc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Wolfspaw", "parent_id": "t3_65oqrh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Not convinced yet, let's see after the rest of the series =x", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not convinced yet, let&amp;#39;s see after the rest of the series =x&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgco1yc", "score_hidden": false, "stickied": false, "created": 1492409926.0, "created_utc": 1492381126.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]