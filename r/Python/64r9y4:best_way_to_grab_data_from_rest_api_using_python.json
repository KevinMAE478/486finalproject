[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I started using dashing for a dashboard but then quickly moved to django-dashing because it is python based. My Boss wants AWS metrics, Jenkins, Jira and misc REST API grabs so I wanted to do it in python. What is the best way to go about this? I was planning on doing python scripts to grab the data and then dump the results to S3 and have the front end in Javascript pick them up to parse and display them. Any suggestions?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I started using dashing for a dashboard but then quickly moved to django-dashing because it is python based. My Boss wants AWS metrics, Jenkins, Jira and misc REST API grabs so I wanted to do it in python. What is the best way to go about this? I was planning on doing python scripts to grab the data and then dump the results to S3 and have the front end in Javascript pick them up to parse and display them. Any suggestions?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "64r9y4", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 3, "report_reasons": null, "author": "buildmystartup", "saved": false, "mod_reports": [], "name": "t3_64r9y4", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/64r9y4/best_way_to_grab_data_from_rest_api_using_python/", "num_reports": null, "locked": false, "stickied": false, "created": 1491950960.0, "url": "https://www.reddit.com/r/Python/comments/64r9y4/best_way_to_grab_data_from_rest_api_using_python/", "author_flair_text": null, "quarantine": false, "title": "Best way to grab data from REST API using python and / or Django for a dashboard?", "created_utc": 1491922160.0, "distinguished": null, "media": null, "upvote_ratio": 1.0, "num_comments": 2, "visited": false, "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_64r9y4", "likes": null, "replies": "", "user_reports": [], "id": "dg4nelr", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "jturp-sc", "parent_id": "t3_64r9y4", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you're wanting to go completely serverless, then you could do something along the lines of implementing your various scripts as scheduled AWS Lambda functions and serve a static web page from S3 (using JS to pull data from your metrics bucket via another Lambda function)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re wanting to go completely serverless, then you could do something along the lines of implementing your various scripts as scheduled AWS Lambda functions and serve a static web page from S3 (using JS to pull data from your metrics bucket via another Lambda function)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg4nelr", "score_hidden": false, "stickied": false, "created": 1491962733.0, "created_utc": 1491933933.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_64r9y4", "likes": null, "replies": "", "user_reports": [], "id": "dg4oqwo", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "stoicaurelius", "parent_id": "t3_64r9y4", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you're using Django (And if I'm understanding this correctly), you'd probably want to create separate modules for each REST service within the Django application, and call your Classes in each of your respective Controllers before passing it to your View. (Open to feedback on this, I'm not the strongest with MVC)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re using Django (And if I&amp;#39;m understanding this correctly), you&amp;#39;d probably want to create separate modules for each REST service within the Django application, and call your Classes in each of your respective Controllers before passing it to your View. (Open to feedback on this, I&amp;#39;m not the strongest with MVC)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg4oqwo", "score_hidden": false, "stickied": false, "created": 1491964219.0, "created_utc": 1491935419.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]