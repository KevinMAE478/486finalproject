[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am a Java programmer as my day job and I want learn something new. So I know how for-loops and if statements work and what classes, object and whatever are. I just need to adjust the syntax. But pyhton has a lot of nice features that I don&amp;#39;t know about. What kind of learning resources would you suggest?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am a Java programmer as my day job and I want learn something new. So I know how for-loops and if statements work and what classes, object and whatever are. I just need to adjust the syntax. But pyhton has a lot of nice features that I don't know about. What kind of learning resources would you suggest?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65589r", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 313, "report_reasons": null, "author": "Zinnsoldat", "saved": false, "mod_reports": [], "name": "t3_65589r", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1492087957.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65589r/best_python_resources_for_experienced_programmers/", "num_reports": null, "locked": false, "stickied": false, "created": 1492116327.0, "url": "https://www.reddit.com/r/Python/comments/65589r/best_python_resources_for_experienced_programmers/", "author_flair_text": null, "quarantine": false, "title": "Best Python resources for experienced programmers?", "created_utc": 1492087527.0, "distinguished": null, "media": null, "upvote_ratio": 0.97, "num_comments": 69, "visited": false, "subreddit_type": "public", "ups": 313}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg97puc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "edric_garran", "parent_id": "t1_dg93zxw", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "the more the better", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;the more the better&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg97puc", "score_hidden": false, "stickied": false, "created": 1492209836.0, "created_utc": 1492181036.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg93zxw", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "parkerSquare", "parent_id": "t1_dg8pqqd", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Do it twice for extra security.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do it twice for extra security.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg93zxw", "score_hidden": false, "stickied": false, "created": 1492204529.0, "created_utc": 1492175729.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8pqqd", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "edric_garran", "parent_id": "t1_dg8mquy", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "also, always rot13 everything after you cryptograph it, you can never be too sure.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;also, always rot13 everything after you cryptograph it, you can never be too sure.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8pqqd", "score_hidden": false, "stickied": false, "created": 1492170352.0, "created_utc": 1492141552.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8mquy", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "carnoworky", "parent_id": "t1_dg8fqa4", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "*Especially* the algorithms. You should definitely make your own crypto algorithms and implement them. Can't crack it if you don't know how it works!\n\n\n\n^^^^^^/s", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Especially&lt;/em&gt; the algorithms. You should definitely make your own crypto algorithms and implement them. Can&amp;#39;t crack it if you don&amp;#39;t know how it works!&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;/s&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8mquy", "score_hidden": false, "stickied": false, "created": 1492165823.0, "created_utc": 1492137023.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 12}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8fqa4", "gilded": 0, "archived": false, "score": 22, "report_reasons": null, "author": "flashman", "parent_id": "t1_dg7ttv5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "pfft everyone knows you should roll your own crypto\n\nedit: do not roll your own crypto", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;pfft everyone knows you should roll your own crypto&lt;/p&gt;\n\n&lt;p&gt;edit: do not roll your own crypto&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8fqa4", "score_hidden": false, "stickied": false, "created": 1492156121.0, "created_utc": 1492127321.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 22}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8eox8", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "continue_stocking", "parent_id": "t1_dg8br1a", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "One thing led to another, and I ended up spending more time than I would like to admit fiddling around with the cryptography module.  Made a simple file encryption script, and then another for decrypting the file output by the first.\n\nFun times.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One thing led to another, and I ended up spending more time than I would like to admit fiddling around with the cryptography module.  Made a simple file encryption script, and then another for decrypting the file output by the first.&lt;/p&gt;\n\n&lt;p&gt;Fun times.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8eox8", "score_hidden": false, "stickied": false, "created": 1492154747.0, "created_utc": 1492125947.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8br1a", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "theofpa", "parent_id": "t1_dg7ttv5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "More crypto libs: https://www.reddit.com/r/Python/comments/5gn3q8/what_crypto_library_should_one_use_in_python/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More crypto libs: &lt;a href=\"https://www.reddit.com/r/Python/comments/5gn3q8/what_crypto_library_should_one_use_in_python/\"&gt;https://www.reddit.com/r/Python/comments/5gn3q8/what_crypto_library_should_one_use_in_python/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8br1a", "score_hidden": false, "stickied": false, "created": 1492150838.0, "created_utc": 1492122038.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg92rzl", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mitchell271", "parent_id": "t1_dg7ttv5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you're ever looking for a hashing package, check out argon2-cffi. One of the better ones out there. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re ever looking for a hashing package, check out argon2-cffi. One of the better ones out there. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg92rzl", "score_hidden": false, "stickied": false, "created": 1492202348.0, "created_utc": 1492173548.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7ttv5", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "continue_stocking", "parent_id": "t1_dg7khyn", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I just bookmarked this so hard.\n\nI've been learning the basics of Python on codecademy, but they don't really touch on modules.  Feels like something of an omission.\n\nOh cool, cyrptographic modules!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just bookmarked this so hard.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been learning the basics of Python on codecademy, but they don&amp;#39;t really touch on modules.  Feels like something of an omission.&lt;/p&gt;\n\n&lt;p&gt;Oh cool, cyrptographic modules!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7ttv5", "score_hidden": false, "stickied": false, "created": 1492130818.0, "created_utc": 1492102018.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7xjrn", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Aceofsquares_orig", "parent_id": "t1_dg7khyn", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This is one of my favorite python sites and a go to for quick examples of the standard library. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is one of my favorite python sites and a go to for quick examples of the standard library. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7xjrn", "score_hidden": false, "stickied": false, "created": 1492134766.0, "created_utc": 1492105966.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7y46w", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "driscollis", "parent_id": "t1_dg7khyn", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I refer to this still...it's always been helpful. And there's a book version too!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I refer to this still...it&amp;#39;s always been helpful. And there&amp;#39;s a book version too!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7y46w", "score_hidden": false, "stickied": false, "created": 1492135364.0, "created_utc": 1492106564.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7khyn", "gilded": 0, "archived": false, "score": 129, "report_reasons": null, "author": "CraigTorso", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I quite like [Python Module of the Week](https://pymotw.com/3/) as a way of getting to know the nuts and bolts of the standard libs", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I quite like &lt;a href=\"https://pymotw.com/3/\"&gt;Python Module of the Week&lt;/a&gt; as a way of getting to know the nuts and bolts of the standard libs&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7khyn", "score_hidden": false, "stickied": false, "created": 1492120424.0, "created_utc": 1492091624.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 129}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7ouih", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Branch_McDaniel", "parent_id": "t1_dg7n5tn", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Fair enough. I've been programming Python for a while and got a lot out of it, but I didn't read the book through the lens of a new Python developer.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fair enough. I&amp;#39;ve been programming Python for a while and got a lot out of it, but I didn&amp;#39;t read the book through the lens of a new Python developer.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7ouih", "score_hidden": false, "stickied": false, "created": 1492125504.0, "created_utc": 1492096704.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8m3ok", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "deadmilk", "parent_id": "t1_dg7n5tn", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yeah, FP is definitely not for people unfamiliar with Python, but great once you've spent a while with it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, FP is definitely not for people unfamiliar with Python, but great once you&amp;#39;ve spent a while with it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8m3ok", "score_hidden": false, "stickied": false, "created": 1492164914.0, "created_utc": 1492136114.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7n5tn", "gilded": 0, "archived": false, "score": 22, "report_reasons": null, "author": "randcraw", "parent_id": "t1_dg7lm8v", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I bought FP due to the glowing reviews but found that it's intended for experienced Py programmers.  90% of its focus is on pythonic idioms and making the most of the object model.  I guess it does that well, but as a long time programmer, I wanted a fast boot into the language.  FP is not that.\n\nThe best free Py intro I've found for S/W pros is perhaps von Rossum's free Python Reference at python.org.  It's brilliantly clear though quite terse:  https://docs.python.org/3/reference/index.html .  The Python Tutorial is worth a look too:  https://docs.python.org/3/tutorial/\n\nIMHO, the best intro books on Py 3.X for S/W pros are \"Introducing Python\" by Lubanovic at 484 pages, or \"Quick Python\" by Ceder at ~400 pages.  Both waste little time on humor or trivialities, especially Lubanovic.", "edited": 1492095070.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I bought FP due to the glowing reviews but found that it&amp;#39;s intended for experienced Py programmers.  90% of its focus is on pythonic idioms and making the most of the object model.  I guess it does that well, but as a long time programmer, I wanted a fast boot into the language.  FP is not that.&lt;/p&gt;\n\n&lt;p&gt;The best free Py intro I&amp;#39;ve found for S/W pros is perhaps von Rossum&amp;#39;s free Python Reference at python.org.  It&amp;#39;s brilliantly clear though quite terse:  &lt;a href=\"https://docs.python.org/3/reference/index.html\"&gt;https://docs.python.org/3/reference/index.html&lt;/a&gt; .  The Python Tutorial is worth a look too:  &lt;a href=\"https://docs.python.org/3/tutorial/\"&gt;https://docs.python.org/3/tutorial/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;IMHO, the best intro books on Py 3.X for S/W pros are &amp;quot;Introducing Python&amp;quot; by Lubanovic at 484 pages, or &amp;quot;Quick Python&amp;quot; by Ceder at ~400 pages.  Both waste little time on humor or trivialities, especially Lubanovic.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7n5tn", "score_hidden": false, "stickied": false, "created": 1492123631.0, "created_utc": 1492094831.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 22}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg87b7s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TiredMike", "parent_id": "t1_dg7lm8v", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Completely agree. Reading it now. It's definitely for users with good Python knowledge already but it really takes this a step further.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Completely agree. Reading it now. It&amp;#39;s definitely for users with good Python knowledge already but it really takes this a step further.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg87b7s", "score_hidden": false, "stickied": false, "created": 1492145385.0, "created_utc": 1492116585.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7lm8v", "gilded": 0, "archived": false, "score": 50, "report_reasons": null, "author": "Branch_McDaniel", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "[Fluent Python](http://shop.oreilly.com/product/0636920032519.do) is great. It takes a deep dive into the language and illustrates Python's best features.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://shop.oreilly.com/product/0636920032519.do\"&gt;Fluent Python&lt;/a&gt; is great. It takes a deep dive into the language and illustrates Python&amp;#39;s best features.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7lm8v", "score_hidden": false, "stickied": false, "created": 1492121827.0, "created_utc": 1492093027.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 50}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dga21zq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ice-blade", "parent_id": "t1_dg8t095", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks for the comment, they are actually slides from an oral presentation I have at some Python meetups, so not exactly in a \"tutorial\" format but still useful I think.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the comment, they are actually slides from an oral presentation I have at some Python meetups, so not exactly in a &amp;quot;tutorial&amp;quot; format but still useful I think.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga21zq", "score_hidden": false, "stickied": false, "created": 1492247197.0, "created_utc": 1492218397.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8t095", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "RichKatz", "parent_id": "t1_dg7k8yk", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I like how its organized into Notebooks and has a sense of humor.  Thanks.\n\n", "edited": 1492149061.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like how its organized into Notebooks and has a sense of humor.  Thanks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8t095", "score_hidden": false, "stickied": false, "created": 1492176093.0, "created_utc": 1492147293.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7k8yk", "gilded": 0, "archived": false, "score": 12, "report_reasons": null, "author": "ice-blade", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you need  resources for the advanced features, may I suggest [my own repository](https://github.com/akittas/presentations/tree/master/pythess), covering things such as metclasses, functional programming, mro, descriptors etc :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you need  resources for the advanced features, may I suggest &lt;a href=\"https://github.com/akittas/presentations/tree/master/pythess\"&gt;my own repository&lt;/a&gt;, covering things such as metclasses, functional programming, mro, descriptors etc :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7k8yk", "score_hidden": false, "stickied": false, "created": 1492120104.0, "created_utc": 1492091304.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 12}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8nuhc", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "gradient_x", "parent_id": "t1_dg7wi3s", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Great book ... one of the best out there.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great book ... one of the best out there.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8nuhc", "score_hidden": false, "stickied": false, "created": 1492167428.0, "created_utc": 1492138628.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7wi3s", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "wamsachel", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "The effective programming series will always be my goto answer for these types of questions, regardless of language.\n\nhttp://www.effectivepython.com/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The effective programming series will always be my goto answer for these types of questions, regardless of language.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.effectivepython.com/\"&gt;http://www.effectivepython.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7wi3s", "score_hidden": false, "stickied": false, "created": 1492133653.0, "created_utc": 1492104853.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7humb", "gilded": 0, "archived": false, "score": 19, "report_reasons": null, "author": "RoaldDhalgren", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Just the python documentation.  Read the tutorial.  Then look at the Library and Language references as needed.  Google if you need code examples for something you don't understand.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just the python documentation.  Read the tutorial.  Then look at the Library and Language references as needed.  Google if you need code examples for something you don&amp;#39;t understand.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7humb", "score_hidden": false, "stickied": false, "created": 1492116728.0, "created_utc": 1492087928.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 19}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8ikof", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "clawlor", "parent_id": "t1_dg7mj7p", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt; And do not create mutators/accessors for properties unless you really need that abstraction.\n\nCan't +1 enough", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;And do not create mutators/accessors for properties unless you really need that abstraction.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Can&amp;#39;t +1 enough&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8ikof", "score_hidden": false, "stickied": false, "created": 1492160027.0, "created_utc": 1492131227.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg892ip", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kkiran", "parent_id": "t1_dg84wa2", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Guidelines.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Guidelines.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg892ip", "score_hidden": false, "stickied": false, "created": 1492147451.0, "created_utc": 1492118651.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg84wa2", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dg7mj7p", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "[deleted]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg84wa2", "score_hidden": false, "stickied": false, "created": 1492142682.0, "created_utc": 1492113882.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 0}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7mj7p", "gilded": 0, "archived": false, "score": 17, "report_reasons": null, "author": "bixmix", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Build something.  Seriously... this is the _best_ way to learn.\n\nThe problem you're going to run into is not Python so much as the API and the standard library.  And quite frankly, no book is going to change the fact that you need to remember some things.  Python's online documentation (or documentation you can grab from Dash) is excellent.  For questions, you can always do the ordinary Stack Overflow and google searches.\n\nAnd please, please use Pep8.  And do not create mutators/accessors for properties unless you really need that abstraction.", "edited": 1492094312.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Build something.  Seriously... this is the &lt;em&gt;best&lt;/em&gt; way to learn.&lt;/p&gt;\n\n&lt;p&gt;The problem you&amp;#39;re going to run into is not Python so much as the API and the standard library.  And quite frankly, no book is going to change the fact that you need to remember some things.  Python&amp;#39;s online documentation (or documentation you can grab from Dash) is excellent.  For questions, you can always do the ordinary Stack Overflow and google searches.&lt;/p&gt;\n\n&lt;p&gt;And please, please use Pep8.  And do not create mutators/accessors for properties unless you really need that abstraction.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7mj7p", "score_hidden": false, "stickied": false, "created": 1492122905.0, "created_utc": 1492094105.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 17}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8q7un", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dg8ih6i", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "The onelogin Saml2 package looks like it was lifted straight from Java into python by a very naive translation program. Classes with no initializer full of static methods and with an import path of `onelogin.saml2.utils.OneLogin_Saml2_Utils` ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The onelogin Saml2 package looks like it was lifted straight from Java into python by a very naive translation program. Classes with no initializer full of static methods and with an import path of &lt;code&gt;onelogin.saml2.utils.OneLogin_Saml2_Utils&lt;/code&gt; &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8q7un", "score_hidden": false, "stickied": false, "created": 1492171125.0, "created_utc": 1492142325.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8ih6i", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "clawlor", "parent_id": "t1_dg7nobw", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Idk, I sometimes see python code that was obviously written by a Java programmer. It's easy to write python that looks like Java if you try hard enough. So if you're coming from Java, perhaps a straight translation isn't the best way to go. I think you're more likely to end up with a more pythonic result by tackling a new problem. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Idk, I sometimes see python code that was obviously written by a Java programmer. It&amp;#39;s easy to write python that looks like Java if you try hard enough. So if you&amp;#39;re coming from Java, perhaps a straight translation isn&amp;#39;t the best way to go. I think you&amp;#39;re more likely to end up with a more pythonic result by tackling a new problem. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8ih6i", "score_hidden": false, "stickied": false, "created": 1492159895.0, "created_utc": 1492131095.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7nobw", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "TheSoundAurora", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Convert Java programs you've written into Python, that will show you how to do the things you know in a more \"Pythonic\" way.\n\n\nI was asked to convert a Perl script to Python and had to learn a lot in the process(particularly because I don't know or even like Perl).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Convert Java programs you&amp;#39;ve written into Python, that will show you how to do the things you know in a more &amp;quot;Pythonic&amp;quot; way.&lt;/p&gt;\n\n&lt;p&gt;I was asked to convert a Perl script to Python and had to learn a lot in the process(particularly because I don&amp;#39;t know or even like Perl).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7nobw", "score_hidden": false, "stickied": false, "created": 1492124213.0, "created_utc": 1492095413.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8ts11", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "RichKatz", "parent_id": "t1_dg84zo8", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Recent news from Beazley from February - 5th Edition work has started and will focus on Python 3.\n\nhttps://forum.dabeaz.com/t/python-essential-reference-5th-edition/145\n\nI learned from that book originally and it was recommended to me (by one of my best friends who is a Lisp programmer). \n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Recent news from Beazley from February - 5th Edition work has started and will focus on Python 3.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://forum.dabeaz.com/t/python-essential-reference-5th-edition/145\"&gt;https://forum.dabeaz.com/t/python-essential-reference-5th-edition/145&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I learned from that book originally and it was recommended to me (by one of my best friends who is a Lisp programmer). &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8ts11", "score_hidden": false, "stickied": false, "created": 1492177649.0, "created_utc": 1492148849.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg84zo8", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "hnyakwai", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Get the [Python Essential Reference](https://www.amazon.com/Python-Essential-Reference-David-Beazley/dp/0672329786) by David Beazley. I was in the same boat as you several years ago. I probably read 5-6 python books that were aimed at experienced developers, Dave's book is BY FAR the best that I found.\n\nHe just started working on the 5th edition, so the 4th edition is getting a little long in the tooth (python 3 was a new thing back then), but I can still whole-heartedly recommend it.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Get the &lt;a href=\"https://www.amazon.com/Python-Essential-Reference-David-Beazley/dp/0672329786\"&gt;Python Essential Reference&lt;/a&gt; by David Beazley. I was in the same boat as you several years ago. I probably read 5-6 python books that were aimed at experienced developers, Dave&amp;#39;s book is BY FAR the best that I found.&lt;/p&gt;\n\n&lt;p&gt;He just started working on the 5th edition, so the 4th edition is getting a little long in the tooth (python 3 was a new thing back then), but I can still whole-heartedly recommend it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg84zo8", "score_hidden": false, "stickied": false, "created": 1492142788.0, "created_utc": 1492113988.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8b9lz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "AndydeCleyre", "parent_id": "t1_dg7tjz6", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Came here to post this. Good stuff.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Came here to post this. Good stuff.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8b9lz", "score_hidden": false, "stickied": false, "created": 1492150202.0, "created_utc": 1492121402.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7tjz6", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "SukottoMaki", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you just want to quickly learn the basics of a language (and already know how to program), then I recommend \"Learn X in Y minutes\" which gives exactly the sort of information you've asked for.\n\nHere is the one for Python 3: https://learnxinyminutes.com/docs/python3/\n\nOr, if you want to use the older version, the one for Python 2.7: https://learnxinyminutes.com/docs/python/\n\n---\n\n[edit to add]\n\nYou can get a feel for the sorts of things they do and do not include by looking at the Java one: https://learnxinyminutes.com/docs/java/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you just want to quickly learn the basics of a language (and already know how to program), then I recommend &amp;quot;Learn X in Y minutes&amp;quot; which gives exactly the sort of information you&amp;#39;ve asked for.&lt;/p&gt;\n\n&lt;p&gt;Here is the one for Python 3: &lt;a href=\"https://learnxinyminutes.com/docs/python3/\"&gt;https://learnxinyminutes.com/docs/python3/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Or, if you want to use the older version, the one for Python 2.7: &lt;a href=\"https://learnxinyminutes.com/docs/python/\"&gt;https://learnxinyminutes.com/docs/python/&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;[edit to add]&lt;/p&gt;\n\n&lt;p&gt;You can get a feel for the sorts of things they do and do not include by looking at the Java one: &lt;a href=\"https://learnxinyminutes.com/docs/java/\"&gt;https://learnxinyminutes.com/docs/java/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7tjz6", "score_hidden": false, "stickied": false, "created": 1492130525.0, "created_utc": 1492101725.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7og60", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "xiongchiamiov", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "r/learnpython has [a section of resources](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_python.3F) for programmers coming from other languages.\n\nIf you're looking for ways to learn advanced python, [the suggested books list](https://www.reddit.com/r/learnpython/wiki/books) is categorized by level. I personally have found a lot of value by hanging out in Stack Overflow's python tag trying to answer questions and learning new things when you can't.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/r/learnpython\"&gt;r/learnpython&lt;/a&gt; has &lt;a href=\"https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_python.3F\"&gt;a section of resources&lt;/a&gt; for programmers coming from other languages.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re looking for ways to learn advanced python, &lt;a href=\"https://www.reddit.com/r/learnpython/wiki/books\"&gt;the suggested books list&lt;/a&gt; is categorized by level. I personally have found a lot of value by hanging out in Stack Overflow&amp;#39;s python tag trying to answer questions and learning new things when you can&amp;#39;t.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7og60", "score_hidden": false, "stickied": false, "created": 1492125063.0, "created_utc": 1492096263.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg82kq3", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Zinnsoldat", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thank you guys for all your replies! I will definitely look into some of them!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you guys for all your replies! I will definitely look into some of them!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg82kq3", "score_hidden": false, "stickied": false, "created": 1492140157.0, "created_utc": 1492111357.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg84qau", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "ryanstephendavis", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Dive into Python helped me immensely when I was in your position. It's annoying and a waste of time to go through Python books that assume you know nothing about programming.  This book does a great job of showing Python fundamentals in a concise manner.  Even reading the first three chapters is a great start.\nEDIT: it's also a waste of time (at first) to go through books that try to give you an in-depth look at Python when one knows none to begin with.  I see a lot of these suggested above... ", "edited": 1492333394.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dive into Python helped me immensely when I was in your position. It&amp;#39;s annoying and a waste of time to go through Python books that assume you know nothing about programming.  This book does a great job of showing Python fundamentals in a concise manner.  Even reading the first three chapters is a great start.\nEDIT: it&amp;#39;s also a waste of time (at first) to go through books that try to give you an in-depth look at Python when one knows none to begin with.  I see a lot of these suggested above... &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg84qau", "score_hidden": false, "stickied": false, "created": 1492142496.0, "created_utc": 1492113696.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg92266", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kkiran", "parent_id": "t1_dg8xhh5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yep, sent the email twice already. He used Content Shelf to deliver the pdf/epub previously. Looks like that changed too. I don't see any content on there except a receipt.\n\nAmazon books shows that 2016 update was minimal.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, sent the email twice already. He used Content Shelf to deliver the pdf/epub previously. Looks like that changed too. I don&amp;#39;t see any content on there except a receipt.&lt;/p&gt;\n\n&lt;p&gt;Amazon books shows that 2016 update was minimal.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg92266", "score_hidden": false, "stickied": false, "created": 1492200901.0, "created_utc": 1492172101.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8xhh5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pirateg3cko", "parent_id": "t1_dg8nmwi", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "He's a pretty friendly guy and his email is on his site. If you email him and explain, he'll likely help you out.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;He&amp;#39;s a pretty friendly guy and his email is on his site. If you email him and explain, he&amp;#39;ll likely help you out.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8xhh5", "score_hidden": false, "stickied": false, "created": 1492187459.0, "created_utc": 1492158659.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8nmwi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kkiran", "parent_id": "t1_dg898lx", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I got the 2013 version :( Looks like he switched the payment processor. I don't mind paying again but I barely have time to read it. Bought Fluent Python on Amazon last year.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I got the 2013 version :( Looks like he switched the payment processor. I don&amp;#39;t mind paying again but I barely have time to read it. Bought Fluent Python on Amazon last year.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8nmwi", "score_hidden": false, "stickied": false, "created": 1492167113.0, "created_utc": 1492138313.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg898lx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Flewloon", "parent_id": "t1_dg88yc9", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Not sure if he is still adding to it or not. The last version he released was Version 1.6 on June 20th 2016. I have both the 2.X and 3.X versions as well.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not sure if he is still adding to it or not. The last version he released was Version 1.6 on June 20th 2016. I have both the 2.X and 3.X versions as well.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg898lx", "score_hidden": false, "stickied": false, "created": 1492147657.0, "created_utc": 1492118857.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg88yc9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kkiran", "parent_id": "t1_dg81ij0", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I bought them years ago when he was selling his drafts. Never got the final version though. Do you know what happened?\n\nWhat is the version you have? I bought both 2.X and 3.X versions.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I bought them years ago when he was selling his drafts. Never got the final version though. Do you know what happened?&lt;/p&gt;\n\n&lt;p&gt;What is the version you have? I bought both 2.X and 3.X versions.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg88yc9", "score_hidden": false, "stickied": false, "created": 1492147311.0, "created_utc": 1492118511.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg81ij0", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Flewloon", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Not free but [Jeff Knupp's Writing Idiomatic Python](https://jeffknupp.com/writing-idiomatic-python-ebook/) is pretty great.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not free but &lt;a href=\"https://jeffknupp.com/writing-idiomatic-python-ebook/\"&gt;Jeff Knupp&amp;#39;s Writing Idiomatic Python&lt;/a&gt; is pretty great.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg81ij0", "score_hidden": false, "stickied": false, "created": 1492139001.0, "created_utc": 1492110201.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7y39n", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "driscollis", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "My books are aimed mostly at people who have programmed before, although I know plenty of beginners read them too. My Python 101 book is pay-what-you-want (including free): https://leanpub.com/python_101", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My books are aimed mostly at people who have programmed before, although I know plenty of beginners read them too. My Python 101 book is pay-what-you-want (including free): &lt;a href=\"https://leanpub.com/python_101\"&gt;https://leanpub.com/python_101&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7y39n", "score_hidden": false, "stickied": false, "created": 1492135336.0, "created_utc": 1492106536.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8756f", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "ddxgz", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can check the articles under tag python in https://www.linkedinfo.co", "edited": 1492116650.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can check the articles under tag python in &lt;a href=\"https://www.linkedinfo.co\"&gt;https://www.linkedinfo.co&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8756f", "score_hidden": false, "stickied": false, "created": 1492145194.0, "created_utc": 1492116394.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg87vfz", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "lroman", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Learning Python, from Lutz is a good place to start. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learning Python, from Lutz is a good place to start. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg87vfz", "score_hidden": false, "stickied": false, "created": 1492146019.0, "created_utc": 1492117219.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg88pgb", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "TastyMilksteaks", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I'm a big fan of exercism.io for learning any language. It's got a lot of great exercises for Python.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a big fan of exercism.io for learning any language. It&amp;#39;s got a lot of great exercises for Python.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg88pgb", "score_hidden": false, "stickied": false, "created": 1492147014.0, "created_utc": 1492118214.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8ankv", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "breamoreboy", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Try [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java is not Python, either...](http://dirtsimple.org/2004/12/python-is-not-java.html).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try &lt;a href=\"http://dirtsimple.org/2004/12/python-is-not-java.html\"&gt;Python Is Not Java&lt;/a&gt; and &lt;a href=\"http://dirtsimple.org/2004/12/python-is-not-java.html\"&gt;Java is not Python, either...&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8ankv", "score_hidden": false, "stickied": false, "created": 1492149421.0, "created_utc": 1492120621.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8587x", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "baktun", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Violent Python a cookbook for Hackers really helped me grasp Python &amp; module basics. Even if your intention isnt to penetration test, it will teach u about modules and iteration very quickly. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Violent Python a cookbook for Hackers really helped me grasp Python &amp;amp; module basics. Even if your intention isnt to penetration test, it will teach u about modules and iteration very quickly. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8587x", "score_hidden": false, "stickied": false, "created": 1492143051.0, "created_utc": 1492114251.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8fzab", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "tucker-", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You get used to syntax by coding.\n\nstackoverflow is good when you have specific questions", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You get used to syntax by coding.&lt;/p&gt;\n\n&lt;p&gt;stackoverflow is good when you have specific questions&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8fzab", "score_hidden": false, "stickied": false, "created": 1492156468.0, "created_utc": 1492127668.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8mq4l", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "deadmilk", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "cpython internals:\nhttps://www.youtube.com/playlist?list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S\n\nbunch of great python talks:\nhttps://www.youtube.com/playlist?list=PLPfL8-ZJA9kY10vL_K8_c3ALMUtEpClow\n\nI learnt a lot of great things from david beazley and raymond hettinger", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;cpython internals:\n&lt;a href=\"https://www.youtube.com/playlist?list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S\"&gt;https://www.youtube.com/playlist?list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;bunch of great python talks:\n&lt;a href=\"https://www.youtube.com/playlist?list=PLPfL8-ZJA9kY10vL_K8_c3ALMUtEpClow\"&gt;https://www.youtube.com/playlist?list=PLPfL8-ZJA9kY10vL_K8_c3ALMUtEpClow&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I learnt a lot of great things from david beazley and raymond hettinger&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8mq4l", "score_hidden": false, "stickied": false, "created": 1492165793.0, "created_utc": 1492136993.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8nr18", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "_foundling_", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Beyond reading the python docs, Fluent Python is the best Python book I've come across so far. Lot of love in that book.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Beyond reading the python docs, Fluent Python is the best Python book I&amp;#39;ve come across so far. Lot of love in that book.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8nr18", "score_hidden": false, "stickied": false, "created": 1492167284.0, "created_utc": 1492138484.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg894iz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kkiran", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Decorators can take you for a spin! Pay close attention. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Decorators can take you for a spin! Pay close attention. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg894iz", "score_hidden": false, "stickied": false, "created": 1492147519.0, "created_utc": 1492118719.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg911ot", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "snaaaaaaaaaaaaake", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Just please, for the love of Pete, write code pythonicly once you learn. Having to maintain a codebase written by people who bring in oddball stuff from other languages kills a lot of what's great about Python (like readability.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just please, for the love of Pete, write code pythonicly once you learn. Having to maintain a codebase written by people who bring in oddball stuff from other languages kills a lot of what&amp;#39;s great about Python (like readability.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg911ot", "score_hidden": false, "stickied": false, "created": 1492198550.0, "created_utc": 1492169750.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg918ha", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "SethGecko11", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Check out [this talk](https://www.youtube.com/watch?v=OSGv2VnC0go) by Raymond Hettinger or any other of his talks really", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check out &lt;a href=\"https://www.youtube.com/watch?v=OSGv2VnC0go\"&gt;this talk&lt;/a&gt; by Raymond Hettinger or any other of his talks really&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg918ha", "score_hidden": false, "stickied": false, "created": 1492199016.0, "created_utc": 1492170216.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg9hnfp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rMBP", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I've heard Java uses classes for everything, and I'm guessing a Java dev would do the same in Python. So make sure you know how Python's super() method behaves.  \n[Raymond Hettinger - Super considered super! - PyCon 2015](https://www.youtube.com/watch?v=EiOglTERPEo)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve heard Java uses classes for everything, and I&amp;#39;m guessing a Java dev would do the same in Python. So make sure you know how Python&amp;#39;s super() method behaves.&lt;br/&gt;\n&lt;a href=\"https://www.youtube.com/watch?v=EiOglTERPEo\"&gt;Raymond Hettinger - Super considered super! - PyCon 2015&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9hnfp", "score_hidden": false, "stickied": false, "created": 1492221365.0, "created_utc": 1492192565.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg9jbo5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Paddy3118", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You might try contrasting Python and Java examples for implementing the same tasks on site rosettacode.org.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might try contrasting Python and Java examples for implementing the same tasks on site rosettacode.org.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9jbo5", "score_hidden": false, "stickied": false, "created": 1492223341.0, "created_utc": 1492194541.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8mixm", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "deadmilk", "parent_id": "t1_dg7ny2e", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It's not true at all\n\nfor loops iterate over an iterable\n\nall generators are iterable by definition", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not true at all&lt;/p&gt;\n\n&lt;p&gt;for loops iterate over an iterable&lt;/p&gt;\n\n&lt;p&gt;all generators are iterable by definition&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8mixm", "score_hidden": false, "stickied": false, "created": 1492165504.0, "created_utc": 1492136704.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg88sli", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mothzilla", "parent_id": "t1_dg84vqq", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yeah, so for loops just look for (and call) an \\_\\_iter__ method. That's the better way of thinking about it, rather than some magical creation taking place.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, so for loops just look for (and call) an __iter__ method. That&amp;#39;s the better way of thinking about it, rather than some magical creation taking place.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg88sli", "score_hidden": false, "stickied": false, "created": 1492147120.0, "created_utc": 1492118320.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg84vqq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "COAST_TO_RED_LIGHTS", "parent_id": "t1_dg7ny2e", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I think it can depend on how a class is implemented.\n\nI'm not sure how the internals work for lists and tuples, but you could create your own iterator class and return a generator in your __iter__ method, so the person above you may be talking about that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it can depend on how a class is implemented.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not sure how the internals work for lists and tuples, but you could create your own iterator class and return a generator in your &lt;strong&gt;iter&lt;/strong&gt; method, so the person above you may be talking about that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg84vqq", "score_hidden": false, "stickied": false, "created": 1492142665.0, "created_utc": 1492113865.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7ny2e", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "mothzilla", "parent_id": "t1_dg7ilbz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt; for loops actually create generator expressions\n\nI'm not sure that's true.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;for loops actually create generator expressions&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m not sure that&amp;#39;s true.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7ny2e", "score_hidden": false, "stickied": false, "created": 1492124508.0, "created_utc": 1492095708.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7vquk", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "ZeeD26", "parent_id": "t1_dg7ilbz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Your generator could live without the argument and why not use a for loop with range(10)? ;)\nAnd a generator makes up values on the fly as opposed to a list, the for loop itself has no say in this afaik", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your generator could live without the argument and why not use a for loop with range(10)? ;)\nAnd a generator makes up values on the fly as opposed to a list, the for loop itself has no say in this afaik&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7vquk", "score_hidden": false, "stickied": false, "created": 1492132850.0, "created_utc": 1492104050.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8af9l", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "breamoreboy", "parent_id": "t1_dg7oubz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "According to [Generator (computer programming)](https://en.wikipedia.org/wiki/Generator_(computer_programming)) \"Generators first appeared in CLU (1975)\" so I'd suggest that they are anything but unusual.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;According to &lt;a href=\"https://en.wikipedia.org/wiki/Generator_(computer_programming\"&gt;Generator (computer programming)&lt;/a&gt;) &amp;quot;Generators first appeared in CLU (1975)&amp;quot; so I&amp;#39;d suggest that they are anything but unusual.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8af9l", "score_hidden": false, "stickied": false, "created": 1492149132.0, "created_utc": 1492120332.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7oubz", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "chillysurfer", "parent_id": "t1_dg7ilbz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt; Generators are a bit unusual I think\n\nI have to agree here. They can be odd in the beginning to grok, but once you understand them a lot of fogginess with python is cleared up.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Generators are a bit unusual I think&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I have to agree here. They can be odd in the beginning to grok, but once you understand them a lot of fogginess with python is cleared up.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7oubz", "score_hidden": false, "stickied": false, "created": 1492125498.0, "created_utc": 1492096698.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7ilbz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "not_perfect_yet", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Generators are a bit unusual I think.\n\nNormally you can only iterate over lists or arrays or something like that, in python, for loops actually create generator expressions that are used to feed you values.\n\n    def tenrandomnumbers(l):\n\n        c=0\n        while c &lt; 10:\n            yield random.random()\n            c+=1\n\nThen this will print your ten random numbers:\n\n    for i in tenrandomnumbers():\n        print(i)\n\nThe \"yield\" is the keyword and the important bit is that it doesn't matter at all *what* you yield. It doesn't have to be in an iterable list or anything and the thing you're iterating over doesn't even have to be fully defined or complete. You probably could build a webscraper that gets you a random website *inside the generator* and returns that to you. Anyway read the docs on that.\n\nBesides that, what I find pretty awesome is that you can create and assign types on the fly. Meaning you can have your program run, do stuff and create a new type from the output and assign that directly to something and continue your work, whatever it is.\n\nThe real strength of python is in the available modules though and there are too many to list and they're too diverse to explain.\n\nYou can easily overload basic operators like \"+\" too. Just define an \\_\\_add\\_\\_ method. I don't know how common or easy that is in other languages.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Generators are a bit unusual I think.&lt;/p&gt;\n\n&lt;p&gt;Normally you can only iterate over lists or arrays or something like that, in python, for loops actually create generator expressions that are used to feed you values.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def tenrandomnumbers(l):\n\n    c=0\n    while c &amp;lt; 10:\n        yield random.random()\n        c+=1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then this will print your ten random numbers:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i in tenrandomnumbers():\n    print(i)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &amp;quot;yield&amp;quot; is the keyword and the important bit is that it doesn&amp;#39;t matter at all &lt;em&gt;what&lt;/em&gt; you yield. It doesn&amp;#39;t have to be in an iterable list or anything and the thing you&amp;#39;re iterating over doesn&amp;#39;t even have to be fully defined or complete. You probably could build a webscraper that gets you a random website &lt;em&gt;inside the generator&lt;/em&gt; and returns that to you. Anyway read the docs on that.&lt;/p&gt;\n\n&lt;p&gt;Besides that, what I find pretty awesome is that you can create and assign types on the fly. Meaning you can have your program run, do stuff and create a new type from the output and assign that directly to something and continue your work, whatever it is.&lt;/p&gt;\n\n&lt;p&gt;The real strength of python is in the available modules though and there are too many to list and they&amp;#39;re too diverse to explain.&lt;/p&gt;\n\n&lt;p&gt;You can easily overload basic operators like &amp;quot;+&amp;quot; too. Just define an __add__ method. I don&amp;#39;t know how common or easy that is in other languages.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7ilbz", "score_hidden": false, "stickied": false, "created": 1492117842.0, "created_utc": 1492089042.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7j8yy", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "rvarinder", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I have been good experience of learning python from Udemy. Check out [Udemy Python Tutorials](http://gainfromhere.com/python-programming-language/) . I hope you will find it helpful. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have been good experience of learning python from Udemy. Check out &lt;a href=\"http://gainfromhere.com/python-programming-language/\"&gt;Udemy Python Tutorials&lt;/a&gt; . I hope you will find it helpful. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7j8yy", "score_hidden": false, "stickied": false, "created": 1492118776.0, "created_utc": 1492089976.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg7oraz", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "jsprada", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Codeacademy has a free Python introduction course.  It does a good job of covering the basics.  It should be enough to kick you down the right direction. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Codeacademy has a free Python introduction course.  It does a good job of covering the basics.  It should be enough to kick you down the right direction. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7oraz", "score_hidden": false, "stickied": false, "created": 1492125405.0, "created_utc": 1492096605.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg81tdt", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "lostburner", "parent_id": "t1_dg7qasa", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This is not especially helpful.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is not especially helpful.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg81tdt", "score_hidden": false, "stickied": false, "created": 1492139335.0, "created_utc": 1492110535.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7qasa", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "quotemycode", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You don't know what for loops are. Have you ever used an Else as part of your for loop?  Python makes you think different. You shouldn't write Python with a Java mindset. Go back and learn those \"I already know how to do that\" things again. You'll be glad you did", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t know what for loops are. Have you ever used an Else as part of your for loop?  Python makes you think different. You shouldn&amp;#39;t write Python with a Java mindset. Go back and learn those &amp;quot;I already know how to do that&amp;quot; things again. You&amp;#39;ll be glad you did&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7qasa", "score_hidden": false, "stickied": false, "created": 1492127051.0, "created_utc": 1492098251.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65589r", "likes": null, "replies": "", "user_reports": [], "id": "dg8nhqu", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "Secondsemblance", "parent_id": "t3_65589r", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "My go to resource is https://google.com", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My go to resource is &lt;a href=\"https://google.com\"&gt;https://google.com&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg8nhqu", "score_hidden": false, "stickied": false, "created": 1492166906.0, "created_utc": 1492138106.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -3}}], "after": null, "before": null}}]