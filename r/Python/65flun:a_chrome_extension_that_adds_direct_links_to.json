[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65flun", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 360, "report_reasons": null, "author": "fiatjaf", "saved": false, "mod_reports": [], "name": "t3_65flun", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "fiatjaf.alhur.es", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65flun/a_chrome_extension_that_adds_direct_links_to/", "num_reports": null, "locked": false, "stickied": false, "created": 1492236906.0, "url": "http://fiatjaf.alhur.es/module-linker/#/python", "author_flair_text": null, "quarantine": false, "title": "A Chrome Extension that adds direct links to `import` and `from ... import` statements on GitHub", "created_utc": 1492208106.0, "distinguished": null, "media": null, "upvote_ratio": 0.95, "num_comments": 36, "visited": false, "subreddit_type": "public", "ups": 360}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgaqvcv", "gilded": 0, "archived": false, "score": 7, "report_reasons": null, "author": "Sleisl", "parent_id": "t1_dga3xxl", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Put that quote in the readme!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Put that quote in the readme!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgaqvcv", "score_hidden": false, "stickied": false, "created": 1492297960.0, "created_utc": 1492269160.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 7}}], "after": null, "before": null}}, "user_reports": [], "id": "dga3xxl", "gilded": 0, "archived": false, "score": 30, "report_reasons": null, "author": "zagrebelin", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "The best Google Chrome Extension I saw this year.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The best Google Chrome Extension I saw this year.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga3xxl", "score_hidden": false, "stickied": false, "created": 1492249800.0, "created_utc": 1492221000.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 30}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dg9w620", "gilded": 0, "archived": false, "score": 24, "report_reasons": null, "author": "graingert", "parent_id": "t1_dg9ugvy", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "gitlab support? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;gitlab support? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9w620", "score_hidden": false, "stickied": false, "created": 1492239360.0, "created_utc": 1492210560.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 24}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgakw7g", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "MachaHack", "parent_id": "t1_dg9ugvy", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "So I've written chrome extensions that just worked on Firefox before, but since Firefox's web extension support is still a work in progress it's possible that you used APIs Firefox doesn't support yet. I'll take a look since this is pretty useful, but no promises :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;ve written chrome extensions that just worked on Firefox before, but since Firefox&amp;#39;s web extension support is still a work in progress it&amp;#39;s possible that you used APIs Firefox doesn&amp;#39;t support yet. I&amp;#39;ll take a look since this is pretty useful, but no promises :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgakw7g", "score_hidden": false, "stickied": false, "created": 1492287052.0, "created_utc": 1492258252.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgbe8wq", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Muchoz", "parent_id": "t1_dgb8ris", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Sweet! Thanks for making Module Linker btw!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sweet! Thanks for making Module Linker btw!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgbe8wq", "score_hidden": false, "stickied": false, "created": 1492330368.0, "created_utc": 1492301568.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgb8ris", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgapyjr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It should be fixed on https://github.com/fiatjaf/module-linker/commit/f221bac13544517e47d43ed5b7270394c7c4a664", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It should be fixed on &lt;a href=\"https://github.com/fiatjaf/module-linker/commit/f221bac13544517e47d43ed5b7270394c7c4a664\"&gt;https://github.com/fiatjaf/module-linker/commit/f221bac13544517e47d43ed5b7270394c7c4a664&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgb8ris", "score_hidden": false, "stickied": false, "created": 1492322536.0, "created_utc": 1492293736.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgapyjr", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Muchoz", "parent_id": "t1_dgapwfm", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Sweet, I'll report future issues on GitHub. Could you reply here once it's fixed perhaps?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sweet, I&amp;#39;ll report future issues on GitHub. Could you reply here once it&amp;#39;s fixed perhaps?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgapyjr", "score_hidden": false, "stickied": false, "created": 1492296608.0, "created_utc": 1492267808.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgapwfm", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgap004", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Ok, I get it. I can only now see that the matching algorithm I'm using is pretty na\u00efve, not considering leading `.` in import paths. Gonna fix this.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ok, I get it. I can only now see that the matching algorithm I&amp;#39;m using is pretty na\u00efve, not considering leading &lt;code&gt;.&lt;/code&gt; in import paths. Gonna fix this.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgapwfm", "score_hidden": false, "stickied": false, "created": 1492296517.0, "created_utc": 1492267717.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dgap004", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Muchoz", "parent_id": "t1_dganoot", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Here is a good example: https://github.com/django/django/blob/master/django/template/__init__.py#L55\n\nClick on:\n\n    from .base import VariableDoesNotExist                                  # NOQA isort:skip\n\nIt will redirect you to https://github.com/django/django/blob/master/tests/messages_tests/base.py instead of https://github.com/django/django/blob/master/django/template/base.py", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is a good example: &lt;a href=\"https://github.com/django/django/blob/master/django/template/__init__.py#L55\"&gt;https://github.com/django/django/blob/master/django/template/__init__.py#L55&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Click on:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from .base import VariableDoesNotExist                                  # NOQA isort:skip\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It will redirect you to &lt;a href=\"https://github.com/django/django/blob/master/tests/messages_tests/base.py\"&gt;https://github.com/django/django/blob/master/tests/messages_tests/base.py&lt;/a&gt; instead of &lt;a href=\"https://github.com/django/django/blob/master/django/template/base.py\"&gt;https://github.com/django/django/blob/master/django/template/base.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgap004", "score_hidden": false, "stickied": false, "created": 1492295111.0, "created_utc": 1492266311.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dganoot", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgailo8", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Can you give me a link? It should work well with relative modules (at least I tried in multiple complex contexts -- in which I myself couldn't understand from where the hell these modules were being imported).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can you give me a link? It should work well with relative modules (at least I tried in multiple complex contexts -- in which I myself couldn&amp;#39;t understand from where the hell these modules were being imported).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dganoot", "score_hidden": false, "stickied": false, "created": 1492292864.0, "created_utc": 1492264064.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgailo8", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "Muchoz", "parent_id": "t1_dg9ugvy", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "On mobile right now, but I tested it and it doesn't work well with relative imports in Python.\n\n    from .exceptions import SomeException\n\nThat would go to a Python file called exceptions, but in my case it wouldn't be in the right module.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On mobile right now, but I tested it and it doesn&amp;#39;t work well with relative imports in Python.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from .exceptions import SomeException\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That would go to a Python file called exceptions, but in my case it wouldn&amp;#39;t be in the right module.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgailo8", "score_hidden": false, "stickied": false, "created": 1492280474.0, "created_utc": 1492251674.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgayspi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Combinatorilliance", "parent_id": "t1_dg9ugvy", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Aren't all chrome extensions WebExtensions? If that's the case, you should be able to get this to work on Firefox without much of a hassle.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aren&amp;#39;t all chrome extensions WebExtensions? If that&amp;#39;s the case, you should be able to get this to work on Firefox without much of a hassle.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgayspi", "score_hidden": false, "stickied": false, "created": 1492308928.0, "created_utc": 1492280128.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9ugvy", "gilded": 0, "archived": false, "score": 21, "report_reasons": null, "author": "fiatjaf", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Please see the link for screenshots and a gif screencast if you didn't get what this extension does.\n\nI would like some feedback, positive or negative, or suggestions of how to improve and make this more useful for Python programmers who spend some time reading other people's code on GitHub (or whatever).\n\n(I also would like some help making this work on Firefox, if you happen to know how to do it -- I thought it would work seamlessly with the same code used for the Chrome Extension, but it didn't)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please see the link for screenshots and a gif screencast if you didn&amp;#39;t get what this extension does.&lt;/p&gt;\n\n&lt;p&gt;I would like some feedback, positive or negative, or suggestions of how to improve and make this more useful for Python programmers who spend some time reading other people&amp;#39;s code on GitHub (or whatever).&lt;/p&gt;\n\n&lt;p&gt;(I also would like some help making this work on Firefox, if you happen to know how to do it -- I thought it would work seamlessly with the same code used for the Chrome Extension, but it didn&amp;#39;t)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9ugvy", "score_hidden": false, "stickied": false, "created": 1492237079.0, "created_utc": 1492208279.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 21}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dga2zi1", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "lostburner", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This looks pretty cool! Look forward to trying it out. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This looks pretty cool! Look forward to trying it out. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga2zi1", "score_hidden": false, "stickied": false, "created": 1492248494.0, "created_utc": 1492219694.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dga4szf", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "__hipster", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Personally, I think this is brilliant and look forward to testing it out! ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Personally, I think this is brilliant and look forward to testing it out! &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga4szf", "score_hidden": false, "stickied": false, "created": 1492251031.0, "created_utc": 1492222231.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgai0tv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "brtt3000", "parent_id": "t1_dgahn2n", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I think the resolution would be the easy part, python itself has the tools and it is documented so you basically do a 'pip install' and get reliable results to resolve with.\n\nThe hard part is being able to figure out what to install. If you'd browse a github from a pip installable package you find the setup.py and such easily. Could be a bit harder and with assumptions if you also want requirements.txt and whatever else that is less standardised.\n\nI feel this kinda stuff must have been tried right? Parsing dependencies from random projects? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think the resolution would be the easy part, python itself has the tools and it is documented so you basically do a &amp;#39;pip install&amp;#39; and get reliable results to resolve with.&lt;/p&gt;\n\n&lt;p&gt;The hard part is being able to figure out what to install. If you&amp;#39;d browse a github from a pip installable package you find the setup.py and such easily. Could be a bit harder and with assumptions if you also want requirements.txt and whatever else that is less standardised.&lt;/p&gt;\n\n&lt;p&gt;I feel this kinda stuff must have been tried right? Parsing dependencies from random projects? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgai0tv", "score_hidden": false, "stickied": false, "created": 1492278595.0, "created_utc": 1492249795.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgahn2n", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "suudo", "parent_id": "t1_dgafcz7", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I could make a web service or library that does that parsing, but in the case of 'discord' there's another older project that converts Gregorian dates to some ridiculous Discordian date scheme that's higher precedence on pypi for some reason so searching pypi wouldn't work. It's an interesting problem to try to solve but in the end it would be as difficult as blocking curse words, the amount of complexity would be approaching AI.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I could make a web service or library that does that parsing, but in the case of &amp;#39;discord&amp;#39; there&amp;#39;s another older project that converts Gregorian dates to some ridiculous Discordian date scheme that&amp;#39;s higher precedence on pypi for some reason so searching pypi wouldn&amp;#39;t work. It&amp;#39;s an interesting problem to try to solve but in the end it would be as difficult as blocking curse words, the amount of complexity would be approaching AI.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgahn2n", "score_hidden": false, "stickied": false, "created": 1492277359.0, "created_utc": 1492248559.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgafcz7", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "brtt3000", "parent_id": "t1_dgaf13z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Welllll... the information is there. You could parse requirements and setup.py and such, download the packages and build the import lookup and resolve... \n\nMaybe a little bit out of scope.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Welllll... the information is there. You could parse requirements and setup.py and such, download the packages and build the import lookup and resolve... &lt;/p&gt;\n\n&lt;p&gt;Maybe a little bit out of scope.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgafcz7", "score_hidden": false, "stickied": false, "created": 1492270515.0, "created_utc": 1492241715.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgauzqv", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "christian-mann", "parent_id": "t1_dgau1rr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Herp. I was wondering when they added the `const` keyword to Python lol.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Herp. I was wondering when they added the &lt;code&gt;const&lt;/code&gt; keyword to Python lol.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgauzqv", "score_hidden": false, "stickied": false, "created": 1492303762.0, "created_utc": 1492274962.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgau1rr", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "suudo", "parent_id": "t1_dgatwjs", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It's JavaScript, not python", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s JavaScript, not python&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgau1rr", "score_hidden": false, "stickied": false, "created": 1492302421.0, "created_utc": 1492273621.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dgatwjs", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "christian-mann", "parent_id": "t1_dgaf13z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Why is `stdlib` a dict and not a set?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why is &lt;code&gt;stdlib&lt;/code&gt; a dict and not a set?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgatwjs", "score_hidden": false, "stickied": false, "created": 1492302224.0, "created_utc": 1492273424.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgafati", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Farkeman", "parent_id": "t1_dgaf13z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can do several things. Pattern prediction, checking package tree etc. But it would be quite a bit of extra work for what seems to be a rare case. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can do several things. Pattern prediction, checking package tree etc. But it would be quite a bit of extra work for what seems to be a rare case. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgafati", "score_hidden": false, "stickied": false, "created": 1492270350.0, "created_utc": 1492241550.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dganmzd", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgaf13z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yes, that's it. Thank you for answering this question.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, that&amp;#39;s it. Thank you for answering this question.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dganmzd", "score_hidden": false, "stickied": false, "created": 1492292777.0, "created_utc": 1492263977.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaf13z", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "suudo", "parent_id": "t1_dgaaunh", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It checks if the module is in stdlib ([with a long array of module names](https://github.com/fiatjaf/module-linker/blob/master/languages/python.js#L139)), then it checks for relative paths, then it checks pypi for matching projects there. It doesn't resolve github links for the last one, just links straight to pypi. In the case of, for example, [discord](https://github.com/blha303/gitlab-discord-bridge/blob/master/phony.py#L2), the link it resolves doesn't work because the Discord python wrapper is [discord.py](https://pypi.python.org/pypi/discord.py/) on pypi. There's really nothing anyone can do to fix this problem.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It checks if the module is in stdlib (&lt;a href=\"https://github.com/fiatjaf/module-linker/blob/master/languages/python.js#L139\"&gt;with a long array of module names&lt;/a&gt;), then it checks for relative paths, then it checks pypi for matching projects there. It doesn&amp;#39;t resolve github links for the last one, just links straight to pypi. In the case of, for example, &lt;a href=\"https://github.com/blha303/gitlab-discord-bridge/blob/master/phony.py#L2\"&gt;discord&lt;/a&gt;, the link it resolves doesn&amp;#39;t work because the Discord python wrapper is &lt;a href=\"https://pypi.python.org/pypi/discord.py/\"&gt;discord.py&lt;/a&gt; on pypi. There&amp;#39;s really nothing anyone can do to fix this problem.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgaf13z", "score_hidden": false, "stickied": false, "created": 1492269647.0, "created_utc": 1492240847.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 11}}], "after": null, "before": null}}, "user_reports": [], "id": "dgaaunh", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "trcx", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "How does the logic behind the scenes work?  How does it know the url to flask? Does it pull the information from pip and find the github link or does it just search github? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How does the logic behind the scenes work?  How does it know the url to flask? Does it pull the information from pip and find the github link or does it just search github? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgaaunh", "score_hidden": false, "stickied": false, "created": 1492260549.0, "created_utc": 1492231749.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgahviq", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "MrMetalfreak94", "parent_id": "t1_dgagmuz", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Only if OP decides to port it. Firefox recently changed the extension API to make this easier, so hopefully he will get around to it", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Only if OP decides to port it. Firefox recently changed the extension API to make this easier, so hopefully he will get around to it&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgahviq", "score_hidden": false, "stickied": false, "created": 1492278121.0, "created_utc": 1492249321.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgagmuz", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Cthunix", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Is there something like this for fire to?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there something like this for fire to?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgagmuz", "score_hidden": false, "stickied": false, "created": 1492274169.0, "created_utc": 1492245369.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgapzcl", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgapbcw", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I never worked with private repositories in my life. Does the API works the same? If it is, you can just generate a personal token with access to private repositories and provide it in Module Linker options.\n\nWhat am I missing? Can you please test it for me and see if it works?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I never worked with private repositories in my life. Does the API works the same? If it is, you can just generate a personal token with access to private repositories and provide it in Module Linker options.&lt;/p&gt;\n\n&lt;p&gt;What am I missing? Can you please test it for me and see if it works?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgapzcl", "score_hidden": false, "stickied": false, "created": 1492296643.0, "created_utc": 1492267843.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgapbcw", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "darkerside", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It doesn't look like this supports linking within private repositories. This would require some added token access permissions, but possibly not much else. Is this on your radar? \n\nVery cool plugin. Nice work!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It doesn&amp;#39;t look like this supports linking within private repositories. This would require some added token access permissions, but possibly not much else. Is this on your radar? &lt;/p&gt;\n\n&lt;p&gt;Very cool plugin. Nice work!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgapbcw", "score_hidden": false, "stickied": false, "created": 1492295618.0, "created_utc": 1492266818.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgavz21", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgauxmj", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Good question. What is GitHub Enterprise? Does it provide GitHub API v3? Does it generate HTML similar to the HTML generated in the normal GitHub?\n\nIf yes, then it probably works, you have to change the URLs the extension has access to and runs on by modifying `manifest.json` accordingly. Then load it \"unpacked\", in developer mode, at chrome://extensions/\n\nIf you do that, please let me know if it worked.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good question. What is GitHub Enterprise? Does it provide GitHub API v3? Does it generate HTML similar to the HTML generated in the normal GitHub?&lt;/p&gt;\n\n&lt;p&gt;If yes, then it probably works, you have to change the URLs the extension has access to and runs on by modifying &lt;code&gt;manifest.json&lt;/code&gt; accordingly. Then load it &amp;quot;unpacked&amp;quot;, in developer mode, at chrome://extensions/&lt;/p&gt;\n\n&lt;p&gt;If you do that, please let me know if it worked.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgavz21", "score_hidden": false, "stickied": false, "created": 1492305111.0, "created_utc": 1492276311.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgauxmj", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "wonderfuly", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Could it support GitHub Enterprise?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Could it support GitHub Enterprise?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgauxmj", "score_hidden": false, "stickied": false, "created": 1492303679.0, "created_utc": 1492274879.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dganklw", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "fiatjaf", "parent_id": "t1_dgamb9j", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yes. Thank you for answering this. Chrome Extensions are not that smart when scoping permissions (or at least presenting the scope information to the user when installing).\n\nGitHub does a pjax thing when you navigate normally through it, it doesn't refresh the pages, so this is needed.\n\n(Module Linker also uses the pjax thing so navigation is faster and smoother.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes. Thank you for answering this. Chrome Extensions are not that smart when scoping permissions (or at least presenting the scope information to the user when installing).&lt;/p&gt;\n\n&lt;p&gt;GitHub does a pjax thing when you navigate normally through it, it doesn&amp;#39;t refresh the pages, so this is needed.&lt;/p&gt;\n\n&lt;p&gt;(Module Linker also uses the pjax thing so navigation is faster and smoother.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dganklw", "score_hidden": false, "stickied": false, "created": 1492292656.0, "created_utc": 1492263856.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgamb9j", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "MachaHack", "parent_id": "t1_dgakqm6", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "It looks to see when you've navigated to/around github, probably to reinitialize the extension on the page: https://github.com/fiatjaf/module-linker/blob/dea146842a9a6ac1e08d89ceee27832cc712c2b1/background.js\n\nThis is tied into the same permission as just reading your history.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It looks to see when you&amp;#39;ve navigated to/around github, probably to reinitialize the extension on the page: &lt;a href=\"https://github.com/fiatjaf/module-linker/blob/dea146842a9a6ac1e08d89ceee27832cc712c2b1/background.js\"&gt;https://github.com/fiatjaf/module-linker/blob/dea146842a9a6ac1e08d89ceee27832cc712c2b1/background.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is tied into the same permission as just reading your history.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgamb9j", "score_hidden": false, "stickied": false, "created": 1492290224.0, "created_utc": 1492261424.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgakqm6", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "zwacky", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "A really really great extension, nice job!\n\nOnly thing that I don't understand is the browser history permission (`Read your browsing history`) - what is that required for?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A really really great extension, nice job!&lt;/p&gt;\n\n&lt;p&gt;Only thing that I don&amp;#39;t understand is the browser history permission (&lt;code&gt;Read your browsing history&lt;/code&gt;) - what is that required for?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgakqm6", "score_hidden": false, "stickied": false, "created": 1492286664.0, "created_utc": 1492257864.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dga5ipz", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "WizKid_", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Like the idea, could be some clashes in namespace of packages that are available  ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Like the idea, could be some clashes in namespace of packages that are available  &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga5ipz", "score_hidden": false, "stickied": false, "created": 1492252083.0, "created_utc": 1492223283.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65flun", "likes": null, "replies": "", "user_reports": [], "id": "dgaoy2s", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "luckystarr", "parent_id": "t3_65flun", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "GitHub should support this by themselves. Could be quite fiddly though with all the different forks flying around. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;GitHub should support this by themselves. Could be quite fiddly though with all the different forks flying around. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgaoy2s", "score_hidden": false, "stickied": false, "created": 1492295019.0, "created_utc": 1492266219.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]