[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello!  I need to implement a python daemon for an embedded  linux project.  I found a link to this &lt;a href=\"http://web.archive.org/web/20131017130434/http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/\"&gt;example class&lt;/a&gt;  But it&amp;#39;s from from 2007.  I think I&amp;#39;m just going to inherit from this class, but I want to know if you guys think there&amp;#39;s a more modern way to do this.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello!  I need to implement a python daemon for an embedded  linux project.  I found a link to this [example class](http://web.archive.org/web/20131017130434/http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/)  But it's from from 2007.  I think I'm just going to inherit from this class, but I want to know if you guys think there's a more modern way to do this.  ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65es3h", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 6, "report_reasons": null, "author": "zxobs", "saved": false, "mod_reports": [], "name": "t3_65es3h", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65es3h/python_daemon_best_practices/", "num_reports": null, "locked": false, "stickied": false, "created": 1492228242.0, "url": "https://www.reddit.com/r/Python/comments/65es3h/python_daemon_best_practices/", "author_flair_text": null, "quarantine": false, "title": "python daemon best practices", "created_utc": 1492199442.0, "distinguished": null, "media": null, "upvote_ratio": 0.76, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65es3h", "likes": null, "replies": "", "user_reports": [], "id": "dga912p", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "javelinRL", "parent_id": "t3_65es3h", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This is the go-to solution for daemonizing your program https://pypi.python.org/pypi/python-daemon/", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is the go-to solution for daemonizing your program &lt;a href=\"https://pypi.python.org/pypi/python-daemon/\"&gt;https://pypi.python.org/pypi/python-daemon/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dga912p", "score_hidden": false, "stickied": false, "created": 1492257418.0, "created_utc": 1492228618.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65es3h", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65es3h", "likes": null, "replies": "", "user_reports": [], "id": "dg9qce0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "zxobs", "parent_id": "t1_dg9otpu", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Ya, pretty much.  This is going to be a glorified micocontroller project. So no user interaction or interprocess communication. Thanks for your advice!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ya, pretty much.  This is going to be a glorified micocontroller project. So no user interaction or interprocess communication. Thanks for your advice!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9qce0", "score_hidden": false, "stickied": false, "created": 1492231799.0, "created_utc": 1492202999.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9otpu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "novel_yet_trivial", "parent_id": "t3_65es3h", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "That code is to launch a daemon and control it from some python code. If that's what you need I would use the multiprocessing module instead if possible. \n\nHowever it sounds like your entire program will be a daemon, not just part of it, right? In that case you don't need anything special in the code. It becomes a daemon because of how it's launched. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That code is to launch a daemon and control it from some python code. If that&amp;#39;s what you need I would use the multiprocessing module instead if possible. &lt;/p&gt;\n\n&lt;p&gt;However it sounds like your entire program will be a daemon, not just part of it, right? In that case you don&amp;#39;t need anything special in the code. It becomes a daemon because of how it&amp;#39;s launched. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9otpu", "score_hidden": false, "stickied": false, "created": 1492229968.0, "created_utc": 1492201168.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]