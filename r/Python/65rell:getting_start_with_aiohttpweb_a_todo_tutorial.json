[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65rell", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 84, "report_reasons": null, "author": "kurashu89", "saved": false, "mod_reports": [], "name": "t3_65rell", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "justanr.github.io", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65rell/getting_start_with_aiohttpweb_a_todo_tutorial/", "num_reports": null, "locked": false, "stickied": false, "created": 1492405448.0, "url": "http://justanr.github.io/getting-start-with-aiohttpweb-a-todo-tutorial", "author_flair_text": "github.com/justanr | Py3 Evangelist", "quarantine": false, "title": "Getting start with aiohttp.web: A todo tutorial", "created_utc": 1492376648.0, "distinguished": null, "media": null, "upvote_ratio": 0.92, "num_comments": 19, "visited": false, "subreddit_type": "public", "ups": 84}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": "", "user_reports": [], "id": "dgdnuq8", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "networkguru", "parent_id": "t1_dgd5l0z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Not related...just want to say I love HA! Amazing piece of kit. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not related...just want to say I love HA! Amazing piece of kit. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdnuq8", "score_hidden": false, "stickied": false, "created": 1492473372.0, "created_utc": 1492444572.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd5l0z", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "balloob", "parent_id": "t1_dgd5e4n", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Nop. I started this project in 2013 and it was initially Python 2.7 and threads. Luckily that is now all behind us. (although we still support the threaded API)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nop. I started this project in 2013 and it was initially Python 2.7 and threads. Luckily that is now all behind us. (although we still support the threaded API)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd5l0z", "score_hidden": false, "stickied": false, "created": 1492435282.0, "created_utc": 1492406482.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd5e4n", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgd4vp4", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Being curious here, I happened to watch a conference talk about using asyncio for home automation (I wanna say it was from EuroPy), did this project grow out of that? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Being curious here, I happened to watch a conference talk about using asyncio for home automation (I wanna say it was from EuroPy), did this project grow out of that? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd5e4n", "score_hidden": false, "stickied": false, "created": 1492434901.0, "created_utc": 1492406101.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd4vp4", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "balloob", "parent_id": "t1_dgd43uc", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yes. Home Assistant is powered by asyncio and uses aiohttp.web to serve the frontend. Some of our integrations also rely on aiohttp.client to fetch data.\n\n- https://home-assistant.io  \n- [Source](https://github.com/home-assistant/home-assistant)  \n- [More info about our async core](https://home-assistant.io/developers/asyncio/)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes. Home Assistant is powered by asyncio and uses aiohttp.web to serve the frontend. Some of our integrations also rely on aiohttp.client to fetch data.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://home-assistant.io\"&gt;https://home-assistant.io&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/home-assistant/home-assistant\"&gt;Source&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://home-assistant.io/developers/asyncio/\"&gt;More info about our async core&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd4vp4", "score_hidden": false, "stickied": false, "created": 1492433887.0, "created_utc": 1492405087.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": "", "user_reports": [], "id": "dgdd36h", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgd983g", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "asyncio itself looks to be stable now. I doubt there will be major changes in the api any time soon, though I believe asyncio is still considered provisional. \n\nI've seen quite a few conference talks about using asyncio and aiohttp in production, so others are. \n\nAs for a feel for it, a poll would be a good move.\n\nIf part of the question is how easy it'll be to sell, I can't answer that. I was told to build this service using whatever tech I wanted (within usual bounds, meaning brainfuck and malbolge are off limits). ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;asyncio itself looks to be stable now. I doubt there will be major changes in the api any time soon, though I believe asyncio is still considered provisional. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve seen quite a few conference talks about using asyncio and aiohttp in production, so others are. &lt;/p&gt;\n\n&lt;p&gt;As for a feel for it, a poll would be a good move.&lt;/p&gt;\n\n&lt;p&gt;If part of the question is how easy it&amp;#39;ll be to sell, I can&amp;#39;t answer that. I was told to build this service using whatever tech I wanted (within usual bounds, meaning brainfuck and malbolge are off limits). &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdd36h", "score_hidden": false, "stickied": false, "created": 1492456312.0, "created_utc": 1492427512.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd983g", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "be_haki", "parent_id": "t1_dgd44n1", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "My go to for non blocking / stateless / event loop like services was always tornado. I wanted to know how many people feel asyncio is mature and stable enough for production.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My go to for non blocking / stateless / event loop like services was always tornado. I wanted to know how many people feel asyncio is mature and stable enough for production.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd983g", "score_hidden": false, "stickied": false, "created": 1492443645.0, "created_utc": 1492414845.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd44n1", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgd43uc", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": ":) It's for an api that serves that translate between soap and json and hide some nasty details. If translation was the only goal, then it wouldn't exist, but there are some things about the soap server that are just nasty. I also knocked out a dashboard for server monitoring using aiohttp but ran into potential license issues with using react so I shelved it before it became an issue. ", "edited": 1492403879.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;:) It&amp;#39;s for an api that serves that translate between soap and json and hide some nasty details. If translation was the only goal, then it wouldn&amp;#39;t exist, but there are some things about the soap server that are just nasty. I also knocked out a dashboard for server monitoring using aiohttp but ran into potential license issues with using react so I shelved it before it became an issue. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd44n1", "score_hidden": false, "stickied": false, "created": 1492432496.0, "created_utc": 1492403696.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd43uc", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "be_haki", "parent_id": "t3_65rell", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I'm curious, anybody using aio in production?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious, anybody using aio in production?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd43uc", "score_hidden": false, "stickied": false, "created": 1492432457.0, "created_utc": 1492403657.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": "", "user_reports": [], "id": "dgdd8bx", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "saracen9", "parent_id": "t1_dgdd6ny", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Great thanks! \n\nI think mentioning a couple of those basic \"helper\" libraries such as aiohttp-jinja might be helpful. Happy wearing the tinkerer hat, just nice to not have to re-invent any wheels if there's already some accepted best practice / standard. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great thanks! &lt;/p&gt;\n\n&lt;p&gt;I think mentioning a couple of those basic &amp;quot;helper&amp;quot; libraries such as aiohttp-jinja might be helpful. Happy wearing the tinkerer hat, just nice to not have to re-invent any wheels if there&amp;#39;s already some accepted best practice / standard. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdd8bx", "score_hidden": false, "stickied": false, "created": 1492456701.0, "created_utc": 1492427901.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdd6ny", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgdcxu5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Oh, yes. This is even more austere than Flask. I should've mentioned that in the article. \n\nYou get routing and high level request/response objects, but that's it. No templates, no session management, no authentication (though Flask doesn't have this one either). \n\nThere are packages that'll implement these (there is aiohttp-jinja of you want to feel at home), but you'll largely need to wear your tinkerer hat. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh, yes. This is even more austere than Flask. I should&amp;#39;ve mentioned that in the article. &lt;/p&gt;\n\n&lt;p&gt;You get routing and high level request/response objects, but that&amp;#39;s it. No templates, no session management, no authentication (though Flask doesn&amp;#39;t have this one either). &lt;/p&gt;\n\n&lt;p&gt;There are packages that&amp;#39;ll implement these (there is aiohttp-jinja of you want to feel at home), but you&amp;#39;ll largely need to wear your tinkerer hat. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdd6ny", "score_hidden": false, "stickied": false, "created": 1492456576.0, "created_utc": 1492427776.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdcxu5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "saracen9", "parent_id": "t1_dgdcv1i", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks for the response. That was my thought - you get used to using the right external library for the right task with Flask as opposed to relying on the framework (e.g.  SqlAlchemy). Just checking if any gotchas like missing authentication out the box. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for the response. That was my thought - you get used to using the right external library for the right task with Flask as opposed to relying on the framework (e.g.  SqlAlchemy). Just checking if any gotchas like missing authentication out the box. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdcxu5", "score_hidden": false, "stickied": false, "created": 1492455895.0, "created_utc": 1492427095.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdcv1i", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgd7m3z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I'd suggest approaching with the same sort of attitude as with a Flask project. You're going to have to do more architecture and install (or build) more things than with Django. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d suggest approaching with the same sort of attitude as with a Flask project. You&amp;#39;re going to have to do more architecture and install (or build) more things than with Django. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdcv1i", "score_hidden": false, "stickied": false, "created": 1492455664.0, "created_utc": 1492426864.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgd7m3z", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "saracen9", "parent_id": "t3_65rell", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks for sharing. Know what I'm tinkering with when I next get some spare time. \n\nI see you mention Flask in the article. Any gotchas for someone making this move? Anything specifically you miss?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for sharing. Know what I&amp;#39;m tinkering with when I next get some spare time. &lt;/p&gt;\n\n&lt;p&gt;I see you mention Flask in the article. Any gotchas for someone making this move? Anything specifically you miss?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgd7m3z", "score_hidden": false, "stickied": false, "created": 1492439625.0, "created_utc": 1492410825.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": "", "user_reports": [], "id": "dgehg3h", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgdug3f", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Added an update with a credit to you for pointing it out. Thanks!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Added an update with a credit to you for pointing it out. Thanks!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgehg3h", "score_hidden": false, "stickied": false, "created": 1492508394.0, "created_utc": 1492479594.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdug3f", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nerdwaller", "parent_id": "t1_dgdt3fg", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "If you'd like to, no problem. And I definitely understand leaving it out for simple tasks! I'd think beyond the simple things someone would always need them to be async since they're likely loading the data from somewhere else.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;d like to, no problem. And I definitely understand leaving it out for simple tasks! I&amp;#39;d think beyond the simple things someone would always need them to be async since they&amp;#39;re likely loading the data from somewhere else.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdug3f", "score_hidden": false, "stickied": false, "created": 1492480711.0, "created_utc": 1492451911.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdt3fg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgdn5i7", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "That's a fair point. I've gotten in the habit of sync handlers for quick access handlers (e.g. dump a list to json) but they should be async. I'll try to remember to do an update tonight about that - are you okay having your reddit username linked? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s a fair point. I&amp;#39;ve gotten in the habit of sync handlers for quick access handlers (e.g. dump a list to json) but they should be async. I&amp;#39;ll try to remember to do an update tonight about that - are you okay having your reddit username linked? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdt3fg", "score_hidden": false, "stickied": false, "created": 1492479235.0, "created_utc": 1492450435.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdn5i7", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "nerdwaller", "parent_id": "t3_65rell", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt; get_all_todos and get_one_todo are our route handlers. You'll notice they aren't async -- this is alright as the server is capable of dealing with both sync and async handlers.\n\nIt's true you _can_ technically use `sync handlers` - but really you shouldn't. It's a mental shift to work within an async/evented world - so it's best to be explicit that the function will be run asynchronously and consequently the implemented function (and things it depends on) need to not block the event loop. The explicitness is part of the python way :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;get_all_todos and get_one_todo are our route handlers. You&amp;#39;ll notice they aren&amp;#39;t async -- this is alright as the server is capable of dealing with both sync and async handlers.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s true you &lt;em&gt;can&lt;/em&gt; technically use &lt;code&gt;sync handlers&lt;/code&gt; - but really you shouldn&amp;#39;t. It&amp;#39;s a mental shift to work within an async/evented world - so it&amp;#39;s best to be explicit that the function will be run asynchronously and consequently the implemented function (and things it depends on) need to not block the event loop. The explicitness is part of the python way :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdn5i7", "score_hidden": false, "stickied": false, "created": 1492472573.0, "created_utc": 1492443773.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65rell", "likes": null, "replies": "", "user_reports": [], "id": "dgcy4dm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kurashu89", "parent_id": "t1_dgcw7hp", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks. Was anything unclear or was there something that you wish I'd gone into more? I'm always worried when I write stuff like this it's just a rambling mess that only makes sense to me.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks. Was anything unclear or was there something that you wish I&amp;#39;d gone into more? I&amp;#39;m always worried when I write stuff like this it&amp;#39;s just a rambling mess that only makes sense to me.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgcy4dm", "score_hidden": false, "stickied": false, "created": 1492423537.0, "created_utc": 1492394737.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcw7hp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Knahtuoy", "parent_id": "t3_65rell", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Great tutorial!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great tutorial!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgcw7hp", "score_hidden": false, "stickied": false, "created": 1492420939.0, "created_utc": 1492392139.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]