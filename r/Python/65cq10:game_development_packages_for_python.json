[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m developing a turn-based strategy game in python which is going well, I&amp;#39;ve got a good chunk of the game logic working.&lt;/p&gt;\n\n&lt;p&gt;But before I can go further I need to have some graphical interface which - obviously - will also be needed for the final game. What packages/libraries do people recommend? The previous reddit threads about this I&amp;#39;ve found are several years old so I wondered what the current opinion is.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve had a long look at the web but don&amp;#39;t know which one to go for. Pygame is the obvious one; I&amp;#39;ve played around with it and it seems easy to use and powerful. The downside is that it comes with no pre-built menus/buttons/widgets what so ever, doing all of that from scratch myself seems time consuming. There are many pygame libraries that add these things, but they all seem to have been abandoned last decade so I&amp;#39;m wary about building on code which might have lots of bugs or not even be Python3.6 compatible. Pyglet and Kivy are the other main alternatives I&amp;#39;ve found, but seem far less supported and I generally know less about them. Going back to basics with tkinter is also an option I guess.&lt;/p&gt;\n\n&lt;p&gt;The specific features I&amp;#39;m looking for are:&lt;/p&gt;\n\n&lt;p&gt;1) Can draw and scroll a 2d map&lt;/p&gt;\n\n&lt;p&gt;2) Can be integrated easily with my existing object-orientated python code&lt;/p&gt;\n\n&lt;p&gt;3) Can create various tables/menus/buttons with ease&lt;/p&gt;\n\n&lt;p&gt;4) Runs reasonably fast&lt;/p&gt;\n\n&lt;p&gt;Any help, advice, or suggestion welcome&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm developing a turn-based strategy game in python which is going well, I've got a good chunk of the game logic working.\n\nBut before I can go further I need to have some graphical interface which - obviously - will also be needed for the final game. What packages/libraries do people recommend? The previous reddit threads about this I've found are several years old so I wondered what the current opinion is.\n\nI've had a long look at the web but don't know which one to go for. Pygame is the obvious one; I've played around with it and it seems easy to use and powerful. The downside is that it comes with no pre-built menus/buttons/widgets what so ever, doing all of that from scratch myself seems time consuming. There are many pygame libraries that add these things, but they all seem to have been abandoned last decade so I'm wary about building on code which might have lots of bugs or not even be Python3.6 compatible. Pyglet and Kivy are the other main alternatives I've found, but seem far less supported and I generally know less about them. Going back to basics with tkinter is also an option I guess.\n\nThe specific features I'm looking for are:\n\n1) Can draw and scroll a 2d map\n\n2) Can be integrated easily with my existing object-orientated python code\n\n3) Can create various tables/menus/buttons with ease\n\n4) Runs reasonably fast\n\nAny help, advice, or suggestion welcome", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65cq10", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 3, "report_reasons": null, "author": "Olleus", "saved": false, "mod_reports": [], "name": "t3_65cq10", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1492195745.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65cq10/game_development_packages_for_python/", "num_reports": null, "locked": false, "stickied": false, "created": 1492207828.0, "url": "https://www.reddit.com/r/Python/comments/65cq10/game_development_packages_for_python/", "author_flair_text": null, "quarantine": false, "title": "Game Development Packages for Python", "created_utc": 1492179028.0, "distinguished": null, "media": null, "upvote_ratio": 0.62, "num_comments": 8, "visited": false, "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": "", "user_reports": [], "id": "dg9q6uh", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "inclemnet", "parent_id": "t1_dg9ojkp", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Kivy itself mostly runs within the single (main) thread, but you can use other threads as much as you like.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kivy itself mostly runs within the single (main) thread, but you can use other threads as much as you like.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9q6uh", "score_hidden": false, "stickied": false, "created": 1492231614.0, "created_utc": 1492202814.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9ojkp", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Olleus", "parent_id": "t1_dg99ee1", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks, I'll have a look at KivEnt. Might just be what I need.\n\nOn a final note, can Kivy be made to run with multiple threads/cores? This would be a simultaneous turn based game and I'd like to have the AI running on its own threads to keep things smooth. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks, I&amp;#39;ll have a look at KivEnt. Might just be what I need.&lt;/p&gt;\n\n&lt;p&gt;On a final note, can Kivy be made to run with multiple threads/cores? This would be a simultaneous turn based game and I&amp;#39;d like to have the AI running on its own threads to keep things smooth. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9ojkp", "score_hidden": false, "stickied": false, "created": 1492229631.0, "created_utc": 1492200831.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg99ee1", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "inclemnet", "parent_id": "t1_dg97019", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "&gt; Does this extra layer make Kivy slow or restrict what I can do?\n\nNo, not really. Kivy happens to run its own eventloop, but it isn't especially heavy on its own. You may also be interested in the [KivEnt game engine](http://kivent.org/), which uses Kivy but with a lot of optimisations for its use case.\n\n&gt; For example in their pong game tutorial (https://kivy.org/docs/tutorials/pong.html) they define simple attributes as NumericProperty rather than just an int.\n\nThe point of the Property classes is to work with Kivy's event system, e.g. Kivy will automatically dispatch events when the property value changes. In the spirit of separating business and gui logic, you wouldn't have to integrate any of the property system with your game, you can consider it as just how Kivy happens to do gui management.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Does this extra layer make Kivy slow or restrict what I can do?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, not really. Kivy happens to run its own eventloop, but it isn&amp;#39;t especially heavy on its own. You may also be interested in the &lt;a href=\"http://kivent.org/\"&gt;KivEnt game engine&lt;/a&gt;, which uses Kivy but with a lot of optimisations for its use case.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;For example in their pong game tutorial (&lt;a href=\"https://kivy.org/docs/tutorials/pong.html\"&gt;https://kivy.org/docs/tutorials/pong.html&lt;/a&gt;) they define simple attributes as NumericProperty rather than just an int.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The point of the Property classes is to work with Kivy&amp;#39;s event system, e.g. Kivy will automatically dispatch events when the property value changes. In the spirit of separating business and gui logic, you wouldn&amp;#39;t have to integrate any of the property system with your game, you can consider it as just how Kivy happens to do gui management.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg99ee1", "score_hidden": false, "stickied": false, "created": 1492211931.0, "created_utc": 1492183131.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg97019", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Olleus", "parent_id": "t1_dg96lan", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks. My only worry with Kivy is that it seems to do a lot of extra stuff \"on top\". For example in their pong game tutorial (https://kivy.org/docs/tutorials/pong.html) they define simple attributes as NumericProperty rather than just an int. Or when they run an app(), they do so via predefined functions rather than an explicit event loop in main(). Does this extra layer make Kivy slow or restrict what I can do?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks. My only worry with Kivy is that it seems to do a lot of extra stuff &amp;quot;on top&amp;quot;. For example in their pong game tutorial (&lt;a href=\"https://kivy.org/docs/tutorials/pong.html\"&gt;https://kivy.org/docs/tutorials/pong.html&lt;/a&gt;) they define simple attributes as NumericProperty rather than just an int. Or when they run an app(), they do so via predefined functions rather than an explicit event loop in main(). Does this extra layer make Kivy slow or restrict what I can do?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg97019", "score_hidden": false, "stickied": false, "created": 1492208900.0, "created_utc": 1492180100.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg96lan", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "GNUgamer", "parent_id": "t3_65cq10", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "While not specifically for games, Kivy seems to meet all of your requirements and more. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;While not specifically for games, Kivy seems to meet all of your requirements and more. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg96lan", "score_hidden": false, "stickied": false, "created": 1492208355.0, "created_utc": 1492179555.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cq10", "likes": null, "replies": "", "user_reports": [], "id": "dgc2kxv", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Beemo56", "parent_id": "t1_dgbyybr", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yes! I'm one of the current maintainers. There is a lot of activity in the main branch. One reason for the delay in a proper release is that the entire codebase has been refactored to be dual python 2/3 compatible. There has also been a lot of fixes and cleanup going into the codebase. Not many user visible changes, but there are a few nice features I have planned for the future. \n\nOne advantage of pyglet is that its pure Python. It also has the full power of OpenGL available if you want/need it, without additional libraries. If you don't want to dive that deep, there are easy to use Sprite and graphic primitive modules available.  I'm not sure what you mean by smaller.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes! I&amp;#39;m one of the current maintainers. There is a lot of activity in the main branch. One reason for the delay in a proper release is that the entire codebase has been refactored to be dual python 2/3 compatible. There has also been a lot of fixes and cleanup going into the codebase. Not many user visible changes, but there are a few nice features I have planned for the future. &lt;/p&gt;\n\n&lt;p&gt;One advantage of pyglet is that its pure Python. It also has the full power of OpenGL available if you want/need it, without additional libraries. If you don&amp;#39;t want to dive that deep, there are easy to use Sprite and graphic primitive modules available.  I&amp;#39;m not sure what you mean by smaller.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgc2kxv", "score_hidden": false, "stickied": false, "created": 1492381114.0, "created_utc": 1492352314.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbyybr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Olleus", "parent_id": "t1_dgbisv5", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Is it still active? No new downloads since Sep 2015 and they used to be every couple of months.\n\nWhat are it's main advantages? From an outsider it looks like a smaller library with less support", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is it still active? No new downloads since Sep 2015 and they used to be every couple of months.&lt;/p&gt;\n\n&lt;p&gt;What are it&amp;#39;s main advantages? From an outsider it looks like a smaller library with less support&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgbyybr", "score_hidden": false, "stickied": false, "created": 1492373914.0, "created_utc": 1492345114.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbisv5", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Beemo56", "parent_id": "t3_65cq10", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Give pyglet a try!", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Give pyglet a try!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgbisv5", "score_hidden": false, "stickied": false, "created": 1492336944.0, "created_utc": 1492308144.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]