[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Looking for options to wrap my website into desktop application.&lt;/p&gt;\n\n&lt;p&gt;There are nothing fancy there, just access to RethinkDB, SocketIO, and some visualization from D3JS.&lt;/p&gt;\n\n&lt;p&gt;Googling aside, this is the closest I can get, &lt;a href=\"http://stackoverflow.com/questions/24374123/flask-based-desktop-app-bundled-with-chromium-embedded-framework-client\"&gt;http://stackoverflow.com/questions/24374123/flask-based-desktop-app-bundled-with-chromium-embedded-framework-client&lt;/a&gt;. Not really convinced with that.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Looking for options to wrap my website into desktop application.\n\nThere are nothing fancy there, just access to RethinkDB, SocketIO, and some visualization from D3JS.\n\nGoogling aside, this is the closest I can get, http://stackoverflow.com/questions/24374123/flask-based-desktop-app-bundled-with-chromium-embedded-framework-client. Not really convinced with that.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65cmsf", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 13, "report_reasons": null, "author": "reddit_lonely", "saved": false, "mod_reports": [], "name": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65cmsf/is_there_any_electron_equivalent_for_flask_or_can/", "num_reports": null, "locked": false, "stickied": false, "created": 1492206815.0, "url": "https://www.reddit.com/r/Python/comments/65cmsf/is_there_any_electron_equivalent_for_flask_or_can/", "author_flair_text": null, "quarantine": false, "title": "Is there any Electron equivalent for Flask? Or can I put Flask into Electron?", "created_utc": 1492178015.0, "distinguished": null, "media": null, "upvote_ratio": 0.68, "num_comments": 19, "visited": false, "subreddit_type": "public", "ups": 13}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9eaxo", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "reddit_lonely", "parent_id": "t1_dg9ca8z", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I have a nice visualization done with D3JS. In either cases I still need webview.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have a nice visualization done with D3JS. In either cases I still need webview.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9eaxo", "score_hidden": false, "stickied": false, "created": 1492217509.0, "created_utc": 1492188709.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9ca8z", "gilded": 0, "archived": false, "score": 11, "report_reasons": null, "author": "kurashu89", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Is there any reason you don't want to go with traditional gui toolkits (python or otherwise) that communicate to the server? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there any reason you don&amp;#39;t want to go with traditional gui toolkits (python or otherwise) that communicate to the server? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9ca8z", "score_hidden": false, "stickied": false, "created": 1492215260.0, "created_utc": 1492186460.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 11}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dgdb55p", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cztomczak", "parent_id": "t1_dg9lmce", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "There is no workable demo for PyCEF yet. CEF Python is still actively developed and the link is: https://github.com/cztomczak/cefpython\n\nThe PyCEF project ideas are currently being implemented as part of CEF Python. Any breaking changes are described in the Migration Guide document. You can already see implemented: update to latest Chromium, Tutorial, new API docs, better examples, python 3 support, unit tests, new tools that automate building CEF with patches etc. Most of the new features described in PyCEF draft can be implemented in CEF Python, so I decided that abandoning CEF Python at this point wasn't a good idea. I might fork CEF Python in the future and create PyCEF from it, when new features would require a major backward compatibility breaks, such as completely refactored API or Unicode support in Py2. But that's a distant future and I'm still not sure if forking is a good idea, will see.", "edited": 1492421639.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is no workable demo for PyCEF yet. CEF Python is still actively developed and the link is: &lt;a href=\"https://github.com/cztomczak/cefpython\"&gt;https://github.com/cztomczak/cefpython&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The PyCEF project ideas are currently being implemented as part of CEF Python. Any breaking changes are described in the Migration Guide document. You can already see implemented: update to latest Chromium, Tutorial, new API docs, better examples, python 3 support, unit tests, new tools that automate building CEF with patches etc. Most of the new features described in PyCEF draft can be implemented in CEF Python, so I decided that abandoning CEF Python at this point wasn&amp;#39;t a good idea. I might fork CEF Python in the future and create PyCEF from it, when new features would require a major backward compatibility breaks, such as completely refactored API or Unicode support in Py2. But that&amp;#39;s a distant future and I&amp;#39;m still not sure if forking is a good idea, will see.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdb55p", "score_hidden": false, "stickied": false, "created": 1492450076.0, "created_utc": 1492421276.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dgb75ik", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "zynix", "parent_id": "t1_dgasn5p", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "25-45MB for just the Python to interpreted + whatever libraries needed just for it. ~40MB just for Chromium embedded.\n\nAND the huge variable is the pyCEF can be integrated with WX or QT which can have a filesize foot print that I believe starts ~90MB.  Personally I would avoid all of them and just rely on the CEF window.\n\nThat, install size, is the one instance of any other language vs Microsoft's ecosystem that people ignore.  User's just see the ~15MB visual studio runtime and ignore the hundreds of MBs of preexisting support dlls already installed on the computer.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;25-45MB for just the Python to interpreted + whatever libraries needed just for it. ~40MB just for Chromium embedded.&lt;/p&gt;\n\n&lt;p&gt;AND the huge variable is the pyCEF can be integrated with WX or QT which can have a filesize foot print that I believe starts ~90MB.  Personally I would avoid all of them and just rely on the CEF window.&lt;/p&gt;\n\n&lt;p&gt;That, install size, is the one instance of any other language vs Microsoft&amp;#39;s ecosystem that people ignore.  User&amp;#39;s just see the ~15MB visual studio runtime and ignore the hundreds of MBs of preexisting support dlls already installed on the computer.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgb75ik", "score_hidden": false, "stickied": false, "created": 1492320319.0, "created_utc": 1492291519.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dgasn5p", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "denfromufa", "parent_id": "t1_dg9lmce", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "What is the minimum size of app you get with cef?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is the minimum size of app you get with cef?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgasn5p", "score_hidden": false, "stickied": false, "created": 1492300468.0, "created_utc": 1492271668.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9lmce", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "zynix", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "https://github.com/cztomczak/pycef\n\nUsing a python to exe you can package CEF + Python so it is portable.  \n\nI did a proof of concept test ~5 years ago when this project was on Google projects and the capabilities back there were insanely impressive.  You can inject into the Javascript scope functions that are bound to \"server\" side Python functions AND you can have Python logic call browser side Javascript functions so it is possible to  emulate ajax calls if you have a wrapper/abstraction library:  make a html/js app that can somewhat easily be hosted on a webserver or via cef.\n\nThis guy https://github.com/cztomczak has been very dedicated to this project and it kills me that he or she hasn't gotten much more traction/attention.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/cztomczak/pycef\"&gt;https://github.com/cztomczak/pycef&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using a python to exe you can package CEF + Python so it is portable.  &lt;/p&gt;\n\n&lt;p&gt;I did a proof of concept test ~5 years ago when this project was on Google projects and the capabilities back there were insanely impressive.  You can inject into the Javascript scope functions that are bound to &amp;quot;server&amp;quot; side Python functions AND you can have Python logic call browser side Javascript functions so it is possible to  emulate ajax calls if you have a wrapper/abstraction library:  make a html/js app that can somewhat easily be hosted on a webserver or via cef.&lt;/p&gt;\n\n&lt;p&gt;This guy &lt;a href=\"https://github.com/cztomczak\"&gt;https://github.com/cztomczak&lt;/a&gt; has been very dedicated to this project and it kills me that he or she hasn&amp;#39;t gotten much more traction/attention.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9lmce", "score_hidden": false, "stickied": false, "created": 1492226112.0, "created_utc": 1492197312.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg96e6n", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "lpsandaruwan", "parent_id": "t1_dg964ea", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Exactly. :-)\nSadly in my case, we have to run the Flask server also on the user's machine since we have implemented Font installations in python backend. But it is not a big deal once we created a standalone binary using pyinstaller.", "edited": 1492179555.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Exactly. :-)\nSadly in my case, we have to run the Flask server also on the user&amp;#39;s machine since we have implemented Font installations in python backend. But it is not a big deal once we created a standalone binary using pyinstaller.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg96e6n", "score_hidden": false, "stickied": false, "created": 1492208089.0, "created_utc": 1492179289.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9bkp6", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "lpsandaruwan", "parent_id": "t1_dg964ea", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Found this one while browsing, hope this will help.\n\n[https://www.fyears.org/2017/02/electron-as-gui-of-python-apps-updated.html](https://www.fyears.org/2017/02/electron-as-gui-of-python-apps-updated.html)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Found this one while browsing, hope this will help.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.fyears.org/2017/02/electron-as-gui-of-python-apps-updated.html\"&gt;https://www.fyears.org/2017/02/electron-as-gui-of-python-apps-updated.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9bkp6", "score_hidden": false, "stickied": false, "created": 1492214477.0, "created_utc": 1492185677.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 4}}], "after": null, "before": null}}, "user_reports": [], "id": "dg964ea", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "reddit_lonely", "parent_id": "t1_dg95zd7", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Interesting... so Electron only used to wrap HTML, CSS, and client side JS, I assume? And everything connected into Flask in cloud.\n\nAlthough not ideal, this is quite satisfy my needs.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting... so Electron only used to wrap HTML, CSS, and client side JS, I assume? And everything connected into Flask in cloud.&lt;/p&gt;\n\n&lt;p&gt;Although not ideal, this is quite satisfy my needs.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg964ea", "score_hidden": false, "stickied": false, "created": 1492207706.0, "created_utc": 1492178906.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg95zd7", "gilded": 0, "archived": false, "score": 8, "report_reasons": null, "author": "lpsandaruwan", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This is the exact problem that I'm going though. We have implemented a cross-platform [font manager](https://github.com/fontman) application using electron and flask using flask REST APIs and AngularJS. I'm also excited if there is any good workaround. Currently, we are running the application using a  script, calling flask backend to run in the background.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is the exact problem that I&amp;#39;m going though. We have implemented a cross-platform &lt;a href=\"https://github.com/fontman\"&gt;font manager&lt;/a&gt; application using electron and flask using flask REST APIs and AngularJS. I&amp;#39;m also excited if there is any good workaround. Currently, we are running the application using a  script, calling flask backend to run in the background.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg95zd7", "score_hidden": false, "stickied": false, "created": 1492207507.0, "created_utc": 1492178707.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9ij5u", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "r0x0r", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "[Pywebview](https://github.com/r0x0r/pywebview) is exactly what you are looking for. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/r0x0r/pywebview\"&gt;Pywebview&lt;/a&gt; is exactly what you are looking for. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9ij5u", "score_hidden": false, "stickied": false, "created": 1492222405.0, "created_utc": 1492193605.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9diym", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "JZcgQR2N", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can spawn background processes with Electron. See [here](https://www.fyears.org/2015/06/electron-as-gui-of-python-apps.html) for an example.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can spawn background processes with Electron. See &lt;a href=\"https://www.fyears.org/2015/06/electron-as-gui-of-python-apps.html\"&gt;here&lt;/a&gt; for an example.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9diym", "score_hidden": false, "stickied": false, "created": 1492216637.0, "created_utc": 1492187837.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9gb34", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "uralbash", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can use Qt + Python.h and QWebView like PgAdmin4", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can use Qt + Python.h and QWebView like PgAdmin4&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9gb34", "score_hidden": false, "stickied": false, "created": 1492219804.0, "created_utc": 1492191004.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg96kme", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ggagagg", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Have you try this? \n\nhttps://github.com/amol-mandhane/htmlPy\n\nI want to make the frame thing but can't find time to do it \n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you try this? &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/amol-mandhane/htmlPy\"&gt;https://github.com/amol-mandhane/htmlPy&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I want to make the frame thing but can&amp;#39;t find time to do it &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg96kme", "score_hidden": false, "stickied": false, "created": 1492208331.0, "created_utc": 1492179531.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9fcid", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Qkirld", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "https://github.com/zoofIO/flexx", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/zoofIO/flexx\"&gt;https://github.com/zoofIO/flexx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9fcid", "score_hidden": false, "stickied": false, "created": 1492218696.0, "created_utc": 1492189896.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9ycq5", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "HumblesReaper", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I am running a flask / angular 2 server with an electron interface. Electron is simply showing a iframe. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am running a flask / angular 2 server with an electron interface. Electron is simply showing a iframe. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9ycq5", "score_hidden": false, "stickied": false, "created": 1492242249.0, "created_utc": 1492213449.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9jxit", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "reddit_lonely", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Alright, thank you people for the suggestions, I did not expect this many.\n\n* At basic, I will try to implement from Electron first. There will be some \"wiring\" required to get it work with Flask server still running in the cloud. However, I am afraid if in the future I need access to OS API. I think with this method it cannot be done, since I have NodeJS codes.\n* If I have time, next, I will try htmlPY and/or pywebview. It seems a nice solution, however, I need write more codes from what I need compared to the Electron solution.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Alright, thank you people for the suggestions, I did not expect this many.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;At basic, I will try to implement from Electron first. There will be some &amp;quot;wiring&amp;quot; required to get it work with Flask server still running in the cloud. However, I am afraid if in the future I need access to OS API. I think with this method it cannot be done, since I have NodeJS codes.&lt;/li&gt;\n&lt;li&gt;If I have time, next, I will try htmlPY and/or pywebview. It seems a nice solution, however, I need write more codes from what I need compared to the Electron solution.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9jxit", "score_hidden": false, "stickied": false, "created": 1492224076.0, "created_utc": 1492195276.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9hao8", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Nodja", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I've never used it, but would something like [CEF Python](https://github.com/cztomczak/cefpython) fill your needs?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve never used it, but would something like &lt;a href=\"https://github.com/cztomczak/cefpython\"&gt;CEF Python&lt;/a&gt; fill your needs?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9hao8", "score_hidden": false, "stickied": false, "created": 1492220953.0, "created_utc": 1492192153.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65cmsf", "likes": null, "replies": "", "user_reports": [], "id": "dg9vtef", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Boba-Black-Sheep", "parent_id": "t3_65cmsf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Checkout: https://github.com/zoofIO/flexx", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Checkout: &lt;a href=\"https://github.com/zoofIO/flexx\"&gt;https://github.com/zoofIO/flexx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg9vtef", "score_hidden": false, "stickied": false, "created": 1492238887.0, "created_utc": 1492210087.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]