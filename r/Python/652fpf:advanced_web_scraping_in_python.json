[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "652fpf", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 34, "report_reasons": null, "author": "enginebai", "saved": false, "mod_reports": [], "name": "t3_652fpf", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/652fpf/advanced_web_scraping_in_python/", "num_reports": null, "locked": false, "stickied": false, "created": 1492075112.0, "url": "https://medium.com/dualcores-studio/advanced-web-scraping-in-python-d19dfccba235", "author_flair_text": null, "quarantine": false, "title": "Advanced web scraping in Python", "created_utc": 1492046312.0, "distinguished": null, "media": null, "upvote_ratio": 0.74, "num_comments": 8, "visited": false, "subreddit_type": "public", "ups": 34}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": "", "user_reports": [], "id": "dg7a6se", "gilded": 0, "archived": false, "score": 20, "report_reasons": null, "author": "Garcon_sauvage", "parent_id": "t1_dg79qoi", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "No.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7a6se", "score_hidden": false, "stickied": false, "created": 1492097360.0, "created_utc": 1492068560.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 20}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": "", "user_reports": [], "id": "dg7ge27", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "keeganspeck", "parent_id": "t1_dg7du23", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "...Jesus.\n\nI mean, props to the guy for writing something, it's a good first step for some beginner knowledge, and who am I to judge? But... that markdown method is unbelievably terrible. Even if you want to roll your own simple markdown \"transcriber\", why wouldn't you use BeautifulSoup to your advantage, as opposed to just treating it like a way to grab a decorative bag of HTML? And whaaaat? Why is there a user model here? I'm on my phone but I'm definitely saving this to read through later with a bag of popcorn.\n\nEdit: ah, I *guess* I see why there are models now, I misunderstood what the API was intended for\n\nEdit: this was mean, you're doing fine dude, keep up the coding", "edited": 1492126649.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;...Jesus.&lt;/p&gt;\n\n&lt;p&gt;I mean, props to the guy for writing something, it&amp;#39;s a good first step for some beginner knowledge, and who am I to judge? But... that markdown method is unbelievably terrible. Even if you want to roll your own simple markdown &amp;quot;transcriber&amp;quot;, why wouldn&amp;#39;t you use BeautifulSoup to your advantage, as opposed to just treating it like a way to grab a decorative bag of HTML? And whaaaat? Why is there a user model here? I&amp;#39;m on my phone but I&amp;#39;m definitely saving this to read through later with a bag of popcorn.&lt;/p&gt;\n\n&lt;p&gt;Edit: ah, I &lt;em&gt;guess&lt;/em&gt; I see why there are models now, I misunderstood what the API was intended for&lt;/p&gt;\n\n&lt;p&gt;Edit: this was mean, you&amp;#39;re doing fine dude, keep up the coding&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7ge27", "score_hidden": false, "stickied": false, "created": 1492114267.0, "created_utc": 1492085467.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": "", "user_reports": [], "id": "dg7e750", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Artgor", "parent_id": "t1_dg7du23", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I have little experience with such an API... What could be a reason to define markdown like this?\n\nAnd why could be this local flask server necessary?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have little experience with such an API... What could be a reason to define markdown like this?&lt;/p&gt;\n\n&lt;p&gt;And why could be this local flask server necessary?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7e750", "score_hidden": false, "stickied": false, "created": 1492109290.0, "created_utc": 1492080490.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7du23", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cscanlin", "parent_id": "t1_dg79qoi", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Beyond that, if you look at the library that resulted from this, it's an API wrapper that for some reason routes everything through a locally run flask server -_-\n\nhttps://github.com/enginebai/PyMedium\n\n[How the markdown is created](https://github.com/enginebai/PyMedium/blob/master/pymedium/parser.py#L237)\n\n[Gotta have models!](https://github.com/enginebai/PyMedium/blob/master/pymedium/model.py)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Beyond that, if you look at the library that resulted from this, it&amp;#39;s an API wrapper that for some reason routes everything through a locally run flask server -_-&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/enginebai/PyMedium\"&gt;https://github.com/enginebai/PyMedium&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/enginebai/PyMedium/blob/master/pymedium/parser.py#L237\"&gt;How the markdown is created&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/enginebai/PyMedium/blob/master/pymedium/model.py\"&gt;Gotta have models!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7du23", "score_hidden": false, "stickied": false, "created": 1492108266.0, "created_utc": 1492079466.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg79qoi", "gilded": 0, "archived": false, "score": 18, "report_reasons": null, "author": "Artgor", "parent_id": "t3_652fpf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Is this really advanced?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is this really advanced?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg79qoi", "score_hidden": false, "stickied": false, "created": 1492096132.0, "created_utc": 1492067332.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 18}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": "", "user_reports": [], "id": "dg7f00z", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "razzmataz", "parent_id": "t1_dg7bn1u", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This is a rhetorical question, yes?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a rhetorical question, yes?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7f00z", "score_hidden": false, "stickied": false, "created": 1492111342.0, "created_utc": 1492082542.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}, "user_reports": [], "id": "dg7bn1u", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "mchwalisz", "parent_id": "t3_652fpf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Wouldn't scrapy be more versatile?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wouldn&amp;#39;t scrapy be more versatile?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7bn1u", "score_hidden": false, "stickied": false, "created": 1492101595.0, "created_utc": 1492072795.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_652fpf", "likes": null, "replies": "", "user_reports": [], "id": "dg7cq3d", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Boredstudnt", "parent_id": "t3_652fpf", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Not advanced, covered so many times already.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not advanced, covered so many times already.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dg7cq3d", "score_hidden": false, "stickied": false, "created": 1492104928.0, "created_utc": 1492076128.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}]