[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;/p&gt;\n\n&lt;p&gt;I have a bit of a problem. I&amp;#39;m currently working on something that runs Flask and uses oauth for user login. Specifically the Blizzard oauth provider they use to access data from their games.&lt;/p&gt;\n\n&lt;p&gt;The problem is that they want the URL they redirect the user to to be HTTPS with proper certificates. That means that I can&amp;#39;t debug on my machine since I obviously have no valid certificate for localhost!&lt;/p&gt;\n\n&lt;p&gt;That also means that I have to serve the certificates. I thought that a good idea might be to simply create a test environment for my application (beta.domain.tld and the actual application will run on domain.tld). The configs are pretty much identical anyway and with letsencrypt, I can include as many subdomains as I want. &lt;/p&gt;\n\n&lt;p&gt;This worked really well and everything seems to be running smoothly. I use uWSGI running as a daemon and set up a proxy with nginx.&lt;/p&gt;\n\n&lt;p&gt;But the problem is that I can&amp;#39;t properly debug anything related to the user login since I can&amp;#39;t attach a debugger. I don&amp;#39;t even have console output.&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s the best way to do that? I thought about simply having a reverse proxy on the built in development server but then I still don&amp;#39;t know how to attach a debugger. PyCharm has this remote debugging thingy but it seems like you make the application connect to the debugger which seems kind of the wrong way around and it seems super annoying to change the IP every time your ISP gives you a new public IP.&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s a good approach here?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi!\n\nI have a bit of a problem. I'm currently working on something that runs Flask and uses oauth for user login. Specifically the Blizzard oauth provider they use to access data from their games.\n\nThe problem is that they want the URL they redirect the user to to be HTTPS with proper certificates. That means that I can't debug on my machine since I obviously have no valid certificate for localhost!\n\nThat also means that I have to serve the certificates. I thought that a good idea might be to simply create a test environment for my application (beta.domain.tld and the actual application will run on domain.tld). The configs are pretty much identical anyway and with letsencrypt, I can include as many subdomains as I want. \n\nThis worked really well and everything seems to be running smoothly. I use uWSGI running as a daemon and set up a proxy with nginx.\n\nBut the problem is that I can't properly debug anything related to the user login since I can't attach a debugger. I don't even have console output.\n\nWhat's the best way to do that? I thought about simply having a reverse proxy on the built in development server but then I still don't know how to attach a debugger. PyCharm has this remote debugging thingy but it seems like you make the application connect to the debugger which seems kind of the wrong way around and it seems super annoying to change the IP every time your ISP gives you a new public IP.\n\nWhat's a good approach here?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65obbl", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 6, "report_reasons": null, "author": "Asyx", "saved": false, "mod_reports": [], "name": "t3_65obbl", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "self.Python", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65obbl/debugging_flask_application_remotely_right_now/", "num_reports": null, "locked": false, "stickied": false, "created": 1492363153.0, "url": "https://www.reddit.com/r/Python/comments/65obbl/debugging_flask_application_remotely_right_now/", "author_flair_text": null, "quarantine": false, "title": "Debugging Flask application remotely (right now using uWSGI and nginx)?", "created_utc": 1492334353.0, "distinguished": null, "media": null, "upvote_ratio": 0.99, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": "", "user_reports": [], "id": "dgdaekq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Asyx", "parent_id": "t1_dgc0m3t", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "I might give that a try. That seems like the best solution so far. Thanks.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I might give that a try. That seems like the best solution so far. Thanks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdaekq", "score_hidden": false, "stickied": false, "created": 1492447487.0, "created_utc": 1492418687.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc0m3t", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "cediddi", "parent_id": "t3_65obbl", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can use ssh to bind remote (54987) port to local (56789), then in your code, use pydevd to start tracing, and serve to localhost:54987. Because you already connected two ports to each other, you should be able to attach pycharm into pydevd by trying to connect pycharm to localhost:56789.\n\nYou should br able to do this without a problem. I did that same setup to debug 5 different machines running celery. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can use ssh to bind remote (54987) port to local (56789), then in your code, use pydevd to start tracing, and serve to localhost:54987. Because you already connected two ports to each other, you should be able to attach pycharm into pydevd by trying to connect pycharm to localhost:56789.&lt;/p&gt;\n\n&lt;p&gt;You should br able to do this without a problem. I did that same setup to debug 5 different machines running celery. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgc0m3t", "score_hidden": false, "stickied": false, "created": 1492377601.0, "created_utc": 1492348801.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": "", "user_reports": [], "id": "dgdcljj", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ergo14", "parent_id": "t1_dgdafbu", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Create local cert and use that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Create local cert and use that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdcljj", "score_hidden": false, "stickied": false, "created": 1492454871.0, "created_utc": 1492426071.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgdafbu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Asyx", "parent_id": "t1_dgcbf86", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Yeah I tried doing that but then I have no HTTPS and the Blizzard oAuth provider doesn't like that. Otherwise a good idea I didn't think about before. Thanks.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah I tried doing that but then I have no HTTPS and the Blizzard oAuth provider doesn&amp;#39;t like that. Otherwise a good idea I didn&amp;#39;t think about before. Thanks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgdafbu", "score_hidden": false, "stickied": false, "created": 1492447565.0, "created_utc": 1492418765.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcbf86", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "ergo14", "parent_id": "t3_65obbl", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "You can use hosts file to fake domain. I used it with Facebook/Twitter oauth implementation.\n\n Try using appenlight or sentry logging for debugging live.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can use hosts file to fake domain. I used it with Facebook/Twitter oauth implementation.&lt;/p&gt;\n\n&lt;p&gt;Try using appenlight or sentry logging for debugging live.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgcbf86", "score_hidden": false, "stickied": false, "created": 1492393318.0, "created_utc": 1492364518.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65obbl", "likes": null, "replies": "", "user_reports": [], "id": "dgbwvwe", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "wonderfuly", "parent_id": "t3_65obbl", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Try wdb ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try wdb &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgbwvwe", "score_hidden": false, "stickied": false, "created": 1492367733.0, "created_utc": 1492338933.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]