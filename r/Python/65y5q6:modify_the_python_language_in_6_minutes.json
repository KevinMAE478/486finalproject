[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65y5q6", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 98, "report_reasons": null, "author": "Anthonypjshaw", "saved": false, "mod_reports": [], "name": "t3_65y5q6", "subreddit_name_prefixed": "r/Python", "approved_by": null, "over_18": false, "domain": "hackernoon.com", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/Python/comments/65y5q6/modify_the_python_language_in_6_minutes/", "num_reports": null, "locked": false, "stickied": false, "created": 1492489986.0, "url": "https://hackernoon.com/modifying-the-python-language-in-7-minutes-b94b0a99ce14?source=linkShare-ec39004dd57f-1492461121", "author_flair_text": null, "quarantine": false, "title": "Modify the Python language in 6 minutes", "created_utc": 1492461186.0, "distinguished": null, "media": null, "upvote_ratio": 0.95, "num_comments": 7, "visited": false, "subreddit_type": "public", "ups": 98}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": "", "user_reports": [], "id": "dge45rw", "gilded": 0, "archived": false, "score": 13, "report_reasons": null, "author": "pvkooten", "parent_id": "t3_65y5q6", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Hey thanks for taking the time for doing a write up. It's nice to see some of the parts involved with this great language :)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey thanks for taking the time for doing a write up. It&amp;#39;s nice to see some of the parts involved with this great language :)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dge45rw", "score_hidden": false, "stickied": false, "created": 1492491638.0, "created_utc": 1492462838.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 13}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": "", "user_reports": [], "id": "dgehsgl", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Anthonypjshaw", "parent_id": "t1_dgegf4x", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Thanks! no I didn't write any tests, but it would just be a case of adding it to https://github.com/python/cpython/blob/master/Lib/test/test_augassign.py -ed", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks! no I didn&amp;#39;t write any tests, but it would just be a case of adding it to &lt;a href=\"https://github.com/python/cpython/blob/master/Lib/test/test_augassign.py\"&gt;https://github.com/python/cpython/blob/master/Lib/test/test_augassign.py&lt;/a&gt; -ed&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgehsgl", "score_hidden": false, "stickied": false, "created": 1492508795.0, "created_utc": 1492479995.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgegf4x", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "elwhite321", "parent_id": "t3_65y5q6", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Good insight into how this works! Thanks for sharing. Did you write any tests for this? Curious as to how this would be tested", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good insight into how this works! Thanks for sharing. Did you write any tests for this? Curious as to how this would be tested&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgegf4x", "score_hidden": false, "stickied": false, "created": 1492507108.0, "created_utc": 1492478308.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": "", "user_reports": [], "id": "dgei12u", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "gammadistribution", "parent_id": "t1_dgegwcx", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Heresy.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Heresy.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgei12u", "score_hidden": false, "stickied": false, "created": 1492509080.0, "created_utc": 1492480280.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": "", "user_reports": [], "id": "dgei1kq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Anthonypjshaw", "parent_id": "t1_dgegwcx", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "This was from the Python 3.7.0a1 tag, so I think the compiler has changed a lot since 2.7. \n\nI didn't put this in the post, because I was trying to keep the reading time to &lt;7 minutes, but increment and decrement operators are unpythonic IMO.\n\nThe main reason they exist is in a C-style \"for (int i=0; i&lt;c; i++)\" for loop, which Python doesn't have. There is little to gain by using test++ instead of test += 1, it's also not explicit enough whether the return of test++ should be a new value or an operation on the test object, https://nedbatchelder.com/text/names.html", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This was from the Python 3.7.0a1 tag, so I think the compiler has changed a lot since 2.7. &lt;/p&gt;\n\n&lt;p&gt;I didn&amp;#39;t put this in the post, because I was trying to keep the reading time to &amp;lt;7 minutes, but increment and decrement operators are unpythonic IMO.&lt;/p&gt;\n\n&lt;p&gt;The main reason they exist is in a C-style &amp;quot;for (int i=0; i&amp;lt;c; i++)&amp;quot; for loop, which Python doesn&amp;#39;t have. There is little to gain by using test++ instead of test += 1, it&amp;#39;s also not explicit enough whether the return of test++ should be a new value or an operation on the test object, &lt;a href=\"https://nedbatchelder.com/text/names.html\"&gt;https://nedbatchelder.com/text/names.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgei1kq", "score_hidden": false, "stickied": false, "created": 1492509097.0, "created_utc": 1492480297.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0y", "removal_reason": null, "link_id": "t3_65y5q6", "likes": null, "replies": "", "user_reports": [], "id": "dgehuvk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "pohmelie", "parent_id": "t1_dgegwcx", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Oh shi\u2026 devil's hand has touched this.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh shi\u2026 devil&amp;#39;s hand has touched this.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgehuvk", "score_hidden": false, "stickied": false, "created": 1492508872.0, "created_utc": 1492480072.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgegwcx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "stefantalpalaru", "parent_id": "t3_65y5q6", "subreddit_name_prefixed": "r/Python", "controversiality": 0, "body": "Try contributing it to Tauthon: https://github.com/naftaliharris/tauthon", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try contributing it to Tauthon: &lt;a href=\"https://github.com/naftaliharris/tauthon\"&gt;https://github.com/naftaliharris/tauthon&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Python", "name": "t1_dgegwcx", "score_hidden": false, "stickied": false, "created": 1492507710.0, "created_utc": 1492478910.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]