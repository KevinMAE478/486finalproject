[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "explainlikeimfive", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": "qa", "user_reports": [], "secure_media": null, "link_flair_text": "Repost", "id": "6574bb", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 5299, "report_reasons": null, "author": "sploogus", "saved": false, "mod_reports": [], "name": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "approved_by": null, "over_18": false, "domain": "self.explainlikeimfive", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2sokd", "edited": false, "link_flair_css_class": "Technology", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/explainlikeimfive/comments/6574bb/eli5_antialiasing/", "num_reports": null, "locked": false, "stickied": false, "created": 1492135004.0, "url": "https://www.reddit.com/r/explainlikeimfive/comments/6574bb/eli5_antialiasing/", "author_flair_text": null, "quarantine": false, "title": "ELI5: Anti-aliasing", "created_utc": 1492106204.0, "distinguished": null, "media": null, "upvote_ratio": 0.89, "num_comments": 491, "visited": false, "subreddit_type": "public", "ups": 5299}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8qpfu", "gilded": 0, "archived": false, "score": 826, "report_reasons": null, "author": "teaearlgraycold", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "*I copy-pasted this from an old post I made on /r/pcmasterrace*\n\nTo understand how anti aliasing works, I'm first going to explain why it is needed. First you need to know what a sample is.\n\n###How images are rendered\n\nImagine your computer is rendering an [image of a tomato on top of a table](http://i.imgur.com/Y4gW0Qu.png). In order to render the image each of the 1920 \\* 1080 pixels on your screen needs to have colors assigned to them. This isn't as easy as viewing a video or an image. The tomato can be viewed from any angle, and the pixels will need to be recalculated many times every second to produce a smooth animation.\n\nA sample is a light/color calculation that can be thought of as an infinitesimally thin ray of light. Imagine that you have a bunch of these rays of light, and pretend these light rays are 1-dimensional objects - lines - that are going straight through your screen. For those familiar with optics this is called normally incident. Most often each pixel will get one ray of light.\n\nMost often your computer runs a [single one of these rays through the middle of a pixel](http://i.imgur.com/IG9pbks.png) (the surrounding pixels in that image are highlighted to make it easier to see the sample). When one of the rays hits an object in the game, it bounces off and goes back through the same pixel it came from, this time with the color of the object it hit. [That ray then determines the color for the whole pixel](http://i.imgur.com/SK1vYX4.png).\n\n###Why AA is needed\n\nNow most of the time this works pretty well. If you have two pixels from the same object that are right next to each other - like two pixels on the inside of our tomato - they'll have pretty similar colors and the image will look smooth. However, when you reach the edge of this tomato, [you'll eventually find a pixel is no longer over top of the tomato](http://i.imgur.com/xSFk13p.png). The pixel on the left will be red like the tomato, but the one to the right of it will be brown like the table it's on. The difference in color is dramatic. The pixels are either on the tomato or not, there is no middle ground.\n\nThe problem here is that the pixel's don't accurately represent what's going. If you look at the \"pixels\" drawn over [the image of the tomato](http://i.imgur.com/rc3wMbi.png) you'll see that the area covered by the some of pixel has too much information to be conveyed by a single ray of light. On the right half of the pixel there's the table, and on the left half there's the tomato. Other pixels contain significantly less information. The pixels in the upper left corner of the image have fairly uniform colors throughout them, so when they are reduced to a single sample there is less information loss.\n\nThe solution programmers have come up with this problem is what we call anti-aliasing. The game engine [takes more than one sample per pixel](http://i.imgur.com/ip01OiT.png) (either one in each corner of the pixel, a few different samples in a grid formation, or sometimes even in random locations). Some will hit the tomato and some will hit the table. The colors are then averaged together to give you your final pixel color.\n\n###Types of Antialiasing\n\nThe method of AA that's the simplest to understand is called super sampling anti-aliasing (SSAA). It simply takes more than one sample in every pixel on the screen. Because sample calculations take a while to do, this form of AA is extremely taxing on your graphics card. You're essentially rendering the same screen multiple times.\n\nAnother form of AA is called multi-sampling anti-aliasing (MSAA). This form of AA has an intelligent algorithm that finds out what pixels need more than one sample, and then simply does more samples on those pixels. This form of AA is much cheaper than SSAA and is also a lot more popular. MSAA doesn't work well for all games. Minecraft is the best example of a game where the edges of objects aren't the only thing that needs to be anti-aliased. Take a look at the insides of block textures. The game doesn't blur anything inside of blocks like most other games do, so SSAA is the best option for Minecraft.\n\nThere are other forms of AA, but these two are the most popular and the simplest to describe.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;I copy-pasted this from an old post I made on &lt;a href=\"/r/pcmasterrace\"&gt;/r/pcmasterrace&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;To understand how anti aliasing works, I&amp;#39;m first going to explain why it is needed. First you need to know what a sample is.&lt;/p&gt;\n\n&lt;h3&gt;How images are rendered&lt;/h3&gt;\n\n&lt;p&gt;Imagine your computer is rendering an &lt;a href=\"http://i.imgur.com/Y4gW0Qu.png\"&gt;image of a tomato on top of a table&lt;/a&gt;. In order to render the image each of the 1920 * 1080 pixels on your screen needs to have colors assigned to them. This isn&amp;#39;t as easy as viewing a video or an image. The tomato can be viewed from any angle, and the pixels will need to be recalculated many times every second to produce a smooth animation.&lt;/p&gt;\n\n&lt;p&gt;A sample is a light/color calculation that can be thought of as an infinitesimally thin ray of light. Imagine that you have a bunch of these rays of light, and pretend these light rays are 1-dimensional objects - lines - that are going straight through your screen. For those familiar with optics this is called normally incident. Most often each pixel will get one ray of light.&lt;/p&gt;\n\n&lt;p&gt;Most often your computer runs a &lt;a href=\"http://i.imgur.com/IG9pbks.png\"&gt;single one of these rays through the middle of a pixel&lt;/a&gt; (the surrounding pixels in that image are highlighted to make it easier to see the sample). When one of the rays hits an object in the game, it bounces off and goes back through the same pixel it came from, this time with the color of the object it hit. &lt;a href=\"http://i.imgur.com/SK1vYX4.png\"&gt;That ray then determines the color for the whole pixel&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h3&gt;Why AA is needed&lt;/h3&gt;\n\n&lt;p&gt;Now most of the time this works pretty well. If you have two pixels from the same object that are right next to each other - like two pixels on the inside of our tomato - they&amp;#39;ll have pretty similar colors and the image will look smooth. However, when you reach the edge of this tomato, &lt;a href=\"http://i.imgur.com/xSFk13p.png\"&gt;you&amp;#39;ll eventually find a pixel is no longer over top of the tomato&lt;/a&gt;. The pixel on the left will be red like the tomato, but the one to the right of it will be brown like the table it&amp;#39;s on. The difference in color is dramatic. The pixels are either on the tomato or not, there is no middle ground.&lt;/p&gt;\n\n&lt;p&gt;The problem here is that the pixel&amp;#39;s don&amp;#39;t accurately represent what&amp;#39;s going. If you look at the &amp;quot;pixels&amp;quot; drawn over &lt;a href=\"http://i.imgur.com/rc3wMbi.png\"&gt;the image of the tomato&lt;/a&gt; you&amp;#39;ll see that the area covered by the some of pixel has too much information to be conveyed by a single ray of light. On the right half of the pixel there&amp;#39;s the table, and on the left half there&amp;#39;s the tomato. Other pixels contain significantly less information. The pixels in the upper left corner of the image have fairly uniform colors throughout them, so when they are reduced to a single sample there is less information loss.&lt;/p&gt;\n\n&lt;p&gt;The solution programmers have come up with this problem is what we call anti-aliasing. The game engine &lt;a href=\"http://i.imgur.com/ip01OiT.png\"&gt;takes more than one sample per pixel&lt;/a&gt; (either one in each corner of the pixel, a few different samples in a grid formation, or sometimes even in random locations). Some will hit the tomato and some will hit the table. The colors are then averaged together to give you your final pixel color.&lt;/p&gt;\n\n&lt;h3&gt;Types of Antialiasing&lt;/h3&gt;\n\n&lt;p&gt;The method of AA that&amp;#39;s the simplest to understand is called super sampling anti-aliasing (SSAA). It simply takes more than one sample in every pixel on the screen. Because sample calculations take a while to do, this form of AA is extremely taxing on your graphics card. You&amp;#39;re essentially rendering the same screen multiple times.&lt;/p&gt;\n\n&lt;p&gt;Another form of AA is called multi-sampling anti-aliasing (MSAA). This form of AA has an intelligent algorithm that finds out what pixels need more than one sample, and then simply does more samples on those pixels. This form of AA is much cheaper than SSAA and is also a lot more popular. MSAA doesn&amp;#39;t work well for all games. Minecraft is the best example of a game where the edges of objects aren&amp;#39;t the only thing that needs to be anti-aliased. Take a look at the insides of block textures. The game doesn&amp;#39;t blur anything inside of blocks like most other games do, so SSAA is the best option for Minecraft.&lt;/p&gt;\n\n&lt;p&gt;There are other forms of AA, but these two are the most popular and the simplest to describe.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8qpfu", "score_hidden": false, "stickied": false, "created": 1492171920.0, "created_utc": 1492143120.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 826}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg9kq1j", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "KnowsAboutMath", "parent_id": "t1_dg9ef7y", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "&gt; ELI5: the old definition\n\nThe **general** definition has been explained [pretty well elsewhere in this thread](https://www.reddit.com/r/explainlikeimfive/comments/6574bb/eli5_antialiasing/dg8n5g3/) in an \"ELI5\" fashion.\n\nThe general sense of \"aliasing\" is explained well in the [wikipedia article](https://en.wikipedia.org/wiki/Aliasing) (including the specific application to computer graphics), especially in [this image](https://en.wikipedia.org/wiki/Aliasing#/media/File:Aliasing_between_a_positive_and_a_negative_frequency.png).\n\nA pretty good discussion of the general sense of \"anti-aliasing\" is included in the associated wiki on [anti-aliasing filters](https://en.wikipedia.org/wiki/Anti-aliasing_filter).\n\nThere's nothing wrong with describing the notion of aliasing as applied to computer graphics, and it may be that nowadays that is the context in which people are most familiar with it. But to describe aliasing/anti-aliasing as 'something that happens in computer graphics' is like defining *addition* as 'something we use in software design.'", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;ELI5: the old definition&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The &lt;strong&gt;general&lt;/strong&gt; definition has been explained &lt;a href=\"https://www.reddit.com/r/explainlikeimfive/comments/6574bb/eli5_antialiasing/dg8n5g3/\"&gt;pretty well elsewhere in this thread&lt;/a&gt; in an &amp;quot;ELI5&amp;quot; fashion.&lt;/p&gt;\n\n&lt;p&gt;The general sense of &amp;quot;aliasing&amp;quot; is explained well in the &lt;a href=\"https://en.wikipedia.org/wiki/Aliasing\"&gt;wikipedia article&lt;/a&gt; (including the specific application to computer graphics), especially in &lt;a href=\"https://en.wikipedia.org/wiki/Aliasing#/media/File:Aliasing_between_a_positive_and_a_negative_frequency.png\"&gt;this image&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;A pretty good discussion of the general sense of &amp;quot;anti-aliasing&amp;quot; is included in the associated wiki on &lt;a href=\"https://en.wikipedia.org/wiki/Anti-aliasing_filter\"&gt;anti-aliasing filters&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s nothing wrong with describing the notion of aliasing as applied to computer graphics, and it may be that nowadays that is the context in which people are most familiar with it. But to describe aliasing/anti-aliasing as &amp;#39;something that happens in computer graphics&amp;#39; is like defining &lt;em&gt;addition&lt;/em&gt; as &amp;#39;something we use in software design.&amp;#39;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg9kq1j", "score_hidden": false, "stickied": false, "created": 1492225028.0, "created_utc": 1492196228.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9ef7y", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "sploogus", "parent_id": "t1_dg964bh", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "ELI5: the old definition", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ELI5: the old definition&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg9ef7y", "score_hidden": false, "stickied": false, "created": 1492217644.0, "created_utc": 1492188844.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg964bh", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "KnowsAboutMath", "parent_id": "t1_dg8w3i0", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Where? The person who asked the original question, /u/sploogus, just said \"ELI5: Anti-aliasing\". I can't see any other posts by the original OP anywhere in this thread.\n\nThis thread is making me feel like I'm taking crazy pills. Concepts related to \"anti-aliasing\" go all the way back to Euler in the late 1700s. *Of course* it predates computer graphics. Is this no longer common knowledge among \"math people\"?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Where? The person who asked the original question, &lt;a href=\"/u/sploogus\"&gt;/u/sploogus&lt;/a&gt;, just said &amp;quot;ELI5: Anti-aliasing&amp;quot;. I can&amp;#39;t see any other posts by the original OP anywhere in this thread.&lt;/p&gt;\n\n&lt;p&gt;This thread is making me feel like I&amp;#39;m taking crazy pills. Concepts related to &amp;quot;anti-aliasing&amp;quot; go all the way back to Euler in the late 1700s. &lt;em&gt;Of course&lt;/em&gt; it predates computer graphics. Is this no longer common knowledge among &amp;quot;math people&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg964bh", "score_hidden": false, "stickied": false, "created": 1492207703.0, "created_utc": 1492178903.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8w3i0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "willyolio", "parent_id": "t1_dg8tzlg", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Uh yeah?  OP already described it in terms of Lego bricks.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Uh yeah?  OP already described it in terms of Lego bricks.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8w3i0", "score_hidden": false, "stickied": false, "created": 1492183324.0, "created_utc": 1492154524.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8tzlg", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "KnowsAboutMath", "parent_id": "t1_dg8nu8m", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "&gt; that has always been the definition of anti aliasing.\n\nExcept that the notion of \"anti-aliasing\" predates the existence of computer graphics.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;that has always been the definition of anti aliasing.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Except that the notion of &amp;quot;anti-aliasing&amp;quot; predates the existence of computer graphics.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8tzlg", "score_hidden": false, "stickied": false, "created": 1492178100.0, "created_utc": 1492149300.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": -1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg8nu8m", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "willyolio", "parent_id": "t1_dg8nlah", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "No, that has always been the definition of anti aliasing.  What you're describing is draw distance.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No, that has always been the definition of anti aliasing.  What you&amp;#39;re describing is draw distance.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8nu8m", "score_hidden": false, "stickied": false, "created": 1492167418.0, "created_utc": 1492138618.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8nlah", "gilded": 0, "archived": false, "score": -3, "report_reasons": null, "author": "PM_YOUR_BOOBS_PLS_", "parent_id": "t1_dg8jsqh", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 1, "body": "Has the use of \"anti-aliasing\" changed in recent years?  Back in the day, aliasing used to reference lowering the quality of rendered objects further away from you.  Bumping up AA just pushed out the distance where things remained at quality.\n\nThese days, all AA options seem to apply to the entire scene at all render distances.\n\nSo, has the actual nomenclature changed, or was it just that AA was so resource intensive before that it was only applied to closer objects, and now that there's more processing power, it's applied to everything to different degrees?\n\n\nLike, it seemed like before, it would go:\n\n\n1xAA - Anti-alias things in the first quarter of a scene.\n\n4xAA - Anti-alias pretty much the entire scene.\n\n\nAnd now it goes:\n\n1xAA - Anti-alias the full scene, but shittily.\n\n4xAA - Anti-alias full scene, but good.\n\n\nIt's something that has confused me a lot recently.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Has the use of &amp;quot;anti-aliasing&amp;quot; changed in recent years?  Back in the day, aliasing used to reference lowering the quality of rendered objects further away from you.  Bumping up AA just pushed out the distance where things remained at quality.&lt;/p&gt;\n\n&lt;p&gt;These days, all AA options seem to apply to the entire scene at all render distances.&lt;/p&gt;\n\n&lt;p&gt;So, has the actual nomenclature changed, or was it just that AA was so resource intensive before that it was only applied to closer objects, and now that there&amp;#39;s more processing power, it&amp;#39;s applied to everything to different degrees?&lt;/p&gt;\n\n&lt;p&gt;Like, it seemed like before, it would go:&lt;/p&gt;\n\n&lt;p&gt;1xAA - Anti-alias things in the first quarter of a scene.&lt;/p&gt;\n\n&lt;p&gt;4xAA - Anti-alias pretty much the entire scene.&lt;/p&gt;\n\n&lt;p&gt;And now it goes:&lt;/p&gt;\n\n&lt;p&gt;1xAA - Anti-alias the full scene, but shittily.&lt;/p&gt;\n\n&lt;p&gt;4xAA - Anti-alias full scene, but good.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s something that has confused me a lot recently.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8nlah", "score_hidden": false, "stickied": false, "created": 1492167048.0, "created_utc": 1492138248.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": -3}}, {"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8jsqh", "gilded": 0, "archived": false, "score": 2949, "report_reasons": null, "author": "mwr247", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Try taking some basic LEGO\u00ae bricks (let's use some black 2x2 blocks  for our example, part #3003) and try to make a diagonal line with them. You'll find the best you can do looks like a staircase with zigzaggy corners.\n\nNow step back and squint a bit so your vision is blurry. The further you are, the less you notice the pointy corners. If you were to do the same thing with DUPLO\u00ae bricks of the same 2x2 size and color (part #3437), you'de find a similar effect, but you'de have to be much farther away to make it look less zigzaggy.\n\nSo how can we get rid of the zigzaggyness? One way, as we saw, is to use smaller bricks (pixels), which allow us to be closer. But there's also another trick you can use. Going back to your original smaller bricks (which are black, on your conviniently white table), start placing grey bricks so that they touch a black brick on two sides. You'll notice the line is bigger, but if you step back and squint, it'll look even less zigzaggy than before. That's because the grey is the color in between the line and the background, which means they blend together better when we look at them. This is a type of antialiasing.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try taking some basic LEGO\u00ae bricks (let&amp;#39;s use some black 2x2 blocks  for our example, part #3003) and try to make a diagonal line with them. You&amp;#39;ll find the best you can do looks like a staircase with zigzaggy corners.&lt;/p&gt;\n\n&lt;p&gt;Now step back and squint a bit so your vision is blurry. The further you are, the less you notice the pointy corners. If you were to do the same thing with DUPLO\u00ae bricks of the same 2x2 size and color (part #3437), you&amp;#39;de find a similar effect, but you&amp;#39;de have to be much farther away to make it look less zigzaggy.&lt;/p&gt;\n\n&lt;p&gt;So how can we get rid of the zigzaggyness? One way, as we saw, is to use smaller bricks (pixels), which allow us to be closer. But there&amp;#39;s also another trick you can use. Going back to your original smaller bricks (which are black, on your conviniently white table), start placing grey bricks so that they touch a black brick on two sides. You&amp;#39;ll notice the line is bigger, but if you step back and squint, it&amp;#39;ll look even less zigzaggy than before. That&amp;#39;s because the grey is the color in between the line and the background, which means they blend together better when we look at them. This is a type of antialiasing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8jsqh", "score_hidden": false, "stickied": false, "created": 1492161714.0, "created_utc": 1492132914.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2949}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg87hvk", "gilded": 0, "archived": false, "score": 5366, "report_reasons": null, "author": "Valtieri", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "**ELI5 Answer**\n\nPixels are all square.  That means they are very good at drawing straight lines, but very bad at drawing curved and diagonal lines, because things start looking jagged.\n\nAnti-aliasing uses blur and smoothing to hide the jagged edges so that things don't look quite as pixelated.\n\n[Here is a good example side by side](https://qph.ec.quoracdn.net/main-qimg-10856ecbea4f439fb9fb751d41ff704a).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;ELI5 Answer&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Pixels are all square.  That means they are very good at drawing straight lines, but very bad at drawing curved and diagonal lines, because things start looking jagged.&lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing uses blur and smoothing to hide the jagged edges so that things don&amp;#39;t look quite as pixelated.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://qph.ec.quoracdn.net/main-qimg-10856ecbea4f439fb9fb751d41ff704a\"&gt;Here is a good example side by side&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg87hvk", "score_hidden": false, "stickied": false, "created": 1492145599.0, "created_utc": 1492116799.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5366}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg92h8a", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "cawfree", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing happens when you try to describe something that changes rapidly, and you can't describe it fast enough. For example, imagine you're measuring a half a meter deep hole, and your measuring stick is only capable of measuring in full meters. Whatever measurement you leave with, you've lost information of the real size; you're left with an approximation. \n\nThe same thing happens in sound. Say you want to measure a 10Hz wave (moves up and down ten times a second), but you are only capable of measuring it five times a second. You'll never get an accurate representation of the true shape of the wave, and anything you come out with is distorted. This is aliasing. The more samples you make, the closer you get to a real representation what the shape truly is.\n\nA guy called Nyquist proved that in order to sample a frequency, we need to sample at at least twice the rate. \n\nSo, anti aliasing is a way of getting around these fundamental issues in what happens when we lose information in our signals. With pixels for example, the square edges introduce such a harsh transition that we lose information of what goes on between the pixels. An interesting way of reducing this effect includes sub pixel anti aliasing, where you take advantage of the fact that each pixel is comprised of a discrete R, G, B value, smaller than the pixel itself and therefore capable of generating higher 'spatial' frequencies. It has been proven that you can share these colour components with neighbours to try and spoof the missing information, producing what appears to be a much higher quality image.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing happens when you try to describe something that changes rapidly, and you can&amp;#39;t describe it fast enough. For example, imagine you&amp;#39;re measuring a half a meter deep hole, and your measuring stick is only capable of measuring in full meters. Whatever measurement you leave with, you&amp;#39;ve lost information of the real size; you&amp;#39;re left with an approximation. &lt;/p&gt;\n\n&lt;p&gt;The same thing happens in sound. Say you want to measure a 10Hz wave (moves up and down ten times a second), but you are only capable of measuring it five times a second. You&amp;#39;ll never get an accurate representation of the true shape of the wave, and anything you come out with is distorted. This is aliasing. The more samples you make, the closer you get to a real representation what the shape truly is.&lt;/p&gt;\n\n&lt;p&gt;A guy called Nyquist proved that in order to sample a frequency, we need to sample at at least twice the rate. &lt;/p&gt;\n\n&lt;p&gt;So, anti aliasing is a way of getting around these fundamental issues in what happens when we lose information in our signals. With pixels for example, the square edges introduce such a harsh transition that we lose information of what goes on between the pixels. An interesting way of reducing this effect includes sub pixel anti aliasing, where you take advantage of the fact that each pixel is comprised of a discrete R, G, B value, smaller than the pixel itself and therefore capable of generating higher &amp;#39;spatial&amp;#39; frequencies. It has been proven that you can share these colour components with neighbours to try and spoof the missing information, producing what appears to be a much higher quality image.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg92h8a", "score_hidden": false, "stickied": false, "created": 1492201764.0, "created_utc": 1492172964.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8n5g3", "gilded": 0, "archived": false, "score": 127, "report_reasons": null, "author": "nashvortex", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Apparently Reddit is full of gamers who tell you nothing of the core concept. \n\nSo let's start with what aliasing is. Let's say your checking to see how often a light blinks. So you decide you are going to check it every minute to see if it's on. \n\nYou start the timer and you see that the light is on at the minute mark. Aha.. You say it blinks every minute. But wait... What if it was blinking every 30 seconds... And because you were checking every minute, you only saw every second blink and missed the 30th second blink event. \n\nSo you say... Fine. I will check every 30 seconds now. And yet the question can be asked... What it was blinking every 15 seconds and you only saw every second and forth blink event? \nEssentially, you were seeing blinks that were partly determined by your speed of checking for them. You saw 1 when there could have been 2,4,6,8 etc. Blinks in that minute. \n\nThere is a pattern here which I won't get you but this inaccuracy that occurred is called aliasing. \n\nThis goes on and on and you eventually reach a conclusion. You can only be absolutely sure of the frequency of something if you check it at least twice as fast as that frequency. This is called the Shannon Nyquist sampling theorem. \n\nAnti-aliasing is basically the opposite of this and depending on how complicated the setup of frequencies is, methods to anti alias also change. The fundamental method of anti aliasing is simply check the frequency more often in time or space and hope that you are at least twice as fast as the actual frequency.  This is called supersampling. \n\nYou could do something more complicated. For example. You could check every 10 seconds , and also every  15 seconds. This means you will be able to see blinks if they occur at some point for all multiples of 10 and 15 seconds. That's pretty good. By checking at 2 different speeds, you've sort of reduced the need to go faster for one frequency. This is called multisampling\n\nNow in a computer for graphics, aliasing occurs because pixels are processed at a certain frequency, change at another and are displayed at still another frequency. This creates the jarring because of aliasing (you aren't getting all processor produced pixels displayed because you screen refresh is to slow for example). You have to use extra tricks in the GPU to makes sure the image does not get jarred. This is anti-aliasing... Performed by more complicated algorithms of the same basic steps above.\n\n\n\n\nEdit : A lot people seem to be assuming that the word \"frequency\" only refers to temporal frequency. It doesn't, your assumption is flawed. Before the \"this is wrong\" comment, I recommend you read up on Fourier analysis. https://www.cs.auckland.ac.nz/courses/compsci773s1c/lectures/ImageProcessing-html/topic1.htm\nand http://homepages.inf.ed.ac.uk/rbf/HIPR2/fourier.htm\n\nThese links are definitely not for 5 year olds, but are suitable for the poorly informed tunnel-visioned teenagers who are whining below.", "edited": 1492182618.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Apparently Reddit is full of gamers who tell you nothing of the core concept. &lt;/p&gt;\n\n&lt;p&gt;So let&amp;#39;s start with what aliasing is. Let&amp;#39;s say your checking to see how often a light blinks. So you decide you are going to check it every minute to see if it&amp;#39;s on. &lt;/p&gt;\n\n&lt;p&gt;You start the timer and you see that the light is on at the minute mark. Aha.. You say it blinks every minute. But wait... What if it was blinking every 30 seconds... And because you were checking every minute, you only saw every second blink and missed the 30th second blink event. &lt;/p&gt;\n\n&lt;p&gt;So you say... Fine. I will check every 30 seconds now. And yet the question can be asked... What it was blinking every 15 seconds and you only saw every second and forth blink event? \nEssentially, you were seeing blinks that were partly determined by your speed of checking for them. You saw 1 when there could have been 2,4,6,8 etc. Blinks in that minute. &lt;/p&gt;\n\n&lt;p&gt;There is a pattern here which I won&amp;#39;t get you but this inaccuracy that occurred is called aliasing. &lt;/p&gt;\n\n&lt;p&gt;This goes on and on and you eventually reach a conclusion. You can only be absolutely sure of the frequency of something if you check it at least twice as fast as that frequency. This is called the Shannon Nyquist sampling theorem. &lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing is basically the opposite of this and depending on how complicated the setup of frequencies is, methods to anti alias also change. The fundamental method of anti aliasing is simply check the frequency more often in time or space and hope that you are at least twice as fast as the actual frequency.  This is called supersampling. &lt;/p&gt;\n\n&lt;p&gt;You could do something more complicated. For example. You could check every 10 seconds , and also every  15 seconds. This means you will be able to see blinks if they occur at some point for all multiples of 10 and 15 seconds. That&amp;#39;s pretty good. By checking at 2 different speeds, you&amp;#39;ve sort of reduced the need to go faster for one frequency. This is called multisampling&lt;/p&gt;\n\n&lt;p&gt;Now in a computer for graphics, aliasing occurs because pixels are processed at a certain frequency, change at another and are displayed at still another frequency. This creates the jarring because of aliasing (you aren&amp;#39;t getting all processor produced pixels displayed because you screen refresh is to slow for example). You have to use extra tricks in the GPU to makes sure the image does not get jarred. This is anti-aliasing... Performed by more complicated algorithms of the same basic steps above.&lt;/p&gt;\n\n&lt;p&gt;Edit : A lot people seem to be assuming that the word &amp;quot;frequency&amp;quot; only refers to temporal frequency. It doesn&amp;#39;t, your assumption is flawed. Before the &amp;quot;this is wrong&amp;quot; comment, I recommend you read up on Fourier analysis. &lt;a href=\"https://www.cs.auckland.ac.nz/courses/compsci773s1c/lectures/ImageProcessing-html/topic1.htm\"&gt;https://www.cs.auckland.ac.nz/courses/compsci773s1c/lectures/ImageProcessing-html/topic1.htm&lt;/a&gt;\nand &lt;a href=\"http://homepages.inf.ed.ac.uk/rbf/HIPR2/fourier.htm\"&gt;http://homepages.inf.ed.ac.uk/rbf/HIPR2/fourier.htm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;These links are definitely not for 5 year olds, but are suitable for the poorly informed tunnel-visioned teenagers who are whining below.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8n5g3", "score_hidden": false, "stickied": false, "created": 1492166412.0, "created_utc": 1492137612.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 127}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg852f8", "gilded": 0, "archived": false, "score": 95, "report_reasons": null, "author": "frozenyogurttheif", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Depends on the type of antialiasing. They're all very different.\n\nMSAA and SSAA work on a pretty simple principle: increase the resolution of the content being rendered. You get more detail that way, which decreases aliasing. SSAA straight up increases the internal resolution of any 3D image. MSAA is more complex and selective, but still works on the same principle.\n\nPurely post-process antialiasing techniques like FXAA do not actually change how the picture is rendered at all. It's just a filter overlayed over the image being rendered. Think of an overlay making all colours red. It's that kind of filter. It's just a flat 2D filter overlaying your screen. It doesn't touch any of the 3D rendered model data in any way. Only instead of changing the colour value of all pixels to red it changes their values strategically to try to reduce the colour difference between contrasting parts of an image. This reduces the visual perception of aliasing. \n\nThere are different hybrid forms of anti-aliasing as well. Some of them are pretty clever in how they achieve their goals. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Depends on the type of antialiasing. They&amp;#39;re all very different.&lt;/p&gt;\n\n&lt;p&gt;MSAA and SSAA work on a pretty simple principle: increase the resolution of the content being rendered. You get more detail that way, which decreases aliasing. SSAA straight up increases the internal resolution of any 3D image. MSAA is more complex and selective, but still works on the same principle.&lt;/p&gt;\n\n&lt;p&gt;Purely post-process antialiasing techniques like FXAA do not actually change how the picture is rendered at all. It&amp;#39;s just a filter overlayed over the image being rendered. Think of an overlay making all colours red. It&amp;#39;s that kind of filter. It&amp;#39;s just a flat 2D filter overlaying your screen. It doesn&amp;#39;t touch any of the 3D rendered model data in any way. Only instead of changing the colour value of all pixels to red it changes their values strategically to try to reduce the colour difference between contrasting parts of an image. This reduces the visual perception of aliasing. &lt;/p&gt;\n\n&lt;p&gt;There are different hybrid forms of anti-aliasing as well. Some of them are pretty clever in how they achieve their goals. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg852f8", "score_hidden": false, "stickied": false, "created": 1492142871.0, "created_utc": 1492114071.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 95}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg85xhe", "gilded": 0, "archived": false, "score": 52, "report_reasons": null, "author": "zjm555", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing, in the most general sense, is a concept in the field of signal processing that happens when sampling a continuous signal. Think of a sine wave -- you could sample its value anywhere in time (assuming the time domain is continuous). But if you don't sample frequently enough, you might not get enough information in order to understand the original signal. As a contrived degenerate example, imagine a sine wave with a frequency of 1Hz. If your sampling rate is also 1Hz, you'd see the same exact value every time you sample, and you'd have no way of knowing that the value was fluctuating in between your samples.\n\nThis concept extends to more complex signals -- by sampling a continuous signal at discrete intervals, you can lose information.\n\nANTI-aliasing, which is what you asked about, is the set of techniques that can be used to mitigate the problems (known as artifacts) resulting from aliasing. If you give a little more info about exactly what application are you are talking about, e.g. computer graphics, I can provide more details.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing, in the most general sense, is a concept in the field of signal processing that happens when sampling a continuous signal. Think of a sine wave -- you could sample its value anywhere in time (assuming the time domain is continuous). But if you don&amp;#39;t sample frequently enough, you might not get enough information in order to understand the original signal. As a contrived degenerate example, imagine a sine wave with a frequency of 1Hz. If your sampling rate is also 1Hz, you&amp;#39;d see the same exact value every time you sample, and you&amp;#39;d have no way of knowing that the value was fluctuating in between your samples.&lt;/p&gt;\n\n&lt;p&gt;This concept extends to more complex signals -- by sampling a continuous signal at discrete intervals, you can lose information.&lt;/p&gt;\n\n&lt;p&gt;ANTI-aliasing, which is what you asked about, is the set of techniques that can be used to mitigate the problems (known as artifacts) resulting from aliasing. If you give a little more info about exactly what application are you are talking about, e.g. computer graphics, I can provide more details.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg85xhe", "score_hidden": false, "stickied": false, "created": 1492143820.0, "created_utc": 1492115020.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 52}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg873zt", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "loljetfuel", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Screens are grids of rectangular dots called \"pixels\"; they're pretty small, but they're still _waaay_ too big to perfectly show curved or even just \"crooked\" shapes.\n\nThis is most noticeable when computers are drawing shapes; if I draw a circle using only those dots, it'll look jagged. That's called _aliasing_. Humans don't expect their smooth shapes to look jagged, so aliasing makes computer-generated images look less real.\n\n_Anti-aliasing_ is a term for techniques you can use to trick people into not seeing as much of that jaggedness. One technique is to trace around the outside with \"lighter\" (less-saturated) versions of the color of the edge. This creates an optical illusion of \"blurriness\" which tricks us into thinking the edge is smoother and less jagged.\n\nAnd less-jagged images look more realistic to humans.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Screens are grids of rectangular dots called &amp;quot;pixels&amp;quot;; they&amp;#39;re pretty small, but they&amp;#39;re still &lt;em&gt;waaay&lt;/em&gt; too big to perfectly show curved or even just &amp;quot;crooked&amp;quot; shapes.&lt;/p&gt;\n\n&lt;p&gt;This is most noticeable when computers are drawing shapes; if I draw a circle using only those dots, it&amp;#39;ll look jagged. That&amp;#39;s called &lt;em&gt;aliasing&lt;/em&gt;. Humans don&amp;#39;t expect their smooth shapes to look jagged, so aliasing makes computer-generated images look less real.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Anti-aliasing&lt;/em&gt; is a term for techniques you can use to trick people into not seeing as much of that jaggedness. One technique is to trace around the outside with &amp;quot;lighter&amp;quot; (less-saturated) versions of the color of the edge. This creates an optical illusion of &amp;quot;blurriness&amp;quot; which tricks us into thinking the edge is smoother and less jagged.&lt;/p&gt;\n\n&lt;p&gt;And less-jagged images look more realistic to humans.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg873zt", "score_hidden": false, "stickied": false, "created": 1492145156.0, "created_utc": 1492116356.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg84i29", "gilded": 0, "archived": false, "score": 42, "report_reasons": null, "author": "RaspberryBob", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Think of two squares touching at corners... the image is quite jaggedy. In things such as video games AA predicts what should be in the empty space to create a smoother images on thing objects (such as wires or lines) or object outlines.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of two squares touching at corners... the image is quite jaggedy. In things such as video games AA predicts what should be in the empty space to create a smoother images on thing objects (such as wires or lines) or object outlines.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg84i29", "score_hidden": false, "stickied": false, "created": 1492142241.0, "created_utc": 1492113441.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 42}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8o2zs", "gilded": 0, "archived": false, "score": 9, "report_reasons": null, "author": "sideh7", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "This Linus tech video covers it. Saw 3 days ago https://youtu.be/hqi0114mwtY\n\nTL:DW - pixels are squares like a grid, which makes diagonals shit, so either add more tiny pixels to trick the eye into thinking it is smoother or smooth the colour of the pixels around. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This Linus tech video covers it. Saw 3 days ago &lt;a href=\"https://youtu.be/hqi0114mwtY\"&gt;https://youtu.be/hqi0114mwtY&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;TL:DW - pixels are squares like a grid, which makes diagonals shit, so either add more tiny pixels to trick the eye into thinking it is smoother or smooth the colour of the pixels around. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8o2zs", "score_hidden": false, "stickied": false, "created": 1492167782.0, "created_utc": 1492138982.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8bik4", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "thatguywithglasses97", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing is a duplication of signals that occurs when a signal is digitized. \n\nIn the real world, signals like sound and light are *analog time continuous*. This means that their values can take any value at all. For example, a sound signal might have a maximum loudness, or intensity of 99.579 dB, and a frequency of 15 kHz. You can think of a wave as a collection of infinite points, that all together make a continuous wave. \n\nBecause computers are digital, they can only take a certain amount of point from this wave. Computers measure the intensity, or sample the wave, at a certain rate, to measure the signal. This rate is called the sampling rate. \n\nIf the sampling rate over twice our frequency, say, ~~20~~ 40kHz, then our signal of 15 kHz can be reconstructed pretty accurately. However, if we have a sampling rate of~~10~~* 20kHz, we will start running into problems. \n\nBecause the sampling rate is less than our signal, it cannot accurately measure it. The signal reconstructed by our computer will be distorted, and will look like a lower frequency signal, or an *alias*. (will add a picture later for clarity) \n\nIn order to fix this, frequencies higher than twice our sampling rate are simply blocked. In music files, the sampling rate is about ~~26~~ 44kHz, which means a maximum audible frequency of 22kHz. Since the human hearing range tops out at 20kHz, it doesn't matter that these high frequencies are blocked out, because we can't hear them.\n\nEdit: Thanks to /u/ipwnmice and /u/oonniioonn for some corrections.", "edited": 1492152098.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing is a duplication of signals that occurs when a signal is digitized. &lt;/p&gt;\n\n&lt;p&gt;In the real world, signals like sound and light are &lt;em&gt;analog time continuous&lt;/em&gt;. This means that their values can take any value at all. For example, a sound signal might have a maximum loudness, or intensity of 99.579 dB, and a frequency of 15 kHz. You can think of a wave as a collection of infinite points, that all together make a continuous wave. &lt;/p&gt;\n\n&lt;p&gt;Because computers are digital, they can only take a certain amount of point from this wave. Computers measure the intensity, or sample the wave, at a certain rate, to measure the signal. This rate is called the sampling rate. &lt;/p&gt;\n\n&lt;p&gt;If the sampling rate over twice our frequency, say, &lt;del&gt;20&lt;/del&gt; 40kHz, then our signal of 15 kHz can be reconstructed pretty accurately. However, if we have a sampling rate of&lt;del&gt;10&lt;/del&gt;* 20kHz, we will start running into problems. &lt;/p&gt;\n\n&lt;p&gt;Because the sampling rate is less than our signal, it cannot accurately measure it. The signal reconstructed by our computer will be distorted, and will look like a lower frequency signal, or an &lt;em&gt;alias&lt;/em&gt;. (will add a picture later for clarity) &lt;/p&gt;\n\n&lt;p&gt;In order to fix this, frequencies higher than twice our sampling rate are simply blocked. In music files, the sampling rate is about &lt;del&gt;26&lt;/del&gt; 44kHz, which means a maximum audible frequency of 22kHz. Since the human hearing range tops out at 20kHz, it doesn&amp;#39;t matter that these high frequencies are blocked out, because we can&amp;#39;t hear them.&lt;/p&gt;\n\n&lt;p&gt;Edit: Thanks to &lt;a href=\"/u/ipwnmice\"&gt;/u/ipwnmice&lt;/a&gt; and &lt;a href=\"/u/oonniioonn\"&gt;/u/oonniioonn&lt;/a&gt; for some corrections.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8bik4", "score_hidden": false, "stickied": false, "created": 1492150525.0, "created_utc": 1492121725.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg960og", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "F0sh", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Lots of unnecessarily complicated answers.\n\nImagine you're drawing a black 45-degree line on a computer screen. The obvious thing to do is to draw the bottom-left (say) pixel in black, move up and right by one, draw another black pixel, and so on, until you've drawn all of the line.\n\nBecause all the black pixels of the line are square and you can see the individual pixels, this results in a jagged-looking line. You can make a smoother line if you also colour in the pixels adjacent to those drawn in this example, using a colour intermediate between black and whatever's behind the line.\n\nIn a 3D render (including in a game) the obvious way to do this is to render the picture twice as big, and then for every pixel you actually have on your screen, you average out the four pixels of the image you rendered. This works out to the same thing. It's a lot of extra work though, so games use tricks to make it faster. This might involve a filter which looks for jagged lines and smooths them out. However, this might accidentally find something that is supposed to look jagged and smooth it out too much, so it's tricky to get right, though much faster.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lots of unnecessarily complicated answers.&lt;/p&gt;\n\n&lt;p&gt;Imagine you&amp;#39;re drawing a black 45-degree line on a computer screen. The obvious thing to do is to draw the bottom-left (say) pixel in black, move up and right by one, draw another black pixel, and so on, until you&amp;#39;ve drawn all of the line.&lt;/p&gt;\n\n&lt;p&gt;Because all the black pixels of the line are square and you can see the individual pixels, this results in a jagged-looking line. You can make a smoother line if you also colour in the pixels adjacent to those drawn in this example, using a colour intermediate between black and whatever&amp;#39;s behind the line.&lt;/p&gt;\n\n&lt;p&gt;In a 3D render (including in a game) the obvious way to do this is to render the picture twice as big, and then for every pixel you actually have on your screen, you average out the four pixels of the image you rendered. This works out to the same thing. It&amp;#39;s a lot of extra work though, so games use tricks to make it faster. This might involve a filter which looks for jagged lines and smooths them out. However, this might accidentally find something that is supposed to look jagged and smooth it out too much, so it&amp;#39;s tricky to get right, though much faster.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg960og", "score_hidden": false, "stickied": false, "created": 1492207559.0, "created_utc": 1492178759.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg88m4m", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "sudo_scientific", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "So there are a bunch of different techniques for anti-aliasing, but there are two main categories: render-time AA and post-process AA.\n\n**Render-Time AA** - These techniques are applied *during* the render of the scene. As pointed out elsewhere, one of the main ways of doing this is by super-sampling, or drawing the scene at a higher resolution before down-sampling it to the display resolution. This can fix both [jagged edges](https://people.cs.clemson.edu/~tadavis/cs809/aa/aliasing2.png) and thin lines disappearing. Nvidia's [page on DSR](http://www.geforce.com/hardware/technology/dsr/technology) does a pretty god job of showing how super-sampling helps with both of these. \n\nOne of the most important differences is that render-time techniques get to use information about the 3d geometry of the world, and only smooth things like the edges of polygons.\n\n**Post-Process AA** - These techniques are applied *after* the whole scene has already been drawn. The input to these is just the \"finished\" 2d image. The most common post-process AA is FXAA. The basic idea of these is to look at neighboring pixels and look for big changes in neighboring pixel color. These indicate hard-edges, which are where aliasing occurs. [Here](https://i.kinja-img.com/gawker-media/image/upload/t_original/18j12dtou8x64jpg.jpg) is an image showing the edge-detection steps of FXAA. Once you detect those edges, you can blur them a little, hiding the aliasing.\n\nPost-process AA is super easy to add to your game, because you just stick it on at the very end of your render pipeline. Just make sure to apply it before you add in your UI, because all those hard edges in the text and boxes will come out blurry.\n\nThe problem with post-processes is that it doesn't know if a hard edge is *supposed* to be there. It may end up blurring some of your textures, especially if there is text on them.", "edited": 1492118325.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So there are a bunch of different techniques for anti-aliasing, but there are two main categories: render-time AA and post-process AA.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Render-Time AA&lt;/strong&gt; - These techniques are applied &lt;em&gt;during&lt;/em&gt; the render of the scene. As pointed out elsewhere, one of the main ways of doing this is by super-sampling, or drawing the scene at a higher resolution before down-sampling it to the display resolution. This can fix both &lt;a href=\"https://people.cs.clemson.edu/%7Etadavis/cs809/aa/aliasing2.png\"&gt;jagged edges&lt;/a&gt; and thin lines disappearing. Nvidia&amp;#39;s &lt;a href=\"http://www.geforce.com/hardware/technology/dsr/technology\"&gt;page on DSR&lt;/a&gt; does a pretty god job of showing how super-sampling helps with both of these. &lt;/p&gt;\n\n&lt;p&gt;One of the most important differences is that render-time techniques get to use information about the 3d geometry of the world, and only smooth things like the edges of polygons.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Post-Process AA&lt;/strong&gt; - These techniques are applied &lt;em&gt;after&lt;/em&gt; the whole scene has already been drawn. The input to these is just the &amp;quot;finished&amp;quot; 2d image. The most common post-process AA is FXAA. The basic idea of these is to look at neighboring pixels and look for big changes in neighboring pixel color. These indicate hard-edges, which are where aliasing occurs. &lt;a href=\"https://i.kinja-img.com/gawker-media/image/upload/t_original/18j12dtou8x64jpg.jpg\"&gt;Here&lt;/a&gt; is an image showing the edge-detection steps of FXAA. Once you detect those edges, you can blur them a little, hiding the aliasing.&lt;/p&gt;\n\n&lt;p&gt;Post-process AA is super easy to add to your game, because you just stick it on at the very end of your render pipeline. Just make sure to apply it before you add in your UI, because all those hard edges in the text and boxes will come out blurry.&lt;/p&gt;\n\n&lt;p&gt;The problem with post-processes is that it doesn&amp;#39;t know if a hard edge is &lt;em&gt;supposed&lt;/em&gt; to be there. It may end up blurring some of your textures, especially if there is text on them.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg88m4m", "score_hidden": false, "stickied": false, "created": 1492146901.0, "created_utc": 1492118101.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8wlib", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "TheRealLargedwarf", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing occurs when the sample frequency (pixel density or audio sampling) is not greater than twice the frequency of features in the signal being sampled. Imagine you have bricks on a wall that are spaced slightly less than 2 pixels apart you'll get a periodic pattern in your image where the spacing is forced to become 2,2,1,2,2,1,2,2,1... What this looks like in reality is a weird wave traveling across the wall. Anti-aliasing is designed to correct for this, It does so by analysing the frequencies present im the image and removing the ones higher than can be rendered properly- the resulting image no longer has sharp edges on a single pixel, rather the edges are smoothed over a couple of pixels. This eliminates the waves. It should be noted you will alway get aliasing if your captured data is not of high enough quality regardless of how you process it, but you can hide it at the cost of quality. Aliasing when rendering a large image onto a smaller number of pixels can be removed. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing occurs when the sample frequency (pixel density or audio sampling) is not greater than twice the frequency of features in the signal being sampled. Imagine you have bricks on a wall that are spaced slightly less than 2 pixels apart you&amp;#39;ll get a periodic pattern in your image where the spacing is forced to become 2,2,1,2,2,1,2,2,1... What this looks like in reality is a weird wave traveling across the wall. Anti-aliasing is designed to correct for this, It does so by analysing the frequencies present im the image and removing the ones higher than can be rendered properly- the resulting image no longer has sharp edges on a single pixel, rather the edges are smoothed over a couple of pixels. This eliminates the waves. It should be noted you will alway get aliasing if your captured data is not of high enough quality regardless of how you process it, but you can hide it at the cost of quality. Aliasing when rendering a large image onto a smaller number of pixels can be removed. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8wlib", "score_hidden": false, "stickied": false, "created": 1492184757.0, "created_utc": 1492155957.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8qgah", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "GeneReddit123", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Followup question: ELI5 Anisotropic Filtering?\n\nI mean, I know what it does (make surfaces you look at a small angle be less blurry), but my question is, why are they blurry to begin with and require extra filtering, if the same surface looks non-blurry if viewed at a direct angle.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Followup question: ELI5 Anisotropic Filtering?&lt;/p&gt;\n\n&lt;p&gt;I mean, I know what it does (make surfaces you look at a small angle be less blurry), but my question is, why are they blurry to begin with and require extra filtering, if the same surface looks non-blurry if viewed at a direct angle.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8qgah", "score_hidden": false, "stickied": false, "created": 1492171498.0, "created_utc": 1492142698.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg89lwz", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "angrymonkey", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Imagine pixels as a bunch of squares covering a perfectly smooth image. How do you color the pixels so they look like the image underneath?\n\nYou could color each pixel according to the color of the image exactly at its center. But what if there's detail smaller than the pixel, and you happen to hit a small detail that doesn't represent the color of the whole pixel? You'll color the whole pixel like that small detail, and it will have a color that's mostly wrong.\n\nReally what you want is the *average* color of all the details inside the pixel. That means that all the details smaller than a pixel get smoothed out. This makes the image look better and smoother, and can also prevent pixels from blinking on and off as the centers move over small, high-contrast details.\n\nIt's very hard to *exactly* compute the average, so must anti-aliasing techniques work by measuring the color at multiple specific locations inside each pixel, and mixing together the results. The way you mix things (i.e. [weighting locations differently](https://en.wikipedia.org/wiki/Window_function) according to whether they are near the center of the pixel or far away) can affect the perception sharpness, or the brightness of fine details like highlights.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Imagine pixels as a bunch of squares covering a perfectly smooth image. How do you color the pixels so they look like the image underneath?&lt;/p&gt;\n\n&lt;p&gt;You could color each pixel according to the color of the image exactly at its center. But what if there&amp;#39;s detail smaller than the pixel, and you happen to hit a small detail that doesn&amp;#39;t represent the color of the whole pixel? You&amp;#39;ll color the whole pixel like that small detail, and it will have a color that&amp;#39;s mostly wrong.&lt;/p&gt;\n\n&lt;p&gt;Really what you want is the &lt;em&gt;average&lt;/em&gt; color of all the details inside the pixel. That means that all the details smaller than a pixel get smoothed out. This makes the image look better and smoother, and can also prevent pixels from blinking on and off as the centers move over small, high-contrast details.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s very hard to &lt;em&gt;exactly&lt;/em&gt; compute the average, so must anti-aliasing techniques work by measuring the color at multiple specific locations inside each pixel, and mixing together the results. The way you mix things (i.e. &lt;a href=\"https://en.wikipedia.org/wiki/Window_function\"&gt;weighting locations differently&lt;/a&gt; according to whether they are near the center of the pixel or far away) can affect the perception sharpness, or the brightness of fine details like highlights.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg89lwz", "score_hidden": false, "stickied": false, "created": 1492148110.0, "created_utc": 1492119310.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8bnhu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MrCartmenes", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "To answer effectively what anti-aliasing is, let me first tell you what an alias is. (Because just like with bug-spray, you first need to know what a bug is to understand bug-spray.)\n\nWhen reproducing any kind of signal, be that visual or aural, you are limited in what you can return to the user by something called your sampling rate. \n\nThe theory that describes this is Niquist-Shannon Sampling Theorem. It states that you can only reproduce a signal of half the frequency that you sampled it at. So with a screen that would mean in order to *accurately* display 2K of resolution you would need 4K of resolution in your capture/display device. \n\nOne of the easiest ways to understand anti-aliasing is if we think about a screen with lots of Aliases (by which we mean artefacts produced by the method of capture or presentation that are not in the original scene or image). \n\nOne such screen with lots of potential aliases is an old standard definition TV. \n\nIf you were trying to playback a video of a man walking a thin tightrope between the Twin Towers (back when we had standard def TVs, naturally) we can imagine a thin black line extending across the screen. But the line is wobbling slightly. When displayed on our screen the line is only 1 pixel high. Which is a disaster for our tightrope walker as the line is either there, or when it wobbles up slightly to be half way between two pixels it is not there at all. Worse, because of the interlaced SD signal, the rope appears to vibrate violently between two lines. And when the camera shows the rope from another angle, instead of looking like a rope it looks like a jagged line of Lego bricks. This can be fixed in-camera by sampling at twice SD resolution (something called super-sampling) and having a low-pass filter just before the sensor (a piece of lightly frosted glass which blurs the image slightly). With supersampling and the blur filter in place the line is softer (thicker and fuzzier looking) but it displays without aliases. We have successfully anti-aliased in the x and y axis. \n\nOn a computer screen this is what is usually meant by anti-aliasing. Text, for example, is blured to make it more readable. \n\nThere are other kinds of alias in an image, such as a temporal alias known as judder. Judder is caused by the interaction between movement, low frame rates, and contrast. It is anti-aliased by allowing motion blur to be present. This is either added artificially in CG and gaming or in camera in cinema by using a shutter which is open for half of the frame rate. (Known as a 180deg shutter.) The opening scene from Saving Private Ryan is a good example of deliberate use of judder. \n\nThis applies to all kinds of samples. Be it visual or sound. The best way to reduce aliases without compromising on sharpness is to increase the sampling rate (resolution) to a point where our senses can no longer detect the samples (such as the pixels). This is why Apple pursued 'retina' screens for their devices. \n\nOn another note aliases can also be caused by compression such as JPG artefacts or banding from sub-sampling. The human eye can actually only see colours at half he resolution that it can see brightness. So TV signals and still images are always sub-sampled in the chroma channels. (Chroma=colour, luma=brightness.)\n\nIf you look closely you can sometimes see this evident as colours bleeding out of the objects they belong to. \n\nTL:DR it's blur", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To answer effectively what anti-aliasing is, let me first tell you what an alias is. (Because just like with bug-spray, you first need to know what a bug is to understand bug-spray.)&lt;/p&gt;\n\n&lt;p&gt;When reproducing any kind of signal, be that visual or aural, you are limited in what you can return to the user by something called your sampling rate. &lt;/p&gt;\n\n&lt;p&gt;The theory that describes this is Niquist-Shannon Sampling Theorem. It states that you can only reproduce a signal of half the frequency that you sampled it at. So with a screen that would mean in order to &lt;em&gt;accurately&lt;/em&gt; display 2K of resolution you would need 4K of resolution in your capture/display device. &lt;/p&gt;\n\n&lt;p&gt;One of the easiest ways to understand anti-aliasing is if we think about a screen with lots of Aliases (by which we mean artefacts produced by the method of capture or presentation that are not in the original scene or image). &lt;/p&gt;\n\n&lt;p&gt;One such screen with lots of potential aliases is an old standard definition TV. &lt;/p&gt;\n\n&lt;p&gt;If you were trying to playback a video of a man walking a thin tightrope between the Twin Towers (back when we had standard def TVs, naturally) we can imagine a thin black line extending across the screen. But the line is wobbling slightly. When displayed on our screen the line is only 1 pixel high. Which is a disaster for our tightrope walker as the line is either there, or when it wobbles up slightly to be half way between two pixels it is not there at all. Worse, because of the interlaced SD signal, the rope appears to vibrate violently between two lines. And when the camera shows the rope from another angle, instead of looking like a rope it looks like a jagged line of Lego bricks. This can be fixed in-camera by sampling at twice SD resolution (something called super-sampling) and having a low-pass filter just before the sensor (a piece of lightly frosted glass which blurs the image slightly). With supersampling and the blur filter in place the line is softer (thicker and fuzzier looking) but it displays without aliases. We have successfully anti-aliased in the x and y axis. &lt;/p&gt;\n\n&lt;p&gt;On a computer screen this is what is usually meant by anti-aliasing. Text, for example, is blured to make it more readable. &lt;/p&gt;\n\n&lt;p&gt;There are other kinds of alias in an image, such as a temporal alias known as judder. Judder is caused by the interaction between movement, low frame rates, and contrast. It is anti-aliased by allowing motion blur to be present. This is either added artificially in CG and gaming or in camera in cinema by using a shutter which is open for half of the frame rate. (Known as a 180deg shutter.) The opening scene from Saving Private Ryan is a good example of deliberate use of judder. &lt;/p&gt;\n\n&lt;p&gt;This applies to all kinds of samples. Be it visual or sound. The best way to reduce aliases without compromising on sharpness is to increase the sampling rate (resolution) to a point where our senses can no longer detect the samples (such as the pixels). This is why Apple pursued &amp;#39;retina&amp;#39; screens for their devices. &lt;/p&gt;\n\n&lt;p&gt;On another note aliases can also be caused by compression such as JPG artefacts or banding from sub-sampling. The human eye can actually only see colours at half he resolution that it can see brightness. So TV signals and still images are always sub-sampled in the chroma channels. (Chroma=colour, luma=brightness.)&lt;/p&gt;\n\n&lt;p&gt;If you look closely you can sometimes see this evident as colours bleeding out of the objects they belong to. &lt;/p&gt;\n\n&lt;p&gt;TL:DR it&amp;#39;s blur&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8bnhu", "score_hidden": false, "stickied": false, "created": 1492150709.0, "created_utc": 1492121909.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8wcrm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "TheSultan1", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "When a scene is rendered on your screen, it's like taking a mesh (think window screen) and looking through each hole with a tiny tiny telescope. Each telescope is pointed at a tiny tiny spot in the scene - think, like, a 1mm spot where your scene is 50m across. The spots (samples) are just specks of different colors from different locations in the scene. Now you take those samples, each one color, and stick them all next to each other. When you look at two adjacent \"blocks\" of samples that coincide with different objects, the border between them will be a jagged edge.\n\nThe most basic AA is like using a 2x finer screen to do all that, then changing every other pixel to be the average of itself and the pixels around it. So, blurring. In this way, every pixel that would've been on an edge is now a bit of a mix between the color of one object and the color of the other. Now you remove all the pixels you didn't change (and the gaps they leave). The new \"edge\" is not quite as sharp, but it's closer to what it'd look like in reality, because you're taking more samples closer together.\n\nMore complex algorithms apply the above method to varying degrees (mesh densities) throughout the scene, in order to focus on \"problem areas\" and ignore areas where aliasing isn't a huge issue. This allows the mesh density to rise 32-fold where the algorithm decides it's needed, and maybe not at all where it decides it's not. More complex still are algorithms that will sharpen (increase edge contrast) at some point to reduce the chance of over-blurring edges, use different blurring methods to prevent finely-patterned areas (especially where the pattern is fractal-like, i.e. similar complexity at increasing densities) from becoming splotchy, etc.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When a scene is rendered on your screen, it&amp;#39;s like taking a mesh (think window screen) and looking through each hole with a tiny tiny telescope. Each telescope is pointed at a tiny tiny spot in the scene - think, like, a 1mm spot where your scene is 50m across. The spots (samples) are just specks of different colors from different locations in the scene. Now you take those samples, each one color, and stick them all next to each other. When you look at two adjacent &amp;quot;blocks&amp;quot; of samples that coincide with different objects, the border between them will be a jagged edge.&lt;/p&gt;\n\n&lt;p&gt;The most basic AA is like using a 2x finer screen to do all that, then changing every other pixel to be the average of itself and the pixels around it. So, blurring. In this way, every pixel that would&amp;#39;ve been on an edge is now a bit of a mix between the color of one object and the color of the other. Now you remove all the pixels you didn&amp;#39;t change (and the gaps they leave). The new &amp;quot;edge&amp;quot; is not quite as sharp, but it&amp;#39;s closer to what it&amp;#39;d look like in reality, because you&amp;#39;re taking more samples closer together.&lt;/p&gt;\n\n&lt;p&gt;More complex algorithms apply the above method to varying degrees (mesh densities) throughout the scene, in order to focus on &amp;quot;problem areas&amp;quot; and ignore areas where aliasing isn&amp;#39;t a huge issue. This allows the mesh density to rise 32-fold where the algorithm decides it&amp;#39;s needed, and maybe not at all where it decides it&amp;#39;s not. More complex still are algorithms that will sharpen (increase edge contrast) at some point to reduce the chance of over-blurring edges, use different blurring methods to prevent finely-patterned areas (especially where the pattern is fractal-like, i.e. similar complexity at increasing densities) from becoming splotchy, etc.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8wcrm", "score_hidden": false, "stickied": false, "created": 1492184057.0, "created_utc": 1492155257.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg97947", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "[removed]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg97947", "score_hidden": false, "stickied": false, "created": 1492209232.0, "created_utc": 1492180432.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8wn5o", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "RanaktheGreen", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Intentionally making lines fuzzy so that they look less blocky on the diagonal.\n\nTo make a line look fuzzy, simply add colors which are closer to the background color the further you get from the center of the line.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Intentionally making lines fuzzy so that they look less blocky on the diagonal.&lt;/p&gt;\n\n&lt;p&gt;To make a line look fuzzy, simply add colors which are closer to the background color the further you get from the center of the line.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8wn5o", "score_hidden": false, "stickied": false, "created": 1492184891.0, "created_utc": 1492156091.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg87vqm", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "Techley", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Pixels are square, and solid colored outlines look jagged if the squares aren't small enough.\n\nAnti-aliasing corrects this by adding steps of transparent color near the edge to create the illusion of a smooth surface. Here's a [diagram](http://i.imgur.com/p9DRVfj.jpg) I made to show you with and without anti-aliasing.\n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pixels are square, and solid colored outlines look jagged if the squares aren&amp;#39;t small enough.&lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing corrects this by adding steps of transparent color near the edge to create the illusion of a smooth surface. Here&amp;#39;s a &lt;a href=\"http://i.imgur.com/p9DRVfj.jpg\"&gt;diagram&lt;/a&gt; I made to show you with and without anti-aliasing.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg87vqm", "score_hidden": false, "stickied": false, "created": 1492146028.0, "created_utc": 1492117228.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg7yd5t", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "[removed]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg7yd5t", "score_hidden": false, "stickied": false, "created": 1492135631.0, "created_utc": 1492106831.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg93pmo", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Novaraa", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "dude i was totally about to make this post when i woke up this morning. but thanks for doing it anyway, i have been meaning to learn what this is lol", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;dude i was totally about to make this post when i woke up this morning. but thanks for doing it anyway, i have been meaning to learn what this is lol&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg93pmo", "score_hidden": false, "stickied": false, "created": 1492204044.0, "created_utc": 1492175244.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8o56v", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "IndiaNgineer", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Think of what the word alias means, it means something posing as something else. \n\nLets say something's moving back and forth some number of times in a given time, and you want to measure how many times per second that is, ordinarily, you need to take at least twice that number of 'snapshots' of the thing moving back and forth in the same time interval to see how fast its really moving, you can take more, but you need at least that many. \n\nIf you take less than that, you see the thing moving slower than it really is, so the rapid back and forth movement 'poses' as a slower back and forth movement, thats aliasing.\n\nReal life is a little more complicated and you can have things with multiple parts, lets say one part moves slow, and another fast, and say you can only take a certain number of snapshots, but you dont want to see a wrong rate of movement. So you deliberately ignore the fast moving thing, thats anti-aliasing. \n\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of what the word alias means, it means something posing as something else. &lt;/p&gt;\n\n&lt;p&gt;Lets say something&amp;#39;s moving back and forth some number of times in a given time, and you want to measure how many times per second that is, ordinarily, you need to take at least twice that number of &amp;#39;snapshots&amp;#39; of the thing moving back and forth in the same time interval to see how fast its really moving, you can take more, but you need at least that many. &lt;/p&gt;\n\n&lt;p&gt;If you take less than that, you see the thing moving slower than it really is, so the rapid back and forth movement &amp;#39;poses&amp;#39; as a slower back and forth movement, thats aliasing.&lt;/p&gt;\n\n&lt;p&gt;Real life is a little more complicated and you can have things with multiple parts, lets say one part moves slow, and another fast, and say you can only take a certain number of snapshots, but you dont want to see a wrong rate of movement. So you deliberately ignore the fast moving thing, thats anti-aliasing. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8o56v", "score_hidden": false, "stickied": false, "created": 1492167872.0, "created_utc": 1492139072.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8q3zi", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "ricebake333", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "First you have to understand what \"aliasing\" is...\n\nAliasing is basically \"errors\" that creep into computer rendered imagery as a result of mathematical \"errors\" relative to the sample size of pixels being used to represent an image.\n\nBecause pixels are square on computer displays, if those squares were small enough most \"aliasing\" would be invisible to the eyes, but since they are large you can see \"jagged edges\" on fences in things like 3D games when you have rotate anything with edges at a 45 degree angle or so that goes off into the horizon.  Roughly - Aliasing is a result of the size and shape of dots you are using to represent an image, for instance if you use dots of a fixed size and length anytime you need to represent a color in an image that is smaller than that size will mean you get errors because you can't get any smaller then the size of the dots you are using to compose the image.\n\nAnti aliasing is a method of 'shading' that softens the edges of straight edges on computer displays.  It has to do with the size and shape of pixels on computer displays relative to your eyes perceptual horizon, aka an image can be aliased and you won't notice it if that image is far enough away or of the pixels used to compose the image are smaller than what the eye can detect.\n\nhttps://qph.ec.quoracdn.net/main-qimg-10856ecbea4f439fb9fb751d41ff704a\n\nLook at the power lines in this game on the right building, notice the dots \"disappear\" and there are breaks in the lines and you can see the sky where wires and legs of billboard should be:\n\nhttps://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437fee512970c-800wi.jpg\n\nAnti-aliasing is attempt to fix these \"sampling errors\" because computers have limited memory and computer displays used fixed size pixels, you need to apply fancy mathematics to soften the square lines that appear when you try to represent things that are very small in the distance.", "edited": 1492142919.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First you have to understand what &amp;quot;aliasing&amp;quot; is...&lt;/p&gt;\n\n&lt;p&gt;Aliasing is basically &amp;quot;errors&amp;quot; that creep into computer rendered imagery as a result of mathematical &amp;quot;errors&amp;quot; relative to the sample size of pixels being used to represent an image.&lt;/p&gt;\n\n&lt;p&gt;Because pixels are square on computer displays, if those squares were small enough most &amp;quot;aliasing&amp;quot; would be invisible to the eyes, but since they are large you can see &amp;quot;jagged edges&amp;quot; on fences in things like 3D games when you have rotate anything with edges at a 45 degree angle or so that goes off into the horizon.  Roughly - Aliasing is a result of the size and shape of dots you are using to represent an image, for instance if you use dots of a fixed size and length anytime you need to represent a color in an image that is smaller than that size will mean you get errors because you can&amp;#39;t get any smaller then the size of the dots you are using to compose the image.&lt;/p&gt;\n\n&lt;p&gt;Anti aliasing is a method of &amp;#39;shading&amp;#39; that softens the edges of straight edges on computer displays.  It has to do with the size and shape of pixels on computer displays relative to your eyes perceptual horizon, aka an image can be aliased and you won&amp;#39;t notice it if that image is far enough away or of the pixels used to compose the image are smaller than what the eye can detect.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://qph.ec.quoracdn.net/main-qimg-10856ecbea4f439fb9fb751d41ff704a\"&gt;https://qph.ec.quoracdn.net/main-qimg-10856ecbea4f439fb9fb751d41ff704a&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Look at the power lines in this game on the right building, notice the dots &amp;quot;disappear&amp;quot; and there are breaks in the lines and you can see the sky where wires and legs of billboard should be:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437fee512970c-800wi.jpg\"&gt;https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437fee512970c-800wi.jpg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing is attempt to fix these &amp;quot;sampling errors&amp;quot; because computers have limited memory and computer displays used fixed size pixels, you need to apply fancy mathematics to soften the square lines that appear when you try to represent things that are very small in the distance.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8q3zi", "score_hidden": false, "stickied": false, "created": 1492170950.0, "created_utc": 1492142150.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg9vbod", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "mochanic", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "In pc graphics, antialiasing is a software method for diminishing jaggies - stairstep-like lines that must be smooth. Jaggies occur due to the fact the output tool, the monitor or printer, doesn't have a high enough decision to symbolize a smooth line. Antialiasing reduces the prominence of jaggies by way of surrounding the stairsteps with intermediate shades of gray (for gray-scaling gadgets) or color (for coloration devices). Although this reduces the jagged look of the lines, it also makes them fuzzier.\nSome other approach for lowering jaggies is referred to as smoothing, wherein the printer modifications the dimensions and horizontal alignment of dotsto make curves smoother.\nAntialiasing is now and again referred to as oversampling.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In pc graphics, antialiasing is a software method for diminishing jaggies - stairstep-like lines that must be smooth. Jaggies occur due to the fact the output tool, the monitor or printer, doesn&amp;#39;t have a high enough decision to symbolize a smooth line. Antialiasing reduces the prominence of jaggies by way of surrounding the stairsteps with intermediate shades of gray (for gray-scaling gadgets) or color (for coloration devices). Although this reduces the jagged look of the lines, it also makes them fuzzier.\nSome other approach for lowering jaggies is referred to as smoothing, wherein the printer modifications the dimensions and horizontal alignment of dotsto make curves smoother.\nAntialiasing is now and again referred to as oversampling.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg9vbod", "score_hidden": false, "stickied": false, "created": 1492238222.0, "created_utc": 1492209422.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg87qu0", "gilded": 0, "archived": false, "score": 0, "report_reasons": null, "author": "lwhittt", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Let's start by understanding the need for Anti aliasing.  \n  \nAA seeks to fix the problem inherent in any modern display. In many of our monitors and smartphones we display information on a screen by shining light (backlight) through a large array of liquid crystals. These crystals will change the color we see after the backlight passes through it, and each individual crystal gives us one \"pixel\" of a display. \n  \nNow, this array of crystals can be very large, depending on the resolution of your display - some are 1280x720 pixels (HD), some are 1920x1080 pixels (full HD), and some are much larger. This is where we start to realize our problem.  \n  \nImagine our array of pixels as a very large brick wall, with all the bricks in line with each other. One day we are feeling creative and decide to paint our brick wall. First we paint a straight, horizontal line. This is easy enough because we can just drag our paintbrush in a straight line across a line of consecutive bricks and we have our straight line!  \n  \nConsider however, what happens when we try to draw a diagonal line on our bricks. The one rule of brick painting is that each individual brick can only be one color at a time. So we start by painting one arbitrary brick where our diagonal line should begin. Which one should we paint next? There is a brick diagonal to our beginning brick, but it's one brick over and one brick down. If we color that brick in we wind up with a very rough beginning to a diagonal colored line - much like the blocky \"diagonal lines\" you might see on a chess board. We can't color in the corners of the two uncolored bricks next to and below our starting brick because remember, they can only be one color.  \n  \nAssuming you continue this trend of coloring every brick diagonal to the last brick we painted we will eventually get to the end of the line we wanted to paint. Unfortunately we will also have a line that widens and narrows as it continues from brick to brick. It looks.. blocky. And thus we have arrived at our problem! We are limited in displaying certain shapes on our screens due to the arrangement of pixels in straight lines, and the nature of pixels to only show one color at a time. If our resolution is higher this means we have smaller bricks in our wall, thus cutting down on the perceived blockiness of our diagonal lines.  \n  \nTo make our lines look better and less blocky we can either increase resolution (buy a new display) or rely on software to help smooth our  lines. This software is the basis of AA, of which there are several different variants. Now that you understand the need for AA, perhaps you will better understand AA itself. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s start by understanding the need for Anti aliasing.  &lt;/p&gt;\n\n&lt;p&gt;AA seeks to fix the problem inherent in any modern display. In many of our monitors and smartphones we display information on a screen by shining light (backlight) through a large array of liquid crystals. These crystals will change the color we see after the backlight passes through it, and each individual crystal gives us one &amp;quot;pixel&amp;quot; of a display. &lt;/p&gt;\n\n&lt;p&gt;Now, this array of crystals can be very large, depending on the resolution of your display - some are 1280x720 pixels (HD), some are 1920x1080 pixels (full HD), and some are much larger. This is where we start to realize our problem.  &lt;/p&gt;\n\n&lt;p&gt;Imagine our array of pixels as a very large brick wall, with all the bricks in line with each other. One day we are feeling creative and decide to paint our brick wall. First we paint a straight, horizontal line. This is easy enough because we can just drag our paintbrush in a straight line across a line of consecutive bricks and we have our straight line!  &lt;/p&gt;\n\n&lt;p&gt;Consider however, what happens when we try to draw a diagonal line on our bricks. The one rule of brick painting is that each individual brick can only be one color at a time. So we start by painting one arbitrary brick where our diagonal line should begin. Which one should we paint next? There is a brick diagonal to our beginning brick, but it&amp;#39;s one brick over and one brick down. If we color that brick in we wind up with a very rough beginning to a diagonal colored line - much like the blocky &amp;quot;diagonal lines&amp;quot; you might see on a chess board. We can&amp;#39;t color in the corners of the two uncolored bricks next to and below our starting brick because remember, they can only be one color.  &lt;/p&gt;\n\n&lt;p&gt;Assuming you continue this trend of coloring every brick diagonal to the last brick we painted we will eventually get to the end of the line we wanted to paint. Unfortunately we will also have a line that widens and narrows as it continues from brick to brick. It looks.. blocky. And thus we have arrived at our problem! We are limited in displaying certain shapes on our screens due to the arrangement of pixels in straight lines, and the nature of pixels to only show one color at a time. If our resolution is higher this means we have smaller bricks in our wall, thus cutting down on the perceived blockiness of our diagonal lines.  &lt;/p&gt;\n\n&lt;p&gt;To make our lines look better and less blocky we can either increase resolution (buy a new display) or rely on software to help smooth our  lines. This software is the basis of AA, of which there are several different variants. Now that you understand the need for AA, perhaps you will better understand AA itself. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg87qu0", "score_hidden": false, "stickied": false, "created": 1492145874.0, "created_utc": 1492117074.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg865pr", "gilded": 0, "archived": false, "score": -1, "report_reasons": null, "author": "whazzam95", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 1, "body": "Natural resolution of the world is infinite (unless you're counting quarks). If you zoom on perfectly smooth edge it's going to stay smooth.\n\nDigital pictures are saved as thousands of squares with certain RGB values. If you zoom on vertical or horizontal line, it will stay smooth because it's edge is made out of perfectly aligned squares.\n\nWhen we draw a line at an angle, we are still forced to work with squares, so the pixels are getting values which in average trick our eyes to think the line is smooth.\n\nApple's \"Retina Display\" is a screen packed with such tiny pixels that AA isn't even needed because our eye can't see the individual pixel.\n\nAnother workaround is using vector graphics, which instead of working with pixels uses math formulas to describe the picture so you can scale it indefinitely without losing \"the crispiness\" (that is not counting limitations of your screen).", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Natural resolution of the world is infinite (unless you&amp;#39;re counting quarks). If you zoom on perfectly smooth edge it&amp;#39;s going to stay smooth.&lt;/p&gt;\n\n&lt;p&gt;Digital pictures are saved as thousands of squares with certain RGB values. If you zoom on vertical or horizontal line, it will stay smooth because it&amp;#39;s edge is made out of perfectly aligned squares.&lt;/p&gt;\n\n&lt;p&gt;When we draw a line at an angle, we are still forced to work with squares, so the pixels are getting values which in average trick our eyes to think the line is smooth.&lt;/p&gt;\n\n&lt;p&gt;Apple&amp;#39;s &amp;quot;Retina Display&amp;quot; is a screen packed with such tiny pixels that AA isn&amp;#39;t even needed because our eye can&amp;#39;t see the individual pixel.&lt;/p&gt;\n\n&lt;p&gt;Another workaround is using vector graphics, which instead of working with pixels uses math formulas to describe the picture so you can scale it indefinitely without losing &amp;quot;the crispiness&amp;quot; (that is not counting limitations of your screen).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg865pr", "score_hidden": false, "stickied": false, "created": 1492144071.0, "created_utc": 1492115271.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg9767n", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "xoxoyoyo", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "This is a computer may draw a line (example):\n\n        ****  \n            ****\n                ****  \n\nThis is a computer may draw an aliased line (example):\n\n        ****.  \n           `****.\n               `****  \n\nThe second line, when viewed far away may look a bit smoother.  This is done with silly ascii text but the idea is that instead of the jerky transitions an attempt is made to smooth them out.", "edited": 1492183746.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a computer may draw a line (example):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    ****  \n        ****\n            ****  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is a computer may draw an aliased line (example):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    ****.  \n       `****.\n           `****  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The second line, when viewed far away may look a bit smoother.  This is done with silly ascii text but the idea is that instead of the jerky transitions an attempt is made to smooth them out.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg9767n", "score_hidden": false, "stickied": false, "created": 1492209125.0, "created_utc": 1492180325.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8xq73", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "incognito1600", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "From a signal processing perspective because image aliasing isn't the only thing that uses something called \"anti-aliasing\"\n\nAliasing occurs in A/D systems when your ADC samples signals above the nyquist frequency. An anti aliasing filter is essentially a IIR low pass filter that filters out frequencies above the Nyquist frequency.\n\nhttps://en.m.wikipedia.org/wiki/Nyquist_frequency", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From a signal processing perspective because image aliasing isn&amp;#39;t the only thing that uses something called &amp;quot;anti-aliasing&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Aliasing occurs in A/D systems when your ADC samples signals above the nyquist frequency. An anti aliasing filter is essentially a IIR low pass filter that filters out frequencies above the Nyquist frequency.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://en.m.wikipedia.org/wiki/Nyquist_frequency\"&gt;https://en.m.wikipedia.org/wiki/Nyquist_frequency&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8xq73", "score_hidden": false, "stickied": false, "created": 1492188249.0, "created_utc": 1492159449.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8m4vq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rlbond86", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing is when something that is high-frequency is sampled at too low a frequency. \n\nAnti-aliasing means to \"filter out\" the high frequencies before sampling is performed.\n\nIf you're talking about computer graphics, sampling is in pixels. A sharp transition is a high-frequency change, and anti-aliasing \"softens\" the transitions to not be as sharp.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing is when something that is high-frequency is sampled at too low a frequency. &lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing means to &amp;quot;filter out&amp;quot; the high frequencies before sampling is performed.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re talking about computer graphics, sampling is in pixels. A sharp transition is a high-frequency change, and anti-aliasing &amp;quot;softens&amp;quot; the transitions to not be as sharp.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8m4vq", "score_hidden": false, "stickied": false, "created": 1492164958.0, "created_utc": 1492136158.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8etzq", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "The_UX_Guy", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Try to make a circle out of 4 peg Lego squares blocks and you'll have jagged edges. If you didn't have access to any other shape of Lego block but you had most any color that you could imagine, then you could fill in around the jaggies with different colors to make the jaggies less obvious. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try to make a circle out of 4 peg Lego squares blocks and you&amp;#39;ll have jagged edges. If you didn&amp;#39;t have access to any other shape of Lego block but you had most any color that you could imagine, then you could fill in around the jaggies with different colors to make the jaggies less obvious. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8etzq", "score_hidden": false, "stickied": false, "created": 1492154937.0, "created_utc": 1492126137.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8q295", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "[removed]", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8q295", "score_hidden": false, "stickied": false, "created": 1492170874.0, "created_utc": 1492142074.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8pjid", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rumborak", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "I have not seen this mentioned yet, but it's called \"aliasing\" because the effect makes artifacts appear in places where they shouldn't exist. That is, something has an \"alias\" somewhere else where it doesn't belong. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have not seen this mentioned yet, but it&amp;#39;s called &amp;quot;aliasing&amp;quot; because the effect makes artifacts appear in places where they shouldn&amp;#39;t exist. That is, something has an &amp;quot;alias&amp;quot; somewhere else where it doesn&amp;#39;t belong. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8pjid", "score_hidden": false, "stickied": false, "created": 1492170033.0, "created_utc": 1492141233.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8828p", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "AlmondDragon", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Think of it as intelligently blurring the edges of a blocky image so it's not so obviously blocky. This [2-minute video](https://www.youtube.com/watch?v=hqi0114mwtY) gives a good basic overview with an example. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of it as intelligently blurring the edges of a blocky image so it&amp;#39;s not so obviously blocky. This &lt;a href=\"https://www.youtube.com/watch?v=hqi0114mwtY\"&gt;2-minute video&lt;/a&gt; gives a good basic overview with an example. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8828p", "score_hidden": false, "stickied": false, "created": 1492146239.0, "created_utc": 1492117439.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg86662", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Aftershock_Media", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Assume we are talking gaming, for most modern games what would be the most effective method, bang for your buck (IE: Frame rate) and how does Dynamic Super Resolution play into all of this, if applicable", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Assume we are talking gaming, for most modern games what would be the most effective method, bang for your buck (IE: Frame rate) and how does Dynamic Super Resolution play into all of this, if applicable&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg86662", "score_hidden": false, "stickied": false, "created": 1492144086.0, "created_utc": 1492115286.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8ogu2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "kickerofbottoms", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "You can't make a circular line out of square pixels, it will have a bunch of tiny corners.  But if you fill in the tiny corners with a softer shade of the circle's color then it will look more round-ish.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can&amp;#39;t make a circular line out of square pixels, it will have a bunch of tiny corners.  But if you fill in the tiny corners with a softer shade of the circle&amp;#39;s color then it will look more round-ish.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8ogu2", "score_hidden": false, "stickied": false, "created": 1492168363.0, "created_utc": 1492139563.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8dhmk", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Deadpan9", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Follow up question, why did it seem that this used to be better handled back in ~1999-2000? \n\nEspecially the ants marching phenomenon that still persists even when you have clean lines standing still.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Follow up question, why did it seem that this used to be better handled back in ~1999-2000? &lt;/p&gt;\n\n&lt;p&gt;Especially the ants marching phenomenon that still persists even when you have clean lines standing still.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8dhmk", "score_hidden": false, "stickied": false, "created": 1492153140.0, "created_utc": 1492124340.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg92dc2", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "the_human_trampoline", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "It deals with a specific kind of aliasing artifact, but it's not as general-purpose as other anti-aliasing methods, so you're right that it's not usually classified the same way. To say that AA isn't used to deal with this issue would not be correct, though.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It deals with a specific kind of aliasing artifact, but it&amp;#39;s not as general-purpose as other anti-aliasing methods, so you&amp;#39;re right that it&amp;#39;s not usually classified the same way. To say that AA isn&amp;#39;t used to deal with this issue would not be correct, though.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg92dc2", "score_hidden": false, "stickied": false, "created": 1492201544.0, "created_utc": 1492172744.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8s9r0", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "manymensky", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Is there any possibility that games could run without pixels like an illustrator drawing? ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there any possibility that games could run without pixels like an illustrator drawing? &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8s9r0", "score_hidden": false, "stickied": false, "created": 1492174659.0, "created_utc": 1492145859.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg94yrx", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "MrTechSavvy", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "https://en.m.wikipedia.org/wiki/Anti-aliasing\n\nhttps://m.youtube.com/watch?v=hqi0114mwtY", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.m.wikipedia.org/wiki/Anti-aliasing\"&gt;https://en.m.wikipedia.org/wiki/Anti-aliasing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://m.youtube.com/watch?v=hqi0114mwtY\"&gt;https://m.youtube.com/watch?v=hqi0114mwtY&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg94yrx", "score_hidden": false, "stickied": false, "created": 1492206043.0, "created_utc": 1492177243.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg91674", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Caelanv", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Here's a video that explains this very well:https://m.youtube.com/watch?v=hqi0114mwtY", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s a video that explains this very well:&lt;a href=\"https://m.youtube.com/watch?v=hqi0114mwtY\"&gt;https://m.youtube.com/watch?v=hqi0114mwtY&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg91674", "score_hidden": false, "stickied": false, "created": 1492198864.0, "created_utc": 1492170064.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "more"}], "after": null, "before": null}}, "user_reports": [], "id": "dg8y362", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "homepefki", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Can someone link me to how this is properly pronounced?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can someone link me to how this is properly pronounced?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8y362", "score_hidden": false, "stickied": false, "created": 1492189433.0, "created_utc": 1492160633.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "removal_reason": null, "link_id": "t3_6574bb", "likes": null, "replies": "", "user_reports": [], "id": "dg8xe1l", "gilded": 0, "archived": false, "score": -4, "report_reasons": null, "author": "Urethra_Franklin_42", "parent_id": "t3_6574bb", "subreddit_name_prefixed": "r/explainlikeimfive", "controversiality": 0, "body": "Aliasing is when you giving the person or objects the other name to referencing by. This is become known as the alias or AKA. \n\nAnti-aliasing is political movement against the aliasing. This people are not believe person or object should be reference by anything but they true name. Generally is peaceful movements but sometime is become militant.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Aliasing is when you giving the person or objects the other name to referencing by. This is become known as the alias or AKA. &lt;/p&gt;\n\n&lt;p&gt;Anti-aliasing is political movement against the aliasing. This people are not believe person or object should be reference by anything but they true name. Generally is peaceful movements but sometime is become militant.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "explainlikeimfive", "name": "t1_dg8xe1l", "score_hidden": false, "stickied": false, "created": 1492187156.0, "created_utc": 1492158356.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": -4}}], "after": null, "before": null}}]