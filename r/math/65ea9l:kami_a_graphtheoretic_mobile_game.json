[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "math", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So my friend showed me this game called Kami, and the idea is that you have colored tiles that make up shapes on the plane, and when you change the color of a shape, it becomes one shape with shapes that are neighbouring it with the same color. You win by making all the shapes have the same color.&lt;/p&gt;\n\n&lt;p&gt;If that was a confusing description (probably was), then take a look at &lt;a href=\"https://www.youtube.com/watch?v=IBvVivfwVQQ\"&gt;this video&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;So, I thought about transforming this into a graph theory problem and finding an algorithm to solve it. Here&amp;#39;s how you transform it:&lt;/p&gt;\n\n&lt;p&gt;-Each shape is a node with a color. (The color is not the node&amp;#39;s label, just a property)&lt;/p&gt;\n\n&lt;p&gt;-Two nodes are adjacent if and only if their shapes share an edge.&lt;/p&gt;\n\n&lt;p&gt;-No two neighbouring nodes can have the same color.&lt;/p&gt;\n\n&lt;p&gt;-When changing a node u&amp;#39;s color to a new color C, all neighbouring nodes of u that have C as their color are contracted together along with u into a single node v with color C. Any neighbours of v&amp;#39;s preimage nodes are also v&amp;#39;s neighbours.&lt;/p&gt;\n\n&lt;p&gt;I tried this following algorithm to solve the puzzle in general:&lt;/p&gt;\n\n&lt;p&gt;1-Find all geodesics between peripheral nodes.&lt;/p&gt;\n\n&lt;p&gt;2-Find nodes that are on at least one geodesic for every pair of peripheral nodes.&lt;/p&gt;\n\n&lt;p&gt;3-Out of these nodes, select one node u that is adjacent to a pair of nodes of the same color on each geodesic (the pairs have to be the same color, C, on each geodesic).&lt;/p&gt;\n\n&lt;p&gt;4-Change the color of u to C (and contract the nodes into one node with C).&lt;/p&gt;\n\n&lt;p&gt;5-Repeat until you have one node.&lt;/p&gt;\n\n&lt;p&gt;The basic idea of the algorithm is that the diameter of the graph shrinks at each step.&lt;/p&gt;\n\n&lt;p&gt;This algorithm failed on &lt;a href=\"http://i.imgur.com/4l9vQwC.jpg\"&gt;this level&lt;/a&gt;. There is only one pair of peripheral nodes (the &amp;quot;triangular&amp;quot; navy-colored shapes), and two geodesics for them. You pick either geodesic according to the algorithm (doesn&amp;#39;t matter since symmetry of the graph), suppose the left geodesic, then you pick a node on this geodesic that is adjacent to two nodes of the same color on the geodesic, which would be the left big navy-colored shape, or either of the two red shapes. Contracting any of these shape (navy to red or red to navy) results in a graph with a smaller diameter (specifically, it goes from 4 to 3), but the problem is that you&amp;#39;re left with two moves, but you have four colors, which is impossible to reduce to one color.&lt;/p&gt;\n\n&lt;p&gt;The actual solution is to turn the orange shape into cyan, cyan shape into red, and red shape into navy (in that order).&lt;/p&gt;\n\n&lt;p&gt;So my algorithm didn&amp;#39;t work as expected. What do you think is a better algorithm to solve this problem?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So my friend showed me this game called Kami, and the idea is that you have colored tiles that make up shapes on the plane, and when you change the color of a shape, it becomes one shape with shapes that are neighbouring it with the same color. You win by making all the shapes have the same color.\n\nIf that was a confusing description (probably was), then take a look at [this video](https://www.youtube.com/watch?v=IBvVivfwVQQ).\n\nSo, I thought about transforming this into a graph theory problem and finding an algorithm to solve it. Here's how you transform it:\n\n-Each shape is a node with a color. (The color is not the node's label, just a property)\n\n-Two nodes are adjacent if and only if their shapes share an edge.\n\n-No two neighbouring nodes can have the same color.\n\n-When changing a node u's color to a new color C, all neighbouring nodes of u that have C as their color are contracted together along with u into a single node v with color C. Any neighbours of v's preimage nodes are also v's neighbours.\n\nI tried this following algorithm to solve the puzzle in general:\n\n1-Find all geodesics between peripheral nodes.\n\n2-Find nodes that are on at least one geodesic for every pair of peripheral nodes.\n\n3-Out of these nodes, select one node u that is adjacent to a pair of nodes of the same color on each geodesic (the pairs have to be the same color, C, on each geodesic).\n\n4-Change the color of u to C (and contract the nodes into one node with C).\n\n5-Repeat until you have one node.\n\nThe basic idea of the algorithm is that the diameter of the graph shrinks at each step.\n\nThis algorithm failed on [this level](http://i.imgur.com/4l9vQwC.jpg). There is only one pair of peripheral nodes (the \"triangular\" navy-colored shapes), and two geodesics for them. You pick either geodesic according to the algorithm (doesn't matter since symmetry of the graph), suppose the left geodesic, then you pick a node on this geodesic that is adjacent to two nodes of the same color on the geodesic, which would be the left big navy-colored shape, or either of the two red shapes. Contracting any of these shape (navy to red or red to navy) results in a graph with a smaller diameter (specifically, it goes from 4 to 3), but the problem is that you're left with two moves, but you have four colors, which is impossible to reduce to one color.\n\nThe actual solution is to turn the orange shape into cyan, cyan shape into red, and red shape into navy (in that order).\n\nSo my algorithm didn't work as expected. What do you think is a better algorithm to solve this problem?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ea9l", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 16, "report_reasons": null, "author": "Sarcon5673", "saved": false, "mod_reports": [], "name": "t3_65ea9l", "subreddit_name_prefixed": "r/math", "approved_by": null, "over_18": false, "domain": "self.math", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh0n", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/math/comments/65ea9l/kami_a_graphtheoretic_mobile_game/", "num_reports": null, "locked": false, "stickied": false, "created": 1492223392.0, "url": "https://www.reddit.com/r/math/comments/65ea9l/kami_a_graphtheoretic_mobile_game/", "author_flair_text": null, "quarantine": false, "title": "Kami: A graph-theoretic mobile game", "created_utc": 1492194592.0, "distinguished": null, "media": null, "upvote_ratio": 0.94, "num_comments": 5, "visited": false, "subreddit_type": "public", "ups": 16}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0n", "removal_reason": null, "link_id": "t3_65ea9l", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0n", "removal_reason": null, "link_id": "t3_65ea9l", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0n", "removal_reason": null, "link_id": "t3_65ea9l", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh0n", "removal_reason": null, "link_id": "t3_65ea9l", "likes": null, "replies": "", "user_reports": [], "id": "dg9lqi9", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "Sarcon5673", "parent_id": "t1_dg9la3h", "subreddit_name_prefixed": "r/math", "controversiality": 0, "body": "Well, damn.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, damn.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "math", "name": "t1_dg9lqi9", "score_hidden": false, "stickied": false, "created": 1492226252.0, "created_utc": 1492197452.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9la3h", "gilded": 0, "archived": false, "score": 6, "report_reasons": null, "author": "edderiofer", "parent_id": "t1_dg9l3pf", "subreddit_name_prefixed": "r/math", "controversiality": 0, "body": "That appears to be Free-Flood-It on a general graph. [Luckily my tutor wrote a paper on exactly that topic](https://people.maths.ox.ac.uk/scott/Papers/floodit.pdf). In short, also NP-Hard for more than two colours.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That appears to be Free-Flood-It on a general graph. &lt;a href=\"https://people.maths.ox.ac.uk/scott/Papers/floodit.pdf\"&gt;Luckily my tutor wrote a paper on exactly that topic&lt;/a&gt;. In short, also NP-Hard for more than two colours.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "math", "name": "t1_dg9la3h", "score_hidden": false, "stickied": false, "created": 1492225705.0, "created_utc": 1492196905.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9l3pf", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "Sarcon5673", "parent_id": "t1_dg9kgjy", "subreddit_name_prefixed": "r/math", "controversiality": 0, "body": "There seems to be a few differences between Flood-It and Kami.\n\n1-In Kami you can play from anywhere. (similar to Free-Flood-It)\n\n2-The number of optimal moves is given in the game.\n\n3-The tiles are not necessarily rectangular in shape.\n\nSo given this information, how does this change the complexity of the problem?", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There seems to be a few differences between Flood-It and Kami.&lt;/p&gt;\n\n&lt;p&gt;1-In Kami you can play from anywhere. (similar to Free-Flood-It)&lt;/p&gt;\n\n&lt;p&gt;2-The number of optimal moves is given in the game.&lt;/p&gt;\n\n&lt;p&gt;3-The tiles are not necessarily rectangular in shape.&lt;/p&gt;\n\n&lt;p&gt;So given this information, how does this change the complexity of the problem?&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "math", "name": "t1_dg9l3pf", "score_hidden": false, "stickied": false, "created": 1492225485.0, "created_utc": 1492196685.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 5}}], "after": null, "before": null}}, "user_reports": [], "id": "dg9kgjy", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "edderiofer", "parent_id": "t3_65ea9l", "subreddit_name_prefixed": "r/math", "controversiality": 0, "body": "You may be interested in [this paper](https://arxiv.org/abs/1001.4420). Finding the minimum number of moves required is NP-hard, and finding a solution within some number of moves is probably also in NP. In short, no known algorithm exists that isn't markedly faster than brute-force, and there further isn't one unless a certain unproven result is true. (If it is true, bank security is probably also fucked.)", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You may be interested in &lt;a href=\"https://arxiv.org/abs/1001.4420\"&gt;this paper&lt;/a&gt;. Finding the minimum number of moves required is NP-hard, and finding a solution within some number of moves is probably also in NP. In short, no known algorithm exists that isn&amp;#39;t markedly faster than brute-force, and there further isn&amp;#39;t one unless a certain unproven result is true. (If it is true, bank security is probably also fucked.)&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "math", "name": "t1_dg9kgjy", "score_hidden": false, "stickied": false, "created": 1492224710.0, "created_utc": 1492195910.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0n", "removal_reason": null, "link_id": "t3_65ea9l", "likes": null, "replies": "", "user_reports": [], "id": "dga81kd", "gilded": 0, "archived": false, "score": 3, "report_reasons": null, "author": "hmm_dmm_hmm", "parent_id": "t3_65ea9l", "subreddit_name_prefixed": "r/math", "controversiality": 0, "body": "It's really cool to see people talking about Kami. State of Play makes wonderful games.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s really cool to see people talking about Kami. State of Play makes wonderful games.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "math", "name": "t1_dga81kd", "score_hidden": false, "stickied": false, "created": 1492255820.0, "created_utc": 1492227020.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], "after": null, "before": null}}]