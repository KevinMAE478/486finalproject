[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "truegaming", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Some games like Bethesda games and Minecraft seem extraordinarily easy to mod and have a vibrant modding community with tens of thousands of mods available. GTA V right now only has a so-so modding community and GTA IV was infamously difficult to mod until there was some sort of breakthrough years after it was released, even then it was just a bit better. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m assuming it has to do with the game engine and how easy it is to navigate the game&amp;#39;s code, but could anyone bring me up to speed on the specifics? In Bethesda games, what is it about the gamebryo engine that makes it so easy to mod? What is it about games like GTA V and other games&amp;#39; engines that make them difficult to work with?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Some games like Bethesda games and Minecraft seem extraordinarily easy to mod and have a vibrant modding community with tens of thousands of mods available. GTA V right now only has a so-so modding community and GTA IV was infamously difficult to mod until there was some sort of breakthrough years after it was released, even then it was just a bit better. \n\nI'm assuming it has to do with the game engine and how easy it is to navigate the game's code, but could anyone bring me up to speed on the specifics? In Bethesda games, what is it about the gamebryo engine that makes it so easy to mod? What is it about games like GTA V and other games' engines that make them difficult to work with?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65ncxe", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "athenatheta", "saved": false, "mod_reports": [], "name": "t3_65ncxe", "subreddit_name_prefixed": "r/truegaming", "approved_by": null, "over_18": false, "domain": "self.truegaming", "hidden": false, "thumbnail": "", "subreddit_id": "t5_2sgq6", "edited": 1492316025.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/truegaming/comments/65ncxe/what_makes_some_games_inherently_harder_to_mod/", "num_reports": null, "locked": false, "stickied": false, "created": 1492344539.0, "url": "https://www.reddit.com/r/truegaming/comments/65ncxe/what_makes_some_games_inherently_harder_to_mod/", "author_flair_text": null, "quarantine": false, "title": "What makes some games inherently harder to mod than others?", "created_utc": 1492315739.0, "distinguished": null, "media": null, "upvote_ratio": 0.56, "num_comments": 12, "visited": false, "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": "", "user_reports": [], "id": "dgbr5kb", "gilded": 0, "archived": false, "score": 10, "report_reasons": null, "author": "[deleted]", "parent_id": "t3_65ncxe", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; GTA V right now only has a so-so modding community and GTA IV was infamously difficult to mod until there was some sort of breakthrough years after it was released, even then it was just a bit better.\n\nBethesda games release their development tools, this is a huge time saver. Just try and look at binary data (0s and 1s essentially) and find a pattern in it. Not only that but do it for potentially dozens of different file types. Then figuring out what every value does in those file types. There are thousands of values then. So having the tools that document this and tell you exactly what everything does helps immensely.\n\nA game like minecraft is extremely simple, it is also programmed in Java. It is really easy to decompile Java code into source, one way to combat this is to make the names of everything garbled. The entire source code was de-obfuscated by fans so you could add and change whatever you wanted. One group wrote their own api to make adding extensions easier by adding hooks to all the events and interactions.\n\nAs for GTA IV specifically, I remember Games for Windows Live had some anti tamper protection. At least that's why modding Halo 2 Vista was difficult. You could mod it by removing the windows Live extension but that meant you couldnt go online. That may have been patched in later releases.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;GTA V right now only has a so-so modding community and GTA IV was infamously difficult to mod until there was some sort of breakthrough years after it was released, even then it was just a bit better.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Bethesda games release their development tools, this is a huge time saver. Just try and look at binary data (0s and 1s essentially) and find a pattern in it. Not only that but do it for potentially dozens of different file types. Then figuring out what every value does in those file types. There are thousands of values then. So having the tools that document this and tell you exactly what everything does helps immensely.&lt;/p&gt;\n\n&lt;p&gt;A game like minecraft is extremely simple, it is also programmed in Java. It is really easy to decompile Java code into source, one way to combat this is to make the names of everything garbled. The entire source code was de-obfuscated by fans so you could add and change whatever you wanted. One group wrote their own api to make adding extensions easier by adding hooks to all the events and interactions.&lt;/p&gt;\n\n&lt;p&gt;As for GTA IV specifically, I remember Games for Windows Live had some anti tamper protection. At least that&amp;#39;s why modding Halo 2 Vista was difficult. You could mod it by removing the windows Live extension but that meant you couldnt go online. That may have been patched in later releases.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgbr5kb", "score_hidden": false, "stickied": false, "created": 1492350760.0, "created_utc": 1492321960.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": "", "user_reports": [], "id": "dgcliwm", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgcjwlr", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "The degree to which something is modifiable does not determine how difficult it is to mod. Minecraft, for example is closed source and has zero mod support. Yet its modding community flourished and probably has one of the largest modding communities.\n\nWho cares what the title is, you answered my post, not the threads post and I was discussing something related to the topic, not exactly the topic. You are by no means strictly limited to discussing only about the topic title, that would be pretty boring.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The degree to which something is modifiable does not determine how difficult it is to mod. Minecraft, for example is closed source and has zero mod support. Yet its modding community flourished and probably has one of the largest modding communities.&lt;/p&gt;\n\n&lt;p&gt;Who cares what the title is, you answered my post, not the threads post and I was discussing something related to the topic, not exactly the topic. You are by no means strictly limited to discussing only about the topic title, that would be pretty boring.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgcliwm", "score_hidden": false, "stickied": false, "created": 1492406588.0, "created_utc": 1492377788.0, "depth": 7, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcjwlr", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "darkbelow", "parent_id": "t1_dgcf0cg", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "The thread is called \"What makes some games inherently harder to mod than others\", so excuse me when I was talking about the degree something is modifiable. Yes, all games can be modified in some way. But not all games can be modified in a way that is meaningful (at least not without a lot of effort), and not all games develop a thriving modding community.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The thread is called &amp;quot;What makes some games inherently harder to mod than others&amp;quot;, so excuse me when I was talking about the degree something is modifiable. Yes, all games can be modified in some way. But not all games can be modified in a way that is meaningful (at least not without a lot of effort), and not all games develop a thriving modding community.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgcjwlr", "score_hidden": false, "stickied": false, "created": 1492404474.0, "created_utc": 1492375674.0, "depth": 6, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgcf0cg", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgce4gc", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; No, it is not. Their content is a specific set of content which the game was programmed to handle. The challenge for a modder is to make modifications which change the player experience, while keeping compatibility with the game. The modder only has the flexibility which the engine offers, and most games are made with some very specific requirements.\n\nI'm not arguing to what degree something is modifable. A game can be modded without adding additional API or making changes. Yes you will be in the confines of what the game engine is capable of, but that isn't what this argument is about. If additional changes were made to the API (to accommodate modding, as you say) you would still be in the confines of what the engine can do. So your argument is self contradicting.\n\nAnyways even the best mods in games like Skyrim don't use the tools that were given to the modders. Something like SkyUi isn't possible with the modding tools. What happens is it modifies the executable and changes it to allow for a better ui system to be put into place. You don't need the developers or their help or a new API to make these things happen. In order for that mod to have existed they would have needed complete access to Skyrim's source code, that's never going to happen. So I have no idea what you are arguing about and it seems you don't have a clue either.", "edited": 1492372215.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;No, it is not. Their content is a specific set of content which the game was programmed to handle. The challenge for a modder is to make modifications which change the player experience, while keeping compatibility with the game. The modder only has the flexibility which the engine offers, and most games are made with some very specific requirements.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m not arguing to what degree something is modifable. A game can be modded without adding additional API or making changes. Yes you will be in the confines of what the game engine is capable of, but that isn&amp;#39;t what this argument is about. If additional changes were made to the API (to accommodate modding, as you say) you would still be in the confines of what the engine can do. So your argument is self contradicting.&lt;/p&gt;\n\n&lt;p&gt;Anyways even the best mods in games like Skyrim don&amp;#39;t use the tools that were given to the modders. Something like SkyUi isn&amp;#39;t possible with the modding tools. What happens is it modifies the executable and changes it to allow for a better ui system to be put into place. You don&amp;#39;t need the developers or their help or a new API to make these things happen. In order for that mod to have existed they would have needed complete access to Skyrim&amp;#39;s source code, that&amp;#39;s never going to happen. So I have no idea what you are arguing about and it seems you don&amp;#39;t have a clue either.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgcf0cg", "score_hidden": false, "stickied": false, "created": 1492398113.0, "created_utc": 1492369313.0, "depth": 5, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgce4gc", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "darkbelow", "parent_id": "t1_dgc3jq3", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; well API isn't even the right word here\n\nI agree, I just ran with it as I guess you ran with it in reference to the original poster. What I really mean is the game engine, which can be enhanced with programmed extensions (such as external scripting languages) and data (configs, properties and art).\n\n&gt; Their content is custom content\n\nNo, it is not. Their content is a specific set of content which the game was programmed to handle. The challenge for a modder is to make modifications which change the player experience, while keeping compatibility with the game. The modder only has the flexibility which the engine offers, and most games are made with some very specific requirements.\n\n&gt; They use scripting languages for gameplay code usually\n\nThe key word here for me is usually (and even there I disagree with it slightly). What you're describing is really the ideal design and architecture, and I don't think that happens all too often.\n\nSome developers are really good at keeping the engine and game separate, such as id software - leading to the possibility of some really amazing total conversion mods. But that takes a lot of careful work and design.\n\nThe boundary between generic engine code and specific game code is blurred often, and modding is made more difficult each time this happens. \n\n&gt; If you say well the developers can't make custom content for their own game without an extra API, well how the hell did they make the game in the first place.\n\nGame developers have the ability to design and modify the API along with the content, which is something the modder can only do in a very limited sense.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;well API isn&amp;#39;t even the right word here&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I agree, I just ran with it as I guess you ran with it in reference to the original poster. What I really mean is the game engine, which can be enhanced with programmed extensions (such as external scripting languages) and data (configs, properties and art).&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Their content is custom content&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, it is not. Their content is a specific set of content which the game was programmed to handle. The challenge for a modder is to make modifications which change the player experience, while keeping compatibility with the game. The modder only has the flexibility which the engine offers, and most games are made with some very specific requirements.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;They use scripting languages for gameplay code usually&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The key word here for me is usually (and even there I disagree with it slightly). What you&amp;#39;re describing is really the ideal design and architecture, and I don&amp;#39;t think that happens all too often.&lt;/p&gt;\n\n&lt;p&gt;Some developers are really good at keeping the engine and game separate, such as id software - leading to the possibility of some really amazing total conversion mods. But that takes a lot of careful work and design.&lt;/p&gt;\n\n&lt;p&gt;The boundary between generic engine code and specific game code is blurred often, and modding is made more difficult each time this happens. &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;If you say well the developers can&amp;#39;t make custom content for their own game without an extra API, well how the hell did they make the game in the first place.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Game developers have the ability to design and modify the API along with the content, which is something the modder can only do in a very limited sense.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgce4gc", "score_hidden": false, "stickied": false, "created": 1492396922.0, "created_utc": 1492368122.0, "depth": 4, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc3jq3", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgc2tlu", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; Yes, they would have created the API and program structure to support their own content. They would not (necessarily) have created an API to support custom content and extensions.\n\nTheir content is custom content... It isn't different, games already create an API, well API isn't even the right word here. They use scripting languages for gameplay code usually. As it has faster compiler times and can be iterated on quickly without restarting the game. This scripting language would have an API and they wouldn't need to add or change anything to it to allow for third party people to create content with it. It'd be no different than the developers create the original content for the game themselves. If you say well the developers can't make custom content for their own game without an extra API, well how the hell did they make the game in the first place.\n", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Yes, they would have created the API and program structure to support their own content. They would not (necessarily) have created an API to support custom content and extensions.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Their content is custom content... It isn&amp;#39;t different, games already create an API, well API isn&amp;#39;t even the right word here. They use scripting languages for gameplay code usually. As it has faster compiler times and can be iterated on quickly without restarting the game. This scripting language would have an API and they wouldn&amp;#39;t need to add or change anything to it to allow for third party people to create content with it. It&amp;#39;d be no different than the developers create the original content for the game themselves. If you say well the developers can&amp;#39;t make custom content for their own game without an extra API, well how the hell did they make the game in the first place.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgc3jq3", "score_hidden": false, "stickied": false, "created": 1492382613.0, "created_utc": 1492353813.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgc2tlu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "darkbelow", "parent_id": "t1_dgbqr7d", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; They would have already had to create the API to support their own content.\n\nYes, they would have created the API and program structure to support their own content. They would not (necessarily) have created an API to support custom content and extensions.\n\n&gt; You are simply going to be providing the tools that you used to create the game.\n\nExcept there isn't really anything simple about it at all. The tools might be proprietary, cost money or generally not be publicly available. They could also consist of a large combination of programs, scripts, and manual steps that could be prohibitively difficult to set up.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;They would have already had to create the API to support their own content.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, they would have created the API and program structure to support their own content. They would not (necessarily) have created an API to support custom content and extensions.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;You are simply going to be providing the tools that you used to create the game.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Except there isn&amp;#39;t really anything simple about it at all. The tools might be proprietary, cost money or generally not be publicly available. They could also consist of a large combination of programs, scripts, and manual steps that could be prohibitively difficult to set up.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgc2tlu", "score_hidden": false, "stickied": false, "created": 1492381487.0, "created_utc": 1492352687.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbqr7d", "gilded": 0, "archived": false, "score": 4, "report_reasons": null, "author": "[deleted]", "parent_id": "t1_dgbo57w", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "&gt; Some developers may have the opportunity to do this kind of thing, but refuse because they don't want their code to be modified. Programmers can be pretty jealous and some of them may not appreciate their code being \"improved\" by \"half-assed modders\". Also, publishers may not want any mods because every successful mod could have been paid DLC content.\n\nThis isn't how it works at all. You don't get access to the developers code through an API. At least not any serious code. They might release some game data with scripts but odds are those are probably in a compiled binary format as well.\n\n&gt; Of course, creating an API costs time and money because it's entirely optional in terms of getting a good game up and running. Many teams barely have enough to get the game going - let alone allow robust modder access.\n\nThey would have already had to create the API to support their own content. You are simply going to be providing the tools that you used to create the game. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Some developers may have the opportunity to do this kind of thing, but refuse because they don&amp;#39;t want their code to be modified. Programmers can be pretty jealous and some of them may not appreciate their code being &amp;quot;improved&amp;quot; by &amp;quot;half-assed modders&amp;quot;. Also, publishers may not want any mods because every successful mod could have been paid DLC content.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This isn&amp;#39;t how it works at all. You don&amp;#39;t get access to the developers code through an API. At least not any serious code. They might release some game data with scripts but odds are those are probably in a compiled binary format as well.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Of course, creating an API costs time and money because it&amp;#39;s entirely optional in terms of getting a good game up and running. Many teams barely have enough to get the game going - let alone allow robust modder access.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;They would have already had to create the API to support their own content. You are simply going to be providing the tools that you used to create the game. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgbqr7d", "score_hidden": false, "stickied": false, "created": 1492349892.0, "created_utc": 1492321092.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": "", "user_reports": [], "id": "dgc9svs", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "chuiu", "parent_id": "t1_dgbo57w", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "Minecraft had and still has no such api.  I think the reason Minecraft is so moddable is because back when it was such a small and simple game it could be decompiled and programmers could modify it from there.  And still in the early days a few programmers developed 'Forge' which is the de-facto modding api for everyone else.   \n\nThey just need to make a few changes to it every patch to keep it updated, which can sometimes be quick or sometimes be very time consuming.  This is typically why mods that rely on forge are always one version behind Minecraft.  But they've caught up recently since the updates have been so slow.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Minecraft had and still has no such api.  I think the reason Minecraft is so moddable is because back when it was such a small and simple game it could be decompiled and programmers could modify it from there.  And still in the early days a few programmers developed &amp;#39;Forge&amp;#39; which is the de-facto modding api for everyone else.   &lt;/p&gt;\n\n&lt;p&gt;They just need to make a few changes to it every patch to keep it updated, which can sometimes be quick or sometimes be very time consuming.  This is typically why mods that rely on forge are always one version behind Minecraft.  But they&amp;#39;ve caught up recently since the updates have been so slow.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgc9svs", "score_hidden": false, "stickied": false, "created": 1492391176.0, "created_utc": 1492362376.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dgbo57w", "gilded": 0, "archived": false, "score": 5, "report_reasons": null, "author": "ctarbet", "parent_id": "t3_65ncxe", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "Programmers have the option to create something called an API (Application Program Interface) that allows other programmers to \"sneak into the code\" and change things.  The most accessible game for modders will have a robust and documented API where third parties can inject their own code and content into the game very easily.  At a minimum, coders can use configuration files and accessible textures to give some measure of access for modders without too much work. \n\nOf course, creating an API costs time and money because it's entirely optional in terms of getting a good game up and running.  Many teams barely have enough to get the game going - let alone allow robust modder access.\n\nSome developers may have the opportunity to do this kind of thing, but refuse  because they don't want their code to be modified.  Programmers can be pretty jealous and some of them may not appreciate their code being \"improved\" by \"half-assed modders\".  Also, publishers may not want any mods because every successful mod could have been paid DLC content.\n\nCase in point: Minecraft has loads of tools, but they were all released by third-parties.  The developer could have been the one to do this and it would be more like Skyrim where all the cool tools come with the game.\n\nhttp://minecraft.gamepedia.com/Mods/Creating_mods", "edited": 1492363680.0, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Programmers have the option to create something called an API (Application Program Interface) that allows other programmers to &amp;quot;sneak into the code&amp;quot; and change things.  The most accessible game for modders will have a robust and documented API where third parties can inject their own code and content into the game very easily.  At a minimum, coders can use configuration files and accessible textures to give some measure of access for modders without too much work. &lt;/p&gt;\n\n&lt;p&gt;Of course, creating an API costs time and money because it&amp;#39;s entirely optional in terms of getting a good game up and running.  Many teams barely have enough to get the game going - let alone allow robust modder access.&lt;/p&gt;\n\n&lt;p&gt;Some developers may have the opportunity to do this kind of thing, but refuse  because they don&amp;#39;t want their code to be modified.  Programmers can be pretty jealous and some of them may not appreciate their code being &amp;quot;improved&amp;quot; by &amp;quot;half-assed modders&amp;quot;.  Also, publishers may not want any mods because every successful mod could have been paid DLC content.&lt;/p&gt;\n\n&lt;p&gt;Case in point: Minecraft has loads of tools, but they were all released by third-parties.  The developer could have been the one to do this and it would be more like Skyrim where all the cool tools come with the game.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://minecraft.gamepedia.com/Mods/Creating_mods\"&gt;http://minecraft.gamepedia.com/Mods/Creating_mods&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgbo57w", "score_hidden": false, "stickied": false, "created": 1492345113.0, "created_utc": 1492316313.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": "", "user_reports": [], "id": "dgcbc1j", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Squiggly_P", "parent_id": "t3_65ncxe", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "I dunno how modding works today, but the ones you mentioned - Minecraft and, say, Skyrim - both have developers who actively encourage and help the modding community, and have even released some tools to make it easier to mod the games. Rockstar doesn't do that, and actively discourages modding by potentially banning people who mod their games from online play.\n\nback in the day, tho, modding was like an arcane artform that required a lot of reverse-engineering of file formats and how the program was working, and then sharing whatever information you could find with others who were also interested in altering the games.\n\nThe Doom games, for example, had a pretty active modding community before those engines went open source, and a lot of it was simply a matter of reverse-engineering the .wad file format and how the engine worked. I think Id realized how awesome mods could be, and they eventually started releasing helpful tools and encouraging modders. They even got some of the stand-out community map-makers to make maps for official releases and add-ons for their games.\n\nA lot of publishers discourage modding and a lot of it is due to online play, since mods can easily be used to cheat in multiplayer. This is also coupled with the fact that these games tend to have servers run by the companies, not publicly available servers that anyone can set up and run.\n\nThis is why Quake 3 and Minecraft can fully support modding while also focusing heavily on multiplayer. It's up the the guys running the servers to determine both what to do with cheaters and what sort of mods to allow on their servers.\n\nGTA V would be simple to mod if they'd release some docs and maybe some of their internal tools, but they'd never do that.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I dunno how modding works today, but the ones you mentioned - Minecraft and, say, Skyrim - both have developers who actively encourage and help the modding community, and have even released some tools to make it easier to mod the games. Rockstar doesn&amp;#39;t do that, and actively discourages modding by potentially banning people who mod their games from online play.&lt;/p&gt;\n\n&lt;p&gt;back in the day, tho, modding was like an arcane artform that required a lot of reverse-engineering of file formats and how the program was working, and then sharing whatever information you could find with others who were also interested in altering the games.&lt;/p&gt;\n\n&lt;p&gt;The Doom games, for example, had a pretty active modding community before those engines went open source, and a lot of it was simply a matter of reverse-engineering the .wad file format and how the engine worked. I think Id realized how awesome mods could be, and they eventually started releasing helpful tools and encouraging modders. They even got some of the stand-out community map-makers to make maps for official releases and add-ons for their games.&lt;/p&gt;\n\n&lt;p&gt;A lot of publishers discourage modding and a lot of it is due to online play, since mods can easily be used to cheat in multiplayer. This is also coupled with the fact that these games tend to have servers run by the companies, not publicly available servers that anyone can set up and run.&lt;/p&gt;\n\n&lt;p&gt;This is why Quake 3 and Minecraft can fully support modding while also focusing heavily on multiplayer. It&amp;#39;s up the the guys running the servers to determine both what to do with cheaters and what sort of mods to allow on their servers.&lt;/p&gt;\n\n&lt;p&gt;GTA V would be simple to mod if they&amp;#39;d release some docs and maybe some of their internal tools, but they&amp;#39;d never do that.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgcbc1j", "score_hidden": false, "stickied": false, "created": 1492393205.0, "created_utc": 1492364405.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sgq6", "removal_reason": null, "link_id": "t3_65ncxe", "likes": null, "replies": "", "user_reports": [], "id": "dgcigwt", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "Vovix1", "parent_id": "t3_65ncxe", "subreddit_name_prefixed": "r/truegaming", "controversiality": 0, "body": "If the developers provide tools to build content, it's really easy(since the game usually has a built-in \"add mod\" button). If the assets and resource files(models, levels, parameters of objects) are in the game's folder in a readable format, it's generally easy to edit them. However, if the resource files are in some proprietary archive format or embedded inside the executable, then the only way to mod the game is to disassemble the executable, navigate assembly code and figure out how the entire thing works. Some games even include special protections intentionally making the game harder to analyze and mod. Some people still mod those games despite the challenge(or even specifically because of it), but the games that anyone can mod after watching a 20 minute tutorial tend to have much larger modding communities and a huge library of mods available(even if half of them are just \"I made [insert favorite metal here] ore, it's stronger than iron but weaker than diamond\").", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the developers provide tools to build content, it&amp;#39;s really easy(since the game usually has a built-in &amp;quot;add mod&amp;quot; button). If the assets and resource files(models, levels, parameters of objects) are in the game&amp;#39;s folder in a readable format, it&amp;#39;s generally easy to edit them. However, if the resource files are in some proprietary archive format or embedded inside the executable, then the only way to mod the game is to disassemble the executable, navigate assembly code and figure out how the entire thing works. Some games even include special protections intentionally making the game harder to analyze and mod. Some people still mod those games despite the challenge(or even specifically because of it), but the games that anyone can mod after watching a 20 minute tutorial tend to have much larger modding communities and a huge library of mods available(even if half of them are just &amp;quot;I made [insert favorite metal here] ore, it&amp;#39;s stronger than iron but weaker than diamond&amp;quot;).&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "truegaming", "name": "t1_dgcigwt", "score_hidden": false, "stickied": false, "created": 1492402617.0, "created_utc": 1492373817.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]