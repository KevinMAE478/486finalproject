[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "engineering", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I havent used linear control theory in a while and I have to create a pseudo 5dof simulation of a uav for work, complete with an autopilot that can hold a certain altitude, a constant bank angle, etc.&lt;/p&gt;\n\n&lt;p&gt;Zipfel&amp;#39;s modeling and simulation AIAA text gives a great example of a pseudo 5dof model and some block diagrams of control systems for rate dampers and such. My problem is, I completely forgot how to go from a block diagram in frequency domain, transfer function given in terms of s, to an actual control law that I can incorporate into the Eqs of motion. &lt;/p&gt;\n\n&lt;p&gt;Is the only way of doing this to convert the TF to state space form? Or what about taking the inverse laplace of the TF? I get exponential terms and when I did this stuff in college, I don&amp;#39;t recall adding a control effort in exponential terms to my differential equations of motion.&lt;/p&gt;\n\n&lt;p&gt;Pls halp. Thx.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I havent used linear control theory in a while and I have to create a pseudo 5dof simulation of a uav for work, complete with an autopilot that can hold a certain altitude, a constant bank angle, etc.\n\nZipfel's modeling and simulation AIAA text gives a great example of a pseudo 5dof model and some block diagrams of control systems for rate dampers and such. My problem is, I completely forgot how to go from a block diagram in frequency domain, transfer function given in terms of s, to an actual control law that I can incorporate into the Eqs of motion. \n\nIs the only way of doing this to convert the TF to state space form? Or what about taking the inverse laplace of the TF? I get exponential terms and when I did this stuff in college, I don't recall adding a control effort in exponential terms to my differential equations of motion.\n\nPls halp. Thx.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "[GENERAL]", "id": "65jr67", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "swump", "saved": false, "mod_reports": [], "name": "t3_65jr67", "subreddit_name_prefixed": "r/engineering", "approved_by": null, "over_18": false, "domain": "self.engineering", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qhpi", "edited": false, "link_flair_css_class": "gen", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/engineering/comments/65jr67/controls_question_how_do_i_turn_a_block_diagram/", "num_reports": null, "locked": false, "stickied": false, "created": 1492300395.0, "url": "https://www.reddit.com/r/engineering/comments/65jr67/controls_question_how_do_i_turn_a_block_diagram/", "author_flair_text": null, "quarantine": false, "title": "Controls question: how do I turn a block diagram into a control law?", "created_utc": 1492271595.0, "distinguished": null, "media": null, "upvote_ratio": 0.75, "num_comments": 2, "visited": false, "subreddit_type": "public", "ups": 2}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhpi", "removal_reason": null, "link_id": "t3_65jr67", "likes": null, "replies": "", "user_reports": [], "id": "dgav7yj", "gilded": 0, "archived": false, "score": 2, "report_reasons": null, "author": "shtpst", "parent_id": "t3_65jr67", "subreddit_name_prefixed": "r/engineering", "controversiality": 0, "body": "What do you mean when you say \"control law?\" For a state feedback controller, the control law is generally defined to be $u = -Gx$, where $x$ are the states. \n\nBUT,  you could just as easily use PID, and then your control law is $u = K_p e_p +K_i e_i + K_d e_d $.\n\nRemember too that a state feedback controller is for linear, time invariant, single input single output (SISO) systems. If you're looking to control multiple inputs and outputs, where that MIMO system cannot be split into a series of SISO systems, then you have to \"prioritize\" the input/output pairs, and this is usually done with linear quadratic regulators (LQR).\n\nSo, if your block diagram uses system states, just tap those states, apply -G, and there's your control law. Remember also though that a vanilla state feedback controller drives all the states to zero. If you want to provide an input then you need to do reference tracking, which is usually done by modifying the input to achieve the steady state output you want,  $u = -Gx + k_{ss}r$ or, more commonly I would imagine, by adding an integral error state and doing integral control. ", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean when you say &amp;quot;control law?&amp;quot; For a state feedback controller, the control law is generally defined to be $u = -Gx$, where $x$ are the states. &lt;/p&gt;\n\n&lt;p&gt;BUT,  you could just as easily use PID, and then your control law is $u = K_p e_p +K_i e_i + K_d e_d $.&lt;/p&gt;\n\n&lt;p&gt;Remember too that a state feedback controller is for linear, time invariant, single input single output (SISO) systems. If you&amp;#39;re looking to control multiple inputs and outputs, where that MIMO system cannot be split into a series of SISO systems, then you have to &amp;quot;prioritize&amp;quot; the input/output pairs, and this is usually done with linear quadratic regulators (LQR).&lt;/p&gt;\n\n&lt;p&gt;So, if your block diagram uses system states, just tap those states, apply -G, and there&amp;#39;s your control law. Remember also though that a vanilla state feedback controller drives all the states to zero. If you want to provide an input then you need to do reference tracking, which is usually done by modifying the input to achieve the steady state output you want,  $u = -Gx + k_{ss}r$ or, more commonly I would imagine, by adding an integral error state and doing integral control. &lt;/p&gt;\n&lt;/div&gt;", "subreddit": "engineering", "name": "t1_dgav7yj", "score_hidden": false, "stickied": false, "created": 1492304078.0, "created_utc": 1492275278.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhpi", "removal_reason": null, "link_id": "t3_65jr67", "likes": null, "replies": "", "user_reports": [], "id": "dgaw8ms", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "riboch", "parent_id": "t3_65jr67", "subreddit_name_prefixed": "r/engineering", "controversiality": 0, "body": "1) UAVs are highly nonlinear systems, and a linear control law is only going to work for a small range of conditions.  There is a growing field for control of UAVs.\n\n2) You are most likely talking feedback control, and working in the frequency domain means that blocks will multiply.  As an example take the error feedback between the reference and output, r-y, and the following block diagram with signal names quoted:\n\n\"r\"--o--\"e\"--C----G-\"y\"---&gt;\n\n . . .  |___________|\n\ny=GCe,\n\ne=r-y,\n\ny=GCr-GCy,\n\nmanipulating, we get \n\ny=(I+GC)^-1 GCr,\n\nwhere I is the appropriately sized identity matrix (ones along the diagonal, NOT all ones).  \n\nNow when it comes to controlling such a thing: there are many things to consider, particularly robustness.  If you want a recap a lot of the linear systems theory, I strongly recommend looking at:\n\n*  Doyle, Francis, and Tannenbaum (they discuss some of the fundamental limitations of linear system theory, which is vastly important), and \n\n* I think that Maciejowski has a book on multivariate linear control that is also really good.\n\nBoth books will go through linear systems and matrix transfer function manipulation, how to convert, and how to control it.\n\n3) My recommendation: convert to state-space, and add an integrator:\n\n\\dot{x}=[A 0;C 0]x+[B;D]u+[0;I]r\n\ny= [0 I]x, \n\nthen use linear quadratic Gaussian compensator.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;1) UAVs are highly nonlinear systems, and a linear control law is only going to work for a small range of conditions.  There is a growing field for control of UAVs.&lt;/p&gt;\n\n&lt;p&gt;2) You are most likely talking feedback control, and working in the frequency domain means that blocks will multiply.  As an example take the error feedback between the reference and output, r-y, and the following block diagram with signal names quoted:&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;r&amp;quot;--o--&amp;quot;e&amp;quot;--C----G-&amp;quot;y&amp;quot;---&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;. . .  |___________|&lt;/p&gt;\n\n&lt;p&gt;y=GCe,&lt;/p&gt;\n\n&lt;p&gt;e=r-y,&lt;/p&gt;\n\n&lt;p&gt;y=GCr-GCy,&lt;/p&gt;\n\n&lt;p&gt;manipulating, we get &lt;/p&gt;\n\n&lt;p&gt;y=(I+GC)&lt;sup&gt;-1&lt;/sup&gt; GCr,&lt;/p&gt;\n\n&lt;p&gt;where I is the appropriately sized identity matrix (ones along the diagonal, NOT all ones).  &lt;/p&gt;\n\n&lt;p&gt;Now when it comes to controlling such a thing: there are many things to consider, particularly robustness.  If you want a recap a lot of the linear systems theory, I strongly recommend looking at:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Doyle, Francis, and Tannenbaum (they discuss some of the fundamental limitations of linear system theory, which is vastly important), and &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I think that Maciejowski has a book on multivariate linear control that is also really good.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Both books will go through linear systems and matrix transfer function manipulation, how to convert, and how to control it.&lt;/p&gt;\n\n&lt;p&gt;3) My recommendation: convert to state-space, and add an integrator:&lt;/p&gt;\n\n&lt;p&gt;\\dot{x}=[A 0;C 0]x+[B;D]u+[0;I]r&lt;/p&gt;\n\n&lt;p&gt;y= [0 I]x, &lt;/p&gt;\n\n&lt;p&gt;then use linear quadratic Gaussian compensator.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "engineering", "name": "t1_dgaw8ms", "score_hidden": false, "stickied": false, "created": 1492305467.0, "created_utc": 1492276667.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]