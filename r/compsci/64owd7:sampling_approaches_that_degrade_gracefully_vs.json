[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m reading up on Gibbs sampling and MCMC right now. I understand that these approaches to sampling can only approximate the joint distribution because exact inference is hard.&lt;/p&gt;\n\n&lt;p&gt;One question I have is about how these algorithms handle the case where the probability distribution, as dictated by a graphical model (such as a factor graph or Bayesian network), contains beliefs that are inconsistent, meaning there is a chain of dependencies that don&amp;#39;t mesh with one another.&lt;/p&gt;\n\n&lt;p&gt;Which sampling algorithms degrade gracefully in such a situation, vs which ones just fail completely?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm reading up on Gibbs sampling and MCMC right now. I understand that these approaches to sampling can only approximate the joint distribution because exact inference is hard.\n\nOne question I have is about how these algorithms handle the case where the probability distribution, as dictated by a graphical model (such as a factor graph or Bayesian network), contains beliefs that are inconsistent, meaning there is a chain of dependencies that don't mesh with one another.\n\nWhich sampling algorithms degrade gracefully in such a situation, vs which ones just fail completely?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": "Question", "id": "64owd7", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 6, "report_reasons": null, "author": "nothingtoseeherelol", "saved": false, "mod_reports": [], "name": "t3_64owd7", "subreddit_name_prefixed": "r/compsci", "approved_by": null, "over_18": false, "domain": "self.compsci", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qhmr", "edited": false, "link_flair_css_class": "", "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/compsci/comments/64owd7/sampling_approaches_that_degrade_gracefully_vs/", "num_reports": null, "locked": false, "stickied": false, "created": 1491916162.0, "url": "https://www.reddit.com/r/compsci/comments/64owd7/sampling_approaches_that_degrade_gracefully_vs/", "author_flair_text": null, "quarantine": false, "title": "Sampling approaches that degrade gracefully vs fail for inconsistent graphical models", "created_utc": 1491887362.0, "distinguished": null, "media": null, "upvote_ratio": 0.81, "num_comments": 4, "visited": false, "subreddit_type": "public", "ups": 6}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhmr", "removal_reason": null, "link_id": "t3_64owd7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhmr", "removal_reason": null, "link_id": "t3_64owd7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhmr", "removal_reason": null, "link_id": "t3_64owd7", "likes": null, "replies": {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhmr", "removal_reason": null, "link_id": "t3_64owd7", "likes": null, "replies": "", "user_reports": [], "id": "dg5f1hu", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rotuami", "parent_id": "t1_dg56100", "subreddit_name_prefixed": "r/compsci", "controversiality": 0, "body": "If your graph represents a stochastic process with unrestricted output, rejection sampling will produce a valid sample every time (polynomial time). If the output is restricted so much the graph becomes inconsistent, then rejection sampling will reject every time. In between, it will sometimes accept and sometimes reject.\n\nBut you *can't tell* out of hand if it's going to reject every time -- the best you can do is try every possible configuration (or submit enough random trials that you're reasonably sure you've hit every possible configuration). That would solve k-SAT but it would also take exponential time.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If your graph represents a stochastic process with unrestricted output, rejection sampling will produce a valid sample every time (polynomial time). If the output is restricted so much the graph becomes inconsistent, then rejection sampling will reject every time. In between, it will sometimes accept and sometimes reject.&lt;/p&gt;\n\n&lt;p&gt;But you &lt;em&gt;can&amp;#39;t tell&lt;/em&gt; out of hand if it&amp;#39;s going to reject every time -- the best you can do is try every possible configuration (or submit enough random trials that you&amp;#39;re reasonably sure you&amp;#39;ve hit every possible configuration). That would solve k-SAT but it would also take exponential time.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "compsci", "name": "t1_dg5f1hu", "score_hidden": false, "stickied": false, "created": 1491997036.0, "created_utc": 1491968236.0, "depth": 3, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg56100", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "nothingtoseeherelol", "parent_id": "t1_dg4z5nv", "subreddit_name_prefixed": "r/compsci", "controversiality": 0, "body": "I don't see how this makes sense - having a sampling method that fails if the graph is inconsistent wouldn't solve k-SAT. Having a sampling method that fails \"if and only if\" the graph is inconsistent *would* certainly solve k-SAT, but having a method that just fails \"if\" the graph is inconsistent means it could also fail for a certain class of consistent graphs.\n\nOvershooting failure is no better than overshooting success.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t see how this makes sense - having a sampling method that fails if the graph is inconsistent wouldn&amp;#39;t solve k-SAT. Having a sampling method that fails &amp;quot;if and only if&amp;quot; the graph is inconsistent &lt;em&gt;would&lt;/em&gt; certainly solve k-SAT, but having a method that just fails &amp;quot;if&amp;quot; the graph is inconsistent means it could also fail for a certain class of consistent graphs.&lt;/p&gt;\n\n&lt;p&gt;Overshooting failure is no better than overshooting success.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "compsci", "name": "t1_dg56100", "score_hidden": false, "stickied": false, "created": 1491984790.0, "created_utc": 1491955990.0, "depth": 2, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4z5nv", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rotuami", "parent_id": "t1_dg4yslw", "subreddit_name_prefixed": "r/compsci", "controversiality": 0, "body": "Of course, if the graph is inconsistent, rejection sampling will not give you any valid samples, and it will take exponentially long to realize this. It *must* fail or slow down in such a case since any fast way to determine whether such a graph is consistent would solve k-SAT and therefore prove P=NP.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Of course, if the graph is inconsistent, rejection sampling will not give you any valid samples, and it will take exponentially long to realize this. It &lt;em&gt;must&lt;/em&gt; fail or slow down in such a case since any fast way to determine whether such a graph is consistent would solve k-SAT and therefore prove P=NP.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "compsci", "name": "t1_dg4z5nv", "score_hidden": false, "stickied": false, "created": 1491975810.0, "created_utc": 1491947010.0, "depth": 1, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, "user_reports": [], "id": "dg4yslw", "gilded": 0, "archived": false, "score": 1, "report_reasons": null, "author": "rotuami", "parent_id": "t3_64owd7", "subreddit_name_prefixed": "r/compsci", "controversiality": 0, "body": "Rejection sampling is a good technique. Sampling starts fast but gets slower as you constrain the posterior.", "edited": false, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rejection sampling is a good technique. Sampling starts fast but gets slower as you constrain the posterior.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "compsci", "name": "t1_dg4yslw", "score_hidden": false, "stickied": false, "created": 1491975373.0, "created_utc": 1491946573.0, "depth": 0, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}]