[{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to get my head around numerical non-linear solvers. As a small example project I want to align depth maps to each other - So basically what ICP (iterative closest point) does. But thinking about this lead me to the following question:\nIf I try to align two depth maps which are planar there are infinite solutions because it&amp;#39;s possible to translate in two directions without changing the error at all. \nIs there some generic approach - which scales well to more complicated problems -  to deal with this? Is it somehow possible to get a value how constraint a certain problem is? &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am trying to get my head around numerical non-linear solvers. As a small example project I want to align depth maps to each other - So basically what ICP (iterative closest point) does. But thinking about this lead me to the following question:\nIf I try to align two depth maps which are planar there are infinite solutions because it's possible to translate in two directions without changing the error at all. \nIs there some generic approach - which scales well to more complicated problems -  to deal with this? Is it somehow possible to get a value how constraint a certain problem is? \n\nThanks in advance!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "65knsb", "gilded": 0, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "zishh", "saved": false, "mod_reports": [], "name": "t3_65knsb", "subreddit_name_prefixed": "r/compsci", "approved_by": null, "over_18": false, "domain": "self.compsci", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2qhmr", "author_cakeday": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/compsci/comments/65knsb/q_nonlinear_optimization_value_which_tells_how/", "num_reports": null, "locked": false, "stickied": false, "created": 1492310309.0, "url": "https://www.reddit.com/r/compsci/comments/65knsb/q_nonlinear_optimization_value_which_tells_how/", "author_flair_text": null, "quarantine": false, "title": "Q: Non-linear optimization -- value which tells how well constraint a solution is?", "created_utc": 1492281509.0, "distinguished": null, "media": null, "upvote_ratio": 0.67, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}], "after": null, "before": null}}, {"kind": "Listing", "data": {"modhash": "", "children": [], "after": null, "before": null}}]